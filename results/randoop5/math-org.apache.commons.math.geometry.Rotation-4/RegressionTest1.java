import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    @Test
    public void test0501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0501");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        double double18 = rotation15.getQ2();
        double double19 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation7.applyTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ2();
        double double23 = rotation21.getQ0();
        double[][] doubleArray24 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation21.applyInverseTo(rotation25);
        double double28 = rotation25.getQ2();
        double double29 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ2();
        double double32 = rotation30.getQ0();
        double[][] doubleArray33 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation25.applyTo(rotation30);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation30.getAxis();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation20.applyTo(rotation30);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation20.getAxis();
        double[][] doubleArray38 = rotation20.getMatrix();
        double double39 = rotation20.getQ1();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ3();
        double double42 = rotation40.getQ2();
        double double43 = rotation40.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation40.getAxis();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(vector3D44, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ3();
        double double49 = rotation47.getQ2();
        double double50 = rotation47.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation47.getAxis();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(vector3D51, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ3();
        double double56 = rotation54.getQ2();
        double double57 = rotation54.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation54.getAxis();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation();
        double double66 = rotation65.getQ3();
        double double67 = rotation65.getQ2();
        double double68 = rotation65.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotation65.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation64.applyTo(vector3D69);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(vector3D44, vector3D51, vector3D58, vector3D69);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation();
        double double73 = rotation72.getQ2();
        double double74 = rotation72.getQ0();
        double double75 = rotation72.getQ3();
        org.apache.commons.math.geometry.Rotation rotation76 = rotation72.revert();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation76.getAxis();
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation83.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation76.applyInverseTo(vector3D84);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D44, vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotation20.applyInverseTo(vector3D85);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D87);
    }

    @Test
    public void test0502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0502");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1.0f), (double) 0, (double) (short) 0, true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation6.revert();
        org.apache.commons.math.geometry.Rotation rotation8 = rotation7.revert();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ2();
        double double11 = rotation9.getQ0();
        double[][] doubleArray12 = rotation9.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation9.applyInverseTo(rotation13);
        double double16 = rotation13.getQ2();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ2();
        double double19 = rotation17.getQ0();
        double[][] doubleArray20 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation17.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation17.applyInverseTo(rotation24);
        double double27 = rotation24.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ2();
        double double30 = rotation28.getQ0();
        double[][] doubleArray31 = rotation28.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation28.applyInverseTo(rotation32);
        double double35 = rotation34.getQ0();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation24.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation13.applyInverseTo(rotation36);
        double double38 = rotation36.getQ0();
        double double39 = rotation36.getQ2();
        double double40 = rotation36.getQ1();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        double double43 = rotation41.getQ2();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation41.revert();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ3();
        double double47 = rotation45.getQ2();
        double double48 = rotation45.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation45.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation44.applyInverseTo(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        double double59 = rotation57.getQ2();
        double double60 = rotation57.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation57.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation56.applyTo(vector3D61);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(vector3D49, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation36.applyInverseTo(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation65 = rotation7.applyTo(rotation36);
        double double66 = rotation7.getQ2();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertNotNull(rotation8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1.0d) + "'", double35 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
    }

    @Test
    public void test0503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0503");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 100L, (double) 0, (double) (short) 1, 0.7071067811865475d, true);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = null;
        double[] doubleArray8 = rotation5.getAngles(rotationOrder7);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.9999250084364456d + "'", double6 == 0.9999250084364456d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[3.1345217036255226, 0.019998833442044513, 3.1345217036255226]");
    }

    @Test
    public void test0504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0504");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-1.0d), (double) 0, (double) (byte) 100, (double) (-1.0f), true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        double double13 = rotation10.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation10.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation5.applyTo(vector3D14);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation21.getAxis();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(vector3D15, vector3D22);
        double double24 = rotation23.getAngle();
        double double25 = rotation23.getQ0();
        double double26 = rotation23.getQ2();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.531570594506642d + "'", double24 == 1.531570594506642d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.7208382876544367d + "'", double25 == 0.7208382876544367d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.6931032706702748d + "'", double26 == 0.6931032706702748d);
    }

    @Test
    public void test0505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0505");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        double double10 = rotation3.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation3.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation19.getAxis();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation11.applyTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation22 = rotation11.revert();
        double double23 = rotation22.getQ0();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation24.revert();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ2();
        double double30 = rotation28.getQ0();
        double[][] doubleArray31 = rotation28.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation28.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation27.applyInverseTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        double double38 = rotation36.getQ2();
        double double39 = rotation36.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation36.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation28.applyTo(vector3D40);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        double double44 = rotation42.getQ2();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation42.revert();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        double double48 = rotation46.getQ2();
        double double49 = rotation46.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation46.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation45.applyInverseTo(vector3D50);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(vector3D40, vector3D50);
        double double53 = rotation52.getQ3();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation22.applyTo(rotation52);
        double double55 = rotation22.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1.0d) + "'", double23 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-1.0d) + "'", double55 == (-1.0d));
    }

    @Test
    public void test0506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0506");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.995037190209989d, 0.0d, (double) '4', (double) 1.0f, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation6.applyInverseTo(rotation13);
        double double16 = rotation13.getQ1();
        double[][] doubleArray17 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(doubleArray17, 0.0d);
        double double20 = rotation19.getAngle();
        double double21 = rotation19.getAngle();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation19.revert();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation22.revert();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation24.revert();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ3();
        double double31 = rotation29.getQ2();
        double double32 = rotation29.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation29.getAxis();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(vector3D33, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation28.applyInverseTo(vector3D33);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ2();
        double double39 = rotation37.getQ0();
        double[][] doubleArray40 = rotation37.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        org.apache.commons.math.geometry.Rotation rotation43 = rotation37.applyInverseTo(rotation41);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation();
        double double45 = rotation44.getQ3();
        double double46 = rotation44.getQ2();
        org.apache.commons.math.geometry.Rotation rotation47 = rotation44.revert();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ2();
        double double50 = rotation48.getQ0();
        double[][] doubleArray51 = rotation48.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation();
        double double53 = rotation52.getQ3();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation48.applyInverseTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation47.applyInverseTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        double double57 = rotation56.getQ3();
        double double58 = rotation56.getQ2();
        double double59 = rotation56.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation56.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation48.applyTo(vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation37.applyInverseTo(vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation28.applyInverseTo(vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation23.applyTo(vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation23.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation5.applyInverseTo(vector3D65);
        java.lang.Class<?> wildcardClass67 = rotation5.getClass();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0507");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 10.0d, 0.5309649148733836d, (double) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0508");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-1.0d), (double) 0, (double) (byte) 100, (double) (-1.0f), true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        double double13 = rotation10.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation10.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation5.applyTo(vector3D14);
        double double16 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation5.revert();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation17.getAxis();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.009999000149975004d) + "'", double16 == (-0.009999000149975004d));
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(vector3D18);
    }

    @Test
    public void test0509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0509");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation7.revert();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation18 = rotation10.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ3();
        double double21 = rotation19.getQ2();
        double double22 = rotation19.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation19.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation11.applyTo(vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation0.applyInverseTo(vector3D23);
        double double26 = rotation0.getQ1();
        double double27 = rotation0.getQ0();
        double double28 = rotation0.getQ3();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
    }

    @Test
    public void test0510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0510");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D10);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation12.revert();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation15.applyInverseTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation24.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation16.applyTo(vector3D28);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D29);
        double[][] doubleArray31 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ2();
        double double34 = rotation32.getQ0();
        double[][] doubleArray35 = rotation32.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation32.applyInverseTo(rotation36);
        double double39 = rotation38.getQ0();
        double double40 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation30.applyTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ2();
        double double44 = rotation42.getQ0();
        double[][] doubleArray45 = rotation42.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation42.applyInverseTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        double double51 = rotation49.getQ2();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation49.revert();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ2();
        double double55 = rotation53.getQ0();
        double[][] doubleArray56 = rotation53.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation53.applyInverseTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation60 = rotation52.applyInverseTo(rotation53);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation();
        double double62 = rotation61.getQ3();
        double double63 = rotation61.getQ2();
        double double64 = rotation61.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation61.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation53.applyTo(vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation42.applyInverseTo(vector3D65);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(vector3D67, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation41.applyInverseTo(vector3D67);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation();
        double double72 = rotation71.getQ2();
        double double73 = rotation71.getQ0();
        double[][] doubleArray74 = rotation71.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation();
        double double76 = rotation75.getQ3();
        org.apache.commons.math.geometry.Rotation rotation77 = rotation71.applyInverseTo(rotation75);
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation();
        double double79 = rotation78.getQ3();
        org.apache.commons.math.geometry.Rotation rotation80 = rotation71.applyInverseTo(rotation78);
        double double81 = rotation78.getQ3();
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation();
        double double83 = rotation82.getQ2();
        double double84 = rotation82.getQ0();
        double[][] doubleArray85 = rotation82.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation();
        double double87 = rotation86.getQ3();
        org.apache.commons.math.geometry.Rotation rotation88 = rotation82.applyInverseTo(rotation86);
        double double89 = rotation88.getQ0();
        org.apache.commons.math.geometry.Rotation rotation90 = rotation78.applyInverseTo(rotation88);
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotation78.getAxis();
        org.apache.commons.math.geometry.Rotation rotation92 = new org.apache.commons.math.geometry.Rotation(vector3D70, vector3D91);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-1.0d) + "'", double39 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1.0d + "'", double84 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(rotation88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + (-1.0d) + "'", double89 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation90);
        org.junit.Assert.assertNotNull(vector3D91);
    }

    @Test
    public void test0511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0511");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, 100.0d, 0.981108438603097d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0512");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) (short) 1);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(doubleArray4, 2.9422652488599566d);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(doubleArray4, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.995037190209989d, (-1.0d), (double) 10L, (double) 10L, true);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation18.revert();
        double double20 = rotation18.getQ3();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation27 = rotation26.revert();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation((double) 10L, (double) ' ', (double) 10, (double) (-1L), true);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation26.applyTo(rotation33);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ3();
        double double37 = rotation35.getQ2();
        double double38 = rotation35.getAngle();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation35.revert();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ3();
        double double42 = rotation40.getQ2();
        double double43 = rotation40.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation40.getAxis();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(vector3D44, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation39.applyInverseTo(vector3D44);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ2();
        double double50 = rotation48.getQ0();
        double[][] doubleArray51 = rotation48.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation();
        double double53 = rotation52.getQ3();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation48.applyInverseTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ3();
        double double57 = rotation55.getQ2();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation55.revert();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation();
        double double60 = rotation59.getQ2();
        double double61 = rotation59.getQ0();
        double[][] doubleArray62 = rotation59.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation();
        double double64 = rotation63.getQ3();
        org.apache.commons.math.geometry.Rotation rotation65 = rotation59.applyInverseTo(rotation63);
        org.apache.commons.math.geometry.Rotation rotation66 = rotation58.applyInverseTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation();
        double double68 = rotation67.getQ3();
        double double69 = rotation67.getQ2();
        double double70 = rotation67.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation67.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotation59.applyTo(vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation48.applyInverseTo(vector3D71);
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(vector3D73, (double) '4');
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(vector3D47, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation34.applyInverseTo(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation18.applyInverseTo(vector3D77);
        org.apache.commons.math.geometry.Rotation rotation79 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation80 = rotation12.applyInverseTo(rotation18);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.703614788711539d + "'", double20 == 0.703614788711539d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(rotation79);
        org.junit.Assert.assertNotNull(rotation80);
    }

    @Test
    public void test0513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0513");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.6667006794044591d, 0.6086083682652702d, (double) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0514");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation4.getQ1();
        double double8 = rotation4.getQ3();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    }

    @Test
    public void test0515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0515");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1.0f), (double) 0, (double) (short) 0, true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation6.revert();
        org.apache.commons.math.geometry.Rotation rotation8 = rotation7.revert();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ2();
        double double11 = rotation9.getQ0();
        double[][] doubleArray12 = rotation9.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation9.applyInverseTo(rotation13);
        double double16 = rotation13.getQ2();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ2();
        double double19 = rotation17.getQ0();
        double[][] doubleArray20 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation17.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation17.applyInverseTo(rotation24);
        double double27 = rotation24.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ2();
        double double30 = rotation28.getQ0();
        double[][] doubleArray31 = rotation28.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation28.applyInverseTo(rotation32);
        double double35 = rotation34.getQ0();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation24.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation13.applyInverseTo(rotation36);
        double double38 = rotation36.getQ0();
        double double39 = rotation36.getQ2();
        double double40 = rotation36.getQ1();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        double double43 = rotation41.getQ2();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation41.revert();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ3();
        double double47 = rotation45.getQ2();
        double double48 = rotation45.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation45.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation44.applyInverseTo(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        double double59 = rotation57.getQ2();
        double double60 = rotation57.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation57.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation56.applyTo(vector3D61);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(vector3D49, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation36.applyInverseTo(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation65 = rotation7.applyTo(rotation36);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation72 = rotation71.revert();
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation((double) 10L, (double) ' ', (double) 10, (double) (-1L), true);
        org.apache.commons.math.geometry.Rotation rotation79 = rotation71.applyTo(rotation78);
        org.apache.commons.math.geometry.Rotation rotation80 = rotation7.applyTo(rotation71);
        double[][] doubleArray81 = rotation7.getMatrix();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertNotNull(rotation8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1.0d) + "'", double35 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(rotation79);
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertNotNull(doubleArray81);
    }

    @Test
    public void test0516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0516");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        double double12 = rotation3.getQ0();
        double double13 = rotation3.getAngle();
        double[][] doubleArray14 = rotation3.getMatrix();
        double double15 = rotation3.getQ0();
        double double16 = rotation3.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1.0d) + "'", double12 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1.0d) + "'", double15 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
    }

    @Test
    public void test0517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0517");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        double double10 = rotation3.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation3.applyTo(rotation11);
        double double14 = rotation3.getQ1();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        double double17 = rotation15.getQ2();
        org.apache.commons.math.geometry.Rotation rotation18 = rotation15.revert();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ2();
        double double21 = rotation19.getQ0();
        double[][] doubleArray22 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation19.applyInverseTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation18.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ3();
        double double29 = rotation27.getQ2();
        double double30 = rotation27.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation27.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation19.applyTo(vector3D31);
        double double33 = rotation19.getQ1();
        double double34 = rotation19.getQ2();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation3.applyTo(rotation19);
        double double36 = rotation35.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation35.getAxis();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D37);
    }

    @Test
    public void test0518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0518");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10L, (double) ' ', (double) 10, (double) (-1L), true);
        double double6 = rotation5.getQ1();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation7.revert();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        double double13 = rotation11.getQ2();
        double double14 = rotation11.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation11.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation10.applyInverseTo(vector3D15);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        double double19 = rotation17.getQ2();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation17.revert();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        double double23 = rotation21.getQ2();
        double double24 = rotation21.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation21.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation20.applyInverseTo(vector3D25);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ3();
        double double35 = rotation33.getQ2();
        double double36 = rotation33.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation33.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation32.applyTo(vector3D37);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(vector3D25, vector3D38);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ3();
        double double42 = rotation40.getQ2();
        double double43 = rotation40.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation40.getAxis();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(vector3D44, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ3();
        double double49 = rotation47.getQ2();
        double double50 = rotation47.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation47.getAxis();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(vector3D51, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ3();
        double double56 = rotation54.getQ2();
        double double57 = rotation54.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation54.getAxis();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation();
        double double66 = rotation65.getQ3();
        double double67 = rotation65.getQ2();
        double double68 = rotation65.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotation65.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation64.applyTo(vector3D69);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(vector3D44, vector3D51, vector3D58, vector3D69);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation();
        double double73 = rotation72.getQ3();
        double double74 = rotation72.getQ2();
        org.apache.commons.math.geometry.Rotation rotation75 = rotation72.revert();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation();
        double double77 = rotation76.getQ3();
        double double78 = rotation76.getQ2();
        double double79 = rotation76.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotation76.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotation75.applyInverseTo(vector3D80);
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(vector3D16, vector3D38, vector3D58, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotation5.applyTo(vector3D16);
        double double84 = rotation5.getQ0();
        double double85 = rotation5.getQ0();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.9142857142857143d + "'", double6 == 0.9142857142857143d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.2857142857142857d + "'", double84 == 0.2857142857142857d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.2857142857142857d + "'", double85 == 0.2857142857142857d);
    }

    @Test
    public void test0519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0519");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation3.getAxis();
        double double11 = rotation3.getQ1();
        double double12 = rotation3.getQ1();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    }

    @Test
    public void test0520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0520");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ1();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) 100.0f);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(doubleArray4, 0.9142857142857143d);
        double double9 = rotation8.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    }

    @Test
    public void test0521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0521");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        double double12 = rotation3.getQ0();
        double double13 = rotation3.getAngle();
        double double14 = rotation3.getAngle();
        double double15 = rotation3.getQ0();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation((-0.5d), (double) 100, (double) (byte) 10, (double) 0L, false);
        org.apache.commons.math.geometry.Rotation rotation22 = rotation21.revert();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation3.applyInverseTo(rotation21);
        double double24 = rotation3.getQ0();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation3.revert();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1.0d) + "'", double12 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1.0d) + "'", double15 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation25);
    }

    @Test
    public void test0522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0522");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 100.0f, (double) 1, (double) 1, (double) 10, false);
        double double6 = rotation5.getAngle();
        double double7 = rotation5.getAngle();
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
    }

    @Test
    public void test0523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0523");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        double double4 = rotation0.getQ0();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        double double13 = rotation11.getQ2();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation11.revert();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ2();
        double double17 = rotation15.getQ0();
        double[][] doubleArray18 = rotation15.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ3();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation15.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation22 = rotation14.applyInverseTo(rotation15);
        double double23 = rotation14.getAngle();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        double[][] doubleArray28 = rotation24.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(doubleArray28, (double) (short) 1);
        double double31 = rotation30.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation30.getAxis();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ3();
        double double35 = rotation33.getQ2();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation33.revert();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        double double39 = rotation37.getQ2();
        double double40 = rotation37.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation37.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation36.applyInverseTo(vector3D41);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(vector3D41, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation30.applyInverseTo(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation14.applyTo(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation10.applyInverseTo(vector3D46);
        org.apache.commons.math.geometry.Rotation rotation48 = rotation0.applyInverseTo(rotation10);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        double double51 = rotation49.getQ2();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation49.revert();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ2();
        double double55 = rotation53.getQ0();
        double[][] doubleArray56 = rotation53.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation53.applyInverseTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation60 = rotation52.applyInverseTo(rotation53);
        double double61 = rotation52.getAngle();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        double double64 = rotation62.getQ2();
        double double65 = rotation62.getAngle();
        double[][] doubleArray66 = rotation62.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(doubleArray66, (double) (short) 1);
        double double69 = rotation68.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation68.getAxis();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation();
        double double72 = rotation71.getQ3();
        double double73 = rotation71.getQ2();
        org.apache.commons.math.geometry.Rotation rotation74 = rotation71.revert();
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation();
        double double76 = rotation75.getQ3();
        double double77 = rotation75.getQ2();
        double double78 = rotation75.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotation75.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotation74.applyInverseTo(vector3D79);
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(vector3D79, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotation68.applyInverseTo(vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation52.applyTo(vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation10.applyInverseTo(vector3D79);
        java.lang.Class<?> wildcardClass86 = vector3D79.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0524");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation4.getQ2();
        double double8 = rotation4.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray10 = rotation4.getAngles(rotationOrder9);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    }

    @Test
    public void test0525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0525");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation3.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation13.revert();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ2();
        double double19 = rotation17.getQ0();
        double[][] doubleArray20 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation17.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation24 = rotation16.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation17.applyTo(vector3D29);
        double double31 = rotation17.getQ1();
        double double32 = rotation17.getQ2();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation12.applyTo(rotation17);
        double double34 = rotation33.getAngle();
        double double35 = rotation33.getQ1();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
    }

    @Test
    public void test0526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0526");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation3.revert();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ0();
        double[][] doubleArray8 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = rotation5.applyInverseTo(rotation9);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyInverseTo(rotation12);
        double double15 = rotation12.getQ3();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        double double23 = rotation22.getQ0();
        org.apache.commons.math.geometry.Rotation rotation24 = rotation12.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation25.getAxis();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D29, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        double double35 = rotation32.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation32.getAxis();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(vector3D36, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        double double41 = rotation39.getQ2();
        double double42 = rotation39.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation39.getAxis();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation();
        double double51 = rotation50.getQ3();
        double double52 = rotation50.getQ2();
        double double53 = rotation50.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation50.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation49.applyTo(vector3D54);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(vector3D29, vector3D36, vector3D43, vector3D54);
        org.apache.commons.math.geometry.Rotation rotation57 = rotation22.applyInverseTo(rotation56);
        double double58 = rotation22.getQ3();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation3.applyTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation60 = rotation3.revert();
        org.apache.commons.math.geometry.Vector3D vector3D61 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D62 = rotation60.applyInverseTo(vector3D61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1.0d) + "'", double23 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(rotation60);
    }

    @Test
    public void test0527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0527");
        double[][] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation2 = new org.apache.commons.math.geometry.Rotation(doubleArray0, (double) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0528");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        double double18 = rotation15.getQ2();
        double double19 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation7.applyTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ2();
        double double23 = rotation21.getQ0();
        double[][] doubleArray24 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation21.applyInverseTo(rotation25);
        double double28 = rotation25.getQ2();
        double double29 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ2();
        double double32 = rotation30.getQ0();
        double[][] doubleArray33 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation25.applyTo(rotation30);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation30.getAxis();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation20.applyTo(rotation30);
        double double37 = rotation30.getQ2();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
    }

    @Test
    public void test0529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0529");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D10);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation12.revert();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation15.applyInverseTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation24.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation16.applyTo(vector3D28);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D29);
        double[][] doubleArray31 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ2();
        double double34 = rotation32.getQ0();
        double[][] doubleArray35 = rotation32.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation32.applyInverseTo(rotation36);
        double double39 = rotation38.getQ0();
        double double40 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation30.applyTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        double double44 = rotation42.getQ2();
        double double45 = rotation42.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation42.getAxis();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(vector3D46, (double) 100.0f);
        double double49 = rotation48.getQ3();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        double double57 = rotation56.getQ3();
        double double58 = rotation56.getQ2();
        double double59 = rotation56.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation56.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation55.applyTo(vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation55.getAxis();
        org.apache.commons.math.geometry.Rotation rotation63 = rotation48.applyInverseTo(rotation55);
        org.apache.commons.math.geometry.Rotation rotation64 = rotation30.applyInverseTo(rotation48);
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray66 = rotation30.getAngles(rotationOrder65);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-1.0d) + "'", double39 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(rotation64);
    }

    @Test
    public void test0530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0530");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D10);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation12.revert();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation15.applyInverseTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation24.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation16.applyTo(vector3D28);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D29);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        double double39 = rotation37.getQ2();
        double double40 = rotation37.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation37.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation36.applyTo(vector3D41);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation();
        double double44 = rotation43.getQ3();
        double double45 = rotation43.getQ2();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation43.revert();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ3();
        double double49 = rotation47.getQ2();
        double double50 = rotation47.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation47.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation46.applyInverseTo(vector3D51);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ2();
        double double55 = rotation53.getQ0();
        double[][] doubleArray56 = rotation53.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation53.applyInverseTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation();
        double double61 = rotation60.getQ3();
        org.apache.commons.math.geometry.Rotation rotation62 = rotation53.applyInverseTo(rotation60);
        double double63 = rotation60.getQ3();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation();
        double double65 = rotation64.getQ2();
        double double66 = rotation64.getQ0();
        double[][] doubleArray67 = rotation64.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation();
        double double69 = rotation68.getQ3();
        org.apache.commons.math.geometry.Rotation rotation70 = rotation64.applyInverseTo(rotation68);
        double double71 = rotation70.getQ0();
        org.apache.commons.math.geometry.Rotation rotation72 = rotation60.applyInverseTo(rotation70);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation60.getAxis();
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(vector3D29, vector3D41, vector3D51, vector3D73);
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(vector3D29, 0.5d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-1.0d) + "'", double71 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(vector3D73);
    }

    @Test
    public void test0531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0531");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 0.0f, 1.0d, (double) 10, 0.9142857142857143d, false);
    }

    @Test
    public void test0532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0532");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 100, (double) 100, (double) (-1L), (double) 0L, false);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation6.revert();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        double double13 = rotation11.getQ2();
        double double14 = rotation11.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation11.getAxis();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(vector3D15, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation10.applyInverseTo(vector3D15);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ2();
        double double21 = rotation19.getQ0();
        double[][] doubleArray22 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation19.applyInverseTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        double double28 = rotation26.getQ2();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation26.revert();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ2();
        double double32 = rotation30.getQ0();
        double[][] doubleArray33 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation30.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation29.applyInverseTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        double double40 = rotation38.getQ2();
        double double41 = rotation38.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation38.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation30.applyTo(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation19.applyInverseTo(vector3D42);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(vector3D44, (double) '4');
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(vector3D18, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation5.applyTo(vector3D44);
        java.lang.Class<?> wildcardClass49 = vector3D48.getClass();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0533");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation4.applyInverseTo(vector3D9);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(vector3D9, (double) (byte) 100);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(vector3D9, Double.NaN);
        double[][] doubleArray17 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation16.getAxis();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ3();
        double double21 = rotation19.getQ2();
        double double22 = rotation19.getAngle();
        double[][] doubleArray23 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ2();
        double double26 = rotation24.getQ1();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation19.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ3();
        double double31 = rotation29.getQ2();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation29.revert();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ2();
        double double35 = rotation33.getQ0();
        double[][] doubleArray36 = rotation33.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation33.applyInverseTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation32.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        double double43 = rotation41.getQ2();
        double double44 = rotation41.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation41.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation33.applyTo(vector3D45);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ3();
        double double49 = rotation47.getQ2();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation47.revert();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation();
        double double52 = rotation51.getQ3();
        double double53 = rotation51.getQ2();
        double double54 = rotation51.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation51.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation50.applyInverseTo(vector3D55);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(vector3D45, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation28.applyInverseTo(vector3D55);
        org.apache.commons.math.geometry.Rotation rotation59 = rotation28.revert();
        double double60 = rotation59.getQ2();
        org.apache.commons.math.geometry.Rotation rotation61 = rotation16.applyTo(rotation59);
        java.lang.Class<?> wildcardClass62 = rotation16.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0534");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) ' ', (double) (-1.0f), (double) 0L, 0.9142857142857143d, true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = null;
        double[] doubleArray7 = rotation5.getAngles(rotationOrder6);
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = null;
        double[] doubleArray9 = rotation5.getAngles(rotationOrder8);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        double double12 = rotation10.getQ2();
        double double13 = rotation10.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation10.getAxis();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(vector3D14, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        double double19 = rotation17.getQ2();
        double double20 = rotation17.getAngle();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation16.applyTo(rotation17);
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation17.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation17.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation5.applyInverseTo(vector3D23);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.5993599846336568, 0.062454197126981324, 1.5422326689561365]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-1.5993599846336568, 0.062454197126981324, 1.5422326689561365]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
    }

    @Test
    public void test0535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0535");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        double double15 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation11.applyTo(vector3D16);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ2();
        double double20 = rotation18.getQ0();
        double[][] doubleArray21 = rotation18.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        org.apache.commons.math.geometry.Rotation rotation24 = rotation18.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation25.revert();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ2();
        double double31 = rotation29.getQ0();
        double[][] doubleArray32 = rotation29.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ3();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation29.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation28.applyInverseTo(rotation29);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        double double39 = rotation37.getQ2();
        double double40 = rotation37.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation37.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation29.applyTo(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation18.applyInverseTo(vector3D41);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(vector3D17, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation5.applyTo(vector3D41);
        double double46 = rotation5.getQ1();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = null;
        double[] doubleArray54 = rotation52.getAngles(rotationOrder53);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation5.applyTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation56 = rotation52.revert();
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[3.141592653589793, 1.5707963267948968, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotation56);
    }

    @Test
    public void test0536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0536");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.0d);
        double double14 = rotation13.getAngle();
        double double15 = rotation13.getAngle();
        double double16 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ2();
        double double19 = rotation17.getQ0();
        double[][] doubleArray20 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation17.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation17.applyInverseTo(rotation24);
        double double27 = rotation24.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ2();
        double double30 = rotation28.getQ0();
        double[][] doubleArray31 = rotation28.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation28.applyInverseTo(rotation32);
        double double35 = rotation32.getQ2();
        double double36 = rotation32.getQ3();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation24.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation13.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray40 = rotation38.getAngles(rotationOrder39);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
    }

    @Test
    public void test0537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0537");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.7138722624641411d, 0.0d, 0.2857142857142857d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0538");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        double double18 = rotation17.getQ0();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation7.applyInverseTo(rotation17);
        double double20 = rotation7.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    }

    @Test
    public void test0539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0539");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        double double18 = rotation15.getQ2();
        double double19 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation7.applyTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ2();
        double double23 = rotation21.getQ0();
        double[][] doubleArray24 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation21.applyInverseTo(rotation25);
        double double28 = rotation25.getQ2();
        double double29 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ2();
        double double32 = rotation30.getQ0();
        double[][] doubleArray33 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation25.applyTo(rotation30);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation30.getAxis();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation20.applyTo(rotation30);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation20.getAxis();
        double[][] doubleArray38 = rotation20.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation20.revert();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(rotation39);
    }

    @Test
    public void test0540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0540");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation7.getAxis();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D11, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation24.applyTo(vector3D29);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D11, vector3D18, vector3D29);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ2();
        double double34 = rotation32.getQ0();
        double double35 = rotation32.getQ3();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation32.revert();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation36.getAxis();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation43.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation36.applyInverseTo(vector3D44);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D45);
        double double47 = rotation46.getQ0();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation46.revert();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        double double51 = rotation49.getQ2();
        double double52 = rotation49.getAngle();
        double[][] doubleArray53 = rotation49.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ2();
        double double56 = rotation54.getQ1();
        double double57 = rotation54.getAngle();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation49.applyInverseTo(rotation54);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation();
        double double60 = rotation59.getQ3();
        double double61 = rotation59.getQ2();
        org.apache.commons.math.geometry.Rotation rotation62 = rotation59.revert();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation();
        double double64 = rotation63.getQ2();
        double double65 = rotation63.getQ0();
        double[][] doubleArray66 = rotation63.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation();
        double double68 = rotation67.getQ3();
        org.apache.commons.math.geometry.Rotation rotation69 = rotation63.applyInverseTo(rotation67);
        org.apache.commons.math.geometry.Rotation rotation70 = rotation62.applyInverseTo(rotation63);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation();
        double double72 = rotation71.getQ3();
        double double73 = rotation71.getQ2();
        double double74 = rotation71.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation71.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotation63.applyTo(vector3D75);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation();
        double double78 = rotation77.getQ3();
        double double79 = rotation77.getQ2();
        org.apache.commons.math.geometry.Rotation rotation80 = rotation77.revert();
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation();
        double double82 = rotation81.getQ3();
        double double83 = rotation81.getQ2();
        double double84 = rotation81.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation81.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation80.applyInverseTo(vector3D85);
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(vector3D75, vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotation58.applyInverseTo(vector3D85);
        org.apache.commons.math.geometry.Rotation rotation89 = rotation58.revert();
        org.apache.commons.math.geometry.Rotation rotation90 = rotation48.applyInverseTo(rotation58);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7002759405293947d + "'", double47 == 0.7002759405293947d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(rotation89);
        org.junit.Assert.assertNotNull(rotation90);
    }

    @Test
    public void test0541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0541");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        double double4 = rotation0.getQ0();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, (double) 100.0f);
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation0.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ2();
        double double16 = rotation14.getQ0();
        double[][] doubleArray17 = rotation14.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation14.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation14.applyInverseTo(rotation21);
        double double24 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ2();
        double double27 = rotation25.getQ0();
        double[][] doubleArray28 = rotation25.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ3();
        org.apache.commons.math.geometry.Rotation rotation31 = rotation25.applyInverseTo(rotation29);
        double double32 = rotation31.getQ0();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation21.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation21.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation13.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ2();
        double double38 = rotation36.getQ0();
        double[][] doubleArray39 = rotation36.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ3();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation36.applyInverseTo(rotation40);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation();
        double double44 = rotation43.getQ3();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation36.applyInverseTo(rotation43);
        double double46 = rotation43.getQ1();
        double[][] doubleArray47 = rotation43.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(doubleArray47, 0.0d);
        double double50 = rotation49.getAngle();
        double double51 = rotation49.getAngle();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation49.revert();
        org.apache.commons.math.geometry.Rotation rotation53 = rotation52.revert();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ3();
        double double56 = rotation54.getQ2();
        double double57 = rotation54.getAngle();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation54.revert();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation();
        double double60 = rotation59.getQ3();
        double double61 = rotation59.getQ2();
        double double62 = rotation59.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation59.getAxis();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(vector3D63, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation58.applyInverseTo(vector3D63);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation();
        double double68 = rotation67.getQ2();
        double double69 = rotation67.getQ0();
        double[][] doubleArray70 = rotation67.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation();
        double double72 = rotation71.getQ3();
        org.apache.commons.math.geometry.Rotation rotation73 = rotation67.applyInverseTo(rotation71);
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation();
        double double75 = rotation74.getQ3();
        double double76 = rotation74.getQ2();
        org.apache.commons.math.geometry.Rotation rotation77 = rotation74.revert();
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation();
        double double79 = rotation78.getQ2();
        double double80 = rotation78.getQ0();
        double[][] doubleArray81 = rotation78.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation();
        double double83 = rotation82.getQ3();
        org.apache.commons.math.geometry.Rotation rotation84 = rotation78.applyInverseTo(rotation82);
        org.apache.commons.math.geometry.Rotation rotation85 = rotation77.applyInverseTo(rotation78);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation();
        double double87 = rotation86.getQ3();
        double double88 = rotation86.getQ2();
        double double89 = rotation86.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotation86.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotation78.applyTo(vector3D90);
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotation67.applyInverseTo(vector3D90);
        org.apache.commons.math.geometry.Vector3D vector3D93 = rotation58.applyInverseTo(vector3D92);
        org.apache.commons.math.geometry.Vector3D vector3D94 = rotation53.applyTo(vector3D92);
        org.apache.commons.math.geometry.Vector3D vector3D95 = rotation53.getAxis();
        org.apache.commons.math.geometry.Rotation rotation96 = new org.apache.commons.math.geometry.Rotation(vector3D34, vector3D95);
        double double97 = rotation96.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-1.0d) + "'", double32 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0d + "'", double80 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(rotation84);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 1.0d + "'", double97 == 1.0d);
    }

    @Test
    public void test0542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0542");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D6, (double) (short) 100);
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation8.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = null;
        double[] doubleArray15 = rotation8.getAngles(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.530964914873383, 0.0]");
    }

    @Test
    public void test0543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0543");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(32.0d, (-0.009999000149975004d), (-0.7625584504796028d), 0.0d, false);
    }

    @Test
    public void test0544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0544");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, (double) 100.0f);
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = null;
        double[] doubleArray8 = rotation6.getAngles(rotationOrder7);
        double double9 = rotation6.getQ2();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.5707963267948966, 0.530964914873383, -1.5707963267948966]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    }

    @Test
    public void test0545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0545");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10L, (double) ' ', (double) 10, (double) (-1L), true);
        double double6 = rotation5.getQ1();
        double double7 = rotation5.getQ3();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.9142857142857143d + "'", double6 == 0.9142857142857143d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-0.02857142857142857d) + "'", double7 == (-0.02857142857142857d));
    }

    @Test
    public void test0546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0546");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-1.0d), (double) 0, (double) (byte) 100, (double) (-1.0f), true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        double double13 = rotation10.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation10.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation5.applyTo(vector3D14);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation21.getAxis();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(vector3D15, vector3D22);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D22, Double.NaN);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1.0f), (double) 0, (double) (short) 0, true);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation31.revert();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation32.revert();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation33.revert();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ3();
        double double37 = rotation35.getQ2();
        double double38 = rotation35.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation35.getAxis();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(vector3D39, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        double double44 = rotation42.getQ2();
        double double45 = rotation42.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation42.getAxis();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(vector3D46, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        double double51 = rotation49.getQ2();
        double double52 = rotation49.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation49.getAxis();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation();
        double double61 = rotation60.getQ3();
        double double62 = rotation60.getQ2();
        double double63 = rotation60.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation60.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation59.applyTo(vector3D64);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(vector3D39, vector3D46, vector3D53, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation34.applyTo(vector3D46);
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(vector3D22, vector3D46);
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation((-0.5d), (double) (-1), (-1.0d), (double) 0, true);
        org.apache.commons.math.geometry.Rotation rotation75 = rotation68.applyInverseTo(rotation74);
        double double76 = rotation75.getAngle();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.5644693731595816d + "'", double76 == 1.5644693731595816d);
    }

    @Test
    public void test0547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0547");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D6, (double) (short) 100);
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation8.applyInverseTo(rotation12);
        double double14 = rotation12.getQ0();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-1.0d) + "'", double14 == (-1.0d));
    }

    @Test
    public void test0548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0548");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation3.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation13.revert();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ2();
        double double19 = rotation17.getQ0();
        double[][] doubleArray20 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation17.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation24 = rotation16.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation17.applyTo(vector3D29);
        double double31 = rotation17.getQ1();
        double double32 = rotation17.getQ2();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation12.applyTo(rotation17);
        double double34 = rotation33.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray36 = rotation33.getAngles(rotationOrder35);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
    }

    @Test
    public void test0549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0549");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.0d);
        double double14 = rotation13.getAngle();
        double double15 = rotation13.getAngle();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation13.revert();
        double double17 = rotation16.getQ1();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
    }

    @Test
    public void test0550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0550");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ1();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation5);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) (byte) 10, (double) 0, (double) '4', (double) (short) 100, false);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation16.applyInverseTo(rotation23);
        double double26 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ2();
        double double29 = rotation27.getQ0();
        double[][] doubleArray30 = rotation27.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation27.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        double double36 = rotation34.getQ2();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation34.revert();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ2();
        double double40 = rotation38.getQ0();
        double[][] doubleArray41 = rotation38.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyInverseTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation45 = rotation37.applyInverseTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        double double48 = rotation46.getQ2();
        double double49 = rotation46.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation46.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation38.applyTo(vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation27.applyInverseTo(vector3D50);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation23.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation15.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation0.applyTo(rotation27);
        double double56 = rotation55.getQ0();
        double double57 = rotation55.getQ1();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation((double) 0L, (double) 100, (double) (byte) 1, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation64 = rotation55.applyTo(rotation63);
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation64.getAxis();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(vector3D65);
    }

    @Test
    public void test0551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0551");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation4.getQ2();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ2();
        double double10 = rotation8.getQ0();
        double[][] doubleArray11 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation8.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation8.applyInverseTo(rotation15);
        double double18 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ2();
        double double21 = rotation19.getQ0();
        double[][] doubleArray22 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation19.applyInverseTo(rotation23);
        double double26 = rotation25.getQ0();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation15.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation4.applyInverseTo(rotation27);
        double double29 = rotation27.getQ0();
        double double30 = rotation27.getQ2();
        double double31 = rotation27.getQ1();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation27.revert();
        double[][] doubleArray33 = rotation27.getMatrix();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1.0d) + "'", double26 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(doubleArray33);
    }

    @Test
    public void test0552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0552");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        double double12 = rotation3.getQ0();
        double double13 = rotation3.getAngle();
        double double14 = rotation3.getAngle();
        double[][] doubleArray15 = rotation3.getMatrix();
        double double16 = rotation3.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1.0d) + "'", double12 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
    }

    @Test
    public void test0553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0553");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10L, 0.9689124217106447d, (-0.7071067811865475d));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0554");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(2.562089250717698d, 0.019227214231343204d, (double) 10.0f, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation6.getAxis();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        double double21 = rotation18.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation18.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation17.applyTo(vector3D22);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation24.revert();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ2();
        double double30 = rotation28.getQ0();
        double[][] doubleArray31 = rotation28.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation28.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation27.applyInverseTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        double double38 = rotation36.getQ2();
        double double39 = rotation36.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation36.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation28.applyTo(vector3D40);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(vector3D22, vector3D41);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        double double51 = rotation49.getQ2();
        double double52 = rotation49.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation49.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation48.applyTo(vector3D53);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ3();
        double double57 = rotation55.getQ2();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation55.revert();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation();
        double double60 = rotation59.getQ3();
        double double61 = rotation59.getQ2();
        double double62 = rotation59.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation59.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation58.applyInverseTo(vector3D63);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation();
        double double66 = rotation65.getQ2();
        double double67 = rotation65.getQ0();
        double[][] doubleArray68 = rotation65.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation();
        double double70 = rotation69.getQ3();
        org.apache.commons.math.geometry.Rotation rotation71 = rotation65.applyInverseTo(rotation69);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation();
        double double73 = rotation72.getQ3();
        org.apache.commons.math.geometry.Rotation rotation74 = rotation65.applyInverseTo(rotation72);
        double double75 = rotation72.getQ3();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation();
        double double77 = rotation76.getQ2();
        double double78 = rotation76.getQ0();
        double[][] doubleArray79 = rotation76.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation();
        double double81 = rotation80.getQ3();
        org.apache.commons.math.geometry.Rotation rotation82 = rotation76.applyInverseTo(rotation80);
        double double83 = rotation82.getQ0();
        org.apache.commons.math.geometry.Rotation rotation84 = rotation72.applyInverseTo(rotation82);
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation72.getAxis();
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D41, vector3D53, vector3D63, vector3D85);
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(vector3D41, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation(vector3D11, vector3D41);
        org.apache.commons.math.geometry.Rotation rotation91 = new org.apache.commons.math.geometry.Rotation(vector3D11, 2.9422652488599566d);
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotation5.applyInverseTo(vector3D11);
        org.apache.commons.math.geometry.Rotation rotation94 = new org.apache.commons.math.geometry.Rotation(vector3D92, (double) '4');
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.0d + "'", double78 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(rotation82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-1.0d) + "'", double83 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D92);
    }

    @Test
    public void test0555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0555");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation4.getQ2();
        double double8 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ2();
        double double11 = rotation9.getQ0();
        double[][] doubleArray12 = rotation9.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation4.applyTo(rotation9);
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation9.getAxis();
        double double15 = rotation9.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
    }

    @Test
    public void test0556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0556");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation3.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation13.revert();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ2();
        double double19 = rotation17.getQ0();
        double[][] doubleArray20 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation17.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation24 = rotation16.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation17.applyTo(vector3D29);
        double double31 = rotation17.getQ1();
        double double32 = rotation17.getQ2();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation12.applyTo(rotation17);
        java.lang.Class<?> wildcardClass34 = rotation17.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0557");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10L, (double) ' ', (double) 10, (double) (-1L), true);
        double double6 = rotation5.getQ1();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation7.revert();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        double double13 = rotation11.getQ2();
        double double14 = rotation11.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation11.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation10.applyInverseTo(vector3D15);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        double double19 = rotation17.getQ2();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation17.revert();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        double double23 = rotation21.getQ2();
        double double24 = rotation21.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation21.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation20.applyInverseTo(vector3D25);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ3();
        double double35 = rotation33.getQ2();
        double double36 = rotation33.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation33.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation32.applyTo(vector3D37);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(vector3D25, vector3D38);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ3();
        double double42 = rotation40.getQ2();
        double double43 = rotation40.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation40.getAxis();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(vector3D44, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ3();
        double double49 = rotation47.getQ2();
        double double50 = rotation47.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation47.getAxis();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(vector3D51, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ3();
        double double56 = rotation54.getQ2();
        double double57 = rotation54.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation54.getAxis();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation();
        double double66 = rotation65.getQ3();
        double double67 = rotation65.getQ2();
        double double68 = rotation65.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotation65.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation64.applyTo(vector3D69);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(vector3D44, vector3D51, vector3D58, vector3D69);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation();
        double double73 = rotation72.getQ3();
        double double74 = rotation72.getQ2();
        org.apache.commons.math.geometry.Rotation rotation75 = rotation72.revert();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation();
        double double77 = rotation76.getQ3();
        double double78 = rotation76.getQ2();
        double double79 = rotation76.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotation76.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotation75.applyInverseTo(vector3D80);
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(vector3D16, vector3D38, vector3D58, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotation5.applyTo(vector3D16);
        double double84 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation();
        double double86 = rotation85.getQ2();
        double double87 = rotation85.getQ1();
        double double88 = rotation85.getAngle();
        double double89 = rotation85.getQ0();
        org.apache.commons.math.geometry.Rotation rotation90 = rotation5.applyTo(rotation85);
        double[][] doubleArray91 = rotation85.getMatrix();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.9142857142857143d + "'", double6 == 0.9142857142857143d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 2.562089250717698d + "'", double84 == 2.562089250717698d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1.0d + "'", double89 == 1.0d);
        org.junit.Assert.assertNotNull(rotation90);
        org.junit.Assert.assertNotNull(doubleArray91);
    }

    @Test
    public void test0558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0558");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation4.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        java.lang.Class<?> wildcardClass9 = vector3D8.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0559");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation11.applyInverseTo(rotation18);
        double double21 = rotation18.getQ1();
        double[][] doubleArray22 = rotation18.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(doubleArray22, 0.0d);
        double double25 = rotation24.getAngle();
        double double26 = rotation24.getAngle();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation24.revert();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        double double30 = rotation28.getQ2();
        org.apache.commons.math.geometry.Rotation rotation31 = rotation28.revert();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ2();
        double double34 = rotation32.getQ0();
        double[][] doubleArray35 = rotation32.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation32.applyInverseTo(rotation36);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation31.applyInverseTo(rotation32);
        double double40 = rotation31.getAngle();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation27.applyInverseTo(rotation31);
        double double42 = rotation31.getQ0();
        org.apache.commons.math.geometry.Rotation rotation43 = rotation7.applyInverseTo(rotation31);
        double double44 = rotation7.getQ3();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-1.0d) + "'", double42 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
    }

    @Test
    public void test0560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0560");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.09950371902099892d, 0.0d, 0.7208382876544367d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0561");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-1.0d), (double) 0, (double) (byte) 100, (double) (-1.0f), true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        double double13 = rotation10.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation10.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation5.applyTo(vector3D14);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation21.getAxis();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(vector3D15, vector3D22);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D22, 1.5707963267948963d);
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation25.getAxis();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D26);
    }

    @Test
    public void test0562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0562");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        double double10 = rotation3.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation3.applyTo(rotation11);
        double double14 = rotation3.getQ1();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        double double17 = rotation15.getQ2();
        org.apache.commons.math.geometry.Rotation rotation18 = rotation15.revert();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ2();
        double double21 = rotation19.getQ0();
        double[][] doubleArray22 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation19.applyInverseTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation18.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ3();
        double double29 = rotation27.getQ2();
        double double30 = rotation27.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation27.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation19.applyTo(vector3D31);
        double double33 = rotation19.getQ1();
        double double34 = rotation19.getQ2();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation3.applyTo(rotation19);
        double double36 = rotation3.getQ2();
        double double37 = rotation3.getQ0();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ2();
        double double40 = rotation38.getQ0();
        double[][] doubleArray41 = rotation38.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyInverseTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ3();
        org.apache.commons.math.geometry.Rotation rotation47 = rotation38.applyInverseTo(rotation45);
        double double48 = rotation45.getQ1();
        double[][] doubleArray49 = rotation45.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(doubleArray49, 0.019227214231343204d);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation51.revert();
        org.apache.commons.math.geometry.Rotation rotation53 = rotation3.applyInverseTo(rotation52);
        double double54 = rotation3.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-1.0d) + "'", double37 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-1.0d) + "'", double54 == (-1.0d));
    }

    @Test
    public void test0563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0563");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        double double15 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation4.applyTo(vector3D16);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        double double24 = rotation22.getQ2();
        double double25 = rotation22.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation22.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation21.applyInverseTo(vector3D26);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(vector3D16, vector3D26);
        double double29 = rotation28.getQ3();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        double double38 = rotation36.getQ2();
        double double39 = rotation36.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation36.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation35.applyTo(vector3D40);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        double double44 = rotation42.getQ2();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation42.revert();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ2();
        double double48 = rotation46.getQ0();
        double[][] doubleArray49 = rotation46.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation();
        double double51 = rotation50.getQ3();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation46.applyInverseTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation45.applyInverseTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ3();
        double double56 = rotation54.getQ2();
        double double57 = rotation54.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation54.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation46.applyTo(vector3D58);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(vector3D40, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation28.applyTo(vector3D59);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        double double64 = rotation62.getQ2();
        double double65 = rotation62.getAngle();
        double[][] doubleArray66 = rotation62.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(doubleArray66, (double) 1L);
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(doubleArray66, (double) 100);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(doubleArray66, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation73 = rotation28.applyTo(rotation72);
        double double74 = rotation72.getQ0();
        double double75 = rotation72.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
    }

    @Test
    public void test0564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0564");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(doubleArray3, (double) (byte) 10);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(doubleArray3, 0.0d);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
    }

    @Test
    public void test0565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0565");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(doubleArray3, (double) 10);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation6.revert();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        double double13 = rotation11.getQ2();
        double double14 = rotation11.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation11.getAxis();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(vector3D15, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation10.applyInverseTo(vector3D15);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ2();
        double double21 = rotation19.getQ0();
        double[][] doubleArray22 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation19.applyInverseTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        double double28 = rotation26.getQ2();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation26.revert();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ2();
        double double32 = rotation30.getQ0();
        double[][] doubleArray33 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation30.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation29.applyInverseTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        double double40 = rotation38.getQ2();
        double double41 = rotation38.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation38.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation30.applyTo(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation19.applyInverseTo(vector3D42);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(vector3D44, (double) '4');
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(vector3D18, vector3D44);
        org.apache.commons.math.geometry.Rotation rotation48 = rotation47.revert();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation5.applyTo(rotation48);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(rotation49);
    }

    @Test
    public void test0566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0566");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (short) 1, (double) (short) 10, (-0.009999000149975004d), 97.0d, true);
    }

    @Test
    public void test0567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0567");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-1.0d), (double) 0, (double) (byte) 100, (double) (-1.0f), true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        double double13 = rotation10.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation10.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation5.applyTo(vector3D14);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation21.getAxis();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(vector3D15, vector3D22);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D22, Double.NaN);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1.0f), (double) 0, (double) (short) 0, true);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation31.revert();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation32.revert();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation33.revert();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ3();
        double double37 = rotation35.getQ2();
        double double38 = rotation35.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation35.getAxis();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(vector3D39, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        double double44 = rotation42.getQ2();
        double double45 = rotation42.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation42.getAxis();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(vector3D46, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        double double51 = rotation49.getQ2();
        double double52 = rotation49.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation49.getAxis();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation();
        double double61 = rotation60.getQ3();
        double double62 = rotation60.getQ2();
        double double63 = rotation60.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation60.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation59.applyTo(vector3D64);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(vector3D39, vector3D46, vector3D53, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation34.applyTo(vector3D46);
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(vector3D22, vector3D46);
        java.lang.Class<?> wildcardClass69 = vector3D22.getClass();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0568");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation4.applyInverseTo(vector3D9);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(vector3D9, (double) (byte) 100);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(vector3D9, Double.NaN);
        double[][] doubleArray17 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation16.getAxis();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ3();
        double double21 = rotation19.getQ2();
        double double22 = rotation19.getAngle();
        double[][] doubleArray23 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ2();
        double double26 = rotation24.getQ1();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation19.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ3();
        double double31 = rotation29.getQ2();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation29.revert();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ2();
        double double35 = rotation33.getQ0();
        double[][] doubleArray36 = rotation33.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation33.applyInverseTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation32.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        double double43 = rotation41.getQ2();
        double double44 = rotation41.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation41.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation33.applyTo(vector3D45);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ3();
        double double49 = rotation47.getQ2();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation47.revert();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation();
        double double52 = rotation51.getQ3();
        double double53 = rotation51.getQ2();
        double double54 = rotation51.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation51.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation50.applyInverseTo(vector3D55);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(vector3D45, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation28.applyInverseTo(vector3D55);
        org.apache.commons.math.geometry.Rotation rotation59 = rotation28.revert();
        double double60 = rotation59.getQ2();
        org.apache.commons.math.geometry.Rotation rotation61 = rotation16.applyTo(rotation59);
        double double62 = rotation61.getQ2();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
    }

    @Test
    public void test0569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0569");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(doubleArray11, (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(doubleArray11, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.0d);
        double double20 = rotation19.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    }

    @Test
    public void test0570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0570");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) -1, (double) (short) -1, (double) (-1.0f), (double) 1, true);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = null;
        double[] doubleArray8 = rotation5.getAngles(rotationOrder7);
        org.apache.commons.math.geometry.Rotation rotation9 = rotation5.revert();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.5d) + "'", double6 == (-0.5d));
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[3.141592653589793, 1.5707963267948966, -1.5707963267948966]");
        org.junit.Assert.assertNotNull(rotation9);
    }

    @Test
    public void test0571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0571");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.019227214231343204d);
        org.apache.commons.math.geometry.Rotation rotation14 = rotation13.revert();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0, 0.7071067811865475d, (-1.0d), true);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ2();
        double double23 = rotation21.getQ0();
        double[][] doubleArray24 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation21.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation21.applyInverseTo(rotation28);
        double double31 = rotation28.getQ3();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ2();
        double double34 = rotation32.getQ0();
        double[][] doubleArray35 = rotation32.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation32.applyInverseTo(rotation36);
        double double39 = rotation36.getQ2();
        double double40 = rotation36.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation28.applyTo(rotation36);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ2();
        double double44 = rotation42.getQ0();
        double[][] doubleArray45 = rotation42.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation42.applyInverseTo(rotation46);
        double double49 = rotation46.getQ2();
        double double50 = rotation46.getQ3();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation();
        double double52 = rotation51.getQ2();
        double double53 = rotation51.getQ0();
        double[][] doubleArray54 = rotation51.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation55 = rotation46.applyTo(rotation51);
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation51.getAxis();
        org.apache.commons.math.geometry.Rotation rotation57 = rotation41.applyTo(rotation51);
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation41.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation20.applyInverseTo(vector3D58);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation();
        double double61 = rotation60.getQ3();
        double double62 = rotation60.getQ2();
        double double63 = rotation60.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation60.getAxis();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(vector3D64, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation();
        double double68 = rotation67.getQ3();
        double double69 = rotation67.getQ2();
        double double70 = rotation67.getAngle();
        org.apache.commons.math.geometry.Rotation rotation71 = rotation66.applyTo(rotation67);
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotation67.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation20.applyTo(vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation14.applyTo(vector3D73);
        org.apache.commons.math.geometry.RotationOrder rotationOrder76 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray77 = rotation14.getAngles(rotationOrder76);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
    }

    @Test
    public void test0572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0572");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        double double15 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation11.applyTo(vector3D16);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ2();
        double double20 = rotation18.getQ0();
        double[][] doubleArray21 = rotation18.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        org.apache.commons.math.geometry.Rotation rotation24 = rotation18.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation25.revert();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ2();
        double double31 = rotation29.getQ0();
        double[][] doubleArray32 = rotation29.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ3();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation29.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation28.applyInverseTo(rotation29);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        double double39 = rotation37.getQ2();
        double double40 = rotation37.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation37.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation29.applyTo(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation18.applyInverseTo(vector3D41);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(vector3D17, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation5.applyTo(vector3D41);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation((double) ' ', (double) (-1.0f), (double) 0L, 0.9142857142857143d, true);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation();
        double double53 = rotation52.getQ3();
        double double54 = rotation52.getQ2();
        double double55 = rotation52.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation52.getAxis();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(vector3D56, (double) 100.0f);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(vector3D56, (double) (-1.0f));
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation51.applyTo(vector3D56);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(vector3D45, vector3D61);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation();
        double double64 = rotation63.getQ2();
        double double65 = rotation63.getQ0();
        double[][] doubleArray66 = rotation63.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation();
        double double68 = rotation67.getQ3();
        org.apache.commons.math.geometry.Rotation rotation69 = rotation63.applyInverseTo(rotation67);
        double double70 = rotation67.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation67.getAxis();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(vector3D71, (double) '#');
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(vector3D61, vector3D71);
        org.apache.commons.math.geometry.Rotation rotation75 = rotation74.revert();
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(rotation75);
    }

    @Test
    public void test0573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0573");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.7138722624641411d, (double) (short) 10, (-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0574");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.0d);
        double double14 = rotation13.getAngle();
        double double15 = rotation13.getAngle();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation13.revert();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        double double19 = rotation17.getQ2();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation17.revert();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ2();
        double double23 = rotation21.getQ0();
        double[][] doubleArray24 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation21.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation20.applyInverseTo(rotation21);
        double double29 = rotation20.getAngle();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation16.applyInverseTo(rotation20);
        double double31 = rotation16.getQ1();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
    }

    @Test
    public void test0575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0575");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 0L, (double) 100, (double) (byte) 1, 1.0d, true);
        java.lang.Class<?> wildcardClass6 = rotation5.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0576");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation6.getQ0();
        double double8 = rotation6.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        double double12 = rotation9.getAngle();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(vector3D18, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation13.applyInverseTo(vector3D18);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(vector3D18, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation6.applyInverseTo(vector3D18);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation25.revert();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation30.getAxis();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(vector3D34, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation29.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation6.applyInverseTo(rotation29);
        double double39 = rotation29.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-1.0d) + "'", double7 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-1.0d) + "'", double39 == (-1.0d));
    }

    @Test
    public void test0577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0577");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ1();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation5);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) (byte) 10, (double) 0, (double) '4', (double) (short) 100, false);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation16.applyInverseTo(rotation23);
        double double26 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ2();
        double double29 = rotation27.getQ0();
        double[][] doubleArray30 = rotation27.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation27.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        double double36 = rotation34.getQ2();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation34.revert();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ2();
        double double40 = rotation38.getQ0();
        double[][] doubleArray41 = rotation38.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyInverseTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation45 = rotation37.applyInverseTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        double double48 = rotation46.getQ2();
        double double49 = rotation46.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation46.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation38.applyTo(vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation27.applyInverseTo(vector3D50);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation23.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation15.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation0.applyTo(rotation27);
        double double56 = rotation55.getQ0();
        double double57 = rotation55.getQ1();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation((double) 0L, (double) 100, (double) (byte) 1, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation64 = rotation55.applyTo(rotation63);
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation((double) 10L, (double) ' ', (double) 10, (double) (-1L), true);
        double double71 = rotation70.getQ1();
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation();
        double double73 = rotation72.getQ2();
        double double74 = rotation72.getQ0();
        double[][] doubleArray75 = rotation72.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation();
        double double77 = rotation76.getQ3();
        org.apache.commons.math.geometry.Rotation rotation78 = rotation72.applyInverseTo(rotation76);
        double double79 = rotation76.getQ2();
        double double80 = rotation76.getQ3();
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation();
        double double82 = rotation81.getQ2();
        double double83 = rotation81.getQ0();
        double[][] doubleArray84 = rotation81.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation85 = rotation76.applyTo(rotation81);
        org.apache.commons.math.geometry.Rotation rotation86 = rotation70.applyTo(rotation76);
        org.apache.commons.math.geometry.Rotation rotation87 = rotation63.applyInverseTo(rotation86);
        double double88 = rotation87.getQ1();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.9142857142857143d + "'", double71 == 0.9142857142857143d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertNotNull(rotation78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0d + "'", double83 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertNotNull(rotation86);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.28882826147499224d + "'", double88 == 0.28882826147499224d);
    }

    @Test
    public void test0578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0578");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation7.getAxis();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D11, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation24.applyTo(vector3D29);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D11, vector3D18, vector3D29);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation32.revert();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        double double38 = rotation36.getQ2();
        double double39 = rotation36.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation36.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation35.applyInverseTo(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation35.getAxis();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        double double51 = rotation49.getQ2();
        double double52 = rotation49.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation49.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation48.applyTo(vector3D53);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ3();
        double double57 = rotation55.getQ2();
        double double58 = rotation55.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation55.getAxis();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(vector3D59, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        double double64 = rotation62.getQ2();
        double double65 = rotation62.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation62.getAxis();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(vector3D66, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation();
        double double70 = rotation69.getQ3();
        double double71 = rotation69.getQ2();
        double double72 = rotation69.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation69.getAxis();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation();
        double double81 = rotation80.getQ3();
        double double82 = rotation80.getQ2();
        double double83 = rotation80.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation80.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation79.applyTo(vector3D84);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D59, vector3D66, vector3D73, vector3D84);
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(vector3D11, vector3D42, vector3D54, vector3D84);
        org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation(vector3D84, (double) (-1));
        org.apache.commons.math.geometry.Rotation rotation90 = rotation89.revert();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(rotation90);
    }

    @Test
    public void test0579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0579");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ3();
        double double18 = rotation16.getQ2();
        double double19 = rotation16.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation16.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation15.applyTo(vector3D20);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(vector3D8, vector3D21);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ2();
        double double25 = rotation23.getQ0();
        double[][] doubleArray26 = rotation23.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ3();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation23.applyInverseTo(rotation27);
        double double30 = rotation27.getQ2();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ2();
        double double33 = rotation31.getQ0();
        double[][] doubleArray34 = rotation31.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ3();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation31.applyInverseTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation31.applyInverseTo(rotation38);
        double double41 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ2();
        double double44 = rotation42.getQ0();
        double[][] doubleArray45 = rotation42.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation42.applyInverseTo(rotation46);
        double double49 = rotation48.getQ0();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation38.applyInverseTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation27.applyInverseTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation22.applyTo(rotation27);
        double double53 = rotation27.getQ3();
        double[][] doubleArray54 = rotation27.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation27.getAxis();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(vector3D55, 0.9142857142857143d);
        double double58 = rotation57.getQ3();
        double double59 = rotation57.getQ3();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-1.0d) + "'", double49 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.0d) + "'", double58 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-0.0d) + "'", double59 == (-0.0d));
    }

    @Test
    public void test0580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0580");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        double double15 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation4.applyTo(vector3D16);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        double double24 = rotation22.getQ2();
        double double25 = rotation22.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation22.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation21.applyInverseTo(vector3D26);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(vector3D16, vector3D26);
        double double29 = rotation28.getQ1();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation30.revert();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ2();
        double double36 = rotation34.getQ0();
        double[][] doubleArray37 = rotation34.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation34.applyInverseTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation41 = rotation33.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation42 = rotation33.revert();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation();
        double double44 = rotation43.getQ3();
        double double45 = rotation43.getQ2();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation43.revert();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ2();
        double double49 = rotation47.getQ0();
        double[][] doubleArray50 = rotation47.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation();
        double double52 = rotation51.getQ3();
        org.apache.commons.math.geometry.Rotation rotation53 = rotation47.applyInverseTo(rotation51);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation46.applyInverseTo(rotation47);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ3();
        double double57 = rotation55.getQ2();
        double double58 = rotation55.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation55.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation47.applyTo(vector3D59);
        double double61 = rotation47.getQ1();
        double double62 = rotation47.getQ2();
        org.apache.commons.math.geometry.Rotation rotation63 = rotation42.applyTo(rotation47);
        org.apache.commons.math.geometry.Rotation rotation64 = rotation28.applyTo(rotation42);
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray66 = rotation64.getAngles(rotationOrder65);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(rotation64);
    }

    @Test
    public void test0581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0581");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.9649660284921133d, 0.0994987934600711d, (double) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0582");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation3.getAxis();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getAngle();
        double[][] doubleArray9 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ2();
        double double12 = rotation10.getQ1();
        double double13 = rotation10.getAngle();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyInverseTo(rotation10);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        double double17 = rotation15.getQ2();
        org.apache.commons.math.geometry.Rotation rotation18 = rotation15.revert();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ3();
        double double21 = rotation19.getQ2();
        double double22 = rotation19.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation19.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation18.applyInverseTo(vector3D23);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        double double33 = rotation31.getQ2();
        double double34 = rotation31.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation31.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation30.applyTo(vector3D35);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(vector3D23, vector3D36);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ2();
        double double40 = rotation38.getQ0();
        double[][] doubleArray41 = rotation38.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyInverseTo(rotation42);
        double double45 = rotation42.getQ2();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ2();
        double double48 = rotation46.getQ0();
        double[][] doubleArray49 = rotation46.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation();
        double double51 = rotation50.getQ3();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation46.applyInverseTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ3();
        org.apache.commons.math.geometry.Rotation rotation55 = rotation46.applyInverseTo(rotation53);
        double double56 = rotation53.getQ3();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ2();
        double double59 = rotation57.getQ0();
        double[][] doubleArray60 = rotation57.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation();
        double double62 = rotation61.getQ3();
        org.apache.commons.math.geometry.Rotation rotation63 = rotation57.applyInverseTo(rotation61);
        double double64 = rotation63.getQ0();
        org.apache.commons.math.geometry.Rotation rotation65 = rotation53.applyInverseTo(rotation63);
        org.apache.commons.math.geometry.Rotation rotation66 = rotation42.applyInverseTo(rotation65);
        org.apache.commons.math.geometry.Rotation rotation67 = rotation37.applyTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation68 = rotation10.applyTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation();
        double double70 = rotation69.getQ3();
        double double71 = rotation69.getQ2();
        double double72 = rotation69.getAngle();
        double[][] doubleArray73 = rotation69.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(doubleArray73, (double) (short) 1);
        double double76 = rotation75.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation75.getAxis();
        org.apache.commons.math.geometry.Rotation rotation78 = rotation10.applyTo(rotation75);
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotation10.getAxis();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D79);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-1.0d) + "'", double64 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(rotation78);
        org.junit.Assert.assertNotNull(vector3D79);
    }

    @Test
    public void test0583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0583");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.0d, (-0.5d), (-0.031222023722052576d));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0584");
        org.apache.commons.math.geometry.Vector3D vector3D0 = null;
        org.apache.commons.math.geometry.Rotation rotation1 = new org.apache.commons.math.geometry.Rotation();
        double double2 = rotation1.getQ2();
        double double3 = rotation1.getQ0();
        double[][] doubleArray4 = rotation1.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) 10);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(doubleArray4, 0.7064762846593019d);
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation8.getAxis();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        double double12 = rotation10.getQ2();
        double double13 = rotation10.getAngle();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation10.revert();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        double double17 = rotation15.getQ2();
        double double18 = rotation15.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation15.getAxis();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(vector3D19, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation14.applyInverseTo(vector3D19);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(0.995037190209989d, (-1.0d), (double) 10L, (double) 10L, true);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation28.revert();
        double double30 = rotation28.getQ3();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation36.revert();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation((double) 10L, (double) ' ', (double) 10, (double) (-1L), true);
        org.apache.commons.math.geometry.Rotation rotation44 = rotation36.applyTo(rotation43);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ3();
        double double47 = rotation45.getQ2();
        double double48 = rotation45.getAngle();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation45.revert();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation();
        double double51 = rotation50.getQ3();
        double double52 = rotation50.getQ2();
        double double53 = rotation50.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation50.getAxis();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(vector3D54, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation49.applyInverseTo(vector3D54);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation();
        double double59 = rotation58.getQ2();
        double double60 = rotation58.getQ0();
        double[][] doubleArray61 = rotation58.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        org.apache.commons.math.geometry.Rotation rotation64 = rotation58.applyInverseTo(rotation62);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation();
        double double66 = rotation65.getQ3();
        double double67 = rotation65.getQ2();
        org.apache.commons.math.geometry.Rotation rotation68 = rotation65.revert();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation();
        double double70 = rotation69.getQ2();
        double double71 = rotation69.getQ0();
        double[][] doubleArray72 = rotation69.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation();
        double double74 = rotation73.getQ3();
        org.apache.commons.math.geometry.Rotation rotation75 = rotation69.applyInverseTo(rotation73);
        org.apache.commons.math.geometry.Rotation rotation76 = rotation68.applyInverseTo(rotation69);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation();
        double double78 = rotation77.getQ3();
        double double79 = rotation77.getQ2();
        double double80 = rotation77.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotation77.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation69.applyTo(vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotation58.applyInverseTo(vector3D81);
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation(vector3D83, (double) '4');
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D57, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotation44.applyInverseTo(vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotation28.applyInverseTo(vector3D87);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation(vector3D0, vector3D9, vector3D19, vector3D88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.703614788711539d + "'", double30 == 0.703614788711539d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
    }

    @Test
    public void test0585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0585");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ1();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation5);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) (byte) 10, (double) 0, (double) '4', (double) (short) 100, false);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation16.applyInverseTo(rotation23);
        double double26 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ2();
        double double29 = rotation27.getQ0();
        double[][] doubleArray30 = rotation27.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation27.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        double double36 = rotation34.getQ2();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation34.revert();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ2();
        double double40 = rotation38.getQ0();
        double[][] doubleArray41 = rotation38.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyInverseTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation45 = rotation37.applyInverseTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        double double48 = rotation46.getQ2();
        double double49 = rotation46.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation46.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation38.applyTo(vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation27.applyInverseTo(vector3D50);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation23.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation15.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation0.applyTo(rotation27);
        double double56 = rotation0.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
    }

    @Test
    public void test0586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0586");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, (double) 100.0f);
        double double7 = rotation6.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation13.applyTo(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation13.getAxis();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation6.applyInverseTo(rotation13);
        double double22 = rotation6.getQ3();
        double double23 = rotation6.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.5309649148733836d + "'", double23 == 0.5309649148733836d);
    }

    @Test
    public void test0587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0587");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, (double) 100.0f);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D4, (double) (-1.0f));
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        double double12 = rotation9.getAngle();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        double double23 = rotation20.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation20.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation19.applyTo(vector3D24);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        double double28 = rotation26.getQ2();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation26.revert();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ2();
        double double32 = rotation30.getQ0();
        double[][] doubleArray33 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation30.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation29.applyInverseTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        double double40 = rotation38.getQ2();
        double double41 = rotation38.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation38.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation30.applyTo(vector3D42);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(vector3D24, vector3D43);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation();
        double double52 = rotation51.getQ3();
        double double53 = rotation51.getQ2();
        double double54 = rotation51.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation51.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation50.applyTo(vector3D55);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        double double59 = rotation57.getQ2();
        org.apache.commons.math.geometry.Rotation rotation60 = rotation57.revert();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation();
        double double62 = rotation61.getQ3();
        double double63 = rotation61.getQ2();
        double double64 = rotation61.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation61.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation60.applyInverseTo(vector3D65);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation();
        double double68 = rotation67.getQ2();
        double double69 = rotation67.getQ0();
        double[][] doubleArray70 = rotation67.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation();
        double double72 = rotation71.getQ3();
        org.apache.commons.math.geometry.Rotation rotation73 = rotation67.applyInverseTo(rotation71);
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation();
        double double75 = rotation74.getQ3();
        org.apache.commons.math.geometry.Rotation rotation76 = rotation67.applyInverseTo(rotation74);
        double double77 = rotation74.getQ3();
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation();
        double double79 = rotation78.getQ2();
        double double80 = rotation78.getQ0();
        double[][] doubleArray81 = rotation78.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation();
        double double83 = rotation82.getQ3();
        org.apache.commons.math.geometry.Rotation rotation84 = rotation78.applyInverseTo(rotation82);
        double double85 = rotation84.getQ0();
        org.apache.commons.math.geometry.Rotation rotation86 = rotation74.applyInverseTo(rotation84);
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotation74.getAxis();
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(vector3D43, vector3D55, vector3D65, vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation9.applyTo(vector3D55);
        org.apache.commons.math.geometry.Rotation rotation90 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D89);
        org.apache.commons.math.geometry.Rotation rotation92 = new org.apache.commons.math.geometry.Rotation(vector3D89, (double) (-1.0f));
        double double93 = rotation92.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0d + "'", double80 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(rotation84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + (-1.0d) + "'", double85 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.8775825618903728d + "'", double93 == 0.8775825618903728d);
    }

    @Test
    public void test0588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0588");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D10);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation12.revert();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation15.applyInverseTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation24.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation16.applyTo(vector3D28);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D29);
        double[][] doubleArray31 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ2();
        double double34 = rotation32.getQ0();
        double[][] doubleArray35 = rotation32.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation32.applyInverseTo(rotation36);
        double double39 = rotation38.getQ0();
        double double40 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation30.applyTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        double double44 = rotation42.getQ2();
        double double45 = rotation42.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation42.getAxis();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(vector3D46, (double) 100.0f);
        double double49 = rotation48.getQ3();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        double double57 = rotation56.getQ3();
        double double58 = rotation56.getQ2();
        double double59 = rotation56.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation56.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation55.applyTo(vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation55.getAxis();
        org.apache.commons.math.geometry.Rotation rotation63 = rotation48.applyInverseTo(rotation55);
        org.apache.commons.math.geometry.Rotation rotation64 = rotation30.applyInverseTo(rotation48);
        double double65 = rotation30.getAngle();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-1.0d) + "'", double39 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
    }

    @Test
    public void test0589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0589");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.2857142857142857d, 0.0d, (-0.0d), (-1.0d), true);
    }

    @Test
    public void test0590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0590");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-1.0d), 0.6667006794044591d, 0.703614788711539d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0591");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) ' ', (double) (-1.0f), (double) 0L, 0.9142857142857143d, true);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        double double15 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.getAxis();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(vector3D16, (double) 100.0f);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(vector3D16, (double) (-1.0f));
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation11.applyTo(vector3D16);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        double double24 = rotation22.getQ0();
        double[][] doubleArray25 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyInverseTo(rotation26);
        double double29 = rotation26.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation26.getAxis();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ2();
        double double33 = rotation31.getQ0();
        double[][] doubleArray34 = rotation31.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ3();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation31.applyInverseTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation31.applyInverseTo(rotation38);
        double double41 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ2();
        double double44 = rotation42.getQ0();
        double[][] doubleArray45 = rotation42.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation42.applyInverseTo(rotation46);
        double double49 = rotation46.getQ2();
        double double50 = rotation46.getQ3();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation38.applyTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation();
        double double53 = rotation52.getQ2();
        double double54 = rotation52.getQ0();
        double[][] doubleArray55 = rotation52.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        double double57 = rotation56.getQ3();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation52.applyInverseTo(rotation56);
        double double59 = rotation56.getQ2();
        double double60 = rotation56.getQ3();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation();
        double double62 = rotation61.getQ2();
        double double63 = rotation61.getQ0();
        double[][] doubleArray64 = rotation61.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation65 = rotation56.applyTo(rotation61);
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation61.getAxis();
        org.apache.commons.math.geometry.Rotation rotation67 = rotation51.applyTo(rotation61);
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotation51.getAxis();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation();
        double double70 = rotation69.getQ3();
        double double71 = rotation69.getQ2();
        org.apache.commons.math.geometry.Rotation rotation72 = rotation69.revert();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation();
        double double74 = rotation73.getQ2();
        double double75 = rotation73.getQ0();
        double[][] doubleArray76 = rotation73.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation();
        double double78 = rotation77.getQ3();
        org.apache.commons.math.geometry.Rotation rotation79 = rotation73.applyInverseTo(rotation77);
        org.apache.commons.math.geometry.Rotation rotation80 = rotation72.applyInverseTo(rotation73);
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation();
        double double82 = rotation81.getQ3();
        double double83 = rotation81.getQ2();
        double double84 = rotation81.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation81.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation73.applyTo(vector3D85);
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(vector3D85, (double) (byte) 100);
        org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation(vector3D21, vector3D30, vector3D68, vector3D85);
        org.apache.commons.math.geometry.Rotation rotation90 = new org.apache.commons.math.geometry.Rotation(vector3D5, vector3D30);
        org.apache.commons.math.geometry.RotationOrder rotationOrder91 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray92 = rotation90.getAngles(rotationOrder91);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertNotNull(rotation79);
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
    }

    @Test
    public void test0592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0592");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        double double15 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.getAxis();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(vector3D16, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ3();
        double double21 = rotation19.getQ2();
        double double22 = rotation19.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation19.getAxis();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D23, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        double double28 = rotation26.getQ2();
        double double29 = rotation26.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation26.getAxis();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        double double39 = rotation37.getQ2();
        double double40 = rotation37.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation37.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation36.applyTo(vector3D41);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(vector3D16, vector3D23, vector3D30, vector3D41);
        double double44 = rotation43.getQ3();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ2();
        double double47 = rotation45.getQ1();
        double double48 = rotation45.getQ3();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation43.applyTo(rotation45);
        double double50 = rotation43.getQ0();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation11.applyTo(rotation43);
        double[][] doubleArray52 = rotation11.getMatrix();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(doubleArray52);
    }

    @Test
    public void test0593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0593");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        double double18 = rotation17.getQ0();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation7.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        double double23 = rotation20.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation20.getAxis();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(vector3D24, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ3();
        double double29 = rotation27.getQ2();
        double double30 = rotation27.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation27.getAxis();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(vector3D31, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        double double36 = rotation34.getQ2();
        double double37 = rotation34.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation34.getAxis();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ3();
        double double47 = rotation45.getQ2();
        double double48 = rotation45.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation45.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation44.applyTo(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D24, vector3D31, vector3D38, vector3D49);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation17.applyInverseTo(rotation51);
        double double53 = rotation17.getQ3();
        double double54 = rotation17.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder55 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray56 = rotation17.getAngles(rotationOrder55);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
    }

    @Test
    public void test0594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0594");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ1();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation5);
        double double10 = rotation0.getQ0();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation11.applyInverseTo(rotation18);
        double double21 = rotation18.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        double double24 = rotation22.getQ0();
        double[][] doubleArray25 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ3();
        double double31 = rotation29.getQ2();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation29.revert();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ2();
        double double35 = rotation33.getQ0();
        double[][] doubleArray36 = rotation33.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation33.applyInverseTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation32.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        double double43 = rotation41.getQ2();
        double double44 = rotation41.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation41.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation33.applyTo(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation22.applyInverseTo(vector3D45);
        org.apache.commons.math.geometry.Rotation rotation48 = rotation18.applyInverseTo(rotation22);
        double[][] doubleArray49 = rotation18.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(doubleArray49, 0.7071067811865475d);
        double double52 = rotation51.getQ0();
        double double53 = rotation51.getQ2();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation0.applyInverseTo(rotation51);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(rotation54);
    }

    @Test
    public void test0595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0595");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation4.getQ2();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ2();
        double double10 = rotation8.getQ0();
        double[][] doubleArray11 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation8.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation8.applyInverseTo(rotation15);
        double double18 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ2();
        double double21 = rotation19.getQ0();
        double[][] doubleArray22 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation19.applyInverseTo(rotation23);
        double double26 = rotation25.getQ0();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation15.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation4.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ3();
        double double37 = rotation35.getQ2();
        double double38 = rotation35.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation35.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation34.applyTo(vector3D39);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        double double43 = rotation41.getQ2();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation41.revert();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ2();
        double double47 = rotation45.getQ0();
        double[][] doubleArray48 = rotation45.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation45.applyInverseTo(rotation49);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation44.applyInverseTo(rotation45);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ3();
        double double55 = rotation53.getQ2();
        double double56 = rotation53.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation53.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation45.applyTo(vector3D57);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(vector3D39, vector3D58);
        double[][] doubleArray60 = rotation59.getMatrix();
        double[][] doubleArray61 = rotation59.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(doubleArray61, (double) 0);
        org.apache.commons.math.geometry.Rotation rotation64 = rotation27.applyTo(rotation63);
        double[][] doubleArray65 = rotation27.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(doubleArray65, 0.0d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder68 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray69 = rotation67.getAngles(rotationOrder68);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1.0d) + "'", double26 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(doubleArray65);
    }

    @Test
    public void test0596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0596");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation6.getQ0();
        double double8 = rotation6.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        double double12 = rotation9.getAngle();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(vector3D18, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation13.applyInverseTo(vector3D18);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(vector3D18, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation6.applyInverseTo(vector3D18);
        double double25 = rotation6.getQ0();
        double double26 = rotation6.getQ3();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-1.0d) + "'", double7 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-1.0d) + "'", double25 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
    }

    @Test
    public void test0597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0597");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getAngle();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double9 = rotation8.getQ2();
        double double10 = rotation8.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation8.getAxis();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation12.revert();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ3();
        double double18 = rotation16.getQ2();
        double double19 = rotation16.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation16.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation15.applyInverseTo(vector3D20);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        double double30 = rotation28.getQ2();
        double double31 = rotation28.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation28.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation27.applyTo(vector3D32);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(vector3D20, vector3D33);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ2();
        double double37 = rotation35.getQ0();
        double[][] doubleArray38 = rotation35.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation35.applyInverseTo(rotation39);
        double double42 = rotation39.getQ2();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation();
        double double44 = rotation43.getQ2();
        double double45 = rotation43.getQ0();
        double[][] doubleArray46 = rotation43.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ3();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation43.applyInverseTo(rotation47);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation();
        double double51 = rotation50.getQ3();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation43.applyInverseTo(rotation50);
        double double53 = rotation50.getQ3();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ2();
        double double56 = rotation54.getQ0();
        double[][] doubleArray57 = rotation54.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation();
        double double59 = rotation58.getQ3();
        org.apache.commons.math.geometry.Rotation rotation60 = rotation54.applyInverseTo(rotation58);
        double double61 = rotation60.getQ0();
        org.apache.commons.math.geometry.Rotation rotation62 = rotation50.applyInverseTo(rotation60);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation39.applyInverseTo(rotation62);
        org.apache.commons.math.geometry.Rotation rotation64 = rotation34.applyTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation65 = rotation8.applyInverseTo(rotation64);
        org.apache.commons.math.geometry.RotationOrder rotationOrder66 = null;
        double[] doubleArray67 = rotation8.getAngles(rotationOrder66);
        org.apache.commons.math.geometry.Rotation rotation68 = rotation0.applyInverseTo(rotation8);
        double double69 = rotation68.getQ1();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.995037190209989d + "'", double9 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-1.0d) + "'", double61 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.5707963267948966, 2.942255348607469, 1.5707963267948966]");
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
    }

    @Test
    public void test0598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0598");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) 1, (double) 100, (double) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0599");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1.0f), (double) 0, (double) (short) 0, true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation6.revert();
        org.apache.commons.math.geometry.Rotation rotation8 = rotation7.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = null;
        double[] doubleArray10 = rotation7.getAngles(rotationOrder9);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertNotNull(rotation8);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.5707963267948966, 1.5707963267948968, 1.5707963267948966]");
    }

    @Test
    public void test0600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0600");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) (short) 1);
        double double7 = rotation6.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation6.getAxis();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ2();
        double double15 = rotation13.getQ0();
        double[][] doubleArray16 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation13.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation20 = rotation12.applyInverseTo(rotation13);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        double double23 = rotation21.getQ2();
        double double24 = rotation21.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation21.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation13.applyTo(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation6.applyInverseTo(vector3D26);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        double double30 = rotation28.getQ2();
        double double31 = rotation28.getAngle();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation28.revert();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ3();
        double double35 = rotation33.getQ2();
        double double36 = rotation33.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation33.getAxis();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(vector3D37, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation32.applyInverseTo(vector3D37);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(vector3D37, (double) (byte) 100);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation();
        double double44 = rotation43.getQ3();
        double double45 = rotation43.getQ2();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation43.revert();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ2();
        double double49 = rotation47.getQ0();
        double[][] doubleArray50 = rotation47.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation();
        double double52 = rotation51.getQ3();
        org.apache.commons.math.geometry.Rotation rotation53 = rotation47.applyInverseTo(rotation51);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation46.applyInverseTo(rotation47);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ3();
        double double57 = rotation55.getQ2();
        double double58 = rotation55.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation55.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation47.applyTo(vector3D59);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(vector3D37, vector3D59);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(vector3D26, vector3D37);
        double double63 = rotation62.getQ2();
        double double64 = rotation62.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
    }

    @Test
    public void test0601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0601");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        double double24 = rotation22.getQ0();
        double[][] doubleArray25 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation21.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation30.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation22.applyTo(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation11.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation7.applyInverseTo(rotation11);
        double[][] doubleArray38 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(doubleArray38, 10.0d);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(doubleArray38, (double) 100.0f);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation42.getAxis();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(vector3D43);
    }

    @Test
    public void test0602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0602");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '#', (-0.009999000149975004d), (double) 10, 2.943247885977952d, false);
    }

    @Test
    public void test0603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0603");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-1.0d), (double) 0, (double) (byte) 100, (double) (-1.0f), true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        double double13 = rotation10.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation10.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation5.applyTo(vector3D14);
        double[][] doubleArray16 = rotation5.getMatrix();
        double double17 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation19 = rotation5.applyInverseTo(rotation18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 3.1215943200414915d + "'", double17 == 3.1215943200414915d);
    }

    @Test
    public void test0604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0604");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) 10L, (double) ' ', (double) 10, (double) (-1L), true);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation5.applyTo(rotation12);
        double double14 = rotation5.getQ1();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ2();
        double double17 = rotation15.getQ0();
        double[][] doubleArray18 = rotation15.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ3();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation15.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        org.apache.commons.math.geometry.Rotation rotation24 = rotation15.applyInverseTo(rotation22);
        double double25 = rotation22.getQ1();
        double[][] doubleArray26 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(doubleArray26, 0.0d);
        double double29 = rotation28.getAngle();
        double double30 = rotation28.getAngle();
        org.apache.commons.math.geometry.Rotation rotation31 = rotation28.revert();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation32.revert();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ2();
        double double38 = rotation36.getQ0();
        double[][] doubleArray39 = rotation36.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ3();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation36.applyInverseTo(rotation40);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation35.applyInverseTo(rotation36);
        double double44 = rotation35.getAngle();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation31.applyInverseTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ2();
        double double48 = rotation46.getQ0();
        double[][] doubleArray49 = rotation46.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation();
        double double51 = rotation50.getQ3();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation46.applyInverseTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ3();
        org.apache.commons.math.geometry.Rotation rotation55 = rotation46.applyInverseTo(rotation53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation46.getAxis();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        double double59 = rotation57.getQ2();
        double double60 = rotation57.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation57.getAxis();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double68 = rotation67.getQ2();
        double double69 = rotation67.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation67.getAxis();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(vector3D61, vector3D70);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(vector3D56, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation31.applyInverseTo(vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation5.applyTo(vector3D56);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.995037190209989d + "'", double68 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
    }

    @Test
    public void test0605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0605");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation7.getAxis();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D11, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation24.applyTo(vector3D29);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D11, vector3D18, vector3D29);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation32.revert();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        double double38 = rotation36.getQ2();
        double double39 = rotation36.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation36.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation35.applyInverseTo(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation35.getAxis();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        double double51 = rotation49.getQ2();
        double double52 = rotation49.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation49.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation48.applyTo(vector3D53);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ3();
        double double57 = rotation55.getQ2();
        double double58 = rotation55.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation55.getAxis();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(vector3D59, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        double double64 = rotation62.getQ2();
        double double65 = rotation62.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation62.getAxis();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(vector3D66, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation();
        double double70 = rotation69.getQ3();
        double double71 = rotation69.getQ2();
        double double72 = rotation69.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation69.getAxis();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation();
        double double81 = rotation80.getQ3();
        double double82 = rotation80.getQ2();
        double double83 = rotation80.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation80.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation79.applyTo(vector3D84);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D59, vector3D66, vector3D73, vector3D84);
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(vector3D11, vector3D42, vector3D54, vector3D84);
        double double88 = rotation87.getAngle();
        double[][] doubleArray89 = rotation87.getMatrix();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation91 = new org.apache.commons.math.geometry.Rotation(doubleArray89, (-0.9950376827537689d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray89);
    }

    @Test
    public void test0606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0606");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation7.revert();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        double double13 = rotation11.getQ2();
        double double14 = rotation11.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation11.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation10.applyInverseTo(vector3D15);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        double double25 = rotation23.getQ2();
        double double26 = rotation23.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation23.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation22.applyTo(vector3D27);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(vector3D15, vector3D28);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ2();
        double double32 = rotation30.getQ0();
        double[][] doubleArray33 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation30.applyInverseTo(rotation34);
        double double37 = rotation34.getQ2();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ2();
        double double40 = rotation38.getQ0();
        double[][] doubleArray41 = rotation38.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyInverseTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ3();
        org.apache.commons.math.geometry.Rotation rotation47 = rotation38.applyInverseTo(rotation45);
        double double48 = rotation45.getQ3();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ2();
        double double51 = rotation49.getQ0();
        double[][] doubleArray52 = rotation49.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ3();
        org.apache.commons.math.geometry.Rotation rotation55 = rotation49.applyInverseTo(rotation53);
        double double56 = rotation55.getQ0();
        org.apache.commons.math.geometry.Rotation rotation57 = rotation45.applyInverseTo(rotation55);
        org.apache.commons.math.geometry.Rotation rotation58 = rotation34.applyInverseTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation59 = rotation29.applyTo(rotation34);
        double double60 = rotation34.getQ3();
        double[][] doubleArray61 = rotation34.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation34.getAxis();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(vector3D6, vector3D62);
        double double64 = rotation63.getQ2();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-1.0d) + "'", double56 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.7138722624641411d + "'", double64 == 0.7138722624641411d);
    }

    @Test
    public void test0607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0607");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        double double4 = rotation0.getQ0();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, (double) 100.0f);
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation0.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double20 = rotation19.getQ2();
        double double21 = rotation19.getQ1();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation19.revert();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        double double25 = rotation23.getQ2();
        double double26 = rotation23.getAngle();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation23.revert();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        double double30 = rotation28.getQ2();
        double double31 = rotation28.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation28.getAxis();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(vector3D32, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation27.applyInverseTo(vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation22.applyInverseTo(vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation0.applyTo(vector3D36);
        double double38 = rotation0.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.995037190209989d + "'", double20 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
    }

    @Test
    public void test0608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0608");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 100L, 2.9422652488599566d, 0.703614788711539d, 0.29814239699997197d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation6.revert();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        double double13 = rotation11.getQ2();
        double double14 = rotation11.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation11.getAxis();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(vector3D15, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation10.applyInverseTo(vector3D15);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(vector3D15, (double) (byte) 100);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        double double23 = rotation21.getQ2();
        double double24 = rotation21.getAngle();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation21.revert();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        double double28 = rotation26.getQ2();
        double double29 = rotation26.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation26.getAxis();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(vector3D30, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation25.applyInverseTo(vector3D30);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ2();
        double double36 = rotation34.getQ0();
        double[][] doubleArray37 = rotation34.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation34.applyInverseTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        org.apache.commons.math.geometry.Rotation rotation43 = rotation34.applyInverseTo(rotation41);
        double double44 = rotation41.getQ3();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ2();
        double double47 = rotation45.getQ0();
        double[][] doubleArray48 = rotation45.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation45.applyInverseTo(rotation49);
        double double52 = rotation51.getQ0();
        org.apache.commons.math.geometry.Rotation rotation53 = rotation41.applyInverseTo(rotation51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation41.getAxis();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ3();
        double double57 = rotation55.getQ2();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation55.revert();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation();
        double double60 = rotation59.getQ2();
        double double61 = rotation59.getQ0();
        double[][] doubleArray62 = rotation59.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation();
        double double64 = rotation63.getQ3();
        org.apache.commons.math.geometry.Rotation rotation65 = rotation59.applyInverseTo(rotation63);
        org.apache.commons.math.geometry.Rotation rotation66 = rotation58.applyInverseTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation();
        double double68 = rotation67.getQ3();
        double double69 = rotation67.getQ2();
        double double70 = rotation67.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation67.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotation59.applyTo(vector3D71);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation();
        double double74 = rotation73.getQ3();
        double double75 = rotation73.getQ2();
        org.apache.commons.math.geometry.Rotation rotation76 = rotation73.revert();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation();
        double double78 = rotation77.getQ3();
        double double79 = rotation77.getQ2();
        double double80 = rotation77.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotation77.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation76.applyInverseTo(vector3D81);
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(vector3D71, vector3D81);
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(vector3D15, vector3D30, vector3D54, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation5.applyTo(vector3D54);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-1.0d) + "'", double52 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D85);
    }

    @Test
    public void test0609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0609");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 0.0f, 0.09949879346007118d, 1.5707963267948963d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0610");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation7.getAxis();
        double double12 = rotation7.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    }

    @Test
    public void test0611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0611");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        double double12 = rotation10.getQ2();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation10.revert();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation13.applyInverseTo(vector3D18);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        double double28 = rotation26.getQ2();
        double double29 = rotation26.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation26.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation25.applyTo(vector3D30);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(vector3D18, vector3D31);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ3();
        double double35 = rotation33.getQ2();
        double double36 = rotation33.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation33.getAxis();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(vector3D37, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ3();
        double double42 = rotation40.getQ2();
        double double43 = rotation40.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation40.getAxis();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(vector3D44, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ3();
        double double49 = rotation47.getQ2();
        double double50 = rotation47.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation47.getAxis();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation();
        double double59 = rotation58.getQ3();
        double double60 = rotation58.getQ2();
        double double61 = rotation58.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation58.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation57.applyTo(vector3D62);
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(vector3D37, vector3D44, vector3D51, vector3D62);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation();
        double double66 = rotation65.getQ3();
        double double67 = rotation65.getQ2();
        org.apache.commons.math.geometry.Rotation rotation68 = rotation65.revert();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation();
        double double70 = rotation69.getQ3();
        double double71 = rotation69.getQ2();
        double double72 = rotation69.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation69.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation68.applyInverseTo(vector3D73);
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(vector3D9, vector3D31, vector3D51, vector3D73);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(vector3D73, (double) (short) 100);
        double double78 = rotation77.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.5309649148733836d + "'", double78 == 0.5309649148733836d);
    }

    @Test
    public void test0612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0612");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        double double10 = rotation3.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation3.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation19.getAxis();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation11.applyTo(rotation19);
        double double22 = rotation21.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation21.getAxis();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D23, (double) 10.0f);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D23);
    }

    @Test
    public void test0613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0613");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ1();
        double double3 = rotation0.getQ1();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation4.revert();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        double double10 = rotation8.getQ2();
        double double11 = rotation8.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation8.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation7.applyInverseTo(vector3D12);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation14.revert();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        double double21 = rotation18.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation18.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation17.applyInverseTo(vector3D22);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation30.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation29.applyTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(vector3D22, vector3D35);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        double double39 = rotation37.getQ2();
        double double40 = rotation37.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation37.getAxis();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(vector3D41, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation();
        double double45 = rotation44.getQ3();
        double double46 = rotation44.getQ2();
        double double47 = rotation44.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation44.getAxis();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(vector3D48, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation();
        double double52 = rotation51.getQ3();
        double double53 = rotation51.getQ2();
        double double54 = rotation51.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation51.getAxis();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        double double64 = rotation62.getQ2();
        double double65 = rotation62.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation62.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation61.applyTo(vector3D66);
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(vector3D41, vector3D48, vector3D55, vector3D66);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation();
        double double70 = rotation69.getQ3();
        double double71 = rotation69.getQ2();
        org.apache.commons.math.geometry.Rotation rotation72 = rotation69.revert();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation();
        double double74 = rotation73.getQ3();
        double double75 = rotation73.getQ2();
        double double76 = rotation73.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation73.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation72.applyInverseTo(vector3D77);
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(vector3D13, vector3D35, vector3D55, vector3D77);
        org.apache.commons.math.geometry.Rotation rotation80 = rotation0.applyTo(rotation79);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(rotation80);
    }

    @Test
    public void test0614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0614");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ1();
        org.apache.commons.math.geometry.Rotation rotation3 = new org.apache.commons.math.geometry.Rotation();
        double double4 = rotation3.getQ3();
        double double5 = rotation3.getQ2();
        double double6 = rotation3.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotation3.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation3.getAxis();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation((double) ' ', (double) (-1.0f), (double) 0L, 0.9142857142857143d, true);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        double double17 = rotation15.getQ2();
        double double18 = rotation15.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation15.getAxis();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(vector3D19, (double) 100.0f);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(vector3D19, (double) (-1.0f));
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation14.applyTo(vector3D19);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ2();
        double double27 = rotation25.getQ0();
        double[][] doubleArray28 = rotation25.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ3();
        org.apache.commons.math.geometry.Rotation rotation31 = rotation25.applyInverseTo(rotation29);
        double double32 = rotation29.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation29.getAxis();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ2();
        double double36 = rotation34.getQ0();
        double[][] doubleArray37 = rotation34.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation34.applyInverseTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        org.apache.commons.math.geometry.Rotation rotation43 = rotation34.applyInverseTo(rotation41);
        double double44 = rotation41.getQ3();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ2();
        double double47 = rotation45.getQ0();
        double[][] doubleArray48 = rotation45.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation45.applyInverseTo(rotation49);
        double double52 = rotation49.getQ2();
        double double53 = rotation49.getQ3();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation41.applyTo(rotation49);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ2();
        double double57 = rotation55.getQ0();
        double[][] doubleArray58 = rotation55.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation();
        double double60 = rotation59.getQ3();
        org.apache.commons.math.geometry.Rotation rotation61 = rotation55.applyInverseTo(rotation59);
        double double62 = rotation59.getQ2();
        double double63 = rotation59.getQ3();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation();
        double double65 = rotation64.getQ2();
        double double66 = rotation64.getQ0();
        double[][] doubleArray67 = rotation64.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation68 = rotation59.applyTo(rotation64);
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotation64.getAxis();
        org.apache.commons.math.geometry.Rotation rotation70 = rotation54.applyTo(rotation64);
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation54.getAxis();
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation();
        double double73 = rotation72.getQ3();
        double double74 = rotation72.getQ2();
        org.apache.commons.math.geometry.Rotation rotation75 = rotation72.revert();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation();
        double double77 = rotation76.getQ2();
        double double78 = rotation76.getQ0();
        double[][] doubleArray79 = rotation76.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation();
        double double81 = rotation80.getQ3();
        org.apache.commons.math.geometry.Rotation rotation82 = rotation76.applyInverseTo(rotation80);
        org.apache.commons.math.geometry.Rotation rotation83 = rotation75.applyInverseTo(rotation76);
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation();
        double double85 = rotation84.getQ3();
        double double86 = rotation84.getQ2();
        double double87 = rotation84.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotation84.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation76.applyTo(vector3D88);
        org.apache.commons.math.geometry.Rotation rotation91 = new org.apache.commons.math.geometry.Rotation(vector3D88, (double) (byte) 100);
        org.apache.commons.math.geometry.Rotation rotation92 = new org.apache.commons.math.geometry.Rotation(vector3D24, vector3D33, vector3D71, vector3D88);
        org.apache.commons.math.geometry.Rotation rotation93 = new org.apache.commons.math.geometry.Rotation(vector3D8, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D94 = rotation0.applyTo(vector3D33);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.0d + "'", double78 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(rotation82);
        org.junit.Assert.assertNotNull(rotation83);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D94);
    }

    @Test
    public void test0615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0615");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, Double.NaN, 0.9649660284921133d, (-0.7625584504796028d), false);
    }

    @Test
    public void test0616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0616");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) ' ', (double) 0.0f, (double) (byte) 10, (double) (byte) 1, true);
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) (byte) 0, (-0.7071067811865475d), 0.0d, true);
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation13);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ2();
        double double17 = rotation15.getQ0();
        double[][] doubleArray18 = rotation15.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ3();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation15.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        org.apache.commons.math.geometry.Rotation rotation24 = rotation15.applyInverseTo(rotation22);
        double double25 = rotation22.getQ3();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ2();
        double double28 = rotation26.getQ0();
        double[][] doubleArray29 = rotation26.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation26.applyInverseTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ3();
        double double35 = rotation33.getQ2();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation33.revert();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ2();
        double double39 = rotation37.getQ0();
        double[][] doubleArray40 = rotation37.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        org.apache.commons.math.geometry.Rotation rotation43 = rotation37.applyInverseTo(rotation41);
        org.apache.commons.math.geometry.Rotation rotation44 = rotation36.applyInverseTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ3();
        double double47 = rotation45.getQ2();
        double double48 = rotation45.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation45.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation37.applyTo(vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation26.applyInverseTo(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation22.applyInverseTo(rotation26);
        double double53 = rotation52.getAngle();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation14.applyInverseTo(rotation52);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.29814239699997197d + "'", double6 == 0.29814239699997197d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.6086083682652702d + "'", double7 == 0.6086083682652702d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(rotation54);
    }

    @Test
    public void test0617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0617");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 32.0d, 0.7138722624641411d, 0.6931032706702748d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0618");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D10);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation12.revert();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation15.applyInverseTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation24.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation16.applyTo(vector3D28);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D29);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        double double39 = rotation37.getQ2();
        double double40 = rotation37.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation37.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation36.applyTo(vector3D41);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation();
        double double44 = rotation43.getQ3();
        double double45 = rotation43.getQ2();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation43.revert();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ3();
        double double49 = rotation47.getQ2();
        double double50 = rotation47.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation47.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation46.applyInverseTo(vector3D51);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ2();
        double double55 = rotation53.getQ0();
        double[][] doubleArray56 = rotation53.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation53.applyInverseTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation();
        double double61 = rotation60.getQ3();
        org.apache.commons.math.geometry.Rotation rotation62 = rotation53.applyInverseTo(rotation60);
        double double63 = rotation60.getQ3();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation();
        double double65 = rotation64.getQ2();
        double double66 = rotation64.getQ0();
        double[][] doubleArray67 = rotation64.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation();
        double double69 = rotation68.getQ3();
        org.apache.commons.math.geometry.Rotation rotation70 = rotation64.applyInverseTo(rotation68);
        double double71 = rotation70.getQ0();
        org.apache.commons.math.geometry.Rotation rotation72 = rotation60.applyInverseTo(rotation70);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation60.getAxis();
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(vector3D29, vector3D41, vector3D51, vector3D73);
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(vector3D29, (double) 'a');
        double double77 = rotation76.getQ1();
        double double78 = rotation76.getQ2();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-1.0d) + "'", double71 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.981108438603097d + "'", double77 == 0.981108438603097d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
    }

    @Test
    public void test0619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0619");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) (short) 0, (double) 0.0f, (double) (byte) 1, true);
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        double double16 = rotation13.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation12.applyTo(vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation5.applyTo(vector3D18);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ2();
        double double22 = rotation20.getQ0();
        double[][] doubleArray23 = rotation20.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation20.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ3();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation20.applyInverseTo(rotation27);
        double double30 = rotation27.getQ3();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ2();
        double double33 = rotation31.getQ0();
        double[][] doubleArray34 = rotation31.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ3();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation31.applyInverseTo(rotation35);
        double double38 = rotation37.getQ0();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation27.applyInverseTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ3();
        double double42 = rotation40.getQ2();
        double double43 = rotation40.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation40.getAxis();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(vector3D44, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ3();
        double double49 = rotation47.getQ2();
        double double50 = rotation47.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation47.getAxis();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(vector3D51, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ3();
        double double56 = rotation54.getQ2();
        double double57 = rotation54.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation54.getAxis();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation();
        double double66 = rotation65.getQ3();
        double double67 = rotation65.getQ2();
        double double68 = rotation65.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotation65.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation64.applyTo(vector3D69);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(vector3D44, vector3D51, vector3D58, vector3D69);
        org.apache.commons.math.geometry.Rotation rotation72 = rotation37.applyInverseTo(rotation71);
        org.apache.commons.math.geometry.Rotation rotation73 = rotation5.applyInverseTo(rotation37);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.019227214231343204d + "'", double6 == 0.019227214231343204d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.0d) + "'", double38 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(rotation73);
    }

    @Test
    public void test0620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0620");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0d);
        double[][] doubleArray7 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(doubleArray7, 1.0d);
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ3();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    }

    @Test
    public void test0621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0621");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation7.getAxis();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D11, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation24.applyTo(vector3D29);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D11, vector3D18, vector3D29);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation32.revert();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        double double38 = rotation36.getQ2();
        double double39 = rotation36.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation36.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation35.applyInverseTo(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation35.getAxis();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        double double51 = rotation49.getQ2();
        double double52 = rotation49.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation49.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation48.applyTo(vector3D53);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ3();
        double double57 = rotation55.getQ2();
        double double58 = rotation55.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation55.getAxis();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(vector3D59, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        double double64 = rotation62.getQ2();
        double double65 = rotation62.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation62.getAxis();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(vector3D66, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation();
        double double70 = rotation69.getQ3();
        double double71 = rotation69.getQ2();
        double double72 = rotation69.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation69.getAxis();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation();
        double double81 = rotation80.getQ3();
        double double82 = rotation80.getQ2();
        double double83 = rotation80.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation80.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation79.applyTo(vector3D84);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D59, vector3D66, vector3D73, vector3D84);
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(vector3D11, vector3D42, vector3D54, vector3D84);
        org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation(vector3D84, (-0.5d));
        double double90 = rotation89.getQ2();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
    }

    @Test
    public void test0622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0622");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        double double15 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation11.applyTo(vector3D16);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ2();
        double double20 = rotation18.getQ0();
        double[][] doubleArray21 = rotation18.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        org.apache.commons.math.geometry.Rotation rotation24 = rotation18.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation25.revert();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ2();
        double double31 = rotation29.getQ0();
        double[][] doubleArray32 = rotation29.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ3();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation29.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation28.applyInverseTo(rotation29);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        double double39 = rotation37.getQ2();
        double double40 = rotation37.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation37.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation29.applyTo(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation18.applyInverseTo(vector3D41);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(vector3D17, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation5.applyTo(vector3D41);
        double double46 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ2();
        double double49 = rotation47.getQ0();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation56 = rotation55.revert();
        org.apache.commons.math.geometry.Rotation rotation57 = rotation55.revert();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation47.applyInverseTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation59 = rotation5.applyTo(rotation47);
        double double60 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation66.getAxis();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(vector3D67, (double) (short) 100);
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation();
        double double71 = rotation70.getQ3();
        double double72 = rotation70.getQ2();
        org.apache.commons.math.geometry.Rotation rotation73 = rotation70.revert();
        org.apache.commons.math.geometry.Rotation rotation74 = rotation69.applyInverseTo(rotation73);
        org.apache.commons.math.geometry.Rotation rotation75 = rotation5.applyTo(rotation69);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.5707963267948963d + "'", double46 == 1.5707963267948963d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertNotNull(rotation75);
    }

    @Test
    public void test0623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0623");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        double double24 = rotation22.getQ0();
        double[][] doubleArray25 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation21.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation30.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation22.applyTo(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation11.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation7.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation37.getAxis();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation((double) 10L, (double) ' ', (double) 10, (double) (-1L), true);
        double double45 = rotation44.getQ1();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ2();
        double double48 = rotation46.getQ0();
        double[][] doubleArray49 = rotation46.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation();
        double double51 = rotation50.getQ3();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation46.applyInverseTo(rotation50);
        double double53 = rotation50.getQ2();
        double double54 = rotation50.getQ3();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ2();
        double double57 = rotation55.getQ0();
        double[][] doubleArray58 = rotation55.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation50.applyTo(rotation55);
        org.apache.commons.math.geometry.Rotation rotation60 = rotation44.applyTo(rotation50);
        double double61 = rotation50.getQ3();
        org.apache.commons.math.geometry.Rotation rotation62 = rotation37.applyTo(rotation50);
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation62.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray65 = rotation62.getAngles(rotationOrder64);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.9142857142857143d + "'", double45 == 0.9142857142857143d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(vector3D63);
    }

    @Test
    public void test0624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0624");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(2.9422652488599566d, (double) 1, 2.9422652488599566d, 0.0d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(vector3D10, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        double double16 = rotation13.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(vector3D17, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        double double23 = rotation20.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation20.getAxis();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        double double33 = rotation31.getQ2();
        double double34 = rotation31.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation31.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation30.applyTo(vector3D35);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D17, vector3D24, vector3D35);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation5.applyInverseTo(rotation37);
        double double39 = rotation5.getAngle();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.625426981395601d + "'", double39 == 1.625426981395601d);
    }

    @Test
    public void test0625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0625");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0d);
        double[][] doubleArray7 = rotation6.getMatrix();
        double double8 = rotation6.getQ3();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
    }

    @Test
    public void test0626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0626");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation4.getQ2();
        double double8 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ2();
        double double11 = rotation9.getQ0();
        double[][] doubleArray12 = rotation9.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation4.applyTo(rotation9);
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation4.getAxis();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        double double17 = rotation15.getQ2();
        org.apache.commons.math.geometry.Rotation rotation18 = rotation15.revert();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ2();
        double double21 = rotation19.getQ0();
        double[][] doubleArray22 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation19.applyInverseTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation18.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ3();
        double double29 = rotation27.getQ2();
        double double30 = rotation27.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation27.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation19.applyTo(vector3D31);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ3();
        double double35 = rotation33.getQ2();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation33.revert();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        double double39 = rotation37.getQ2();
        double double40 = rotation37.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation37.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation36.applyInverseTo(vector3D41);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(vector3D31, vector3D41);
        double double44 = rotation43.getQ3();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation();
        double double52 = rotation51.getQ3();
        double double53 = rotation51.getQ2();
        double double54 = rotation51.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation51.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation50.applyTo(vector3D55);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        double double59 = rotation57.getQ2();
        org.apache.commons.math.geometry.Rotation rotation60 = rotation57.revert();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation();
        double double62 = rotation61.getQ2();
        double double63 = rotation61.getQ0();
        double[][] doubleArray64 = rotation61.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation();
        double double66 = rotation65.getQ3();
        org.apache.commons.math.geometry.Rotation rotation67 = rotation61.applyInverseTo(rotation65);
        org.apache.commons.math.geometry.Rotation rotation68 = rotation60.applyInverseTo(rotation61);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation();
        double double70 = rotation69.getQ3();
        double double71 = rotation69.getQ2();
        double double72 = rotation69.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation69.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation61.applyTo(vector3D73);
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(vector3D55, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotation43.applyTo(vector3D74);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(vector3D14, vector3D74);
        double double78 = rotation77.getQ2();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
    }

    @Test
    public void test0627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0627");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.0d);
        double double14 = rotation13.getAngle();
        double double15 = rotation13.getAngle();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation13.revert();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        double double19 = rotation17.getQ2();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation17.revert();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ2();
        double double23 = rotation21.getQ0();
        double[][] doubleArray24 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation21.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation20.applyInverseTo(rotation21);
        double double29 = rotation20.getAngle();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ2();
        double double33 = rotation31.getQ0();
        double[][] doubleArray34 = rotation31.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ3();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation31.applyInverseTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation31.applyInverseTo(rotation38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation31.getAxis();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        double double44 = rotation42.getQ2();
        double double45 = rotation42.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation42.getAxis();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double53 = rotation52.getQ2();
        double double54 = rotation52.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation52.getAxis();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(vector3D46, vector3D55);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(vector3D41, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation16.applyInverseTo(vector3D41);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(vector3D41, (double) (byte) 10);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.995037190209989d + "'", double53 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D58);
    }

    @Test
    public void test0628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0628");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) 10L, (double) ' ', (double) 10, (double) (-1L), true);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation5.applyTo(rotation12);
        double double14 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        double double23 = rotation21.getQ2();
        double double24 = rotation21.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation21.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation20.applyTo(vector3D25);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(vector3D25, 2.9422652488599566d);
        double[][] doubleArray29 = rotation28.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation5.applyTo(rotation28);
        double double31 = rotation28.getQ1();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.5707963267948963d + "'", double14 == 1.5707963267948963d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.9950376827537689d) + "'", double31 == (-0.9950376827537689d));
    }

    @Test
    public void test0629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0629");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, (double) 100.0f);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D4, (double) (-1.0f));
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        double double12 = rotation9.getAngle();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        double double23 = rotation20.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation20.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation19.applyTo(vector3D24);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        double double28 = rotation26.getQ2();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation26.revert();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ2();
        double double32 = rotation30.getQ0();
        double[][] doubleArray33 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation30.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation29.applyInverseTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        double double40 = rotation38.getQ2();
        double double41 = rotation38.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation38.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation30.applyTo(vector3D42);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(vector3D24, vector3D43);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation();
        double double52 = rotation51.getQ3();
        double double53 = rotation51.getQ2();
        double double54 = rotation51.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation51.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation50.applyTo(vector3D55);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        double double59 = rotation57.getQ2();
        org.apache.commons.math.geometry.Rotation rotation60 = rotation57.revert();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation();
        double double62 = rotation61.getQ3();
        double double63 = rotation61.getQ2();
        double double64 = rotation61.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation61.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation60.applyInverseTo(vector3D65);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation();
        double double68 = rotation67.getQ2();
        double double69 = rotation67.getQ0();
        double[][] doubleArray70 = rotation67.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation();
        double double72 = rotation71.getQ3();
        org.apache.commons.math.geometry.Rotation rotation73 = rotation67.applyInverseTo(rotation71);
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation();
        double double75 = rotation74.getQ3();
        org.apache.commons.math.geometry.Rotation rotation76 = rotation67.applyInverseTo(rotation74);
        double double77 = rotation74.getQ3();
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation();
        double double79 = rotation78.getQ2();
        double double80 = rotation78.getQ0();
        double[][] doubleArray81 = rotation78.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation();
        double double83 = rotation82.getQ3();
        org.apache.commons.math.geometry.Rotation rotation84 = rotation78.applyInverseTo(rotation82);
        double double85 = rotation84.getQ0();
        org.apache.commons.math.geometry.Rotation rotation86 = rotation74.applyInverseTo(rotation84);
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotation74.getAxis();
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(vector3D43, vector3D55, vector3D65, vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation9.applyTo(vector3D55);
        org.apache.commons.math.geometry.Rotation rotation90 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotation90.getAxis();
        java.lang.Class<?> wildcardClass92 = vector3D91.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0d + "'", double80 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(rotation84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + (-1.0d) + "'", double85 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0630");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.5d, (double) 0L, (double) ' ', (double) (-1L), false);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        double double16 = rotation13.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation12.applyTo(vector3D17);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ2();
        double double21 = rotation19.getQ0();
        double[][] doubleArray22 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation19.applyInverseTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        double double28 = rotation26.getQ2();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation26.revert();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ2();
        double double32 = rotation30.getQ0();
        double[][] doubleArray33 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation30.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation29.applyInverseTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        double double40 = rotation38.getQ2();
        double double41 = rotation38.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation38.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation30.applyTo(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation19.applyInverseTo(vector3D42);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(vector3D18, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation6.applyInverseTo(vector3D18);
        java.lang.Class<?> wildcardClass47 = vector3D46.getClass();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0631");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.7071067811865475d, 0.29814239699997197d, (double) 'a', (double) 10.0f, false);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        double[][] doubleArray10 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(doubleArray10, (double) 1L);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(doubleArray10, 0.0d);
        double double15 = rotation14.getQ3();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation5.applyTo(rotation14);
        org.apache.commons.math.geometry.Rotation rotation17 = rotation16.revert();
        double double18 = rotation16.getQ3();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
    }

    @Test
    public void test0632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0632");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation4.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        double double9 = rotation4.getQ2();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.revert();
        double double11 = rotation4.getQ1();
        double[][] doubleArray12 = rotation4.getMatrix();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
    }

    @Test
    public void test0633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0633");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation11.applyInverseTo(rotation18);
        double double21 = rotation18.getQ1();
        double[][] doubleArray22 = rotation18.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(doubleArray22, 0.0d);
        double double25 = rotation24.getAngle();
        double double26 = rotation24.getAngle();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation24.revert();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        double double30 = rotation28.getQ2();
        org.apache.commons.math.geometry.Rotation rotation31 = rotation28.revert();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ2();
        double double34 = rotation32.getQ0();
        double[][] doubleArray35 = rotation32.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation32.applyInverseTo(rotation36);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation31.applyInverseTo(rotation32);
        double double40 = rotation31.getAngle();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation27.applyInverseTo(rotation31);
        double double42 = rotation31.getQ0();
        org.apache.commons.math.geometry.Rotation rotation43 = rotation7.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation();
        double double45 = rotation44.getQ2();
        double double46 = rotation44.getQ0();
        double[][] doubleArray47 = rotation44.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ3();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation44.applyInverseTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation();
        double double52 = rotation51.getQ3();
        org.apache.commons.math.geometry.Rotation rotation53 = rotation44.applyInverseTo(rotation51);
        double double54 = rotation51.getQ3();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ2();
        double double57 = rotation55.getQ0();
        double[][] doubleArray58 = rotation55.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation();
        double double60 = rotation59.getQ3();
        org.apache.commons.math.geometry.Rotation rotation61 = rotation55.applyInverseTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        double double64 = rotation62.getQ2();
        org.apache.commons.math.geometry.Rotation rotation65 = rotation62.revert();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation();
        double double67 = rotation66.getQ2();
        double double68 = rotation66.getQ0();
        double[][] doubleArray69 = rotation66.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation();
        double double71 = rotation70.getQ3();
        org.apache.commons.math.geometry.Rotation rotation72 = rotation66.applyInverseTo(rotation70);
        org.apache.commons.math.geometry.Rotation rotation73 = rotation65.applyInverseTo(rotation66);
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation();
        double double75 = rotation74.getQ3();
        double double76 = rotation74.getQ2();
        double double77 = rotation74.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation74.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotation66.applyTo(vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotation55.applyInverseTo(vector3D78);
        org.apache.commons.math.geometry.Rotation rotation81 = rotation51.applyInverseTo(rotation55);
        double[][] doubleArray82 = rotation51.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(doubleArray82, 0.7071067811865475d);
        double double85 = rotation84.getQ0();
        double double86 = rotation84.getQ2();
        org.apache.commons.math.geometry.Rotation rotation87 = rotation43.applyTo(rotation84);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-1.0d) + "'", double42 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.0d + "'", double85 == 1.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertNotNull(rotation87);
    }

    @Test
    public void test0634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0634");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        double double24 = rotation22.getQ0();
        double[][] doubleArray25 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation21.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation30.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation22.applyTo(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation11.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation7.applyInverseTo(rotation11);
        double[][] doubleArray38 = rotation11.getMatrix();
        double double39 = rotation11.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
    }

    @Test
    public void test0635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0635");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation9 = rotation8.revert();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation8.revert();
        org.apache.commons.math.geometry.Rotation rotation11 = rotation0.applyInverseTo(rotation10);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation10.getAxis();
        double double13 = rotation10.getQ1();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test0636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0636");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(1.531570594506642d, 10.0d, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ3();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
    }

    @Test
    public void test0637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0637");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.09950371902099892d, 0.9142857142857143d, 100.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0638");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-1.0d), (double) 0, (double) (byte) 100, (double) (-1.0f), true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        double double13 = rotation10.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation10.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation5.applyTo(vector3D14);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation21.getAxis();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(vector3D15, vector3D22);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ2();
        double double26 = rotation24.getQ0();
        double[][] doubleArray27 = rotation24.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation24.applyInverseTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        double double33 = rotation31.getQ2();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation31.revert();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ2();
        double double37 = rotation35.getQ0();
        double[][] doubleArray38 = rotation35.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation35.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation42 = rotation34.applyInverseTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation();
        double double44 = rotation43.getQ3();
        double double45 = rotation43.getQ2();
        double double46 = rotation43.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation43.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation35.applyTo(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation24.applyInverseTo(vector3D47);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D49, (double) '4');
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(vector3D22, vector3D49);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(vector3D22, 0.6086083682652702d);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(vector3D22, (double) 0L);
        double double57 = rotation56.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder58 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray59 = rotation56.getAngles(rotationOrder58);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
    }

    @Test
    public void test0639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0639");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 100L, (double) (byte) 10, (double) (short) -1, (-0.5d), true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation6.applyInverseTo(rotation13);
        double double16 = rotation13.getQ1();
        double[][] doubleArray17 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation18 = rotation5.applyTo(rotation13);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ3();
        double double21 = rotation19.getQ2();
        double double22 = rotation19.getAngle();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation19.revert();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation24.getAxis();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D28, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation23.applyInverseTo(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation5.applyInverseTo(vector3D31);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(vector3D31, 0.09949879346007118d);
        double double35 = rotation34.getQ2();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.0d) + "'", double35 == (-0.0d));
    }

    @Test
    public void test0640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0640");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, (double) 1L);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(doubleArray11, (double) 100);
        double double16 = rotation15.getQ1();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation5.applyTo(rotation15);
        double double18 = rotation5.getAngle();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 3.106437939950305d + "'", double18 == 3.106437939950305d);
    }

    @Test
    public void test0641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0641");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, (double) (short) 1);
        double double14 = rotation13.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation13.getAxis();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ3();
        double double18 = rotation16.getQ2();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation16.revert();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        double double23 = rotation20.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation20.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation19.applyInverseTo(vector3D24);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(vector3D24, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation13.applyInverseTo(vector3D24);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ2();
        double double31 = rotation29.getQ0();
        double[][] doubleArray32 = rotation29.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ3();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation29.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        double double38 = rotation36.getQ2();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation36.revert();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ2();
        double double42 = rotation40.getQ0();
        double[][] doubleArray43 = rotation40.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation();
        double double45 = rotation44.getQ3();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation40.applyInverseTo(rotation44);
        org.apache.commons.math.geometry.Rotation rotation47 = rotation39.applyInverseTo(rotation40);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ3();
        double double50 = rotation48.getQ2();
        double double51 = rotation48.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation48.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation40.applyTo(vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation29.applyInverseTo(vector3D52);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(vector3D54, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation13.applyInverseTo(vector3D54);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(vector3D54, (double) 1);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation();
        double double61 = rotation60.getQ3();
        double double62 = rotation60.getQ2();
        double double63 = rotation60.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation60.getAxis();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(vector3D64, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation();
        double double74 = rotation73.getQ3();
        double double75 = rotation73.getQ2();
        double double76 = rotation73.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation73.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation72.applyTo(vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotation72.getAxis();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation();
        double double81 = rotation80.getQ3();
        double double82 = rotation80.getQ2();
        double double83 = rotation80.getAngle();
        org.apache.commons.math.geometry.Rotation rotation84 = rotation80.revert();
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation();
        double double86 = rotation85.getQ3();
        double double87 = rotation85.getQ2();
        double double88 = rotation85.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation85.getAxis();
        org.apache.commons.math.geometry.Rotation rotation91 = new org.apache.commons.math.geometry.Rotation(vector3D89, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotation84.applyInverseTo(vector3D89);
        org.apache.commons.math.geometry.Rotation rotation93 = new org.apache.commons.math.geometry.Rotation(vector3D54, vector3D64, vector3D79, vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D94 = rotation5.applyTo(vector3D64);
        org.apache.commons.math.geometry.Rotation rotation96 = new org.apache.commons.math.geometry.Rotation(vector3D94, (double) (byte) 0);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(rotation84);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D94);
    }

    @Test
    public void test0642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0642");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.703614788711539d, (double) 1L, 0.7070891041799029d, 0.09950371902099892d, true);
    }

    @Test
    public void test0643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0643");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ1();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        org.apache.commons.math.geometry.Rotation rotation8 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ2();
        double double11 = rotation9.getQ0();
        double[][] doubleArray12 = rotation9.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation9.applyInverseTo(rotation13);
        org.apache.commons.math.geometry.Rotation rotation16 = rotation8.applyInverseTo(rotation9);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        double double19 = rotation17.getQ2();
        double double20 = rotation17.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation17.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation9.applyTo(vector3D21);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        double double25 = rotation23.getQ2();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation23.revert();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ3();
        double double29 = rotation27.getQ2();
        double double30 = rotation27.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation27.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation26.applyInverseTo(vector3D31);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(vector3D21, vector3D31);
        double double34 = rotation33.getQ1();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ3();
        double double37 = rotation35.getQ2();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation35.revert();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ2();
        double double41 = rotation39.getQ0();
        double[][] doubleArray42 = rotation39.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation();
        double double44 = rotation43.getQ3();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation39.applyInverseTo(rotation43);
        org.apache.commons.math.geometry.Rotation rotation46 = rotation38.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation47 = rotation38.revert();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ3();
        double double50 = rotation48.getQ2();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation48.revert();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation();
        double double53 = rotation52.getQ2();
        double double54 = rotation52.getQ0();
        double[][] doubleArray55 = rotation52.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        double double57 = rotation56.getQ3();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation52.applyInverseTo(rotation56);
        org.apache.commons.math.geometry.Rotation rotation59 = rotation51.applyInverseTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation();
        double double61 = rotation60.getQ3();
        double double62 = rotation60.getQ2();
        double double63 = rotation60.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation60.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation52.applyTo(vector3D64);
        double double66 = rotation52.getQ1();
        double double67 = rotation52.getQ2();
        org.apache.commons.math.geometry.Rotation rotation68 = rotation47.applyTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation69 = rotation33.applyTo(rotation47);
        double double70 = rotation33.getQ0();
        org.apache.commons.math.geometry.Rotation rotation71 = rotation4.applyTo(rotation33);
        double double72 = rotation71.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(rotation8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-1.0d) + "'", double72 == (-1.0d));
    }

    @Test
    public void test0644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0644");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.019227214231343204d);
        double[][] doubleArray14 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(doubleArray14, (double) '4');
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray14);
    }

    @Test
    public void test0645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0645");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation7.getAxis();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D11, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation24.applyTo(vector3D29);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D11, vector3D18, vector3D29);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ2();
        double double34 = rotation32.getQ0();
        double double35 = rotation32.getQ3();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation32.revert();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation36.getAxis();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation43.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation36.applyInverseTo(vector3D44);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D45);
        double double47 = rotation46.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.5900247258946039d + "'", double47 == 1.5900247258946039d);
    }

    @Test
    public void test0646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0646");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, 0.9142857142857143d, 0.9689124217106447d, 0.26237485370392877d, true);
    }

    @Test
    public void test0647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0647");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ1();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation5);
        double double10 = rotation0.getQ0();
        double double11 = rotation0.getQ2();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    }

    @Test
    public void test0648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0648");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-1.0d), (double) 0, (double) (byte) 100, (double) (-1.0f), true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        double double13 = rotation10.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation10.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation5.applyTo(vector3D14);
        double[][] doubleArray16 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(doubleArray16, 0.7138722624641411d);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(doubleArray16, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ2();
        double double23 = rotation21.getQ0();
        double[][] doubleArray24 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation20.applyInverseTo(rotation21);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertNotNull(rotation25);
    }

    @Test
    public void test0649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0649");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) '#', 0.7064762846593019d, Double.NaN);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0650");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        double double13 = rotation11.getQ2();
        double double14 = rotation11.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation11.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation10.applyTo(vector3D15);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        double double19 = rotation17.getQ2();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation17.revert();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ2();
        double double23 = rotation21.getQ0();
        double[][] doubleArray24 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation21.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation20.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ3();
        double double31 = rotation29.getQ2();
        double double32 = rotation29.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation29.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation21.applyTo(vector3D33);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(vector3D15, vector3D34);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        double double44 = rotation42.getQ2();
        double double45 = rotation42.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation42.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation41.applyTo(vector3D46);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ3();
        double double50 = rotation48.getQ2();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation48.revert();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation();
        double double53 = rotation52.getQ3();
        double double54 = rotation52.getQ2();
        double double55 = rotation52.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation52.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation51.applyInverseTo(vector3D56);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation();
        double double59 = rotation58.getQ2();
        double double60 = rotation58.getQ0();
        double[][] doubleArray61 = rotation58.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        org.apache.commons.math.geometry.Rotation rotation64 = rotation58.applyInverseTo(rotation62);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation();
        double double66 = rotation65.getQ3();
        org.apache.commons.math.geometry.Rotation rotation67 = rotation58.applyInverseTo(rotation65);
        double double68 = rotation65.getQ3();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation();
        double double70 = rotation69.getQ2();
        double double71 = rotation69.getQ0();
        double[][] doubleArray72 = rotation69.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation();
        double double74 = rotation73.getQ3();
        org.apache.commons.math.geometry.Rotation rotation75 = rotation69.applyInverseTo(rotation73);
        double double76 = rotation75.getQ0();
        org.apache.commons.math.geometry.Rotation rotation77 = rotation65.applyInverseTo(rotation75);
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation65.getAxis();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(vector3D34, vector3D46, vector3D56, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotation0.applyTo(vector3D46);
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation();
        double double82 = rotation81.getQ2();
        double double83 = rotation81.getQ0();
        double[][] doubleArray84 = rotation81.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation();
        double double86 = rotation85.getQ3();
        org.apache.commons.math.geometry.Rotation rotation87 = rotation81.applyInverseTo(rotation85);
        double double88 = rotation85.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation85.getAxis();
        org.apache.commons.math.geometry.Rotation rotation90 = new org.apache.commons.math.geometry.Rotation(vector3D46, vector3D89);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-1.0d) + "'", double76 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0d + "'", double83 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D89);
    }

    @Test
    public void test0651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0651");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) 10L, (double) 1L, 0.0d, (double) 100.0f, false);
        org.apache.commons.math.geometry.Rotation rotation20 = rotation13.applyTo(rotation19);
        double double21 = rotation20.getQ1();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
    }

    @Test
    public void test0652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0652");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        double double10 = rotation3.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation3.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation19.getAxis();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation11.applyTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation22 = rotation11.revert();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ2();
        double double25 = rotation23.getQ0();
        double[][] doubleArray26 = rotation23.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ3();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation23.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation30.revert();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ2();
        double double36 = rotation34.getQ0();
        double[][] doubleArray37 = rotation34.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation34.applyInverseTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation41 = rotation33.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        double double44 = rotation42.getQ2();
        double double45 = rotation42.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation42.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation34.applyTo(vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation23.applyInverseTo(vector3D46);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        double double51 = rotation49.getQ2();
        double double52 = rotation49.getAngle();
        org.apache.commons.math.geometry.Rotation rotation53 = rotation49.revert();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ3();
        double double56 = rotation54.getQ2();
        double double57 = rotation54.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation54.getAxis();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(vector3D58, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation53.applyInverseTo(vector3D58);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(vector3D58, (double) (byte) 100);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(vector3D58, Double.NaN);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(vector3D48, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation11.applyInverseTo(vector3D48);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D67);
    }

    @Test
    public void test0653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0653");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation4.getQ2();
        double double8 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ2();
        double double11 = rotation9.getQ0();
        double[][] doubleArray12 = rotation9.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation4.applyTo(rotation9);
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation4.getAxis();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        double double17 = rotation15.getQ2();
        org.apache.commons.math.geometry.Rotation rotation18 = rotation15.revert();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ2();
        double double21 = rotation19.getQ0();
        double[][] doubleArray22 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation19.applyInverseTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation18.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ3();
        double double29 = rotation27.getQ2();
        double double30 = rotation27.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation27.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation19.applyTo(vector3D31);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ3();
        double double35 = rotation33.getQ2();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation33.revert();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        double double39 = rotation37.getQ2();
        double double40 = rotation37.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation37.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation36.applyInverseTo(vector3D41);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(vector3D31, vector3D41);
        double double44 = rotation43.getQ3();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation();
        double double52 = rotation51.getQ3();
        double double53 = rotation51.getQ2();
        double double54 = rotation51.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation51.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation50.applyTo(vector3D55);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        double double59 = rotation57.getQ2();
        org.apache.commons.math.geometry.Rotation rotation60 = rotation57.revert();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation();
        double double62 = rotation61.getQ2();
        double double63 = rotation61.getQ0();
        double[][] doubleArray64 = rotation61.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation();
        double double66 = rotation65.getQ3();
        org.apache.commons.math.geometry.Rotation rotation67 = rotation61.applyInverseTo(rotation65);
        org.apache.commons.math.geometry.Rotation rotation68 = rotation60.applyInverseTo(rotation61);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation();
        double double70 = rotation69.getQ3();
        double double71 = rotation69.getQ2();
        double double72 = rotation69.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation69.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation61.applyTo(vector3D73);
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(vector3D55, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotation43.applyTo(vector3D74);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(vector3D14, vector3D74);
        java.lang.Class<?> wildcardClass78 = rotation77.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0654");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.26237485370392877d, (double) 10, 2.9422652488599566d, (-1.0d), false);
    }

    @Test
    public void test0655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0655");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, (double) 100.0f);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D4, (double) (byte) -1);
        double double9 = rotation8.getQ2();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ2();
        double double12 = rotation10.getQ1();
        double double13 = rotation10.getAngle();
        double[][] doubleArray14 = rotation10.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation10.getAxis();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation16.applyInverseTo(rotation23);
        double double26 = rotation23.getQ1();
        double[][] doubleArray27 = rotation23.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(doubleArray27, (double) 0);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ2();
        double double32 = rotation30.getQ0();
        double[][] doubleArray33 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation30.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation30.applyInverseTo(rotation37);
        double double40 = rotation37.getQ1();
        double[][] doubleArray41 = rotation37.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation29.applyTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation((double) (byte) -1, (double) (short) -1, (double) (-1.0f), (double) 1, true);
        double double49 = rotation48.getQ0();
        double double50 = rotation48.getQ3();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation();
        double double52 = rotation51.getQ2();
        double double53 = rotation51.getQ0();
        double[][] doubleArray54 = rotation51.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ3();
        org.apache.commons.math.geometry.Rotation rotation57 = rotation51.applyInverseTo(rotation55);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation();
        double double59 = rotation58.getQ3();
        double double60 = rotation58.getQ2();
        org.apache.commons.math.geometry.Rotation rotation61 = rotation58.revert();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ2();
        double double64 = rotation62.getQ0();
        double[][] doubleArray65 = rotation62.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation();
        double double67 = rotation66.getQ3();
        org.apache.commons.math.geometry.Rotation rotation68 = rotation62.applyInverseTo(rotation66);
        org.apache.commons.math.geometry.Rotation rotation69 = rotation61.applyInverseTo(rotation62);
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation();
        double double71 = rotation70.getQ3();
        double double72 = rotation70.getQ2();
        double double73 = rotation70.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation70.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation62.applyTo(vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotation51.applyInverseTo(vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation48.applyInverseTo(vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation37.applyInverseTo(vector3D77);
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(vector3D15, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotation8.applyTo(vector3D77);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-0.5d) + "'", double49 == (-0.5d));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.5d + "'", double50 == 0.5d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D80);
    }

    @Test
    public void test0656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0656");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) (short) 1);
        double double7 = rotation6.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation6.getAxis();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        double double16 = rotation13.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation12.applyInverseTo(vector3D17);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(vector3D17, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation6.applyInverseTo(vector3D17);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        double double24 = rotation22.getQ0();
        double[][] doubleArray25 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ3();
        double double31 = rotation29.getQ2();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation29.revert();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ2();
        double double35 = rotation33.getQ0();
        double[][] doubleArray36 = rotation33.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation33.applyInverseTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation32.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        double double43 = rotation41.getQ2();
        double double44 = rotation41.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation41.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation33.applyTo(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation22.applyInverseTo(vector3D45);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(vector3D47, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation6.applyInverseTo(vector3D47);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(vector3D47, (double) 1);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation58.getAxis();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(vector3D47, vector3D59);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double67 = rotation66.getQ2();
        double double68 = rotation66.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotation66.getAxis();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(vector3D69, (double) 1.0f);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(vector3D47, vector3D69);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation();
        double double74 = rotation73.getQ2();
        double double75 = rotation73.getQ0();
        double[][] doubleArray76 = rotation73.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation();
        double double78 = rotation77.getQ3();
        org.apache.commons.math.geometry.Rotation rotation79 = rotation73.applyInverseTo(rotation77);
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation();
        double double81 = rotation80.getQ3();
        org.apache.commons.math.geometry.Rotation rotation82 = rotation73.applyInverseTo(rotation80);
        double double83 = rotation80.getQ1();
        double[][] doubleArray84 = rotation80.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(doubleArray84, 0.0d);
        double double87 = rotation86.getAngle();
        double double88 = rotation86.getAngle();
        double double89 = rotation86.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotation86.getAxis();
        org.apache.commons.math.geometry.Rotation rotation91 = new org.apache.commons.math.geometry.Rotation(vector3D47, vector3D90);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.995037190209989d + "'", double67 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertNotNull(rotation79);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(rotation82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D90);
    }

    @Test
    public void test0657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0657");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.7070891041799029d, 3.141592653589793d, 0.5309649148733836d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0658");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.0d, (double) (short) -1, 0.0994987934600711d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0659");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10L, (double) 1L, 0.0d, (double) 100.0f, false);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ2();
        double double9 = rotation7.getQ0();
        double[][] doubleArray10 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation7.applyInverseTo(rotation11);
        double double14 = rotation11.getQ2();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ2();
        double double17 = rotation15.getQ0();
        double[][] doubleArray18 = rotation15.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ3();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation15.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        org.apache.commons.math.geometry.Rotation rotation24 = rotation15.applyInverseTo(rotation22);
        double double25 = rotation22.getQ3();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ2();
        double double28 = rotation26.getQ0();
        double[][] doubleArray29 = rotation26.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation26.applyInverseTo(rotation30);
        double double33 = rotation32.getQ0();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation22.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation11.applyInverseTo(rotation34);
        double double36 = rotation34.getQ0();
        double double37 = rotation34.getAngle();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation34.revert();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation5.applyTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ3();
        double double42 = rotation40.getQ2();
        org.apache.commons.math.geometry.Rotation rotation43 = rotation40.revert();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation();
        double double45 = rotation44.getQ2();
        double double46 = rotation44.getQ0();
        double[][] doubleArray47 = rotation44.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ3();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation44.applyInverseTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation43.applyInverseTo(rotation44);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation();
        double double53 = rotation52.getQ3();
        double double54 = rotation52.getQ2();
        double double55 = rotation52.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation52.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation44.applyTo(vector3D56);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(vector3D56, (double) (byte) 100);
        org.apache.commons.math.geometry.Rotation rotation60 = rotation5.applyInverseTo(rotation59);
        java.lang.Class<?> wildcardClass61 = rotation5.getClass();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-1.0d) + "'", double33 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0660");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double11 = rotation10.getQ2();
        double double12 = rotation10.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation10.getAxis();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D13);
        double double15 = rotation14.getQ2();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.995037190209989d + "'", double11 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.0703597544730292d) + "'", double15 == (-0.0703597544730292d));
    }

    @Test
    public void test0661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0661");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10L, (double) ' ', (double) 10, (double) (-1L), true);
        double double6 = rotation5.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(vector3D7, (-0.7625584504796028d));
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation9.getAxis();
        java.lang.Class<?> wildcardClass11 = vector3D10.getClass();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.9142857142857143d + "'", double6 == 0.9142857142857143d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0662");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.5d), (double) 100, (double) (byte) 10, (double) 0L, false);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ2();
        double double14 = rotation12.getQ1();
        double double15 = rotation12.getAngle();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation7.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        double double19 = rotation17.getQ2();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation17.revert();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        double double23 = rotation21.getQ2();
        double double24 = rotation21.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation21.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation20.applyInverseTo(vector3D25);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ3();
        double double35 = rotation33.getQ2();
        double double36 = rotation33.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation33.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation32.applyTo(vector3D37);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(vector3D25, vector3D38);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ2();
        double double42 = rotation40.getQ0();
        double[][] doubleArray43 = rotation40.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation();
        double double45 = rotation44.getQ3();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation40.applyInverseTo(rotation44);
        double double47 = rotation44.getQ2();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ2();
        double double50 = rotation48.getQ0();
        double[][] doubleArray51 = rotation48.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation();
        double double53 = rotation52.getQ3();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation48.applyInverseTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ3();
        org.apache.commons.math.geometry.Rotation rotation57 = rotation48.applyInverseTo(rotation55);
        double double58 = rotation55.getQ3();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation();
        double double60 = rotation59.getQ2();
        double double61 = rotation59.getQ0();
        double[][] doubleArray62 = rotation59.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation();
        double double64 = rotation63.getQ3();
        org.apache.commons.math.geometry.Rotation rotation65 = rotation59.applyInverseTo(rotation63);
        double double66 = rotation65.getQ0();
        org.apache.commons.math.geometry.Rotation rotation67 = rotation55.applyInverseTo(rotation65);
        org.apache.commons.math.geometry.Rotation rotation68 = rotation44.applyInverseTo(rotation67);
        org.apache.commons.math.geometry.Rotation rotation69 = rotation39.applyTo(rotation44);
        org.apache.commons.math.geometry.Rotation rotation70 = rotation12.applyTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation();
        double double72 = rotation71.getQ3();
        double double73 = rotation71.getQ2();
        double double74 = rotation71.getAngle();
        double[][] doubleArray75 = rotation71.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(doubleArray75, (double) (short) 1);
        double double78 = rotation77.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotation77.getAxis();
        org.apache.commons.math.geometry.Rotation rotation80 = rotation12.applyTo(rotation77);
        org.apache.commons.math.geometry.Rotation rotation81 = rotation77.revert();
        org.apache.commons.math.geometry.Rotation rotation82 = rotation6.applyInverseTo(rotation81);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-1.0d) + "'", double66 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertNotNull(rotation82);
    }

    @Test
    public void test0663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0663");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ1();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, 1.531570594506642d);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(doubleArray4, 0.995037190209989d);
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation8.getAxis();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) (byte) 10, (double) 0, (double) '4', (double) (short) 100, false);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation16.applyInverseTo(rotation23);
        double double26 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ2();
        double double29 = rotation27.getQ0();
        double[][] doubleArray30 = rotation27.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation27.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        double double36 = rotation34.getQ2();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation34.revert();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ2();
        double double40 = rotation38.getQ0();
        double[][] doubleArray41 = rotation38.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyInverseTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation45 = rotation37.applyInverseTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        double double48 = rotation46.getQ2();
        double double49 = rotation46.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation46.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation38.applyTo(vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation27.applyInverseTo(vector3D50);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation23.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation15.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ2();
        double double57 = rotation55.getQ0();
        double[][] doubleArray58 = rotation55.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation();
        double double60 = rotation59.getQ3();
        org.apache.commons.math.geometry.Rotation rotation61 = rotation55.applyInverseTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        org.apache.commons.math.geometry.Rotation rotation64 = rotation55.applyInverseTo(rotation62);
        double double65 = rotation62.getQ3();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation();
        double double67 = rotation66.getQ2();
        double double68 = rotation66.getQ0();
        double[][] doubleArray69 = rotation66.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation();
        double double71 = rotation70.getQ3();
        org.apache.commons.math.geometry.Rotation rotation72 = rotation66.applyInverseTo(rotation70);
        double double73 = rotation72.getQ0();
        org.apache.commons.math.geometry.Rotation rotation74 = rotation62.applyInverseTo(rotation72);
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation62.getAxis();
        double double76 = rotation62.getQ1();
        org.apache.commons.math.geometry.Rotation rotation77 = rotation54.applyTo(rotation62);
        org.apache.commons.math.geometry.Rotation rotation78 = rotation8.applyInverseTo(rotation62);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-1.0d) + "'", double73 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertNotNull(rotation78);
    }

    @Test
    public void test0664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0664");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10, 0.2857142857142857d, (double) '4', 0.6924208945332648d, true);
    }

    @Test
    public void test0665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0665");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 1L, 2.943247885977952d, (double) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0666");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (short) 10, (double) 1, (double) 0, 0.995037190209989d, true);
        double double6 = rotation5.getQ0();
        double double7 = rotation5.getQ2();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.9901956025589367d + "'", double6 == 0.9901956025589367d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }

    @Test
    public void test0667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0667");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(doubleArray11, (double) (short) 1);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(doubleArray11, (double) 10.0f);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(doubleArray11, (double) (byte) 1);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ2();
        double double22 = rotation20.getQ0();
        double[][] doubleArray23 = rotation20.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation20.applyInverseTo(rotation24);
        double double27 = rotation24.getQ2();
        double double28 = rotation24.getQ3();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ2();
        double double31 = rotation29.getQ0();
        double[][] doubleArray32 = rotation29.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation24.applyTo(rotation29);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation19.applyTo(rotation33);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
    }

    @Test
    public void test0668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0668");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D10);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation12.revert();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation15.applyInverseTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation24.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation16.applyTo(vector3D28);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D29);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        double double33 = rotation31.getQ2();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation31.revert();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ2();
        double double37 = rotation35.getQ0();
        double[][] doubleArray38 = rotation35.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation35.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation42 = rotation34.applyInverseTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation30.applyInverseTo(rotation34);
        double double44 = rotation30.getQ3();
        double[][] doubleArray45 = rotation30.getMatrix();
        double double46 = rotation30.getAngle();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
    }

    @Test
    public void test0669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0669");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ1();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation6.revert();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ2();
        double double12 = rotation10.getQ0();
        double[][] doubleArray13 = rotation10.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation10.applyInverseTo(rotation14);
        org.apache.commons.math.geometry.Rotation rotation17 = rotation9.applyInverseTo(rotation10);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        double double21 = rotation18.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation18.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation10.applyTo(vector3D22);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation24.revert();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        double double30 = rotation28.getQ2();
        double double31 = rotation28.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation28.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation27.applyInverseTo(vector3D32);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(vector3D22, vector3D32);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ2();
        double double37 = rotation35.getQ0();
        double[][] doubleArray38 = rotation35.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation35.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation35.applyInverseTo(rotation42);
        double double45 = rotation42.getQ1();
        double[][] doubleArray46 = rotation42.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(doubleArray46, 0.0d);
        double double49 = rotation48.getAngle();
        double double50 = rotation48.getAngle();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation48.revert();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation();
        double double53 = rotation52.getQ3();
        double double54 = rotation52.getQ2();
        org.apache.commons.math.geometry.Rotation rotation55 = rotation52.revert();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        double double57 = rotation56.getQ2();
        double double58 = rotation56.getQ0();
        double[][] doubleArray59 = rotation56.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation();
        double double61 = rotation60.getQ3();
        org.apache.commons.math.geometry.Rotation rotation62 = rotation56.applyInverseTo(rotation60);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation55.applyInverseTo(rotation56);
        double double64 = rotation55.getAngle();
        org.apache.commons.math.geometry.Rotation rotation65 = rotation51.applyInverseTo(rotation55);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation();
        double double67 = rotation66.getQ2();
        double double68 = rotation66.getQ0();
        double[][] doubleArray69 = rotation66.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation();
        double double71 = rotation70.getQ3();
        org.apache.commons.math.geometry.Rotation rotation72 = rotation66.applyInverseTo(rotation70);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation();
        double double74 = rotation73.getQ3();
        org.apache.commons.math.geometry.Rotation rotation75 = rotation66.applyInverseTo(rotation73);
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotation66.getAxis();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation();
        double double78 = rotation77.getQ3();
        double double79 = rotation77.getQ2();
        double double80 = rotation77.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotation77.getAxis();
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double88 = rotation87.getQ2();
        double double89 = rotation87.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotation87.getAxis();
        org.apache.commons.math.geometry.Rotation rotation91 = new org.apache.commons.math.geometry.Rotation(vector3D81, vector3D90);
        org.apache.commons.math.geometry.Rotation rotation92 = new org.apache.commons.math.geometry.Rotation(vector3D76, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D93 = rotation51.applyInverseTo(vector3D76);
        org.apache.commons.math.geometry.Rotation rotation94 = new org.apache.commons.math.geometry.Rotation(vector3D32, vector3D76);
        org.apache.commons.math.geometry.Rotation rotation95 = new org.apache.commons.math.geometry.Rotation(vector3D5, vector3D32);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.995037190209989d + "'", double88 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D93);
    }

    @Test
    public void test0670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0670");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        double[][] doubleArray12 = rotation7.getMatrix();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray12);
    }

    @Test
    public void test0671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0671");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, 0.09949879346007118d, 0.9949879346007123d, (double) 100, true);
    }

    @Test
    public void test0672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0672");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(100.0d, (double) 100.0f, (double) (byte) -1, (double) 10, false);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        double[][] doubleArray7 = rotation5.getMatrix();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(doubleArray7);
    }

    @Test
    public void test0673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0673");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(1.5707963267948963d, 0.7138722624641411d, 100.0d, 0.028545850260162355d, true);
    }

    @Test
    public void test0674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0674");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10L, (double) ' ', (double) 10, (double) (-1L), true);
        double double6 = rotation5.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) (byte) 100, (double) 100, (double) (-1L), (double) 0L, false);
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation13.getAxis();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        double double17 = rotation15.getQ2();
        double double18 = rotation15.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation15.getAxis();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(vector3D19, (double) 100.0f);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(vector3D19, (double) (-1.0f));
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation24.revert();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ3();
        double double31 = rotation29.getQ2();
        double double32 = rotation29.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation29.getAxis();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(vector3D33, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation28.applyInverseTo(vector3D33);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ2();
        double double39 = rotation37.getQ0();
        double[][] doubleArray40 = rotation37.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        org.apache.commons.math.geometry.Rotation rotation43 = rotation37.applyInverseTo(rotation41);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation();
        double double45 = rotation44.getQ3();
        double double46 = rotation44.getQ2();
        org.apache.commons.math.geometry.Rotation rotation47 = rotation44.revert();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ2();
        double double50 = rotation48.getQ0();
        double[][] doubleArray51 = rotation48.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation();
        double double53 = rotation52.getQ3();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation48.applyInverseTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation47.applyInverseTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        double double57 = rotation56.getQ3();
        double double58 = rotation56.getQ2();
        double double59 = rotation56.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation56.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation48.applyTo(vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation37.applyInverseTo(vector3D60);
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(vector3D62, (double) '4');
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation();
        double double66 = rotation65.getQ3();
        double double67 = rotation65.getQ2();
        org.apache.commons.math.geometry.Rotation rotation68 = rotation65.revert();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation();
        double double70 = rotation69.getQ2();
        double double71 = rotation69.getQ0();
        double[][] doubleArray72 = rotation69.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation();
        double double74 = rotation73.getQ3();
        org.apache.commons.math.geometry.Rotation rotation75 = rotation69.applyInverseTo(rotation73);
        org.apache.commons.math.geometry.Rotation rotation76 = rotation68.applyInverseTo(rotation69);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation();
        double double78 = rotation77.getQ3();
        double double79 = rotation77.getQ2();
        double double80 = rotation77.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotation77.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation69.applyTo(vector3D81);
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation();
        double double84 = rotation83.getQ3();
        double double85 = rotation83.getQ2();
        org.apache.commons.math.geometry.Rotation rotation86 = rotation83.revert();
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation();
        double double88 = rotation87.getQ3();
        double double89 = rotation87.getQ2();
        double double90 = rotation87.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotation87.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotation86.applyInverseTo(vector3D91);
        org.apache.commons.math.geometry.Rotation rotation93 = new org.apache.commons.math.geometry.Rotation(vector3D81, vector3D91);
        org.apache.commons.math.geometry.Rotation rotation94 = new org.apache.commons.math.geometry.Rotation(vector3D19, vector3D36, vector3D62, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D95 = rotation13.applyTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D96 = rotation5.applyInverseTo(vector3D36);
        double double97 = rotation5.getQ2();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.9142857142857143d + "'", double6 == 0.9142857142857143d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertNotNull(rotation86);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertNotNull(vector3D96);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.2857142857142857d + "'", double97 == 0.2857142857142857d);
    }

    @Test
    public void test0675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0675");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) (short) 1);
        double double7 = rotation6.getQ1();
        double double8 = rotation6.getQ1();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        double double12 = rotation9.getAngle();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(vector3D18, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation13.applyInverseTo(vector3D18);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(vector3D18, (double) (byte) 100);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation24.revert();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ3();
        double double31 = rotation29.getQ2();
        double double32 = rotation29.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation29.getAxis();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(vector3D33, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation28.applyInverseTo(vector3D33);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ2();
        double double39 = rotation37.getQ0();
        double[][] doubleArray40 = rotation37.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        org.apache.commons.math.geometry.Rotation rotation43 = rotation37.applyInverseTo(rotation41);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation();
        double double45 = rotation44.getQ3();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation37.applyInverseTo(rotation44);
        double double47 = rotation44.getQ3();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ2();
        double double50 = rotation48.getQ0();
        double[][] doubleArray51 = rotation48.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation();
        double double53 = rotation52.getQ3();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation48.applyInverseTo(rotation52);
        double double55 = rotation54.getQ0();
        org.apache.commons.math.geometry.Rotation rotation56 = rotation44.applyInverseTo(rotation54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation44.getAxis();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation();
        double double59 = rotation58.getQ3();
        double double60 = rotation58.getQ2();
        org.apache.commons.math.geometry.Rotation rotation61 = rotation58.revert();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ2();
        double double64 = rotation62.getQ0();
        double[][] doubleArray65 = rotation62.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation();
        double double67 = rotation66.getQ3();
        org.apache.commons.math.geometry.Rotation rotation68 = rotation62.applyInverseTo(rotation66);
        org.apache.commons.math.geometry.Rotation rotation69 = rotation61.applyInverseTo(rotation62);
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation();
        double double71 = rotation70.getQ3();
        double double72 = rotation70.getQ2();
        double double73 = rotation70.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation70.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation62.applyTo(vector3D74);
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation();
        double double77 = rotation76.getQ3();
        double double78 = rotation76.getQ2();
        org.apache.commons.math.geometry.Rotation rotation79 = rotation76.revert();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation();
        double double81 = rotation80.getQ3();
        double double82 = rotation80.getQ2();
        double double83 = rotation80.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation80.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation79.applyInverseTo(vector3D84);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D74, vector3D84);
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(vector3D18, vector3D33, vector3D57, vector3D84);
        org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation(vector3D18, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotation6.applyTo(vector3D18);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-1.0d) + "'", double55 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertNotNull(rotation79);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D90);
    }

    @Test
    public void test0676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0676");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ1();
        double double3 = rotation0.getAngle();
        double double4 = rotation0.getQ0();
        org.apache.commons.math.geometry.Rotation rotation5 = rotation0.revert();
        double[][] doubleArray6 = rotation0.getMatrix();
        java.lang.Class<?> wildcardClass7 = rotation0.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(rotation5);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0677");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 1, Double.NaN, (double) 10.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0678");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) -1, (double) (short) -1, (double) (-1.0f), (double) 1, true);
        double double6 = rotation5.getQ0();
        double double7 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ2();
        double double10 = rotation8.getQ0();
        double[][] doubleArray11 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation8.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        double double17 = rotation15.getQ2();
        org.apache.commons.math.geometry.Rotation rotation18 = rotation15.revert();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ2();
        double double21 = rotation19.getQ0();
        double[][] doubleArray22 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation19.applyInverseTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation18.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ3();
        double double29 = rotation27.getQ2();
        double double30 = rotation27.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation27.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation19.applyTo(vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation8.applyInverseTo(vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation5.applyInverseTo(vector3D31);
        double double35 = rotation5.getQ1();
        double double36 = rotation5.getQ1();
        double double37 = rotation5.getAngle();
        double double38 = rotation5.getAngle();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.5d) + "'", double6 == (-0.5d));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.5d + "'", double7 == 0.5d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.5d) + "'", double35 == (-0.5d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.5d) + "'", double36 == (-0.5d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 2.0943951023931953d + "'", double37 == 2.0943951023931953d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2.0943951023931953d + "'", double38 == 2.0943951023931953d);
    }

    @Test
    public void test0679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0679");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        double double18 = rotation17.getQ0();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation7.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        double double23 = rotation20.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation20.getAxis();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(vector3D24, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ3();
        double double29 = rotation27.getQ2();
        double double30 = rotation27.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation27.getAxis();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(vector3D31, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        double double36 = rotation34.getQ2();
        double double37 = rotation34.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation34.getAxis();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ3();
        double double47 = rotation45.getQ2();
        double double48 = rotation45.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation45.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation44.applyTo(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D24, vector3D31, vector3D38, vector3D49);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation17.applyInverseTo(rotation51);
        double[][] doubleArray53 = rotation51.getMatrix();
        double double54 = rotation51.getQ1();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
    }

    @Test
    public void test0680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0680");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) ' ', (double) 0.0f, (double) (byte) 10, (double) (byte) 1, true);
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation5.revert();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.29814239699997197d + "'", double6 == 0.29814239699997197d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.29814239699997197d + "'", double7 == 0.29814239699997197d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.9540556703999103d + "'", double8 == 0.9540556703999103d);
        org.junit.Assert.assertNotNull(rotation9);
    }

    @Test
    public void test0681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0681");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation3.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation13.revert();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ2();
        double double19 = rotation17.getQ0();
        double[][] doubleArray20 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation17.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation24 = rotation16.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation17.applyTo(vector3D29);
        double double31 = rotation17.getQ1();
        double double32 = rotation17.getQ2();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation12.applyTo(rotation17);
        double[][] doubleArray34 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ2();
        double double37 = rotation35.getQ1();
        double double38 = rotation35.getAngle();
        double[][] doubleArray39 = rotation35.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(doubleArray39, (double) 100.0f);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation41.getAxis();
        org.apache.commons.math.geometry.Rotation rotation43 = rotation17.applyTo(rotation41);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotation43);
    }

    @Test
    public void test0682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0682");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(3.106437939950305d, (-0.0d), (double) 100.0f, (-0.031222023722052576d), false);
    }

    @Test
    public void test0683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0683");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double double3 = rotation0.getQ3();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotation4.getAxis();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(vector3D5, (-0.5d));
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation7.applyInverseTo(rotation8);
        double double10 = rotation7.getQ0();
        double double11 = rotation7.getQ2();
        double double12 = rotation7.getQ3();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.9689124217106447d + "'", double10 == 0.9689124217106447d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    }

    @Test
    public void test0684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0684");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ1();
        double double8 = rotation5.getQ1();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        double double12 = rotation9.getAngle();
        double[][] doubleArray13 = rotation9.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(doubleArray13, (double) (short) 1);
        double double16 = rotation15.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation15.getAxis();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        double double24 = rotation22.getQ2();
        double double25 = rotation22.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation22.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation21.applyInverseTo(vector3D26);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(vector3D26, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation15.applyInverseTo(vector3D26);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ2();
        double double33 = rotation31.getQ0();
        double[][] doubleArray34 = rotation31.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ3();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation31.applyInverseTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        double double40 = rotation38.getQ2();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation38.revert();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ2();
        double double44 = rotation42.getQ0();
        double[][] doubleArray45 = rotation42.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation42.applyInverseTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation49 = rotation41.applyInverseTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation();
        double double51 = rotation50.getQ3();
        double double52 = rotation50.getQ2();
        double double53 = rotation50.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation50.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation42.applyTo(vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation31.applyInverseTo(vector3D54);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(vector3D56, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation15.applyInverseTo(vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation5.applyInverseTo(vector3D56);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(vector3D56, (-0.009999000149975004d));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.995037190209989d + "'", double6 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
    }

    @Test
    public void test0685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0685");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ3();
        double double18 = rotation16.getQ2();
        double double19 = rotation16.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation16.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation15.applyTo(vector3D20);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(vector3D8, vector3D21);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ2();
        double double25 = rotation23.getQ0();
        double[][] doubleArray26 = rotation23.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ3();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation23.applyInverseTo(rotation27);
        double double30 = rotation27.getQ2();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ2();
        double double33 = rotation31.getQ0();
        double[][] doubleArray34 = rotation31.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ3();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation31.applyInverseTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation31.applyInverseTo(rotation38);
        double double41 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ2();
        double double44 = rotation42.getQ0();
        double[][] doubleArray45 = rotation42.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation42.applyInverseTo(rotation46);
        double double49 = rotation48.getQ0();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation38.applyInverseTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation27.applyInverseTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation22.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ2();
        double double55 = rotation53.getQ0();
        double[][] doubleArray56 = rotation53.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation53.applyInverseTo(rotation57);
        double double60 = rotation59.getQ0();
        double double61 = rotation59.getQ3();
        double double62 = rotation59.getQ3();
        org.apache.commons.math.geometry.Rotation rotation63 = rotation27.applyInverseTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation64 = rotation27.revert();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-1.0d) + "'", double49 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-1.0d) + "'", double60 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(rotation64);
    }

    @Test
    public void test0686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0686");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 100, 0.5309649148733836d, (double) 'a', (double) (-1), false);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.junit.Assert.assertNotNull(rotation6);
    }

    @Test
    public void test0687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0687");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        double double15 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.getAxis();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(vector3D16, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ3();
        double double21 = rotation19.getQ2();
        double double22 = rotation19.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation19.getAxis();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D23, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        double double28 = rotation26.getQ2();
        double double29 = rotation26.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation26.getAxis();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        double double39 = rotation37.getQ2();
        double double40 = rotation37.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation37.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation36.applyTo(vector3D41);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(vector3D16, vector3D23, vector3D30, vector3D41);
        double double44 = rotation43.getQ3();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ2();
        double double47 = rotation45.getQ1();
        double double48 = rotation45.getQ3();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation43.applyTo(rotation45);
        double double50 = rotation43.getQ0();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation11.applyTo(rotation43);
        double double52 = rotation11.getQ3();
        double double53 = rotation11.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
    }

    @Test
    public void test0688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0688");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ1();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotation0.getAxis();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertNotNull(vector3D5);
    }

    @Test
    public void test0689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0689");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(doubleArray11, (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(doubleArray11, (double) 'a');
        double double18 = rotation17.getQ2();
        double[][] doubleArray19 = rotation17.getMatrix();
        java.lang.Class<?> wildcardClass20 = doubleArray19.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0690");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D10);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation12.revert();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation15.applyInverseTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation24.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation16.applyTo(vector3D28);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D29);
        double[][] doubleArray31 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ2();
        double double34 = rotation32.getQ0();
        double[][] doubleArray35 = rotation32.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation32.applyInverseTo(rotation36);
        double double39 = rotation38.getQ0();
        double double40 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation30.applyTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ2();
        double double44 = rotation42.getQ1();
        double double45 = rotation42.getAngle();
        double[][] doubleArray46 = rotation42.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(doubleArray46, (double) 100.0f);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(doubleArray46, 0.9142857142857143d);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation38.applyInverseTo(rotation50);
        double double52 = rotation38.getQ0();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-1.0d) + "'", double39 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-1.0d) + "'", double52 == (-1.0d));
    }

    @Test
    public void test0691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0691");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) 10L, (double) ' ', (double) 10, (double) (-1L), true);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation5.applyTo(rotation12);
        double double14 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ2();
        double double17 = rotation15.getQ0();
        double[][] doubleArray18 = rotation15.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ3();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation15.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        org.apache.commons.math.geometry.Rotation rotation24 = rotation15.applyInverseTo(rotation22);
        double double25 = rotation22.getQ1();
        double[][] doubleArray26 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(doubleArray26, 0.0d);
        double double29 = rotation28.getAngle();
        double double30 = rotation28.getAngle();
        org.apache.commons.math.geometry.Rotation rotation31 = rotation28.revert();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ2();
        double double34 = rotation32.getQ0();
        double[][] doubleArray35 = rotation32.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation32.applyInverseTo(rotation36);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation32.applyInverseTo(rotation39);
        double double42 = rotation39.getQ3();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation();
        double double44 = rotation43.getQ2();
        double double45 = rotation43.getQ0();
        double[][] doubleArray46 = rotation43.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ3();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation43.applyInverseTo(rotation47);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation();
        double double51 = rotation50.getQ3();
        double double52 = rotation50.getQ2();
        org.apache.commons.math.geometry.Rotation rotation53 = rotation50.revert();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ2();
        double double56 = rotation54.getQ0();
        double[][] doubleArray57 = rotation54.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation();
        double double59 = rotation58.getQ3();
        org.apache.commons.math.geometry.Rotation rotation60 = rotation54.applyInverseTo(rotation58);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation53.applyInverseTo(rotation54);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        double double64 = rotation62.getQ2();
        double double65 = rotation62.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation62.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation54.applyTo(vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotation43.applyInverseTo(vector3D66);
        org.apache.commons.math.geometry.Rotation rotation69 = rotation39.applyInverseTo(rotation43);
        double[][] doubleArray70 = rotation39.getMatrix();
        double double71 = rotation39.getQ1();
        double double72 = rotation39.getAngle();
        double double73 = rotation39.getQ2();
        double double74 = rotation39.getQ1();
        org.apache.commons.math.geometry.Rotation rotation75 = rotation28.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation76 = rotation5.applyInverseTo(rotation28);
        double[][] doubleArray77 = rotation28.getMatrix();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.5707963267948963d + "'", double14 == 1.5707963267948963d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertNotNull(doubleArray77);
    }

    @Test
    public void test0692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0692");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(1.0d, (double) (-1.0f), 10.0d, 0.6086083682652702d, false);
        double double6 = rotation5.getQ3();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.6086083682652702d + "'", double6 == 0.6086083682652702d);
    }

    @Test
    public void test0693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0693");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) 1, (double) 'a', 2.562089250717698d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0694");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ1();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation5);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) (byte) 10, (double) 0, (double) '4', (double) (short) 100, false);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation16.applyInverseTo(rotation23);
        double double26 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ2();
        double double29 = rotation27.getQ0();
        double[][] doubleArray30 = rotation27.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation27.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        double double36 = rotation34.getQ2();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation34.revert();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ2();
        double double40 = rotation38.getQ0();
        double[][] doubleArray41 = rotation38.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyInverseTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation45 = rotation37.applyInverseTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        double double48 = rotation46.getQ2();
        double double49 = rotation46.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation46.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation38.applyTo(vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation27.applyInverseTo(vector3D50);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation23.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation15.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation0.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        double double57 = rotation56.getQ2();
        double double58 = rotation56.getQ0();
        double[][] doubleArray59 = rotation56.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation();
        double double61 = rotation60.getQ3();
        org.apache.commons.math.geometry.Rotation rotation62 = rotation56.applyInverseTo(rotation60);
        double double63 = rotation62.getQ0();
        double double64 = rotation62.getQ3();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation();
        double double66 = rotation65.getQ3();
        double double67 = rotation65.getQ2();
        double double68 = rotation65.getAngle();
        org.apache.commons.math.geometry.Rotation rotation69 = rotation65.revert();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation();
        double double71 = rotation70.getQ3();
        double double72 = rotation70.getQ2();
        double double73 = rotation70.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation70.getAxis();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(vector3D74, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation69.applyInverseTo(vector3D74);
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(vector3D74, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotation62.applyInverseTo(vector3D74);
        org.apache.commons.math.geometry.Rotation rotation81 = rotation55.applyInverseTo(rotation62);
        double double82 = rotation81.getQ0();
        org.apache.commons.math.geometry.Rotation rotation83 = rotation81.revert();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-1.0d) + "'", double63 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1.0d + "'", double82 == 1.0d);
        org.junit.Assert.assertNotNull(rotation83);
    }

    @Test
    public void test0695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0695");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 100L, (double) 0, (double) (short) 1, 0.7071067811865475d, true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = null;
        double[] doubleArray7 = rotation5.getAngles(rotationOrder6);
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = null;
        double[] doubleArray9 = rotation5.getAngles(rotationOrder8);
        double double10 = rotation5.getQ3();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[3.1345217036255226, 0.019998833442044513, 3.1345217036255226]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[3.1345217036255226, 0.019998833442044513, 3.1345217036255226]");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.007070537541434264d + "'", double10 == 0.007070537541434264d);
    }

    @Test
    public void test0696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0696");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation4.getQ2();
        double double8 = rotation4.getQ3();
        double double9 = rotation4.getAngle();
        double[][] doubleArray10 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(doubleArray10, 100.0d);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
    }

    @Test
    public void test0697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0697");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1.0f), (double) 0, (double) (short) 0, true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation5.revert();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = null;
        double[] doubleArray10 = rotation5.getAngles(rotationOrder9);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.5707963267948963d + "'", double8 == 1.5707963267948963d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.5707963267948966, 1.5707963267948968, 1.5707963267948966]");
    }

    @Test
    public void test0698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0698");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.09852814501285315d, 10.0d, (double) (short) 1, (double) (-1.0f), false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray7 = rotation5.getAngles(rotationOrder6);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0699");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        double double15 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation11.applyTo(vector3D16);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        double double24 = rotation22.getQ0();
        double[][] doubleArray25 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation21.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation30.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation22.applyTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(vector3D16, vector3D35);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation();
        double double44 = rotation43.getQ3();
        double double45 = rotation43.getQ2();
        double double46 = rotation43.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation43.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation42.applyTo(vector3D47);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        double double51 = rotation49.getQ2();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation49.revert();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ3();
        double double55 = rotation53.getQ2();
        double double56 = rotation53.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation53.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation52.applyInverseTo(vector3D57);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation();
        double double60 = rotation59.getQ2();
        double double61 = rotation59.getQ0();
        double[][] doubleArray62 = rotation59.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation();
        double double64 = rotation63.getQ3();
        org.apache.commons.math.geometry.Rotation rotation65 = rotation59.applyInverseTo(rotation63);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation();
        double double67 = rotation66.getQ3();
        org.apache.commons.math.geometry.Rotation rotation68 = rotation59.applyInverseTo(rotation66);
        double double69 = rotation66.getQ3();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation();
        double double71 = rotation70.getQ2();
        double double72 = rotation70.getQ0();
        double[][] doubleArray73 = rotation70.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation();
        double double75 = rotation74.getQ3();
        org.apache.commons.math.geometry.Rotation rotation76 = rotation70.applyInverseTo(rotation74);
        double double77 = rotation76.getQ0();
        org.apache.commons.math.geometry.Rotation rotation78 = rotation66.applyInverseTo(rotation76);
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotation66.getAxis();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(vector3D35, vector3D47, vector3D57, vector3D79);
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(vector3D35, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(vector3D5, vector3D35);
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation(vector3D5, 2.9422652488599566d);
        double double86 = rotation85.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-1.0d) + "'", double77 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2.9422652488599566d + "'", double86 == 2.9422652488599566d);
    }

    @Test
    public void test0700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0700");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getAngle();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.9949879346007117d + "'", double6 == 0.9949879346007117d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 2.9422652488599566d + "'", double7 == 2.9422652488599566d);
    }

    @Test
    public void test0701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0701");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ1();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation5);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation9.getAxis();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(vector3D10, 2.0943951023931953d);
        double[][] doubleArray13 = rotation12.getMatrix();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(doubleArray13);
    }

    @Test
    public void test0702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0702");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation6.getQ0();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        double double10 = rotation8.getQ2();
        double double11 = rotation8.getAngle();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation8.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        double double16 = rotation13.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(vector3D17, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation12.applyInverseTo(vector3D17);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ2();
        double double23 = rotation21.getQ0();
        double[][] doubleArray24 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation21.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        double double30 = rotation28.getQ2();
        org.apache.commons.math.geometry.Rotation rotation31 = rotation28.revert();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ2();
        double double34 = rotation32.getQ0();
        double[][] doubleArray35 = rotation32.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation32.applyInverseTo(rotation36);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation31.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ3();
        double double42 = rotation40.getQ2();
        double double43 = rotation40.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation40.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation32.applyTo(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation21.applyInverseTo(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation12.applyInverseTo(vector3D46);
        org.apache.commons.math.geometry.Rotation rotation48 = rotation6.applyTo(rotation12);
        double double49 = rotation6.getQ2();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation();
        double double51 = rotation50.getQ3();
        double double52 = rotation50.getQ2();
        double double53 = rotation50.getAngle();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation50.revert();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ3();
        double double57 = rotation55.getQ2();
        double double58 = rotation55.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation55.getAxis();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(vector3D59, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation54.applyInverseTo(vector3D59);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation();
        double double64 = rotation63.getQ2();
        double double65 = rotation63.getQ0();
        double[][] doubleArray66 = rotation63.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation();
        double double68 = rotation67.getQ3();
        org.apache.commons.math.geometry.Rotation rotation69 = rotation63.applyInverseTo(rotation67);
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation();
        double double71 = rotation70.getQ3();
        double double72 = rotation70.getQ2();
        org.apache.commons.math.geometry.Rotation rotation73 = rotation70.revert();
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation();
        double double75 = rotation74.getQ2();
        double double76 = rotation74.getQ0();
        double[][] doubleArray77 = rotation74.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation();
        double double79 = rotation78.getQ3();
        org.apache.commons.math.geometry.Rotation rotation80 = rotation74.applyInverseTo(rotation78);
        org.apache.commons.math.geometry.Rotation rotation81 = rotation73.applyInverseTo(rotation74);
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation();
        double double83 = rotation82.getQ3();
        double double84 = rotation82.getQ2();
        double double85 = rotation82.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation82.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotation74.applyTo(vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotation63.applyInverseTo(vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation54.applyInverseTo(vector3D88);
        org.apache.commons.math.geometry.Rotation rotation95 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        double double96 = rotation95.getQ3();
        org.apache.commons.math.geometry.Rotation rotation97 = rotation54.applyTo(rotation95);
        double double98 = rotation54.getQ0();
        org.apache.commons.math.geometry.Rotation rotation99 = rotation6.applyInverseTo(rotation54);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-1.0d) + "'", double7 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.0d + "'", double96 == 0.0d);
        org.junit.Assert.assertNotNull(rotation97);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + (-1.0d) + "'", double98 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation99);
    }

    @Test
    public void test0703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0703");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double double3 = rotation0.getQ3();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        double double5 = rotation4.getQ1();
        double double6 = rotation4.getQ1();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    }

    @Test
    public void test0704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0704");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ1();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        org.apache.commons.math.geometry.Rotation rotation8 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ2();
        double double11 = rotation9.getQ0();
        double[][] doubleArray12 = rotation9.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation9.applyInverseTo(rotation13);
        org.apache.commons.math.geometry.Rotation rotation16 = rotation8.applyInverseTo(rotation9);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        double double19 = rotation17.getQ2();
        double double20 = rotation17.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation17.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation9.applyTo(vector3D21);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        double double25 = rotation23.getQ2();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation23.revert();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ3();
        double double29 = rotation27.getQ2();
        double double30 = rotation27.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation27.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation26.applyInverseTo(vector3D31);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(vector3D21, vector3D31);
        double double34 = rotation33.getQ1();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ3();
        double double37 = rotation35.getQ2();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation35.revert();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ2();
        double double41 = rotation39.getQ0();
        double[][] doubleArray42 = rotation39.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation();
        double double44 = rotation43.getQ3();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation39.applyInverseTo(rotation43);
        org.apache.commons.math.geometry.Rotation rotation46 = rotation38.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation47 = rotation38.revert();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ3();
        double double50 = rotation48.getQ2();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation48.revert();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation();
        double double53 = rotation52.getQ2();
        double double54 = rotation52.getQ0();
        double[][] doubleArray55 = rotation52.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        double double57 = rotation56.getQ3();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation52.applyInverseTo(rotation56);
        org.apache.commons.math.geometry.Rotation rotation59 = rotation51.applyInverseTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation();
        double double61 = rotation60.getQ3();
        double double62 = rotation60.getQ2();
        double double63 = rotation60.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation60.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation52.applyTo(vector3D64);
        double double66 = rotation52.getQ1();
        double double67 = rotation52.getQ2();
        org.apache.commons.math.geometry.Rotation rotation68 = rotation47.applyTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation69 = rotation33.applyTo(rotation47);
        double double70 = rotation33.getQ0();
        org.apache.commons.math.geometry.Rotation rotation71 = rotation4.applyTo(rotation33);
        double double72 = rotation4.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(rotation8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
    }

    @Test
    public void test0705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0705");
        org.apache.commons.math.geometry.Vector3D vector3D0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation2 = new org.apache.commons.math.geometry.Rotation(vector3D0, (double) 1.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0706");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double double3 = rotation0.getQ3();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotation4.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation6.applyInverseTo(rotation13);
        double double16 = rotation13.getQ1();
        double[][] doubleArray17 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(doubleArray17, 0.0d);
        double double20 = rotation19.getAngle();
        double double21 = rotation19.getAngle();
        double double22 = rotation19.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation19.getAxis();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(vector3D5, vector3D23);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D23);
    }

    @Test
    public void test0707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0707");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        double double12 = rotation7.getQ2();
        double double13 = rotation7.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation7.getAxis();
        double double15 = rotation7.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
    }

    @Test
    public void test0708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0708");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation6.getQ0();
        double double8 = rotation6.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        double double12 = rotation9.getAngle();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(vector3D18, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation13.applyInverseTo(vector3D18);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(vector3D18, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation6.applyInverseTo(vector3D18);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation25.revert();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation30.getAxis();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(vector3D34, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation29.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation6.applyInverseTo(rotation29);
        double double39 = rotation6.getQ1();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-1.0d) + "'", double7 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
    }

    @Test
    public void test0709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0709");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        double double24 = rotation22.getQ0();
        double[][] doubleArray25 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation21.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation30.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation22.applyTo(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation11.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation7.applyInverseTo(rotation11);
        double[][] doubleArray38 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(doubleArray38, 10.0d);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(doubleArray38, 0.5d);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation42.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray45 = rotation42.getAngles(rotationOrder44);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(vector3D43);
    }

    @Test
    public void test0710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0710");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation4.getQ2();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ2();
        double double10 = rotation8.getQ0();
        double[][] doubleArray11 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation8.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation8.applyInverseTo(rotation15);
        double double18 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ2();
        double double21 = rotation19.getQ0();
        double[][] doubleArray22 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation19.applyInverseTo(rotation23);
        double double26 = rotation25.getQ0();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation15.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation4.applyInverseTo(rotation27);
        double double29 = rotation27.getQ3();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1.0d) + "'", double26 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
    }

    @Test
    public void test0711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0711");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = null;
        double[] doubleArray7 = rotation5.getAngles(rotationOrder6);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ2();
        double double10 = rotation8.getQ0();
        double[][] doubleArray11 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation8.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation8.applyInverseTo(rotation15);
        double double18 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ2();
        double double21 = rotation19.getQ0();
        double[][] doubleArray22 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation19.applyInverseTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        double double28 = rotation26.getQ2();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation26.revert();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ2();
        double double32 = rotation30.getQ0();
        double[][] doubleArray33 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation30.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation29.applyInverseTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        double double40 = rotation38.getQ2();
        double double41 = rotation38.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation38.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation30.applyTo(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation19.applyInverseTo(vector3D42);
        org.apache.commons.math.geometry.Rotation rotation45 = rotation15.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation15.getAxis();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ3();
        double double49 = rotation47.getQ2();
        double double50 = rotation47.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation47.getAxis();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(vector3D51, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ3();
        double double56 = rotation54.getQ2();
        double double57 = rotation54.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation54.getAxis();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(vector3D58, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation();
        double double62 = rotation61.getQ3();
        double double63 = rotation61.getQ2();
        double double64 = rotation61.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation61.getAxis();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation();
        double double73 = rotation72.getQ3();
        double double74 = rotation72.getQ2();
        double double75 = rotation72.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotation72.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation71.applyTo(vector3D76);
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(vector3D51, vector3D58, vector3D65, vector3D76);
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double85 = rotation84.getQ2();
        double double86 = rotation84.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotation84.getAxis();
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(vector3D58, vector3D87);
        org.apache.commons.math.geometry.Rotation rotation90 = new org.apache.commons.math.geometry.Rotation(vector3D87, (double) (-1L));
        org.apache.commons.math.geometry.Rotation rotation92 = new org.apache.commons.math.geometry.Rotation(vector3D87, 0.7208382876544367d);
        org.apache.commons.math.geometry.Vector3D vector3D93 = rotation15.applyInverseTo(vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D94 = rotation5.applyTo(vector3D93);
        org.apache.commons.math.geometry.Rotation rotation96 = new org.apache.commons.math.geometry.Rotation(vector3D94, (double) 10);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[3.141592653589793, 1.5707963267948968, 3.141592653589793]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.995037190209989d + "'", double85 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D94);
    }

    @Test
    public void test0712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0712");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ1();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation5);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) (byte) 10, (double) 0, (double) '4', (double) (short) 100, false);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation16.applyInverseTo(rotation23);
        double double26 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ2();
        double double29 = rotation27.getQ0();
        double[][] doubleArray30 = rotation27.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation27.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        double double36 = rotation34.getQ2();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation34.revert();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ2();
        double double40 = rotation38.getQ0();
        double[][] doubleArray41 = rotation38.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyInverseTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation45 = rotation37.applyInverseTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        double double48 = rotation46.getQ2();
        double double49 = rotation46.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation46.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation38.applyTo(vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation27.applyInverseTo(vector3D50);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation23.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation15.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation0.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        double double57 = rotation56.getQ2();
        double double58 = rotation56.getQ0();
        double[][] doubleArray59 = rotation56.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation();
        double double61 = rotation60.getQ3();
        org.apache.commons.math.geometry.Rotation rotation62 = rotation56.applyInverseTo(rotation60);
        double double63 = rotation62.getQ0();
        double double64 = rotation62.getQ3();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation();
        double double66 = rotation65.getQ3();
        double double67 = rotation65.getQ2();
        double double68 = rotation65.getAngle();
        org.apache.commons.math.geometry.Rotation rotation69 = rotation65.revert();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation();
        double double71 = rotation70.getQ3();
        double double72 = rotation70.getQ2();
        double double73 = rotation70.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation70.getAxis();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(vector3D74, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation69.applyInverseTo(vector3D74);
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(vector3D74, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotation62.applyInverseTo(vector3D74);
        org.apache.commons.math.geometry.Rotation rotation81 = rotation55.applyInverseTo(rotation62);
        double double82 = rotation62.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-1.0d) + "'", double63 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
    }

    @Test
    public void test0713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0713");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        double double12 = rotation3.getQ0();
        double double13 = rotation3.getAngle();
        double double14 = rotation3.getAngle();
        double[][] doubleArray15 = rotation3.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation3.revert();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1.0d) + "'", double12 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(rotation16);
    }

    @Test
    public void test0714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0714");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ1();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation5);
        double double10 = rotation0.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation14 = rotation12.applyTo(rotation13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(rotation12);
    }

    @Test
    public void test0715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0715");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        double double12 = rotation3.getQ0();
        double double13 = rotation3.getAngle();
        double double14 = rotation3.getAngle();
        double double15 = rotation3.getQ0();
        double double16 = rotation3.getAngle();
        double double17 = rotation3.getQ1();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1.0d) + "'", double12 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1.0d) + "'", double15 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
    }

    @Test
    public void test0716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0716");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) '4', 0.5309649148733836d, (double) 10.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0717");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation7.getAxis();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D11, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation24.applyTo(vector3D29);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D11, vector3D18, vector3D29);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(vector3D29, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(vector3D29, 1.0d);
        double double36 = rotation35.getQ1();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.479425538604203d) + "'", double36 == (-0.479425538604203d));
    }

    @Test
    public void test0718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0718");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 0.0f, 3.141592653589793d, (double) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0719");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation3.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        double double13 = rotation11.getQ2();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation11.revert();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        double double17 = rotation15.getQ2();
        double double18 = rotation15.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation15.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation14.applyInverseTo(vector3D19);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        double double23 = rotation21.getQ2();
        double double24 = rotation21.getAngle();
        double[][] doubleArray25 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(doubleArray25, (double) (short) 1);
        double double28 = rotation27.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation27.getAxis();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation30.revert();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ2();
        double double36 = rotation34.getQ0();
        double[][] doubleArray37 = rotation34.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation34.applyInverseTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation41 = rotation33.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        double double44 = rotation42.getQ2();
        double double45 = rotation42.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation42.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation34.applyTo(vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation27.applyInverseTo(vector3D47);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        double double51 = rotation49.getQ2();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation49.revert();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ3();
        double double55 = rotation53.getQ2();
        double double56 = rotation53.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation53.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation52.applyInverseTo(vector3D57);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation();
        double double60 = rotation59.getQ3();
        double double61 = rotation59.getQ2();
        double double62 = rotation59.getAngle();
        double[][] doubleArray63 = rotation59.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(doubleArray63, (double) (short) 1);
        double double66 = rotation65.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation65.getAxis();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation();
        double double69 = rotation68.getQ3();
        double double70 = rotation68.getQ2();
        org.apache.commons.math.geometry.Rotation rotation71 = rotation68.revert();
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation();
        double double73 = rotation72.getQ2();
        double double74 = rotation72.getQ0();
        double[][] doubleArray75 = rotation72.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation();
        double double77 = rotation76.getQ3();
        org.apache.commons.math.geometry.Rotation rotation78 = rotation72.applyInverseTo(rotation76);
        org.apache.commons.math.geometry.Rotation rotation79 = rotation71.applyInverseTo(rotation72);
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation();
        double double81 = rotation80.getQ3();
        double double82 = rotation80.getQ2();
        double double83 = rotation80.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation80.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation72.applyTo(vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation65.applyInverseTo(vector3D85);
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(vector3D19, vector3D47, vector3D58, vector3D85);
        org.apache.commons.math.geometry.Rotation rotation88 = rotation3.applyTo(rotation87);
        java.lang.Class<?> wildcardClass89 = rotation88.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertNotNull(rotation78);
        org.junit.Assert.assertNotNull(rotation79);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(rotation88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0720");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation6.getQ0();
        double double8 = rotation6.getQ3();
        double double9 = rotation6.getQ3();
        double double10 = rotation6.getQ3();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-1.0d) + "'", double7 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }

    @Test
    public void test0721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0721");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 10, (double) 0, (double) '4', (double) (short) 100, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(doubleArray6, 0.8775825618903728d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
    }

    @Test
    public void test0722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0722");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0, 0.7071067811865475d, (-1.0d), true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation6.applyInverseTo(rotation13);
        double double16 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ2();
        double double19 = rotation17.getQ0();
        double[][] doubleArray20 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation17.applyInverseTo(rotation21);
        double double24 = rotation21.getQ2();
        double double25 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation13.applyTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ2();
        double double29 = rotation27.getQ0();
        double[][] doubleArray30 = rotation27.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation27.applyInverseTo(rotation31);
        double double34 = rotation31.getQ2();
        double double35 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ2();
        double double38 = rotation36.getQ0();
        double[][] doubleArray39 = rotation36.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation31.applyTo(rotation36);
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation36.getAxis();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation26.applyTo(rotation36);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation26.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation5.applyInverseTo(vector3D43);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ3();
        double double47 = rotation45.getQ2();
        double double48 = rotation45.getAngle();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation45.revert();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation();
        double double51 = rotation50.getQ3();
        double double52 = rotation50.getQ2();
        double double53 = rotation50.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation50.getAxis();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(vector3D54, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation49.applyInverseTo(vector3D54);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation();
        double double59 = rotation58.getQ2();
        double double60 = rotation58.getQ0();
        double[][] doubleArray61 = rotation58.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        org.apache.commons.math.geometry.Rotation rotation64 = rotation58.applyInverseTo(rotation62);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation();
        double double66 = rotation65.getQ3();
        double double67 = rotation65.getQ2();
        org.apache.commons.math.geometry.Rotation rotation68 = rotation65.revert();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation();
        double double70 = rotation69.getQ2();
        double double71 = rotation69.getQ0();
        double[][] doubleArray72 = rotation69.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation();
        double double74 = rotation73.getQ3();
        org.apache.commons.math.geometry.Rotation rotation75 = rotation69.applyInverseTo(rotation73);
        org.apache.commons.math.geometry.Rotation rotation76 = rotation68.applyInverseTo(rotation69);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation();
        double double78 = rotation77.getQ3();
        double double79 = rotation77.getQ2();
        double double80 = rotation77.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotation77.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation69.applyTo(vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotation58.applyInverseTo(vector3D81);
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation(vector3D83, (double) '4');
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D57, vector3D83);
        org.apache.commons.math.geometry.Rotation rotation87 = rotation86.revert();
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotation87.getAxis();
        org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation(vector3D44, vector3D88);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertNotNull(vector3D88);
    }

    @Test
    public void test0723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0723");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.7071067811865475d, 0.29814239699997197d, (double) 'a', (double) 10.0f, false);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        double[][] doubleArray10 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(doubleArray10, (double) 1L);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(doubleArray10, 0.0d);
        double double15 = rotation14.getQ3();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation5.applyTo(rotation14);
        double double17 = rotation14.getQ3();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
    }

    @Test
    public void test0724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0724");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D10);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation12.revert();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation15.applyInverseTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation24.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation16.applyTo(vector3D28);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D29);
        double[][] doubleArray31 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ2();
        double double34 = rotation32.getQ0();
        double[][] doubleArray35 = rotation32.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation32.applyInverseTo(rotation36);
        double double39 = rotation38.getQ0();
        double double40 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation30.applyTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        double double44 = rotation42.getQ2();
        double double45 = rotation42.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation42.getAxis();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(vector3D46, (double) 100.0f);
        double double49 = rotation48.getQ3();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        double double57 = rotation56.getQ3();
        double double58 = rotation56.getQ2();
        double double59 = rotation56.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation56.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation55.applyTo(vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation55.getAxis();
        org.apache.commons.math.geometry.Rotation rotation63 = rotation48.applyInverseTo(rotation55);
        org.apache.commons.math.geometry.Rotation rotation64 = rotation30.applyInverseTo(rotation48);
        double double65 = rotation30.getQ3();
        double double66 = rotation30.getQ2();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-1.0d) + "'", double39 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
    }

    @Test
    public void test0725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0725");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D10);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation12.revert();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation15.applyInverseTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation24.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation16.applyTo(vector3D28);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D29);
        double[][] doubleArray31 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ2();
        double double34 = rotation32.getQ0();
        double[][] doubleArray35 = rotation32.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation32.applyInverseTo(rotation36);
        double double39 = rotation38.getQ0();
        double double40 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation30.applyTo(rotation38);
        double double42 = rotation30.getQ3();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-1.0d) + "'", double39 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
    }

    @Test
    public void test0726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0726");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.0d);
        double double14 = rotation13.getAngle();
        double double15 = rotation13.getAngle();
        double double16 = rotation13.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        double double18 = rotation13.getAngle();
        double double19 = rotation13.getQ1();
        double double20 = rotation13.getQ1();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    }

    @Test
    public void test0727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0727");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation3.revert();
        double double5 = rotation3.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    }

    @Test
    public void test0728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0728");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(1.531570594506642d, 10.0d, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray7 = rotation5.getAngles(rotationOrder6);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0729");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        org.apache.commons.math.geometry.Rotation rotation11 = rotation6.applyTo(rotation7);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation12.revert();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ3();
        double double18 = rotation16.getQ2();
        double double19 = rotation16.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation16.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation15.applyInverseTo(vector3D20);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        double double24 = rotation22.getQ2();
        double double25 = rotation22.getAngle();
        double[][] doubleArray26 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(doubleArray26, (double) (short) 1);
        double double29 = rotation28.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation28.getAxis();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        double double33 = rotation31.getQ2();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation31.revert();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ2();
        double double37 = rotation35.getQ0();
        double[][] doubleArray38 = rotation35.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation35.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation42 = rotation34.applyInverseTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation();
        double double44 = rotation43.getQ3();
        double double45 = rotation43.getQ2();
        double double46 = rotation43.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation43.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation35.applyTo(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation28.applyInverseTo(vector3D48);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation();
        double double51 = rotation50.getQ3();
        double double52 = rotation50.getQ2();
        org.apache.commons.math.geometry.Rotation rotation53 = rotation50.revert();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ3();
        double double56 = rotation54.getQ2();
        double double57 = rotation54.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation54.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation53.applyInverseTo(vector3D58);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation();
        double double61 = rotation60.getQ3();
        double double62 = rotation60.getQ2();
        double double63 = rotation60.getAngle();
        double[][] doubleArray64 = rotation60.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(doubleArray64, (double) (short) 1);
        double double67 = rotation66.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotation66.getAxis();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation();
        double double70 = rotation69.getQ3();
        double double71 = rotation69.getQ2();
        org.apache.commons.math.geometry.Rotation rotation72 = rotation69.revert();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation();
        double double74 = rotation73.getQ2();
        double double75 = rotation73.getQ0();
        double[][] doubleArray76 = rotation73.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation();
        double double78 = rotation77.getQ3();
        org.apache.commons.math.geometry.Rotation rotation79 = rotation73.applyInverseTo(rotation77);
        org.apache.commons.math.geometry.Rotation rotation80 = rotation72.applyInverseTo(rotation73);
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation();
        double double82 = rotation81.getQ3();
        double double83 = rotation81.getQ2();
        double double84 = rotation81.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation81.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation73.applyTo(vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotation66.applyInverseTo(vector3D86);
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(vector3D20, vector3D48, vector3D59, vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation11.applyInverseTo(vector3D20);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertNotNull(rotation79);
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D89);
    }

    @Test
    public void test0730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0730");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 100, (double) '4', (double) 10.0f, true);
        double double6 = rotation5.getQ2();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.4577635057039505d + "'", double6 == 0.4577635057039505d);
    }

    @Test
    public void test0731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0731");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) -1, (double) (short) -1, (double) (-1.0f), (double) 1, true);
        double double6 = rotation5.getQ1();
        double double7 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ2();
        double double10 = rotation8.getQ0();
        double[][] doubleArray11 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation8.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation8.applyInverseTo(rotation15);
        double double18 = rotation15.getQ1();
        double[][] doubleArray19 = rotation15.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(doubleArray19, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(doubleArray19, (double) (short) 1);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(doubleArray19, (double) 10.0f);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(doubleArray19, (double) (byte) 1);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation5.applyTo(rotation27);
        double double29 = rotation5.getAngle();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.5d) + "'", double6 == (-0.5d));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.5d + "'", double7 == 0.5d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2.0943951023931953d + "'", double29 == 2.0943951023931953d);
    }

    @Test
    public void test0732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0732");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        double double10 = rotation3.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation3.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ2();
        double double16 = rotation14.getQ0();
        double double17 = rotation14.getQ3();
        org.apache.commons.math.geometry.Rotation rotation18 = rotation14.revert();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation18.getAxis();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation18.applyInverseTo(vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation3.applyTo(vector3D26);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D26, 0.703614788711539d);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        double double33 = rotation31.getQ2();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation31.revert();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation34.getAxis();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        double double38 = rotation36.getQ2();
        double double39 = rotation36.getAngle();
        double[][] doubleArray40 = rotation36.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(doubleArray40, (double) (short) 1);
        double double43 = rotation42.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation42.getAxis();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(vector3D35, vector3D44);
        org.apache.commons.math.geometry.Rotation rotation46 = rotation45.revert();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation45.getAxis();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(vector3D26, vector3D47);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(vector3D47);
    }

    @Test
    public void test0733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0733");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(doubleArray3, (double) 10);
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }

    @Test
    public void test0734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0734");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation7.revert();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation18 = rotation10.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ3();
        double double21 = rotation19.getQ2();
        double double22 = rotation19.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation19.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation11.applyTo(vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation0.applyInverseTo(vector3D23);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        double double28 = rotation26.getQ2();
        double double29 = rotation26.getAngle();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation26.revert();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        double double33 = rotation31.getQ2();
        double double34 = rotation31.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation31.getAxis();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(vector3D35, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation30.applyInverseTo(vector3D35);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(vector3D35, (double) (byte) 100);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(vector3D35, Double.NaN);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(vector3D25, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation43.getAxis();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D44);
    }

    @Test
    public void test0735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0735");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(vector3D5, (-0.7625584504796028d));
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(vector3D5, 0.009949879346007126d);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ2();
        double double12 = rotation10.getAngle();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation9.applyTo(rotation10);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
    }

    @Test
    public void test0736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0736");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation4.applyInverseTo(vector3D9);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(vector3D9, (double) (byte) 100);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(vector3D9, Double.NaN);
        double[][] doubleArray17 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation16.getAxis();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation16.revert();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertNotNull(rotation20);
    }

    @Test
    public void test0737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0737");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.009949879346007126d, 0.09950371902099892d, (double) 10, 97.0d, false);
    }

    @Test
    public void test0738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0738");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 100L, (double) (byte) 10, (double) (short) -1, (-0.5d), true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation6.applyInverseTo(rotation13);
        double double16 = rotation13.getQ1();
        double[][] doubleArray17 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation18 = rotation5.applyTo(rotation13);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ3();
        double double21 = rotation19.getQ2();
        double double22 = rotation19.getAngle();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation19.revert();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation24.getAxis();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D28, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation23.applyInverseTo(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation5.applyInverseTo(vector3D31);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ3();
        double double35 = rotation33.getQ2();
        double double36 = rotation33.getAngle();
        double[][] doubleArray37 = rotation33.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(doubleArray37, (double) (short) 1);
        double double40 = rotation39.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation39.getAxis();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        double double44 = rotation42.getQ2();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation42.revert();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        double double48 = rotation46.getQ2();
        double double49 = rotation46.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation46.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation45.applyInverseTo(vector3D50);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(vector3D50, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation39.applyInverseTo(vector3D50);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ2();
        double double57 = rotation55.getQ0();
        double[][] doubleArray58 = rotation55.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation();
        double double60 = rotation59.getQ3();
        org.apache.commons.math.geometry.Rotation rotation61 = rotation55.applyInverseTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        double double64 = rotation62.getQ2();
        org.apache.commons.math.geometry.Rotation rotation65 = rotation62.revert();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation();
        double double67 = rotation66.getQ2();
        double double68 = rotation66.getQ0();
        double[][] doubleArray69 = rotation66.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation();
        double double71 = rotation70.getQ3();
        org.apache.commons.math.geometry.Rotation rotation72 = rotation66.applyInverseTo(rotation70);
        org.apache.commons.math.geometry.Rotation rotation73 = rotation65.applyInverseTo(rotation66);
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation();
        double double75 = rotation74.getQ3();
        double double76 = rotation74.getQ2();
        double double77 = rotation74.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation74.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotation66.applyTo(vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotation55.applyInverseTo(vector3D78);
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(vector3D80, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotation39.applyInverseTo(vector3D80);
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation(vector3D80, (double) 1);
        org.apache.commons.math.geometry.Rotation rotation91 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotation91.getAxis();
        org.apache.commons.math.geometry.Rotation rotation93 = new org.apache.commons.math.geometry.Rotation(vector3D80, vector3D92);
        org.apache.commons.math.geometry.Rotation rotation94 = new org.apache.commons.math.geometry.Rotation(vector3D31, vector3D80);
        org.apache.commons.math.geometry.Rotation rotation96 = new org.apache.commons.math.geometry.Rotation(vector3D31, 0.9949756218412634d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D92);
    }

    @Test
    public void test0739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0739");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation7.getAxis();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D11, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation24.applyTo(vector3D29);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D11, vector3D18, vector3D29);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation32.revert();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        double double38 = rotation36.getQ2();
        double double39 = rotation36.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation36.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation35.applyInverseTo(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation35.getAxis();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        double double51 = rotation49.getQ2();
        double double52 = rotation49.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation49.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation48.applyTo(vector3D53);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ3();
        double double57 = rotation55.getQ2();
        double double58 = rotation55.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation55.getAxis();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(vector3D59, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        double double64 = rotation62.getQ2();
        double double65 = rotation62.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation62.getAxis();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(vector3D66, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation();
        double double70 = rotation69.getQ3();
        double double71 = rotation69.getQ2();
        double double72 = rotation69.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation69.getAxis();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation();
        double double81 = rotation80.getQ3();
        double double82 = rotation80.getQ2();
        double double83 = rotation80.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation80.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation79.applyTo(vector3D84);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D59, vector3D66, vector3D73, vector3D84);
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(vector3D11, vector3D42, vector3D54, vector3D84);
        double double88 = rotation87.getAngle();
        org.apache.commons.math.geometry.Rotation rotation94 = new org.apache.commons.math.geometry.Rotation((double) (byte) -1, (double) (short) -1, (double) (-1.0f), (double) 1, true);
        double double95 = rotation94.getQ1();
        org.apache.commons.math.geometry.Rotation rotation96 = rotation87.applyTo(rotation94);
        double double97 = rotation94.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + (-0.5d) + "'", double95 == (-0.5d));
        org.junit.Assert.assertNotNull(rotation96);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + (-0.5d) + "'", double97 == (-0.5d));
    }

    @Test
    public void test0740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0740");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.5d, (double) 0L, (double) ' ', (double) (-1L), false);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) ' ', (double) (-1.0f), (double) 0L, 0.9142857142857143d, true);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        double double16 = rotation13.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(vector3D17, (double) 100.0f);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(vector3D17, (double) (-1.0f));
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation12.applyTo(vector3D17);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        double double25 = rotation23.getQ2();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation23.revert();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ2();
        double double29 = rotation27.getQ0();
        double[][] doubleArray30 = rotation27.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation27.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation26.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ3();
        double double37 = rotation35.getQ2();
        double double38 = rotation35.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation35.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation27.applyTo(vector3D39);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        double double43 = rotation41.getQ2();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation41.revert();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ3();
        double double47 = rotation45.getQ2();
        double double48 = rotation45.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation45.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation44.applyInverseTo(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D39, vector3D49);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(vector3D22, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation6.applyTo(vector3D39);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D53);
    }

    @Test
    public void test0741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0741");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) -1, (double) 10, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0742");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation7.getAxis();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D11, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation24.applyTo(vector3D29);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D11, vector3D18, vector3D29);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(vector3D29, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(vector3D29, 1.0d);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation((-1.0d), (double) 0, (double) (byte) 100, (double) (-1.0f), true);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ2();
        double double44 = rotation42.getQ0();
        double[][] doubleArray45 = rotation42.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation42.applyInverseTo(rotation46);
        double double49 = rotation46.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation46.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation41.applyTo(vector3D50);
        double[][] doubleArray52 = rotation41.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ2();
        double double55 = rotation53.getQ0();
        double[][] doubleArray56 = rotation53.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation53.applyInverseTo(rotation57);
        double double60 = rotation57.getQ2();
        double double61 = rotation57.getQ3();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ2();
        double double64 = rotation62.getQ0();
        double[][] doubleArray65 = rotation62.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation66 = rotation57.applyTo(rotation62);
        org.apache.commons.math.geometry.Rotation rotation67 = rotation41.applyInverseTo(rotation66);
        org.apache.commons.math.geometry.Rotation rotation68 = rotation35.applyTo(rotation41);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation();
        double double70 = rotation69.getQ3();
        double double71 = rotation69.getQ2();
        org.apache.commons.math.geometry.Rotation rotation72 = rotation69.revert();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation();
        double double74 = rotation73.getQ3();
        double double75 = rotation73.getQ2();
        double double76 = rotation73.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation73.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation72.applyInverseTo(vector3D77);
        double double79 = rotation72.getQ3();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation();
        double double81 = rotation80.getQ3();
        org.apache.commons.math.geometry.Rotation rotation82 = rotation72.applyTo(rotation80);
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation();
        double double84 = rotation83.getQ2();
        double double85 = rotation83.getQ0();
        double double86 = rotation83.getQ3();
        org.apache.commons.math.geometry.Rotation rotation87 = rotation83.revert();
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotation87.getAxis();
        org.apache.commons.math.geometry.Rotation rotation94 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D95 = rotation94.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D96 = rotation87.applyInverseTo(vector3D95);
        org.apache.commons.math.geometry.Vector3D vector3D97 = rotation72.applyTo(vector3D95);
        org.apache.commons.math.geometry.Vector3D vector3D98 = rotation41.applyInverseTo(vector3D95);
        org.apache.commons.math.geometry.Vector3D vector3D99 = rotation41.getAxis();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(rotation82);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.0d + "'", double85 == 1.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertNotNull(vector3D96);
        org.junit.Assert.assertNotNull(vector3D97);
        org.junit.Assert.assertNotNull(vector3D98);
        org.junit.Assert.assertNotNull(vector3D99);
    }

    @Test
    public void test0743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0743");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        double double10 = rotation3.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation3.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation19.getAxis();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation11.applyTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation22 = rotation11.revert();
        double double23 = rotation22.getQ0();
        java.lang.Class<?> wildcardClass24 = rotation22.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1.0d) + "'", double23 == (-1.0d));
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0744");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ1();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) (short) 0, (double) 0.0f, (double) (byte) 1, true);
        org.apache.commons.math.geometry.Rotation rotation8 = rotation0.applyInverseTo(rotation7);
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation8.getAxis();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation8.revert();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertNotNull(rotation8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotation10);
    }

    @Test
    public void test0745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0745");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        double double12 = rotation3.getAngle();
        double double13 = rotation3.getQ1();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation3.revert();
        double double15 = rotation3.getQ2();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    }

    @Test
    public void test0746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0746");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10L, (double) ' ', (double) 10, (double) (-1L), true);
        double double6 = rotation5.getQ1();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ2();
        double double9 = rotation7.getQ0();
        double[][] doubleArray10 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation7.applyInverseTo(rotation11);
        double double14 = rotation11.getQ2();
        double double15 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation11.applyTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = null;
        double[] doubleArray23 = rotation5.getAngles(rotationOrder22);
        double double24 = rotation5.getQ3();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.9142857142857143d + "'", double6 == 0.9142857142857143d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.97334984766103, 2.5591145826350643, -1.7740125426787061]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-0.02857142857142857d) + "'", double24 == (-0.02857142857142857d));
    }

    @Test
    public void test0747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0747");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation3.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation13.revert();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ2();
        double double19 = rotation17.getQ0();
        double[][] doubleArray20 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation17.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation24 = rotation16.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation17.applyTo(vector3D29);
        double double31 = rotation17.getQ1();
        double double32 = rotation17.getQ2();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation12.applyTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation((double) 100L, 10.0d, (double) (byte) 0, 100.0d, true);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ2();
        double double42 = rotation40.getQ0();
        double[][] doubleArray43 = rotation40.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation();
        double double45 = rotation44.getQ3();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation40.applyInverseTo(rotation44);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ3();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation40.applyInverseTo(rotation47);
        double double50 = rotation47.getQ3();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation();
        double double52 = rotation51.getQ2();
        double double53 = rotation51.getQ0();
        double[][] doubleArray54 = rotation51.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ3();
        org.apache.commons.math.geometry.Rotation rotation57 = rotation51.applyInverseTo(rotation55);
        double double58 = rotation57.getQ0();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation47.applyInverseTo(rotation57);
        double[][] doubleArray60 = rotation47.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation();
        double double62 = rotation61.getQ3();
        double double63 = rotation61.getQ2();
        double double64 = rotation61.getAngle();
        double[][] doubleArray65 = rotation61.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(doubleArray65, (double) 1L);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(doubleArray65, (double) 100);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(doubleArray65, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation72 = rotation47.applyInverseTo(rotation71);
        org.apache.commons.math.geometry.Rotation rotation73 = rotation39.applyTo(rotation71);
        org.apache.commons.math.geometry.Rotation rotation74 = rotation12.applyTo(rotation39);
        java.lang.Class<?> wildcardClass75 = rotation74.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-1.0d) + "'", double58 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0748");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.5644693731595816d, (double) (short) 100, 0.9949879346007123d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0749");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation4.applyInverseTo(vector3D9);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(vector3D9, (double) (byte) 100);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(vector3D9, Double.NaN);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(vector3D9, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ2();
        double double21 = rotation19.getQ0();
        double[][] doubleArray22 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation19.applyInverseTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation19.applyInverseTo(rotation26);
        double double29 = rotation26.getQ1();
        double[][] doubleArray30 = rotation26.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(doubleArray30, 0.019227214231343204d);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation32.revert();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0, 0.7071067811865475d, (-1.0d), true);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ2();
        double double42 = rotation40.getQ0();
        double[][] doubleArray43 = rotation40.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation();
        double double45 = rotation44.getQ3();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation40.applyInverseTo(rotation44);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ3();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation40.applyInverseTo(rotation47);
        double double50 = rotation47.getQ3();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation();
        double double52 = rotation51.getQ2();
        double double53 = rotation51.getQ0();
        double[][] doubleArray54 = rotation51.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ3();
        org.apache.commons.math.geometry.Rotation rotation57 = rotation51.applyInverseTo(rotation55);
        double double58 = rotation55.getQ2();
        double double59 = rotation55.getQ3();
        org.apache.commons.math.geometry.Rotation rotation60 = rotation47.applyTo(rotation55);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation();
        double double62 = rotation61.getQ2();
        double double63 = rotation61.getQ0();
        double[][] doubleArray64 = rotation61.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation();
        double double66 = rotation65.getQ3();
        org.apache.commons.math.geometry.Rotation rotation67 = rotation61.applyInverseTo(rotation65);
        double double68 = rotation65.getQ2();
        double double69 = rotation65.getQ3();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation();
        double double71 = rotation70.getQ2();
        double double72 = rotation70.getQ0();
        double[][] doubleArray73 = rotation70.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation74 = rotation65.applyTo(rotation70);
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation70.getAxis();
        org.apache.commons.math.geometry.Rotation rotation76 = rotation60.applyTo(rotation70);
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation60.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation39.applyInverseTo(vector3D77);
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation();
        double double80 = rotation79.getQ3();
        double double81 = rotation79.getQ2();
        double double82 = rotation79.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotation79.getAxis();
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation(vector3D83, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation();
        double double87 = rotation86.getQ3();
        double double88 = rotation86.getQ2();
        double double89 = rotation86.getAngle();
        org.apache.commons.math.geometry.Rotation rotation90 = rotation85.applyTo(rotation86);
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotation86.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotation86.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D93 = rotation39.applyTo(vector3D92);
        org.apache.commons.math.geometry.Vector3D vector3D94 = rotation33.applyTo(vector3D92);
        org.apache.commons.math.geometry.Vector3D vector3D95 = rotation18.applyTo(vector3D92);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertNotNull(rotation90);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(vector3D95);
    }

    @Test
    public void test0750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0750");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D10);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation12.revert();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation15.applyInverseTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation24.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation16.applyTo(vector3D28);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D29);
        double[][] doubleArray31 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ2();
        double double34 = rotation32.getQ0();
        double[][] doubleArray35 = rotation32.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation32.applyInverseTo(rotation36);
        double double39 = rotation38.getQ0();
        double double40 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation30.applyTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        double double44 = rotation42.getQ2();
        double double45 = rotation42.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation42.getAxis();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(vector3D46, (double) 100.0f);
        double double49 = rotation48.getQ3();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        double double57 = rotation56.getQ3();
        double double58 = rotation56.getQ2();
        double double59 = rotation56.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation56.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation55.applyTo(vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation55.getAxis();
        org.apache.commons.math.geometry.Rotation rotation63 = rotation48.applyInverseTo(rotation55);
        org.apache.commons.math.geometry.Rotation rotation64 = rotation30.applyInverseTo(rotation48);
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = null;
        double[] doubleArray66 = rotation48.getAngles(rotationOrder65);
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation48.getAxis();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(vector3D67, (-0.0703597544730292d));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-1.0d) + "'", double39 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.5707963267948966, 0.530964914873383, -1.5707963267948966]");
        org.junit.Assert.assertNotNull(vector3D67);
    }

    @Test
    public void test0751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0751");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ2();
        double double14 = rotation12.getQ1();
        double double15 = rotation12.getAngle();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation7.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        double double19 = rotation17.getQ2();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation17.revert();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ2();
        double double23 = rotation21.getQ0();
        double[][] doubleArray24 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation21.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation20.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ3();
        double double31 = rotation29.getQ2();
        double double32 = rotation29.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation29.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation21.applyTo(vector3D33);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ3();
        double double37 = rotation35.getQ2();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation35.revert();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        double double41 = rotation39.getQ2();
        double double42 = rotation39.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation39.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation38.applyInverseTo(vector3D43);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(vector3D33, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation16.applyInverseTo(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation6.applyTo(vector3D46);
        double double48 = rotation6.getQ3();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
    }

    @Test
    public void test0752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0752");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) (short) 1);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(doubleArray4, 0.9999250084364456d);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0, 0.7071067811865475d, (-1.0d), true);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ2();
        double double17 = rotation15.getQ0();
        double[][] doubleArray18 = rotation15.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ3();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation15.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        org.apache.commons.math.geometry.Rotation rotation24 = rotation15.applyInverseTo(rotation22);
        double double25 = rotation22.getQ3();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ2();
        double double28 = rotation26.getQ0();
        double[][] doubleArray29 = rotation26.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation26.applyInverseTo(rotation30);
        double double33 = rotation30.getQ2();
        double double34 = rotation30.getQ3();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation22.applyTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ2();
        double double38 = rotation36.getQ0();
        double[][] doubleArray39 = rotation36.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ3();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation36.applyInverseTo(rotation40);
        double double43 = rotation40.getQ2();
        double double44 = rotation40.getQ3();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ2();
        double double47 = rotation45.getQ0();
        double[][] doubleArray48 = rotation45.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation40.applyTo(rotation45);
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation45.getAxis();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation35.applyTo(rotation45);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation35.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation14.applyInverseTo(vector3D52);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ3();
        double double56 = rotation54.getQ2();
        org.apache.commons.math.geometry.Rotation rotation57 = rotation54.revert();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation();
        double double59 = rotation58.getQ2();
        double double60 = rotation58.getQ0();
        double[][] doubleArray61 = rotation58.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        org.apache.commons.math.geometry.Rotation rotation64 = rotation58.applyInverseTo(rotation62);
        org.apache.commons.math.geometry.Rotation rotation65 = rotation57.applyInverseTo(rotation58);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation();
        double double67 = rotation66.getQ3();
        double double68 = rotation66.getQ2();
        double double69 = rotation66.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation66.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation58.applyTo(vector3D70);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(vector3D70, 2.562089250717698d);
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(vector3D53, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation8.applyTo(vector3D53);
        double double76 = rotation8.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
    }

    @Test
    public void test0753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0753");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        double double15 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation4.applyTo(vector3D16);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        double double24 = rotation22.getQ2();
        double double25 = rotation22.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation22.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation21.applyInverseTo(vector3D26);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(vector3D16, vector3D26);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ3();
        double double31 = rotation29.getQ2();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation29.revert();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation32.getAxis();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        double double36 = rotation34.getQ2();
        double double37 = rotation34.getAngle();
        double[][] doubleArray38 = rotation34.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(doubleArray38, (double) (short) 1);
        double double41 = rotation40.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation40.getAxis();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(vector3D33, vector3D42);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(vector3D26, vector3D33);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D42);
    }

    @Test
    public void test0754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0754");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotation6.getAxis();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(vector3D7);
    }

    @Test
    public void test0755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0755");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation4.getQ2();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ2();
        double double10 = rotation8.getQ0();
        double[][] doubleArray11 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation8.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation8.applyInverseTo(rotation15);
        double double18 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ2();
        double double21 = rotation19.getQ0();
        double[][] doubleArray22 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation19.applyInverseTo(rotation23);
        double double26 = rotation25.getQ0();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation15.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation4.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation27.revert();
        double double30 = rotation27.getQ0();
        double double31 = rotation27.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1.0d) + "'", double26 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
    }

    @Test
    public void test0756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0756");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.0d, (double) (-1), (-0.009999000149975004d));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0757");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.009949879346007126d, (-0.5d), 0.7002759405293947d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0758");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.019227214231343204d);
        double[][] doubleArray14 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ2();
        double double17 = rotation15.getQ0();
        double[][] doubleArray18 = rotation15.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ3();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation15.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        org.apache.commons.math.geometry.Rotation rotation24 = rotation15.applyInverseTo(rotation22);
        double double25 = rotation22.getQ3();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ2();
        double double28 = rotation26.getQ0();
        double[][] doubleArray29 = rotation26.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation26.applyInverseTo(rotation30);
        double double33 = rotation30.getQ2();
        double double34 = rotation30.getQ3();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation22.applyTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ2();
        double double38 = rotation36.getQ0();
        double[][] doubleArray39 = rotation36.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ3();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation36.applyInverseTo(rotation40);
        double double43 = rotation40.getQ2();
        double double44 = rotation40.getQ3();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ2();
        double double47 = rotation45.getQ0();
        double[][] doubleArray48 = rotation45.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation40.applyTo(rotation45);
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation45.getAxis();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation35.applyTo(rotation45);
        double double52 = rotation51.getAngle();
        double double53 = rotation51.getQ1();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation13.applyTo(rotation51);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(rotation54);
    }

    @Test
    public void test0759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0759");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ3();
        double double18 = rotation16.getQ2();
        double double19 = rotation16.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation16.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation15.applyTo(vector3D20);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(vector3D8, vector3D21);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ2();
        double double25 = rotation23.getQ0();
        double[][] doubleArray26 = rotation23.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ3();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation23.applyInverseTo(rotation27);
        double double30 = rotation27.getQ2();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ2();
        double double33 = rotation31.getQ0();
        double[][] doubleArray34 = rotation31.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ3();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation31.applyInverseTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation31.applyInverseTo(rotation38);
        double double41 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ2();
        double double44 = rotation42.getQ0();
        double[][] doubleArray45 = rotation42.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation42.applyInverseTo(rotation46);
        double double49 = rotation48.getQ0();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation38.applyInverseTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation27.applyInverseTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation22.applyTo(rotation27);
        double double53 = rotation27.getQ3();
        double[][] doubleArray54 = rotation27.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation27.getAxis();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation((-1.0d), (double) 0, (double) (byte) 100, (double) (-1.0f), true);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ2();
        double double64 = rotation62.getQ0();
        double[][] doubleArray65 = rotation62.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation();
        double double67 = rotation66.getQ3();
        org.apache.commons.math.geometry.Rotation rotation68 = rotation62.applyInverseTo(rotation66);
        double double69 = rotation66.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation66.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation61.applyTo(vector3D70);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(vector3D55, vector3D70);
        double[][] doubleArray73 = rotation72.getMatrix();
        java.lang.Class<?> wildcardClass74 = doubleArray73.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-1.0d) + "'", double49 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0760");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D8, (double) (short) 100);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D8, (double) 1L);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
    }

    @Test
    public void test0761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0761");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        double double15 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.getAxis();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(vector3D16, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ3();
        double double21 = rotation19.getQ2();
        double double22 = rotation19.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation19.getAxis();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D23, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        double double28 = rotation26.getQ2();
        double double29 = rotation26.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation26.getAxis();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        double double39 = rotation37.getQ2();
        double double40 = rotation37.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation37.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation36.applyTo(vector3D41);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(vector3D16, vector3D23, vector3D30, vector3D41);
        double double44 = rotation43.getQ3();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ2();
        double double47 = rotation45.getQ1();
        double double48 = rotation45.getQ3();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation43.applyTo(rotation45);
        double double50 = rotation43.getQ0();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation11.applyTo(rotation43);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation((double) 10L, (double) ' ', (double) 10, (double) (-1L), true);
        double double58 = rotation57.getQ1();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation();
        double double60 = rotation59.getQ2();
        double double61 = rotation59.getQ0();
        double[][] doubleArray62 = rotation59.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation();
        double double64 = rotation63.getQ3();
        org.apache.commons.math.geometry.Rotation rotation65 = rotation59.applyInverseTo(rotation63);
        double double66 = rotation63.getQ2();
        double double67 = rotation63.getQ3();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation();
        double double69 = rotation68.getQ2();
        double double70 = rotation68.getQ0();
        double[][] doubleArray71 = rotation68.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation72 = rotation63.applyTo(rotation68);
        org.apache.commons.math.geometry.Rotation rotation73 = rotation57.applyTo(rotation63);
        org.apache.commons.math.geometry.RotationOrder rotationOrder74 = null;
        double[] doubleArray75 = rotation57.getAngles(rotationOrder74);
        double double76 = rotation57.getQ0();
        double double77 = rotation57.getAngle();
        org.apache.commons.math.geometry.Rotation rotation78 = rotation51.applyInverseTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation();
        double double80 = rotation79.getQ3();
        double double81 = rotation79.getQ2();
        double double82 = rotation79.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotation79.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation79.getAxis();
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D84, (-0.7625584504796028d));
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotation78.applyInverseTo(vector3D84);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.9142857142857143d + "'", double58 == 0.9142857142857143d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.97334984766103, 2.5591145826350643, -1.7740125426787061]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.2857142857142857d + "'", double76 == 0.2857142857142857d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2.562089250717698d + "'", double77 == 2.562089250717698d);
        org.junit.Assert.assertNotNull(rotation78);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D87);
    }

    @Test
    public void test0762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0762");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(doubleArray3, (double) 10);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(doubleArray3, 0.7064762846593019d);
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(doubleArray3, 0.9649660284921133d);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
    }

    @Test
    public void test0763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0763");
        org.apache.commons.math.geometry.Vector3D vector3D0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation2 = new org.apache.commons.math.geometry.Rotation(vector3D0, 0.0994987934600711d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0764");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        double double15 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation11.applyTo(vector3D16);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ2();
        double double20 = rotation18.getQ0();
        double[][] doubleArray21 = rotation18.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        org.apache.commons.math.geometry.Rotation rotation24 = rotation18.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation25.revert();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ2();
        double double31 = rotation29.getQ0();
        double[][] doubleArray32 = rotation29.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ3();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation29.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation28.applyInverseTo(rotation29);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        double double39 = rotation37.getQ2();
        double double40 = rotation37.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation37.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation29.applyTo(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation18.applyInverseTo(vector3D41);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(vector3D17, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation5.applyTo(vector3D41);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation((double) ' ', (double) (-1.0f), (double) 0L, 0.9142857142857143d, true);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation();
        double double53 = rotation52.getQ3();
        double double54 = rotation52.getQ2();
        double double55 = rotation52.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation52.getAxis();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(vector3D56, (double) 100.0f);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(vector3D56, (double) (-1.0f));
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation51.applyTo(vector3D56);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(vector3D45, vector3D61);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation();
        double double64 = rotation63.getQ2();
        double double65 = rotation63.getQ0();
        double[][] doubleArray66 = rotation63.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation();
        double double68 = rotation67.getQ3();
        org.apache.commons.math.geometry.Rotation rotation69 = rotation63.applyInverseTo(rotation67);
        double double70 = rotation67.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation67.getAxis();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(vector3D71, (double) '#');
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(vector3D61, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation74.getAxis();
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D75);
    }

    @Test
    public void test0765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0765");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.0d);
        double double14 = rotation13.getAngle();
        double double15 = rotation13.getAngle();
        double double16 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ2();
        double double19 = rotation17.getQ0();
        double[][] doubleArray20 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation17.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation17.applyInverseTo(rotation24);
        double double27 = rotation24.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ2();
        double double30 = rotation28.getQ0();
        double[][] doubleArray31 = rotation28.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation28.applyInverseTo(rotation32);
        double double35 = rotation32.getQ2();
        double double36 = rotation32.getQ3();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation24.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation13.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation38.getAxis();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(vector3D39);
    }

    @Test
    public void test0766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0766");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 100L, 10.0d, (double) (byte) 0, 100.0d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation6.applyInverseTo(rotation13);
        double double16 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ2();
        double double19 = rotation17.getQ0();
        double[][] doubleArray20 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation17.applyInverseTo(rotation21);
        double double24 = rotation23.getQ0();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation13.applyInverseTo(rotation23);
        double[][] doubleArray26 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ3();
        double double29 = rotation27.getQ2();
        double double30 = rotation27.getAngle();
        double[][] doubleArray31 = rotation27.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(doubleArray31, (double) 1L);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(doubleArray31, (double) 100);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(doubleArray31, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation13.applyInverseTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation5.applyTo(rotation37);
        double double40 = rotation39.getQ0();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.7053456158585982d + "'", double40 == 0.7053456158585982d);
    }

    @Test
    public void test0767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0767");
        org.apache.commons.math.geometry.Vector3D vector3D0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation2 = new org.apache.commons.math.geometry.Rotation(vector3D0, 0.9949879346007117d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0768");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.0d);
        double double14 = rotation13.getAngle();
        double double15 = rotation13.getAngle();
        double double16 = rotation13.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        double double18 = rotation13.getAngle();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation((-1.0d), (double) 0, (double) (byte) 100, (double) (-1.0f), true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ2();
        double double27 = rotation25.getQ0();
        double[][] doubleArray28 = rotation25.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ3();
        org.apache.commons.math.geometry.Rotation rotation31 = rotation25.applyInverseTo(rotation29);
        double double32 = rotation29.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation29.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation24.applyTo(vector3D33);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation40.getAxis();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(vector3D34, vector3D41);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(vector3D41, Double.NaN);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1.0f), (double) 0, (double) (short) 0, true);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation50.revert();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation51.revert();
        org.apache.commons.math.geometry.Rotation rotation53 = rotation52.revert();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ3();
        double double56 = rotation54.getQ2();
        double double57 = rotation54.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation54.getAxis();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(vector3D58, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation();
        double double62 = rotation61.getQ3();
        double double63 = rotation61.getQ2();
        double double64 = rotation61.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation61.getAxis();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(vector3D65, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation();
        double double69 = rotation68.getQ3();
        double double70 = rotation68.getQ2();
        double double71 = rotation68.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotation68.getAxis();
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation();
        double double80 = rotation79.getQ3();
        double double81 = rotation79.getQ2();
        double double82 = rotation79.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotation79.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation78.applyTo(vector3D83);
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation(vector3D58, vector3D65, vector3D72, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation53.applyTo(vector3D65);
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(vector3D41, vector3D65);
        org.apache.commons.math.geometry.Rotation rotation88 = rotation13.applyInverseTo(rotation87);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(rotation88);
    }

    @Test
    public void test0769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0769");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.7208382876544367d, 0.0994987934600711d, (double) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0770");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) (short) 100, (double) 10.0f, (double) 1.0f, true);
        double double6 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation7.getAxis();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D11, (double) 100.0f);
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        double double23 = rotation21.getQ2();
        double double24 = rotation21.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation21.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation20.applyTo(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation20.getAxis();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation13.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ2();
        double double31 = rotation29.getQ0();
        double[][] doubleArray32 = rotation29.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ3();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation29.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ3();
        double double50 = rotation48.getQ2();
        double double51 = rotation48.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation48.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation47.applyTo(vector3D52);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ2();
        double double56 = rotation54.getQ0();
        double[][] doubleArray57 = rotation54.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation();
        double double59 = rotation58.getQ3();
        org.apache.commons.math.geometry.Rotation rotation60 = rotation54.applyInverseTo(rotation58);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation();
        double double62 = rotation61.getQ3();
        double double63 = rotation61.getQ2();
        org.apache.commons.math.geometry.Rotation rotation64 = rotation61.revert();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation();
        double double66 = rotation65.getQ2();
        double double67 = rotation65.getQ0();
        double[][] doubleArray68 = rotation65.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation();
        double double70 = rotation69.getQ3();
        org.apache.commons.math.geometry.Rotation rotation71 = rotation65.applyInverseTo(rotation69);
        org.apache.commons.math.geometry.Rotation rotation72 = rotation64.applyInverseTo(rotation65);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation();
        double double74 = rotation73.getQ3();
        double double75 = rotation73.getQ2();
        double double76 = rotation73.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation73.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation65.applyTo(vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotation54.applyInverseTo(vector3D77);
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(vector3D53, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotation41.applyTo(vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation29.applyTo(vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotation28.applyInverseTo(vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation28.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation5.applyTo(vector3D84);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 2.943247885977952d + "'", double6 == 2.943247885977952d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
    }

    @Test
    public void test0771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0771");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.7064762846593019d, (-0.031222023722052576d), 0.26237485370392877d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0772");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation7.getAxis();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D11, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation24.applyTo(vector3D29);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D11, vector3D18, vector3D29);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ2();
        double double34 = rotation32.getQ0();
        double[][] doubleArray35 = rotation32.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation32.applyInverseTo(rotation36);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation32.applyInverseTo(rotation39);
        double double42 = rotation39.getQ1();
        double[][] doubleArray43 = rotation39.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(doubleArray43, 0.0d);
        double double46 = rotation45.getAngle();
        double double47 = rotation45.getAngle();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation45.revert();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        double double51 = rotation49.getQ2();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation49.revert();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ2();
        double double55 = rotation53.getQ0();
        double[][] doubleArray56 = rotation53.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation53.applyInverseTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation60 = rotation52.applyInverseTo(rotation53);
        double double61 = rotation52.getAngle();
        org.apache.commons.math.geometry.Rotation rotation62 = rotation48.applyInverseTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation();
        double double64 = rotation63.getQ2();
        double double65 = rotation63.getQ0();
        double[][] doubleArray66 = rotation63.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation();
        double double68 = rotation67.getQ3();
        org.apache.commons.math.geometry.Rotation rotation69 = rotation63.applyInverseTo(rotation67);
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation();
        double double71 = rotation70.getQ3();
        org.apache.commons.math.geometry.Rotation rotation72 = rotation63.applyInverseTo(rotation70);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation63.getAxis();
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation();
        double double75 = rotation74.getQ3();
        double double76 = rotation74.getQ2();
        double double77 = rotation74.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation74.getAxis();
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double85 = rotation84.getQ2();
        double double86 = rotation84.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotation84.getAxis();
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(vector3D78, vector3D87);
        org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation(vector3D73, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotation48.applyInverseTo(vector3D73);
        org.apache.commons.math.geometry.Rotation rotation91 = new org.apache.commons.math.geometry.Rotation(vector3D18, vector3D90);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.995037190209989d + "'", double85 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D90);
    }

    @Test
    public void test0773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0773");
        org.apache.commons.math.geometry.Vector3D vector3D0 = null;
        org.apache.commons.math.geometry.Rotation rotation1 = new org.apache.commons.math.geometry.Rotation();
        double double2 = rotation1.getQ3();
        double double3 = rotation1.getQ2();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation1.revert();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ0();
        double[][] doubleArray8 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = rotation5.applyInverseTo(rotation9);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation4.applyInverseTo(rotation5);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1.0f), (double) 0, (double) (short) 0, true);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation4.applyInverseTo(rotation18);
        double double20 = rotation19.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation19.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        double double24 = rotation22.getQ2();
        double double25 = rotation22.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation22.getAxis();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(vector3D26, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation21.applyTo(vector3D26);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D0, vector3D29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D29);
    }

    @Test
    public void test0774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0774");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.28882826147499224d, (-0.031222023722052576d), (-0.5d));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0775");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10L, (double) ' ', (double) 10, (double) (-1L), true);
        double double6 = rotation5.getQ1();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation7.revert();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        double double13 = rotation11.getQ2();
        double double14 = rotation11.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation11.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation10.applyInverseTo(vector3D15);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        double double19 = rotation17.getQ2();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation17.revert();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        double double23 = rotation21.getQ2();
        double double24 = rotation21.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation21.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation20.applyInverseTo(vector3D25);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ3();
        double double35 = rotation33.getQ2();
        double double36 = rotation33.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation33.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation32.applyTo(vector3D37);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(vector3D25, vector3D38);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ3();
        double double42 = rotation40.getQ2();
        double double43 = rotation40.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation40.getAxis();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(vector3D44, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ3();
        double double49 = rotation47.getQ2();
        double double50 = rotation47.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation47.getAxis();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(vector3D51, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ3();
        double double56 = rotation54.getQ2();
        double double57 = rotation54.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation54.getAxis();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation();
        double double66 = rotation65.getQ3();
        double double67 = rotation65.getQ2();
        double double68 = rotation65.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotation65.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation64.applyTo(vector3D69);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(vector3D44, vector3D51, vector3D58, vector3D69);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation();
        double double73 = rotation72.getQ3();
        double double74 = rotation72.getQ2();
        org.apache.commons.math.geometry.Rotation rotation75 = rotation72.revert();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation();
        double double77 = rotation76.getQ3();
        double double78 = rotation76.getQ2();
        double double79 = rotation76.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotation76.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotation75.applyInverseTo(vector3D80);
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(vector3D16, vector3D38, vector3D58, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotation5.applyTo(vector3D16);
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation(vector3D83, 1.7345175425633084d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.9142857142857143d + "'", double6 == 0.9142857142857143d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D83);
    }

    @Test
    public void test0776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0776");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ1();
        double double3 = rotation0.getQ3();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation4.revert();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        double double10 = rotation8.getQ2();
        double double11 = rotation8.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation8.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation7.applyInverseTo(vector3D12);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        double double23 = rotation20.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation20.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation19.applyTo(vector3D24);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(vector3D12, vector3D25);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ2();
        double double29 = rotation27.getQ0();
        double[][] doubleArray30 = rotation27.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation27.applyInverseTo(rotation31);
        double double34 = rotation31.getQ2();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ2();
        double double37 = rotation35.getQ0();
        double[][] doubleArray38 = rotation35.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation35.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation35.applyInverseTo(rotation42);
        double double45 = rotation42.getQ3();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ2();
        double double48 = rotation46.getQ0();
        double[][] doubleArray49 = rotation46.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation();
        double double51 = rotation50.getQ3();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation46.applyInverseTo(rotation50);
        double double53 = rotation52.getQ0();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation42.applyInverseTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation31.applyInverseTo(rotation54);
        org.apache.commons.math.geometry.Rotation rotation56 = rotation26.applyTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation57 = rotation0.applyInverseTo(rotation26);
        double double58 = rotation0.getQ1();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-1.0d) + "'", double53 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
    }

    @Test
    public void test0777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0777");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.7064762846593019d, 2.9422652488599566d, 3.141592653589793d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0778");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        double double15 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation4.applyTo(vector3D16);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        double double24 = rotation22.getQ2();
        double double25 = rotation22.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation22.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation21.applyInverseTo(vector3D26);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(vector3D16, vector3D26);
        double double29 = rotation28.getQ3();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        double double38 = rotation36.getQ2();
        double double39 = rotation36.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation36.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation35.applyTo(vector3D40);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        double double44 = rotation42.getQ2();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation42.revert();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ2();
        double double48 = rotation46.getQ0();
        double[][] doubleArray49 = rotation46.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation();
        double double51 = rotation50.getQ3();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation46.applyInverseTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation45.applyInverseTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ3();
        double double56 = rotation54.getQ2();
        double double57 = rotation54.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation54.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation46.applyTo(vector3D58);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(vector3D40, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation28.applyTo(vector3D59);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        double double64 = rotation62.getQ2();
        double double65 = rotation62.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation62.getAxis();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(vector3D66, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation();
        double double70 = rotation69.getQ3();
        double double71 = rotation69.getQ2();
        double double72 = rotation69.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation69.getAxis();
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(vector3D73, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation();
        double double77 = rotation76.getQ3();
        double double78 = rotation76.getQ2();
        double double79 = rotation76.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotation76.getAxis();
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation();
        double double88 = rotation87.getQ3();
        double double89 = rotation87.getQ2();
        double double90 = rotation87.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotation87.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotation86.applyTo(vector3D91);
        org.apache.commons.math.geometry.Rotation rotation93 = new org.apache.commons.math.geometry.Rotation(vector3D66, vector3D73, vector3D80, vector3D91);
        org.apache.commons.math.geometry.Rotation rotation95 = new org.apache.commons.math.geometry.Rotation(vector3D91, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation97 = new org.apache.commons.math.geometry.Rotation(vector3D91, 1.0d);
        org.apache.commons.math.geometry.Rotation rotation98 = rotation97.revert();
        org.apache.commons.math.geometry.Rotation rotation99 = rotation28.applyTo(rotation97);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(rotation98);
        org.junit.Assert.assertNotNull(rotation99);
    }

    @Test
    public void test0779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0779");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.019227214231343204d, (double) (short) 10, 1.7345175425633084d, (double) (byte) -1, true);
        double double6 = rotation5.getQ0();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0018853026163470825d + "'", double6 == 0.0018853026163470825d);
    }

    @Test
    public void test0780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0780");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation4.applyInverseTo(vector3D9);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ2();
        double double15 = rotation13.getQ0();
        double[][] doubleArray16 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation13.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation20.revert();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ2();
        double double26 = rotation24.getQ0();
        double[][] doubleArray27 = rotation24.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation24.applyInverseTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation23.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        double double35 = rotation32.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation32.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation24.applyTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation13.applyInverseTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation4.applyInverseTo(vector3D38);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        double double46 = rotation45.getQ3();
        org.apache.commons.math.geometry.Rotation rotation47 = rotation4.applyTo(rotation45);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ3();
        double double50 = rotation48.getQ2();
        double double51 = rotation48.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation48.getAxis();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(vector3D52, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ3();
        double double57 = rotation55.getQ2();
        double double58 = rotation55.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation55.getAxis();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(vector3D59, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        double double64 = rotation62.getQ2();
        double double65 = rotation62.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation62.getAxis();
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation();
        double double74 = rotation73.getQ3();
        double double75 = rotation73.getQ2();
        double double76 = rotation73.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation73.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation72.applyTo(vector3D77);
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(vector3D52, vector3D59, vector3D66, vector3D77);
        double double80 = rotation79.getQ3();
        org.apache.commons.math.geometry.Rotation rotation81 = rotation47.applyInverseTo(rotation79);
        java.lang.Class<?> wildcardClass82 = rotation47.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0781");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation3.getAxis();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, (double) 100.0f);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D9, (double) (-1.0f));
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Rotation rotation18 = rotation14.revert();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ3();
        double double21 = rotation19.getQ2();
        double double22 = rotation19.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation19.getAxis();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D23, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation18.applyInverseTo(vector3D23);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ2();
        double double29 = rotation27.getQ0();
        double[][] doubleArray30 = rotation27.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation27.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        double double36 = rotation34.getQ2();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation34.revert();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ2();
        double double40 = rotation38.getQ0();
        double[][] doubleArray41 = rotation38.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyInverseTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation45 = rotation37.applyInverseTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        double double48 = rotation46.getQ2();
        double double49 = rotation46.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation46.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation38.applyTo(vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation27.applyInverseTo(vector3D50);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(vector3D52, (double) '4');
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ3();
        double double57 = rotation55.getQ2();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation55.revert();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation();
        double double60 = rotation59.getQ2();
        double double61 = rotation59.getQ0();
        double[][] doubleArray62 = rotation59.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation();
        double double64 = rotation63.getQ3();
        org.apache.commons.math.geometry.Rotation rotation65 = rotation59.applyInverseTo(rotation63);
        org.apache.commons.math.geometry.Rotation rotation66 = rotation58.applyInverseTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation();
        double double68 = rotation67.getQ3();
        double double69 = rotation67.getQ2();
        double double70 = rotation67.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation67.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotation59.applyTo(vector3D71);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation();
        double double74 = rotation73.getQ3();
        double double75 = rotation73.getQ2();
        org.apache.commons.math.geometry.Rotation rotation76 = rotation73.revert();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation();
        double double78 = rotation77.getQ3();
        double double79 = rotation77.getQ2();
        double double80 = rotation77.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotation77.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation76.applyInverseTo(vector3D81);
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(vector3D71, vector3D81);
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(vector3D9, vector3D26, vector3D52, vector3D71);
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D26);
        java.lang.Class<?> wildcardClass86 = vector3D4.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0782");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation6.getQ0();
        double double8 = rotation6.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        double double12 = rotation9.getAngle();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(vector3D18, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation13.applyInverseTo(vector3D18);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(vector3D18, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation6.applyInverseTo(vector3D18);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation25.revert();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation30.getAxis();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(vector3D34, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation29.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation6.applyInverseTo(rotation29);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation29.getAxis();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-1.0d) + "'", double7 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(vector3D39);
    }

    @Test
    public void test0783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0783");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, (double) 100.0f);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D4, (double) (-1.0f));
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        double double12 = rotation9.getAngle();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        double double23 = rotation20.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation20.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation19.applyTo(vector3D24);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        double double28 = rotation26.getQ2();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation26.revert();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ2();
        double double32 = rotation30.getQ0();
        double[][] doubleArray33 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation30.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation29.applyInverseTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        double double40 = rotation38.getQ2();
        double double41 = rotation38.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation38.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation30.applyTo(vector3D42);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(vector3D24, vector3D43);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation();
        double double52 = rotation51.getQ3();
        double double53 = rotation51.getQ2();
        double double54 = rotation51.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation51.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation50.applyTo(vector3D55);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        double double59 = rotation57.getQ2();
        org.apache.commons.math.geometry.Rotation rotation60 = rotation57.revert();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation();
        double double62 = rotation61.getQ3();
        double double63 = rotation61.getQ2();
        double double64 = rotation61.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation61.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation60.applyInverseTo(vector3D65);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation();
        double double68 = rotation67.getQ2();
        double double69 = rotation67.getQ0();
        double[][] doubleArray70 = rotation67.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation();
        double double72 = rotation71.getQ3();
        org.apache.commons.math.geometry.Rotation rotation73 = rotation67.applyInverseTo(rotation71);
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation();
        double double75 = rotation74.getQ3();
        org.apache.commons.math.geometry.Rotation rotation76 = rotation67.applyInverseTo(rotation74);
        double double77 = rotation74.getQ3();
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation();
        double double79 = rotation78.getQ2();
        double double80 = rotation78.getQ0();
        double[][] doubleArray81 = rotation78.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation();
        double double83 = rotation82.getQ3();
        org.apache.commons.math.geometry.Rotation rotation84 = rotation78.applyInverseTo(rotation82);
        double double85 = rotation84.getQ0();
        org.apache.commons.math.geometry.Rotation rotation86 = rotation74.applyInverseTo(rotation84);
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotation74.getAxis();
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(vector3D43, vector3D55, vector3D65, vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation9.applyTo(vector3D55);
        org.apache.commons.math.geometry.Rotation rotation90 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotation90.getAxis();
        org.apache.commons.math.geometry.Rotation rotation93 = new org.apache.commons.math.geometry.Rotation(vector3D91, 0.7002759405293947d);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0d + "'", double80 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(rotation84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + (-1.0d) + "'", double85 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D91);
    }

    @Test
    public void test0784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0784");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double6 = rotation5.getAngle();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 3.141592653589793d + "'", double6 == 3.141592653589793d);
    }

    @Test
    public void test0785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0785");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ3();
        double double18 = rotation16.getQ2();
        double double19 = rotation16.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation16.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation15.applyTo(vector3D20);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(vector3D8, vector3D21);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ2();
        double double25 = rotation23.getQ0();
        double[][] doubleArray26 = rotation23.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ3();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation23.applyInverseTo(rotation27);
        double double30 = rotation27.getQ2();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ2();
        double double33 = rotation31.getQ0();
        double[][] doubleArray34 = rotation31.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ3();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation31.applyInverseTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation31.applyInverseTo(rotation38);
        double double41 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ2();
        double double44 = rotation42.getQ0();
        double[][] doubleArray45 = rotation42.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation42.applyInverseTo(rotation46);
        double double49 = rotation48.getQ0();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation38.applyInverseTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation27.applyInverseTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation22.applyTo(rotation27);
        double double53 = rotation27.getQ3();
        double[][] doubleArray54 = rotation27.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation27.getAxis();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation((-1.0d), (double) 0, (double) (byte) 100, (double) (-1.0f), true);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ2();
        double double64 = rotation62.getQ0();
        double[][] doubleArray65 = rotation62.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation();
        double double67 = rotation66.getQ3();
        org.apache.commons.math.geometry.Rotation rotation68 = rotation62.applyInverseTo(rotation66);
        double double69 = rotation66.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation66.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation61.applyTo(vector3D70);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(vector3D55, vector3D70);
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(vector3D55, 0.9949879346007117d);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-1.0d) + "'", double49 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
    }

    @Test
    public void test0786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0786");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0018853026163470825d, 0.0d, 0.981108438603097d, 0.6667006794044591d, true);
    }

    @Test
    public void test0787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0787");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ1();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation5);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        double double12 = rotation10.getQ2();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation10.revert();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation13.applyInverseTo(vector3D18);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        double double28 = rotation26.getQ2();
        double double29 = rotation26.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation26.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation25.applyTo(vector3D30);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(vector3D18, vector3D31);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ2();
        double double35 = rotation33.getQ0();
        double[][] doubleArray36 = rotation33.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation33.applyInverseTo(rotation37);
        double double40 = rotation37.getQ2();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ2();
        double double43 = rotation41.getQ0();
        double[][] doubleArray44 = rotation41.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ3();
        org.apache.commons.math.geometry.Rotation rotation47 = rotation41.applyInverseTo(rotation45);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ3();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation41.applyInverseTo(rotation48);
        double double51 = rotation48.getQ3();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation();
        double double53 = rotation52.getQ2();
        double double54 = rotation52.getQ0();
        double[][] doubleArray55 = rotation52.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        double double57 = rotation56.getQ3();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation52.applyInverseTo(rotation56);
        double double59 = rotation58.getQ0();
        org.apache.commons.math.geometry.Rotation rotation60 = rotation48.applyInverseTo(rotation58);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation37.applyInverseTo(rotation60);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation32.applyTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation5.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation();
        double double65 = rotation64.getQ3();
        double double66 = rotation64.getQ2();
        double double67 = rotation64.getAngle();
        double[][] doubleArray68 = rotation64.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(doubleArray68, (double) (short) 1);
        double double71 = rotation70.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotation70.getAxis();
        org.apache.commons.math.geometry.Rotation rotation73 = rotation5.applyTo(rotation70);
        org.apache.commons.math.geometry.Rotation rotation74 = rotation5.revert();
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation74.getAxis();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-1.0d) + "'", double59 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertNotNull(vector3D75);
    }

    @Test
    public void test0788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0788");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.009949879346007126d, 1.625426981395601d, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0789");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        double double24 = rotation22.getQ0();
        double[][] doubleArray25 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation21.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation30.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation22.applyTo(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation11.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation7.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation37.getAxis();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        double double41 = rotation39.getQ2();
        double double42 = rotation39.getAngle();
        double[][] doubleArray43 = rotation39.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(doubleArray43, (double) 1L);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(doubleArray43, (double) 100);
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation47.getAxis();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ2();
        double double51 = rotation49.getQ0();
        double[][] doubleArray52 = rotation49.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ3();
        org.apache.commons.math.geometry.Rotation rotation55 = rotation49.applyInverseTo(rotation53);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        double double57 = rotation56.getQ3();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation49.applyInverseTo(rotation56);
        double double59 = rotation56.getQ3();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation();
        double double61 = rotation60.getQ2();
        double double62 = rotation60.getQ0();
        double[][] doubleArray63 = rotation60.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation();
        double double65 = rotation64.getQ3();
        org.apache.commons.math.geometry.Rotation rotation66 = rotation60.applyInverseTo(rotation64);
        double double67 = rotation64.getQ2();
        double double68 = rotation64.getQ3();
        org.apache.commons.math.geometry.Rotation rotation69 = rotation56.applyTo(rotation64);
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation();
        double double71 = rotation70.getQ3();
        double double72 = rotation70.getQ2();
        double double73 = rotation70.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation70.getAxis();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(vector3D74, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation();
        double double78 = rotation77.getQ3();
        double double79 = rotation77.getQ2();
        double double80 = rotation77.getAngle();
        org.apache.commons.math.geometry.Rotation rotation81 = rotation76.applyTo(rotation77);
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation77.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotation56.applyTo(vector3D82);
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation();
        double double85 = rotation84.getQ3();
        double double86 = rotation84.getQ2();
        org.apache.commons.math.geometry.Rotation rotation87 = rotation84.revert();
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation();
        double double89 = rotation88.getQ3();
        double double90 = rotation88.getQ2();
        double double91 = rotation88.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotation88.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D93 = rotation87.applyInverseTo(vector3D92);
        org.apache.commons.math.geometry.Vector3D vector3D94 = rotation87.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D95 = rotation87.getAxis();
        org.apache.commons.math.geometry.Rotation rotation96 = new org.apache.commons.math.geometry.Rotation(vector3D38, vector3D48, vector3D82, vector3D95);
        org.apache.commons.math.geometry.Rotation rotation98 = new org.apache.commons.math.geometry.Rotation(vector3D82, 3.106437939950305d);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(vector3D95);
    }

    @Test
    public void test0790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0790");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.7053441835437086d, (double) 100L, 0.7138722624641411d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0791");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ1();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        double double5 = rotation0.getQ2();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    }

    @Test
    public void test0792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0792");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) 1L);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) 100);
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation8.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, 0.7053456158585982d);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(vector3D9);
    }

    @Test
    public void test0793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0793");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation4.applyInverseTo(vector3D9);
        double double13 = rotation4.getQ2();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test0794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0794");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        double double15 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation11.applyTo(vector3D16);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ2();
        double double20 = rotation18.getQ0();
        double[][] doubleArray21 = rotation18.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        org.apache.commons.math.geometry.Rotation rotation24 = rotation18.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation25.revert();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ2();
        double double31 = rotation29.getQ0();
        double[][] doubleArray32 = rotation29.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ3();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation29.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation28.applyInverseTo(rotation29);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        double double39 = rotation37.getQ2();
        double double40 = rotation37.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation37.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation29.applyTo(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation18.applyInverseTo(vector3D41);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(vector3D17, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation5.applyTo(vector3D41);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation((double) ' ', (double) (-1.0f), (double) 0L, 0.9142857142857143d, true);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation();
        double double53 = rotation52.getQ3();
        double double54 = rotation52.getQ2();
        double double55 = rotation52.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation52.getAxis();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(vector3D56, (double) 100.0f);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(vector3D56, (double) (-1.0f));
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation51.applyTo(vector3D56);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(vector3D45, vector3D61);
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(vector3D45, 0.5309649148733836d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D61);
    }

    @Test
    public void test0795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0795");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation3.getAxis();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        double double19 = rotation17.getQ2();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation17.revert();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ2();
        double double23 = rotation21.getQ0();
        double[][] doubleArray24 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation21.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation20.applyInverseTo(rotation21);
        double double29 = rotation20.getAngle();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        double[][] doubleArray34 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(doubleArray34, (double) (short) 1);
        double double37 = rotation36.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation36.getAxis();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        double double41 = rotation39.getQ2();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation39.revert();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation();
        double double44 = rotation43.getQ3();
        double double45 = rotation43.getQ2();
        double double46 = rotation43.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation43.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation42.applyInverseTo(vector3D47);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(vector3D47, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation36.applyInverseTo(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation20.applyTo(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation16.applyInverseTo(vector3D52);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D52);
        double[][] doubleArray55 = rotation54.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(doubleArray55, 0.019227214231343204d);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(doubleArray55);
    }

    @Test
    public void test0796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0796");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        double double10 = rotation3.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation3.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation19.getAxis();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation11.applyTo(rotation19);
        double double22 = rotation11.getQ2();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
    }

    @Test
    public void test0797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0797");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(doubleArray11, (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(doubleArray11, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.0d);
        double double20 = rotation19.getQ0();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        double double23 = rotation21.getQ2();
        double double24 = rotation21.getAngle();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation21.revert();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        double double28 = rotation26.getQ2();
        double double29 = rotation26.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation26.getAxis();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(vector3D30, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation25.applyInverseTo(vector3D30);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(vector3D30, (double) (byte) 100);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(vector3D30, Double.NaN);
        double[][] doubleArray38 = rotation37.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation19.applyInverseTo(rotation37);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(rotation39);
    }

    @Test
    public void test0798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0798");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ1();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, 1.531570594506642d);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) (byte) 100);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
    }

    @Test
    public void test0799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0799");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 100L, (double) (byte) 10, (double) (short) -1, (-0.5d), true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation6.applyInverseTo(rotation13);
        double double16 = rotation13.getQ1();
        double[][] doubleArray17 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation18 = rotation5.applyTo(rotation13);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ3();
        double double21 = rotation19.getQ2();
        double double22 = rotation19.getAngle();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation19.revert();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation24.getAxis();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D28, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation23.applyInverseTo(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation5.applyInverseTo(vector3D31);
        double[][] doubleArray33 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation5.getAxis();
        java.lang.Class<?> wildcardClass35 = rotation5.getClass();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0800");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        double double24 = rotation22.getQ0();
        double[][] doubleArray25 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation21.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation30.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation22.applyTo(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation11.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation7.applyInverseTo(rotation11);
        double[][] doubleArray38 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(doubleArray38, 10.0d);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation((double) (byte) 10, (double) 'a', (double) 1, (double) (-1L), false);
        org.apache.commons.math.geometry.Rotation rotation47 = rotation46.revert();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ3();
        double double50 = rotation48.getQ2();
        double double51 = rotation48.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation48.getAxis();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double59 = rotation58.getQ2();
        double double60 = rotation58.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation58.getAxis();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(vector3D52, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation47.applyInverseTo(vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation40.applyInverseTo(vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D65 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(vector3D64, vector3D65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.995037190209989d + "'", double59 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
    }

    @Test
    public void test0801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0801");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation4.getQ2();
        double double8 = rotation4.getQ3();
        double double9 = rotation4.getAngle();
        double[][] doubleArray10 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(doubleArray10, (double) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(doubleArray10, (-0.031222023722052576d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
    }

    @Test
    public void test0802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0802");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        double double24 = rotation22.getQ0();
        double[][] doubleArray25 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation21.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation30.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation22.applyTo(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation11.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation7.applyInverseTo(rotation11);
        double[][] doubleArray38 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(doubleArray38, 10.0d);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation((double) (byte) 10, (double) 'a', (double) 1, (double) (-1L), false);
        org.apache.commons.math.geometry.Rotation rotation47 = rotation46.revert();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ3();
        double double50 = rotation48.getQ2();
        double double51 = rotation48.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation48.getAxis();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double59 = rotation58.getQ2();
        double double60 = rotation58.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation58.getAxis();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(vector3D52, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation47.applyInverseTo(vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation40.applyInverseTo(vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation40.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D66 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(vector3D65, vector3D66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.995037190209989d + "'", double59 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
    }

    @Test
    public void test0803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0803");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation3.getAxis();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, (double) 100.0f);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D9, (double) (-1.0f));
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Rotation rotation18 = rotation14.revert();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ3();
        double double21 = rotation19.getQ2();
        double double22 = rotation19.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation19.getAxis();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D23, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation18.applyInverseTo(vector3D23);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ2();
        double double29 = rotation27.getQ0();
        double[][] doubleArray30 = rotation27.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation27.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        double double36 = rotation34.getQ2();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation34.revert();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ2();
        double double40 = rotation38.getQ0();
        double[][] doubleArray41 = rotation38.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyInverseTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation45 = rotation37.applyInverseTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        double double48 = rotation46.getQ2();
        double double49 = rotation46.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation46.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation38.applyTo(vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation27.applyInverseTo(vector3D50);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(vector3D52, (double) '4');
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ3();
        double double57 = rotation55.getQ2();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation55.revert();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation();
        double double60 = rotation59.getQ2();
        double double61 = rotation59.getQ0();
        double[][] doubleArray62 = rotation59.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation();
        double double64 = rotation63.getQ3();
        org.apache.commons.math.geometry.Rotation rotation65 = rotation59.applyInverseTo(rotation63);
        org.apache.commons.math.geometry.Rotation rotation66 = rotation58.applyInverseTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation();
        double double68 = rotation67.getQ3();
        double double69 = rotation67.getQ2();
        double double70 = rotation67.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation67.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotation59.applyTo(vector3D71);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation();
        double double74 = rotation73.getQ3();
        double double75 = rotation73.getQ2();
        org.apache.commons.math.geometry.Rotation rotation76 = rotation73.revert();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation();
        double double78 = rotation77.getQ3();
        double double79 = rotation77.getQ2();
        double double80 = rotation77.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotation77.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation76.applyInverseTo(vector3D81);
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(vector3D71, vector3D81);
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(vector3D9, vector3D26, vector3D52, vector3D71);
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D26);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation();
        double double87 = rotation86.getQ3();
        org.apache.commons.math.geometry.Rotation rotation88 = rotation85.applyInverseTo(rotation86);
        double double89 = rotation86.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(rotation88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
    }

    @Test
    public void test0804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0804");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.9949879346007123d, (double) (short) 1, 97.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0805");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) (short) 1);
        double double7 = rotation6.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation6.getAxis();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ2();
        double double15 = rotation13.getQ0();
        double[][] doubleArray16 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation13.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation20 = rotation12.applyInverseTo(rotation13);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        double double23 = rotation21.getQ2();
        double double24 = rotation21.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation21.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation13.applyTo(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation6.applyInverseTo(vector3D26);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        double double36 = rotation34.getQ2();
        double double37 = rotation34.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation34.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation33.applyTo(vector3D38);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ3();
        double double42 = rotation40.getQ2();
        org.apache.commons.math.geometry.Rotation rotation43 = rotation40.revert();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation();
        double double45 = rotation44.getQ2();
        double double46 = rotation44.getQ0();
        double[][] doubleArray47 = rotation44.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ3();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation44.applyInverseTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation43.applyInverseTo(rotation44);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation();
        double double53 = rotation52.getQ3();
        double double54 = rotation52.getQ2();
        double double55 = rotation52.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation52.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation44.applyTo(vector3D56);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(vector3D38, vector3D57);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(vector3D27, vector3D38);
        java.lang.Class<?> wildcardClass60 = vector3D38.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0806");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10L, 0.26237485370392877d, 0.26237485370392877d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0807");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        double double13 = rotation11.getQ2();
        double double14 = rotation11.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation11.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation10.applyTo(vector3D15);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        double double19 = rotation17.getQ2();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation17.revert();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ2();
        double double23 = rotation21.getQ0();
        double[][] doubleArray24 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation21.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation20.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ3();
        double double31 = rotation29.getQ2();
        double double32 = rotation29.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation29.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation21.applyTo(vector3D33);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(vector3D15, vector3D34);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        double double44 = rotation42.getQ2();
        double double45 = rotation42.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation42.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation41.applyTo(vector3D46);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ3();
        double double50 = rotation48.getQ2();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation48.revert();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation();
        double double53 = rotation52.getQ3();
        double double54 = rotation52.getQ2();
        double double55 = rotation52.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation52.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation51.applyInverseTo(vector3D56);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation();
        double double59 = rotation58.getQ2();
        double double60 = rotation58.getQ0();
        double[][] doubleArray61 = rotation58.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        org.apache.commons.math.geometry.Rotation rotation64 = rotation58.applyInverseTo(rotation62);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation();
        double double66 = rotation65.getQ3();
        org.apache.commons.math.geometry.Rotation rotation67 = rotation58.applyInverseTo(rotation65);
        double double68 = rotation65.getQ3();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation();
        double double70 = rotation69.getQ2();
        double double71 = rotation69.getQ0();
        double[][] doubleArray72 = rotation69.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation();
        double double74 = rotation73.getQ3();
        org.apache.commons.math.geometry.Rotation rotation75 = rotation69.applyInverseTo(rotation73);
        double double76 = rotation75.getQ0();
        org.apache.commons.math.geometry.Rotation rotation77 = rotation65.applyInverseTo(rotation75);
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation65.getAxis();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(vector3D34, vector3D46, vector3D56, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotation0.applyTo(vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotation0.getAxis();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-1.0d) + "'", double76 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
    }

    @Test
    public void test0808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0808");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) ' ', (double) 0.0f, (double) (byte) 10, (double) (byte) 1, true);
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation5.applyTo(rotation8);
        double[][] doubleArray11 = rotation5.getMatrix();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.29814239699997197d + "'", double6 == 0.29814239699997197d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.6086083682652702d + "'", double7 == 0.6086083682652702d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(doubleArray11);
    }

    @Test
    public void test0809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0809");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D10);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation12.revert();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation15.applyInverseTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation24.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation16.applyTo(vector3D28);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D29);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        double double33 = rotation31.getQ2();
        double double34 = rotation31.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation31.getAxis();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double42 = rotation41.getQ2();
        double double43 = rotation41.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation41.getAxis();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(vector3D35, vector3D44);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(vector3D29, vector3D44);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(vector3D29, 0.9540556703999103d);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        double double51 = rotation49.getQ2();
        double double52 = rotation49.getAngle();
        org.apache.commons.math.geometry.Rotation rotation53 = rotation49.revert();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ3();
        double double56 = rotation54.getQ2();
        double double57 = rotation54.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation54.getAxis();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(vector3D58, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation53.applyInverseTo(vector3D58);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(vector3D58, (double) (byte) 100);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(vector3D58, Double.NaN);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(vector3D58, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotation48.applyInverseTo(vector3D58);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.995037190209989d + "'", double42 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D68);
    }

    @Test
    public void test0810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0810");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.019227214231343204d, 0.0d, (double) '4', 0.26237485370392877d, false);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) ' ', (double) (-1.0f), (double) 0L, 0.9142857142857143d, true);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        double double16 = rotation13.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(vector3D17, (double) 100.0f);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(vector3D17, (double) (-1.0f));
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation12.applyTo(vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation6.applyTo(vector3D22);
        double double24 = rotation6.getAngle();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 3.103135855390379d + "'", double24 == 3.103135855390379d);
    }

    @Test
    public void test0811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0811");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 10, (double) 0, (double) '4', (double) (short) 100, false);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation6.applyInverseTo(rotation13);
        double double16 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ2();
        double double19 = rotation17.getQ0();
        double[][] doubleArray20 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation17.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation24.revert();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ2();
        double double30 = rotation28.getQ0();
        double[][] doubleArray31 = rotation28.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation28.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation27.applyInverseTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        double double38 = rotation36.getQ2();
        double double39 = rotation36.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation36.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation28.applyTo(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation17.applyInverseTo(vector3D40);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation13.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation44 = rotation5.applyTo(rotation17);
        double double45 = rotation17.getAngle();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
    }

    @Test
    public void test0812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0812");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        double double13 = rotation11.getQ2();
        double double14 = rotation11.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation11.getAxis();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double22 = rotation21.getQ2();
        double double23 = rotation21.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation21.getAxis();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D15, vector3D24);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D15);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ3();
        double double29 = rotation27.getQ2();
        double double30 = rotation27.getAngle();
        double[][] doubleArray31 = rotation27.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ2();
        double double34 = rotation32.getQ1();
        double double35 = rotation32.getAngle();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation27.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation26.applyTo(rotation32);
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation26.getAxis();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.995037190209989d + "'", double22 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(vector3D38);
    }

    @Test
    public void test0813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0813");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) (short) 1);
        double double7 = rotation6.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation6.getAxis();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ2();
        double double15 = rotation13.getQ0();
        double[][] doubleArray16 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation13.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation20 = rotation12.applyInverseTo(rotation13);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        double double23 = rotation21.getQ2();
        double double24 = rotation21.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation21.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation13.applyTo(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation6.applyInverseTo(vector3D26);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(vector3D26, 1.625426981395601d);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
    }

    @Test
    public void test0814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0814");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ1();
        double double3 = rotation0.getAngle();
        double double4 = rotation0.getQ0();
        org.apache.commons.math.geometry.Rotation rotation5 = rotation0.revert();
        double[][] doubleArray6 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(doubleArray6, 0.9540556703999103d);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(rotation5);
        org.junit.Assert.assertNotNull(doubleArray6);
    }

    @Test
    public void test0815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0815");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation4.getQ2();
        double double8 = rotation4.getQ3();
        double double9 = rotation4.getAngle();
        double double10 = rotation4.getAngle();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        double double19 = rotation17.getQ2();
        double double20 = rotation17.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation17.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation16.applyTo(vector3D21);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        double double25 = rotation23.getQ2();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation23.revert();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ2();
        double double29 = rotation27.getQ0();
        double[][] doubleArray30 = rotation27.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation27.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation26.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ3();
        double double37 = rotation35.getQ2();
        double double38 = rotation35.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation35.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation27.applyTo(vector3D39);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(vector3D21, vector3D40);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ3();
        double double50 = rotation48.getQ2();
        double double51 = rotation48.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation48.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation47.applyTo(vector3D52);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ3();
        double double56 = rotation54.getQ2();
        org.apache.commons.math.geometry.Rotation rotation57 = rotation54.revert();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation();
        double double59 = rotation58.getQ3();
        double double60 = rotation58.getQ2();
        double double61 = rotation58.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation58.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation57.applyInverseTo(vector3D62);
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation();
        double double65 = rotation64.getQ2();
        double double66 = rotation64.getQ0();
        double[][] doubleArray67 = rotation64.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation();
        double double69 = rotation68.getQ3();
        org.apache.commons.math.geometry.Rotation rotation70 = rotation64.applyInverseTo(rotation68);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation();
        double double72 = rotation71.getQ3();
        org.apache.commons.math.geometry.Rotation rotation73 = rotation64.applyInverseTo(rotation71);
        double double74 = rotation71.getQ3();
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation();
        double double76 = rotation75.getQ2();
        double double77 = rotation75.getQ0();
        double[][] doubleArray78 = rotation75.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation();
        double double80 = rotation79.getQ3();
        org.apache.commons.math.geometry.Rotation rotation81 = rotation75.applyInverseTo(rotation79);
        double double82 = rotation81.getQ0();
        org.apache.commons.math.geometry.Rotation rotation83 = rotation71.applyInverseTo(rotation81);
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation71.getAxis();
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation(vector3D40, vector3D52, vector3D62, vector3D84);
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(vector3D40, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation88 = rotation4.applyTo(rotation87);
        org.apache.commons.math.geometry.RotationOrder rotationOrder89 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray90 = rotation4.getAngles(rotationOrder89);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0d + "'", double77 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-1.0d) + "'", double82 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(rotation88);
    }

    @Test
    public void test0816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0816");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D10);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation12.revert();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation15.applyInverseTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation24.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation16.applyTo(vector3D28);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D29);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        double double33 = rotation31.getQ2();
        double double34 = rotation31.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation31.getAxis();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double42 = rotation41.getQ2();
        double double43 = rotation41.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation41.getAxis();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(vector3D35, vector3D44);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(vector3D29, vector3D44);
        java.lang.Class<?> wildcardClass47 = vector3D29.getClass();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.995037190209989d + "'", double42 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0817");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 0, Double.NaN, 0.9649660284921133d, 1.0d, true);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.junit.Assert.assertNotNull(doubleArray6);
    }

    @Test
    public void test0818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0818");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation4.applyInverseTo(vector3D9);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ2();
        double double15 = rotation13.getQ0();
        double[][] doubleArray16 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation13.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation20.revert();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ2();
        double double26 = rotation24.getQ0();
        double[][] doubleArray27 = rotation24.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation24.applyInverseTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation23.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        double double35 = rotation32.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation32.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation24.applyTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation13.applyInverseTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation4.applyInverseTo(vector3D38);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation4.revert();
        double double41 = rotation4.getQ3();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
    }

    @Test
    public void test0819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0819");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 3.1215943200414915d, (-0.0703597544730292d), 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0820");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (-1.0f), 0.0018853026163470825d, 0.0994987934600711d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0821");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D10);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation12.revert();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation15.applyInverseTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation24.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation16.applyTo(vector3D28);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D29);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        double double33 = rotation31.getQ2();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation31.revert();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ2();
        double double37 = rotation35.getQ0();
        double[][] doubleArray38 = rotation35.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation35.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation42 = rotation34.applyInverseTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation30.applyInverseTo(rotation34);
        double double44 = rotation30.getQ3();
        double[][] doubleArray45 = rotation30.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray47 = rotation30.getAngles(rotationOrder46);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
    }

    @Test
    public void test0822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0822");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation4.getQ2();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ2();
        double double10 = rotation8.getQ0();
        double[][] doubleArray11 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation8.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation8.applyInverseTo(rotation15);
        double double18 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ2();
        double double21 = rotation19.getQ0();
        double[][] doubleArray22 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation19.applyInverseTo(rotation23);
        double double26 = rotation25.getQ0();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation15.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation4.applyInverseTo(rotation27);
        double double29 = rotation27.getQ0();
        double double30 = rotation27.getQ2();
        double double31 = rotation27.getQ1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation32.revert();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        double double38 = rotation36.getQ2();
        double double39 = rotation36.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation36.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation35.applyInverseTo(vector3D40);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ3();
        double double50 = rotation48.getQ2();
        double double51 = rotation48.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation48.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation47.applyTo(vector3D52);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(vector3D40, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation27.applyInverseTo(vector3D40);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        double double57 = rotation56.getQ2();
        double double58 = rotation56.getQ0();
        double[][] doubleArray59 = rotation56.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation();
        double double61 = rotation60.getQ3();
        org.apache.commons.math.geometry.Rotation rotation62 = rotation56.applyInverseTo(rotation60);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation();
        double double64 = rotation63.getQ3();
        org.apache.commons.math.geometry.Rotation rotation65 = rotation56.applyInverseTo(rotation63);
        double double66 = rotation63.getQ1();
        double[][] doubleArray67 = rotation63.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(doubleArray67, 0.019227214231343204d);
        double double70 = rotation69.getAngle();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation((-1.0d), (double) 0, (double) (byte) 100, (double) (-1.0f), true);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation();
        double double78 = rotation77.getQ2();
        double double79 = rotation77.getQ0();
        double[][] doubleArray80 = rotation77.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation();
        double double82 = rotation81.getQ3();
        org.apache.commons.math.geometry.Rotation rotation83 = rotation77.applyInverseTo(rotation81);
        double double84 = rotation81.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation81.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation76.applyTo(vector3D85);
        org.apache.commons.math.geometry.Rotation rotation92 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D93 = rotation92.getAxis();
        org.apache.commons.math.geometry.Rotation rotation94 = new org.apache.commons.math.geometry.Rotation(vector3D86, vector3D93);
        org.apache.commons.math.geometry.Vector3D vector3D95 = rotation69.applyInverseTo(vector3D93);
        org.apache.commons.math.geometry.Rotation rotation97 = new org.apache.commons.math.geometry.Rotation(vector3D95, (-0.5d));
        org.apache.commons.math.geometry.Rotation rotation98 = new org.apache.commons.math.geometry.Rotation(vector3D40, vector3D95);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1.0d) + "'", double26 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.0d + "'", double79 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(rotation83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D95);
    }

    @Test
    public void test0823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0823");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D10);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation12.revert();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation15.applyInverseTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation24.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation16.applyTo(vector3D28);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D29);
        double[][] doubleArray31 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ2();
        double double34 = rotation32.getQ0();
        double[][] doubleArray35 = rotation32.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation32.applyInverseTo(rotation36);
        double double39 = rotation38.getQ0();
        double double40 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation30.applyTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        double double44 = rotation42.getQ2();
        double double45 = rotation42.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation42.getAxis();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(vector3D46, (double) 100.0f);
        double double49 = rotation48.getQ3();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        double double57 = rotation56.getQ3();
        double double58 = rotation56.getQ2();
        double double59 = rotation56.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation56.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation55.applyTo(vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation55.getAxis();
        org.apache.commons.math.geometry.Rotation rotation63 = rotation48.applyInverseTo(rotation55);
        org.apache.commons.math.geometry.Rotation rotation64 = rotation30.applyInverseTo(rotation48);
        double double65 = rotation48.getQ1();
        double double66 = rotation48.getQ0();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-1.0d) + "'", double39 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.26237485370392877d + "'", double65 == 0.26237485370392877d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.9649660284921133d + "'", double66 == 0.9649660284921133d);
    }

    @Test
    public void test0824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0824");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.031222023722052576d), 1.5900247258946039d, 0.6931032706702748d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0825");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        double double10 = rotation3.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation3.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation19.getAxis();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation11.applyTo(rotation19);
        double double22 = rotation21.getQ2();
        double double23 = rotation21.getQ1();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.019224244054377112d + "'", double23 == 0.019224244054377112d);
    }

    @Test
    public void test0826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0826");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.8775825618903728d, (double) '4', (double) (byte) 10, (-1.0d), false);
    }

    @Test
    public void test0827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0827");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ1();
        double double3 = rotation0.getQ3();
        double double4 = rotation0.getQ1();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
    }

    @Test
    public void test0828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0828");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 100.0f, (double) 1, (double) 1, (double) 10, false);
        double double6 = rotation5.getQ2();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation7.getAxis();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D11, (double) 100.0f);
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        double double23 = rotation21.getQ2();
        double double24 = rotation21.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation21.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation20.applyTo(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation20.getAxis();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation13.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ2();
        double double31 = rotation29.getQ0();
        double[][] doubleArray32 = rotation29.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ3();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation29.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ3();
        double double50 = rotation48.getQ2();
        double double51 = rotation48.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation48.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation47.applyTo(vector3D52);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ2();
        double double56 = rotation54.getQ0();
        double[][] doubleArray57 = rotation54.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation();
        double double59 = rotation58.getQ3();
        org.apache.commons.math.geometry.Rotation rotation60 = rotation54.applyInverseTo(rotation58);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation();
        double double62 = rotation61.getQ3();
        double double63 = rotation61.getQ2();
        org.apache.commons.math.geometry.Rotation rotation64 = rotation61.revert();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation();
        double double66 = rotation65.getQ2();
        double double67 = rotation65.getQ0();
        double[][] doubleArray68 = rotation65.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation();
        double double70 = rotation69.getQ3();
        org.apache.commons.math.geometry.Rotation rotation71 = rotation65.applyInverseTo(rotation69);
        org.apache.commons.math.geometry.Rotation rotation72 = rotation64.applyInverseTo(rotation65);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation();
        double double74 = rotation73.getQ3();
        double double75 = rotation73.getQ2();
        double double76 = rotation73.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation73.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation65.applyTo(vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotation54.applyInverseTo(vector3D77);
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(vector3D53, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotation41.applyTo(vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation29.applyTo(vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotation28.applyInverseTo(vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation5.applyTo(vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation5.getAxis();
        double double86 = rotation5.getQ1();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1.0d + "'", double86 == 1.0d);
    }

    @Test
    public void test0829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0829");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getAngle();
        double double11 = rotation7.getQ1();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    }

    @Test
    public void test0830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0830");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        double double10 = rotation3.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation3.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation19.getAxis();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation11.applyTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation22 = rotation11.revert();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation22.revert();
        java.lang.Class<?> wildcardClass24 = rotation23.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0831");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation4.applyInverseTo(vector3D9);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ2();
        double double15 = rotation13.getQ0();
        double[][] doubleArray16 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation13.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation20.revert();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ2();
        double double26 = rotation24.getQ0();
        double[][] doubleArray27 = rotation24.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation24.applyInverseTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation23.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        double double35 = rotation32.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation32.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation24.applyTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation13.applyInverseTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation4.applyInverseTo(vector3D38);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        double double46 = rotation45.getQ3();
        org.apache.commons.math.geometry.Rotation rotation47 = rotation4.applyTo(rotation45);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ3();
        double double50 = rotation48.getQ2();
        double double51 = rotation48.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation48.getAxis();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(vector3D52, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ3();
        double double57 = rotation55.getQ2();
        double double58 = rotation55.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation55.getAxis();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(vector3D59, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        double double64 = rotation62.getQ2();
        double double65 = rotation62.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation62.getAxis();
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation();
        double double74 = rotation73.getQ3();
        double double75 = rotation73.getQ2();
        double double76 = rotation73.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation73.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation72.applyTo(vector3D77);
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(vector3D52, vector3D59, vector3D66, vector3D77);
        double double80 = rotation79.getQ3();
        org.apache.commons.math.geometry.Rotation rotation81 = rotation47.applyInverseTo(rotation79);
        org.apache.commons.math.geometry.Rotation rotation82 = rotation79.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder83 = null;
        double[] doubleArray84 = rotation82.getAngles(rotationOrder83);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertNotNull(rotation82);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[NaN, NaN, NaN]");
    }

    @Test
    public void test0832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0832");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D10);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D10, 2.9422652488599566d);
        double double14 = rotation13.getQ0();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.09949879346007112d + "'", double14 == 0.09949879346007112d);
    }

    @Test
    public void test0833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0833");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 100L, (double) (byte) 10, (double) (short) -1, (-0.5d), true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation6.applyInverseTo(rotation13);
        double double16 = rotation13.getQ1();
        double[][] doubleArray17 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation18 = rotation5.applyTo(rotation13);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ3();
        double double21 = rotation19.getQ2();
        double double22 = rotation19.getAngle();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation19.revert();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation24.getAxis();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D28, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation23.applyInverseTo(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation5.applyInverseTo(vector3D31);
        double[][] doubleArray33 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation5.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = null;
        double[] doubleArray36 = rotation5.getAngles(rotationOrder35);
        double double37 = rotation5.getQ0();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.4761276326376929, 0.2003224048946341, -1.4661277159697763]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.9949756218412634d + "'", double37 == 0.9949756218412634d);
    }

    @Test
    public void test0834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0834");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.5d, (double) 0L, (double) ' ', (double) (-1L), false);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        double double7 = rotation6.getQ0();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-0.5d) + "'", double7 == (-0.5d));
    }

    @Test
    public void test0835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0835");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0d);
        double[][] doubleArray7 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(doubleArray7, 1.0d);
        double double10 = rotation9.getQ1();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2623748537039287d + "'", double10 == 0.2623748537039287d);
    }

    @Test
    public void test0836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0836");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        org.apache.commons.math.geometry.Rotation rotation11 = rotation6.applyTo(rotation7);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation11.revert();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertNotNull(rotation12);
    }

    @Test
    public void test0837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0837");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        double double24 = rotation22.getQ0();
        double[][] doubleArray25 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation21.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation30.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation22.applyTo(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation11.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation7.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation37.getAxis();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        double double41 = rotation39.getQ2();
        double double42 = rotation39.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation39.getAxis();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation();
        double double45 = rotation44.getQ3();
        double double46 = rotation44.getQ2();
        org.apache.commons.math.geometry.Rotation rotation47 = rotation44.revert();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ2();
        double double50 = rotation48.getQ0();
        double[][] doubleArray51 = rotation48.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation();
        double double53 = rotation52.getQ3();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation48.applyInverseTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation47.applyInverseTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        double double57 = rotation56.getQ3();
        double double58 = rotation56.getQ2();
        double double59 = rotation56.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation56.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation48.applyTo(vector3D60);
        double double62 = rotation48.getQ1();
        double double63 = rotation48.getQ2();
        org.apache.commons.math.geometry.Rotation rotation64 = rotation39.applyInverseTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation65 = rotation37.applyInverseTo(rotation64);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(rotation65);
    }

    @Test
    public void test0838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0838");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, (double) 0);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ2();
        double double16 = rotation14.getQ0();
        double[][] doubleArray17 = rotation14.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation14.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation14.applyInverseTo(rotation21);
        double double24 = rotation21.getQ1();
        double[][] doubleArray25 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation13.applyTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation27 = rotation21.revert();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation27);
    }

    @Test
    public void test0839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0839");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation4.getQ2();
        double double8 = rotation4.getQ3();
        double double9 = rotation4.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation4.getAxis();
        double double11 = rotation4.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
    }

    @Test
    public void test0840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0840");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 100.0f, (double) 1.0f, (-0.7071067811865475d), (double) '4', true);
    }

    @Test
    public void test0841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0841");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) (short) 1);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(doubleArray4, 0.9999250084364456d);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0, 0.7071067811865475d, (-1.0d), true);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ2();
        double double17 = rotation15.getQ0();
        double[][] doubleArray18 = rotation15.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ3();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation15.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        org.apache.commons.math.geometry.Rotation rotation24 = rotation15.applyInverseTo(rotation22);
        double double25 = rotation22.getQ3();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ2();
        double double28 = rotation26.getQ0();
        double[][] doubleArray29 = rotation26.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation26.applyInverseTo(rotation30);
        double double33 = rotation30.getQ2();
        double double34 = rotation30.getQ3();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation22.applyTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ2();
        double double38 = rotation36.getQ0();
        double[][] doubleArray39 = rotation36.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ3();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation36.applyInverseTo(rotation40);
        double double43 = rotation40.getQ2();
        double double44 = rotation40.getQ3();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ2();
        double double47 = rotation45.getQ0();
        double[][] doubleArray48 = rotation45.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation40.applyTo(rotation45);
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation45.getAxis();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation35.applyTo(rotation45);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation35.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation14.applyInverseTo(vector3D52);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ3();
        double double56 = rotation54.getQ2();
        org.apache.commons.math.geometry.Rotation rotation57 = rotation54.revert();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation();
        double double59 = rotation58.getQ2();
        double double60 = rotation58.getQ0();
        double[][] doubleArray61 = rotation58.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        org.apache.commons.math.geometry.Rotation rotation64 = rotation58.applyInverseTo(rotation62);
        org.apache.commons.math.geometry.Rotation rotation65 = rotation57.applyInverseTo(rotation58);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation();
        double double67 = rotation66.getQ3();
        double double68 = rotation66.getQ2();
        double double69 = rotation66.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation66.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation58.applyTo(vector3D70);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(vector3D70, 2.562089250717698d);
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(vector3D53, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation8.applyTo(vector3D53);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(vector3D75, 32.0d);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D75);
    }

    @Test
    public void test0842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0842");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        double double12 = rotation3.getQ0();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        double double16 = rotation13.getAngle();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation13.revert();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        double double21 = rotation18.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation18.getAxis();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(vector3D22, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation17.applyInverseTo(vector3D22);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(vector3D22, (double) (byte) 100);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        double double30 = rotation28.getQ2();
        double double31 = rotation28.getAngle();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation28.revert();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ3();
        double double35 = rotation33.getQ2();
        double double36 = rotation33.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation33.getAxis();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(vector3D37, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation32.applyInverseTo(vector3D37);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ2();
        double double43 = rotation41.getQ0();
        double[][] doubleArray44 = rotation41.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ3();
        org.apache.commons.math.geometry.Rotation rotation47 = rotation41.applyInverseTo(rotation45);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ3();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation41.applyInverseTo(rotation48);
        double double51 = rotation48.getQ3();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation();
        double double53 = rotation52.getQ2();
        double double54 = rotation52.getQ0();
        double[][] doubleArray55 = rotation52.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        double double57 = rotation56.getQ3();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation52.applyInverseTo(rotation56);
        double double59 = rotation58.getQ0();
        org.apache.commons.math.geometry.Rotation rotation60 = rotation48.applyInverseTo(rotation58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation48.getAxis();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        double double64 = rotation62.getQ2();
        org.apache.commons.math.geometry.Rotation rotation65 = rotation62.revert();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation();
        double double67 = rotation66.getQ2();
        double double68 = rotation66.getQ0();
        double[][] doubleArray69 = rotation66.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation();
        double double71 = rotation70.getQ3();
        org.apache.commons.math.geometry.Rotation rotation72 = rotation66.applyInverseTo(rotation70);
        org.apache.commons.math.geometry.Rotation rotation73 = rotation65.applyInverseTo(rotation66);
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation();
        double double75 = rotation74.getQ3();
        double double76 = rotation74.getQ2();
        double double77 = rotation74.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation74.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotation66.applyTo(vector3D78);
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation();
        double double81 = rotation80.getQ3();
        double double82 = rotation80.getQ2();
        org.apache.commons.math.geometry.Rotation rotation83 = rotation80.revert();
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation();
        double double85 = rotation84.getQ3();
        double double86 = rotation84.getQ2();
        double double87 = rotation84.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotation84.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation83.applyInverseTo(vector3D88);
        org.apache.commons.math.geometry.Rotation rotation90 = new org.apache.commons.math.geometry.Rotation(vector3D78, vector3D88);
        org.apache.commons.math.geometry.Rotation rotation91 = new org.apache.commons.math.geometry.Rotation(vector3D22, vector3D37, vector3D61, vector3D88);
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotation3.applyTo(vector3D37);
        org.apache.commons.math.geometry.Rotation rotation93 = rotation3.revert();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1.0d) + "'", double12 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-1.0d) + "'", double59 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(rotation83);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(rotation93);
    }

    @Test
    public void test0843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0843");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) (short) 1);
        double double7 = rotation6.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation6.getAxis();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        double double16 = rotation13.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation12.applyInverseTo(vector3D17);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(vector3D17, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation6.applyInverseTo(vector3D17);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        double double24 = rotation22.getQ0();
        double[][] doubleArray25 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ3();
        double double31 = rotation29.getQ2();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation29.revert();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ2();
        double double35 = rotation33.getQ0();
        double[][] doubleArray36 = rotation33.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation33.applyInverseTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation32.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        double double43 = rotation41.getQ2();
        double double44 = rotation41.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation41.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation33.applyTo(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation22.applyInverseTo(vector3D45);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(vector3D47, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation6.applyInverseTo(vector3D47);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(vector3D47, (double) 1);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ3();
        double double55 = rotation53.getQ2();
        double double56 = rotation53.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation53.getAxis();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(vector3D57, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation();
        double double67 = rotation66.getQ3();
        double double68 = rotation66.getQ2();
        double double69 = rotation66.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation66.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation65.applyTo(vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotation65.getAxis();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation();
        double double74 = rotation73.getQ3();
        double double75 = rotation73.getQ2();
        double double76 = rotation73.getAngle();
        org.apache.commons.math.geometry.Rotation rotation77 = rotation73.revert();
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation();
        double double79 = rotation78.getQ3();
        double double80 = rotation78.getQ2();
        double double81 = rotation78.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation78.getAxis();
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(vector3D82, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation77.applyInverseTo(vector3D82);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D47, vector3D57, vector3D72, vector3D82);
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(vector3D57, (-0.009999000149975004d));
        org.apache.commons.math.geometry.Rotation rotation89 = rotation88.revert();
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotation88.getAxis();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(rotation89);
        org.junit.Assert.assertNotNull(vector3D90);
    }

    @Test
    public void test0844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0844");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1.0f), (double) 0, (double) (short) 0, true);
        org.apache.commons.math.geometry.Rotation rotation18 = rotation3.applyInverseTo(rotation17);
        double double19 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        double double23 = rotation21.getQ2();
        double double24 = rotation21.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation21.getAxis();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(vector3D25, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation20.applyTo(vector3D25);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D28, (double) (short) 1);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation30.revert();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation31);
    }

    @Test
    public void test0845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0845");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(2.9422605910525994d, 0.9999250084364456d, (-0.479425538604203d), 0.7070891041799029d, false);
    }

    @Test
    public void test0846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0846");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        double double10 = rotation3.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation3.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation19.getAxis();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation11.applyTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation22 = rotation11.revert();
        double double23 = rotation22.getQ0();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation24.revert();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ2();
        double double30 = rotation28.getQ0();
        double[][] doubleArray31 = rotation28.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation28.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation27.applyInverseTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        double double38 = rotation36.getQ2();
        double double39 = rotation36.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation36.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation28.applyTo(vector3D40);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        double double44 = rotation42.getQ2();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation42.revert();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        double double48 = rotation46.getQ2();
        double double49 = rotation46.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation46.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation45.applyInverseTo(vector3D50);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(vector3D40, vector3D50);
        double double53 = rotation52.getQ3();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation22.applyTo(rotation52);
        double double55 = rotation54.getQ2();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1.0d) + "'", double23 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
    }

    @Test
    public void test0847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0847");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ1();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) 100.0f);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) (byte) 100);
        double double9 = rotation8.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation8.getAxis();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
    }

    @Test
    public void test0848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0848");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation7.getAxis();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D11, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation24.applyTo(vector3D29);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D11, vector3D18, vector3D29);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(vector3D29, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(vector3D29, 1.0d);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation35.revert();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation35.getAxis();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(vector3D37);
    }

    @Test
    public void test0849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0849");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 100, (double) 100, (double) (-1L), (double) 0L, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ2();
        double double9 = rotation7.getQ0();
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = rotation7.revert();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation((-1.0d), (double) 0, (double) (byte) 100, (double) (-1.0f), true);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ2();
        double double20 = rotation18.getQ0();
        double[][] doubleArray21 = rotation18.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        org.apache.commons.math.geometry.Rotation rotation24 = rotation18.applyInverseTo(rotation22);
        double double25 = rotation22.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation22.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation17.applyTo(vector3D26);
        double double28 = rotation17.getQ3();
        double double29 = rotation17.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation17.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation11.applyInverseTo(vector3D30);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation5.applyInverseTo(rotation11);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 100.0d + "'", double6 == 100.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-0.009999000149975004d) + "'", double28 == (-0.009999000149975004d));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 3.1215943200414915d + "'", double29 == 3.1215943200414915d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotation32);
    }

    @Test
    public void test0850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0850");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) (short) 1);
        double double7 = rotation6.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation6.getAxis();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        double double16 = rotation13.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation12.applyInverseTo(vector3D17);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(vector3D17, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation6.applyInverseTo(vector3D17);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        double double24 = rotation22.getQ0();
        double[][] doubleArray25 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ3();
        double double31 = rotation29.getQ2();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation29.revert();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ2();
        double double35 = rotation33.getQ0();
        double[][] doubleArray36 = rotation33.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation33.applyInverseTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation32.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        double double43 = rotation41.getQ2();
        double double44 = rotation41.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation41.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation33.applyTo(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation22.applyInverseTo(vector3D45);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(vector3D47, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation6.applyInverseTo(vector3D47);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(vector3D47, (double) 1);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ3();
        double double55 = rotation53.getQ2();
        double double56 = rotation53.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation53.getAxis();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(vector3D57, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation();
        double double67 = rotation66.getQ3();
        double double68 = rotation66.getQ2();
        double double69 = rotation66.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation66.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation65.applyTo(vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotation65.getAxis();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation();
        double double74 = rotation73.getQ3();
        double double75 = rotation73.getQ2();
        double double76 = rotation73.getAngle();
        org.apache.commons.math.geometry.Rotation rotation77 = rotation73.revert();
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation();
        double double79 = rotation78.getQ3();
        double double80 = rotation78.getQ2();
        double double81 = rotation78.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation78.getAxis();
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(vector3D82, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation77.applyInverseTo(vector3D82);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D47, vector3D57, vector3D72, vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotation86.getAxis();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D87);
    }

    @Test
    public void test0851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0851");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.019227214231343204d, 0.0d, (double) '4', 0.26237485370392877d, false);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ2();
        double double9 = rotation7.getQ0();
        double[][] doubleArray10 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation7.applyInverseTo(rotation11);
        double double14 = rotation11.getQ2();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ2();
        double double17 = rotation15.getQ0();
        double[][] doubleArray18 = rotation15.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ3();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation15.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        org.apache.commons.math.geometry.Rotation rotation24 = rotation15.applyInverseTo(rotation22);
        double double25 = rotation22.getQ3();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ2();
        double double28 = rotation26.getQ0();
        double[][] doubleArray29 = rotation26.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation26.applyInverseTo(rotation30);
        double double33 = rotation32.getQ0();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation22.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation11.applyInverseTo(rotation34);
        double double36 = rotation34.getAngle();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation5.applyTo(rotation34);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-1.0d) + "'", double33 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
    }

    @Test
    public void test0852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0852");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-1.0d), (double) 0, (double) (byte) 100, (double) (-1.0f), true);
        java.lang.Class<?> wildcardClass6 = rotation5.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0853");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        double double10 = rotation3.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation3.applyTo(rotation11);
        double double14 = rotation11.getQ1();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation11.revert();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
    }

    @Test
    public void test0854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0854");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1, 0.26237485370392877d, (double) 'a', 0.703614788711539d, false);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.5d, (double) 0L, (double) ' ', (double) (-1L), false);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.junit.Assert.assertNotNull(rotation12);
    }

    @Test
    public void test0855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0855");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 100L, (double) 0, (double) (short) 1, 0.7071067811865475d, true);
        double double6 = rotation5.getQ1();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    }

    @Test
    public void test0856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0856");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.7071067811865475d, 0.29814239699997197d, (double) 'a', (double) 10.0f, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(doubleArray6, (double) (short) 100);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
    }

    @Test
    public void test0857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0857");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation4.getQ2();
        double double8 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ2();
        double double11 = rotation9.getQ0();
        double[][] doubleArray12 = rotation9.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation4.applyTo(rotation9);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ2();
        double double16 = rotation14.getQ0();
        double[][] doubleArray17 = rotation14.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation14.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        double double23 = rotation21.getQ2();
        org.apache.commons.math.geometry.Rotation rotation24 = rotation21.revert();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ2();
        double double27 = rotation25.getQ0();
        double[][] doubleArray28 = rotation25.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ3();
        org.apache.commons.math.geometry.Rotation rotation31 = rotation25.applyInverseTo(rotation29);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation24.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ3();
        double double35 = rotation33.getQ2();
        double double36 = rotation33.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation33.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation25.applyTo(vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation14.applyInverseTo(vector3D37);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(vector3D39, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation4.applyInverseTo(vector3D39);
        java.lang.Class<?> wildcardClass43 = vector3D42.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0858");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, (double) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray15 = rotation13.getAngles(rotationOrder14);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
    }

    @Test
    public void test0859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0859");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        double double18 = rotation15.getQ2();
        double double19 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation7.applyTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ2();
        double double23 = rotation21.getQ0();
        double[][] doubleArray24 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation21.applyInverseTo(rotation25);
        double double28 = rotation25.getQ2();
        double double29 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ2();
        double double32 = rotation30.getQ0();
        double[][] doubleArray33 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation25.applyTo(rotation30);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation30.getAxis();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation20.applyTo(rotation30);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation20.getAxis();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation((double) (byte) 100, (double) 100, (double) (-1L), (double) 0L, false);
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation43.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation20.applyInverseTo(vector3D44);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        double double48 = rotation46.getQ2();
        double double49 = rotation46.getAngle();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation46.revert();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation();
        double double52 = rotation51.getQ3();
        double double53 = rotation51.getQ2();
        double double54 = rotation51.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation51.getAxis();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(vector3D55, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation50.applyInverseTo(vector3D55);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation();
        double double60 = rotation59.getQ2();
        double double61 = rotation59.getQ0();
        double[][] doubleArray62 = rotation59.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation();
        double double64 = rotation63.getQ3();
        org.apache.commons.math.geometry.Rotation rotation65 = rotation59.applyInverseTo(rotation63);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation();
        double double67 = rotation66.getQ3();
        double double68 = rotation66.getQ2();
        org.apache.commons.math.geometry.Rotation rotation69 = rotation66.revert();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation();
        double double71 = rotation70.getQ2();
        double double72 = rotation70.getQ0();
        double[][] doubleArray73 = rotation70.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation();
        double double75 = rotation74.getQ3();
        org.apache.commons.math.geometry.Rotation rotation76 = rotation70.applyInverseTo(rotation74);
        org.apache.commons.math.geometry.Rotation rotation77 = rotation69.applyInverseTo(rotation70);
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation();
        double double79 = rotation78.getQ3();
        double double80 = rotation78.getQ2();
        double double81 = rotation78.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation78.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotation70.applyTo(vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation59.applyInverseTo(vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation50.applyInverseTo(vector3D84);
        org.apache.commons.math.geometry.Rotation rotation91 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        double double92 = rotation91.getQ3();
        org.apache.commons.math.geometry.Rotation rotation93 = rotation50.applyTo(rotation91);
        org.apache.commons.math.geometry.Rotation rotation94 = rotation20.applyInverseTo(rotation50);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
        org.junit.Assert.assertNotNull(rotation93);
        org.junit.Assert.assertNotNull(rotation94);
    }

    @Test
    public void test0860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0860");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.019227214231343204d, 0.703614788711539d, 1.7345175425633084d, (double) (short) 0, true);
    }

    @Test
    public void test0861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0861");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.019227214231343204d, (double) (short) 10, 1.7345175425633084d, (double) (byte) -1, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation11.getAxis();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation13.revert();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        double double19 = rotation17.getQ2();
        double double20 = rotation17.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation17.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation16.applyInverseTo(vector3D21);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ3();
        double double31 = rotation29.getQ2();
        double double32 = rotation29.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation29.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation28.applyTo(vector3D33);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(vector3D21, vector3D34);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ2();
        double double38 = rotation36.getQ0();
        double[][] doubleArray39 = rotation36.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ3();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation36.applyInverseTo(rotation40);
        double double43 = rotation40.getQ2();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation();
        double double45 = rotation44.getQ2();
        double double46 = rotation44.getQ0();
        double[][] doubleArray47 = rotation44.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ3();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation44.applyInverseTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation();
        double double52 = rotation51.getQ3();
        org.apache.commons.math.geometry.Rotation rotation53 = rotation44.applyInverseTo(rotation51);
        double double54 = rotation51.getQ3();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ2();
        double double57 = rotation55.getQ0();
        double[][] doubleArray58 = rotation55.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation();
        double double60 = rotation59.getQ3();
        org.apache.commons.math.geometry.Rotation rotation61 = rotation55.applyInverseTo(rotation59);
        double double62 = rotation61.getQ0();
        org.apache.commons.math.geometry.Rotation rotation63 = rotation51.applyInverseTo(rotation61);
        org.apache.commons.math.geometry.Rotation rotation64 = rotation40.applyInverseTo(rotation63);
        org.apache.commons.math.geometry.Rotation rotation65 = rotation35.applyTo(rotation40);
        double double66 = rotation40.getQ3();
        double[][] doubleArray67 = rotation40.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotation40.getAxis();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(vector3D12, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation5.applyTo(vector3D68);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-1.0d) + "'", double62 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
    }

    @Test
    public void test0862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0862");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation3.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation3.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation3.getAxis();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(vector3D12, 0.9649660284921133d);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
    }

    @Test
    public void test0863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0863");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        org.apache.commons.math.geometry.Rotation rotation8 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ2();
        double double11 = rotation9.getQ0();
        double[][] doubleArray12 = rotation9.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation9.applyInverseTo(rotation13);
        org.apache.commons.math.geometry.Rotation rotation16 = rotation8.applyInverseTo(rotation9);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        double double19 = rotation17.getQ2();
        double double20 = rotation17.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation17.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation9.applyTo(vector3D21);
        double double23 = rotation9.getQ1();
        double double24 = rotation9.getQ2();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation0.applyInverseTo(rotation9);
        double double26 = rotation25.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray28 = rotation25.getAngles(rotationOrder27);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(rotation8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
    }

    @Test
    public void test0864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0864");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = null;
        double[] doubleArray7 = rotation5.getAngles(rotationOrder6);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        double double10 = rotation8.getQ2();
        double double11 = rotation8.getAngle();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation8.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        double double16 = rotation13.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(vector3D17, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation12.applyInverseTo(vector3D17);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ2();
        double double23 = rotation21.getQ0();
        double[][] doubleArray24 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation21.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        double double30 = rotation28.getQ2();
        org.apache.commons.math.geometry.Rotation rotation31 = rotation28.revert();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ2();
        double double34 = rotation32.getQ0();
        double[][] doubleArray35 = rotation32.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation32.applyInverseTo(rotation36);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation31.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ3();
        double double42 = rotation40.getQ2();
        double double43 = rotation40.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation40.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation32.applyTo(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation21.applyInverseTo(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation12.applyInverseTo(vector3D46);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        double double54 = rotation53.getQ3();
        org.apache.commons.math.geometry.Rotation rotation55 = rotation12.applyTo(rotation53);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        double double57 = rotation56.getQ3();
        double double58 = rotation56.getQ2();
        double double59 = rotation56.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation56.getAxis();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(vector3D60, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation();
        double double64 = rotation63.getQ3();
        double double65 = rotation63.getQ2();
        double double66 = rotation63.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation63.getAxis();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(vector3D67, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation();
        double double71 = rotation70.getQ3();
        double double72 = rotation70.getQ2();
        double double73 = rotation70.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation70.getAxis();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation();
        double double82 = rotation81.getQ3();
        double double83 = rotation81.getQ2();
        double double84 = rotation81.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation81.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation80.applyTo(vector3D85);
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(vector3D60, vector3D67, vector3D74, vector3D85);
        double double88 = rotation87.getQ3();
        org.apache.commons.math.geometry.Rotation rotation89 = rotation55.applyInverseTo(rotation87);
        org.apache.commons.math.geometry.Rotation rotation90 = rotation5.applyInverseTo(rotation89);
        double double91 = rotation90.getAngle();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.5707963267948966, 2.942255348607469, 1.5707963267948966]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertTrue(Double.isNaN(double88));
        org.junit.Assert.assertNotNull(rotation89);
        org.junit.Assert.assertNotNull(rotation90);
        org.junit.Assert.assertTrue(Double.isNaN(double91));
    }

    @Test
    public void test0865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0865");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (-1), (-0.7625584504796028d), (double) 100.0f, 1.625426981395601d, false);
    }

    @Test
    public void test0866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0866");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.0d, 2.0943951023931953d, (double) 1.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0867");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) 1L);
        org.apache.commons.math.geometry.Rotation rotation7 = rotation6.revert();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(rotation7);
    }

    @Test
    public void test0868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0868");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, (double) 0);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ2();
        double double16 = rotation14.getQ0();
        double[][] doubleArray17 = rotation14.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation14.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation14.applyInverseTo(rotation21);
        double double24 = rotation21.getQ1();
        double[][] doubleArray25 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation13.applyTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation((double) (byte) -1, (double) (short) -1, (double) (-1.0f), (double) 1, true);
        double double33 = rotation32.getQ0();
        double double34 = rotation32.getQ3();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ2();
        double double37 = rotation35.getQ0();
        double[][] doubleArray38 = rotation35.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation35.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        double double44 = rotation42.getQ2();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation42.revert();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ2();
        double double48 = rotation46.getQ0();
        double[][] doubleArray49 = rotation46.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation();
        double double51 = rotation50.getQ3();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation46.applyInverseTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation45.applyInverseTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ3();
        double double56 = rotation54.getQ2();
        double double57 = rotation54.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation54.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation46.applyTo(vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation35.applyInverseTo(vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation32.applyInverseTo(vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation21.applyInverseTo(vector3D61);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation();
        double double64 = rotation63.getQ2();
        double double65 = rotation63.getQ0();
        double double66 = rotation63.getQ3();
        org.apache.commons.math.geometry.Rotation rotation67 = rotation63.revert();
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotation67.getAxis();
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation74.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotation67.applyInverseTo(vector3D75);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(vector3D61, vector3D75);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.5d) + "'", double33 == (-0.5d));
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.5d + "'", double34 == 0.5d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
    }

    @Test
    public void test0869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0869");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10L, (double) ' ', (double) 10, (double) (-1L), true);
        double double6 = rotation5.getQ1();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation7.revert();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        double double13 = rotation11.getQ2();
        double double14 = rotation11.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation11.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation10.applyInverseTo(vector3D15);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        double double19 = rotation17.getQ2();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation17.revert();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        double double23 = rotation21.getQ2();
        double double24 = rotation21.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation21.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation20.applyInverseTo(vector3D25);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ3();
        double double35 = rotation33.getQ2();
        double double36 = rotation33.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation33.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation32.applyTo(vector3D37);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(vector3D25, vector3D38);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ3();
        double double42 = rotation40.getQ2();
        double double43 = rotation40.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation40.getAxis();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(vector3D44, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ3();
        double double49 = rotation47.getQ2();
        double double50 = rotation47.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation47.getAxis();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(vector3D51, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ3();
        double double56 = rotation54.getQ2();
        double double57 = rotation54.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation54.getAxis();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation();
        double double66 = rotation65.getQ3();
        double double67 = rotation65.getQ2();
        double double68 = rotation65.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotation65.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation64.applyTo(vector3D69);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(vector3D44, vector3D51, vector3D58, vector3D69);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation();
        double double73 = rotation72.getQ3();
        double double74 = rotation72.getQ2();
        org.apache.commons.math.geometry.Rotation rotation75 = rotation72.revert();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation();
        double double77 = rotation76.getQ3();
        double double78 = rotation76.getQ2();
        double double79 = rotation76.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotation76.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotation75.applyInverseTo(vector3D80);
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(vector3D16, vector3D38, vector3D58, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotation5.applyTo(vector3D16);
        double double84 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D85 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D86 = rotation5.applyInverseTo(vector3D85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.9142857142857143d + "'", double6 == 0.9142857142857143d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 2.562089250717698d + "'", double84 == 2.562089250717698d);
    }

    @Test
    public void test0870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0870");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        double double15 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation4.applyTo(vector3D16);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        double double24 = rotation22.getQ2();
        double double25 = rotation22.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation22.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation21.applyInverseTo(vector3D26);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(vector3D16, vector3D26);
        double double29 = rotation28.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation28.getAxis();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D30);
    }

    @Test
    public void test0871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0871");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation6.getQ0();
        double double8 = rotation6.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        double double12 = rotation9.getAngle();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(vector3D18, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation13.applyInverseTo(vector3D18);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(vector3D18, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation6.applyInverseTo(vector3D18);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        double double33 = rotation31.getQ2();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation31.revert();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ2();
        double double37 = rotation35.getQ0();
        double[][] doubleArray38 = rotation35.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation35.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation42 = rotation34.applyInverseTo(rotation35);
        double double43 = rotation34.getAngle();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation();
        double double45 = rotation44.getQ3();
        double double46 = rotation44.getQ2();
        double double47 = rotation44.getAngle();
        double[][] doubleArray48 = rotation44.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(doubleArray48, (double) (short) 1);
        double double51 = rotation50.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation50.getAxis();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ3();
        double double55 = rotation53.getQ2();
        org.apache.commons.math.geometry.Rotation rotation56 = rotation53.revert();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        double double59 = rotation57.getQ2();
        double double60 = rotation57.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation57.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation56.applyInverseTo(vector3D61);
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(vector3D61, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation50.applyInverseTo(vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation34.applyTo(vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation30.applyInverseTo(vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotation6.applyInverseTo(vector3D67);
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation((-1.0d), (double) 0, (double) (byte) 100, (double) (-1.0f), true);
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation();
        double double76 = rotation75.getQ2();
        double double77 = rotation75.getQ0();
        double[][] doubleArray78 = rotation75.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation();
        double double80 = rotation79.getQ3();
        org.apache.commons.math.geometry.Rotation rotation81 = rotation75.applyInverseTo(rotation79);
        double double82 = rotation79.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotation79.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation74.applyTo(vector3D83);
        org.apache.commons.math.geometry.Rotation rotation90 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotation90.getAxis();
        org.apache.commons.math.geometry.Rotation rotation92 = new org.apache.commons.math.geometry.Rotation(vector3D84, vector3D91);
        org.apache.commons.math.geometry.Vector3D vector3D93 = rotation6.applyInverseTo(vector3D84);
        double[][] doubleArray94 = rotation6.getMatrix();
        double double95 = rotation6.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-1.0d) + "'", double7 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0d + "'", double77 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + (-1.0d) + "'", double95 == (-1.0d));
    }

    @Test
    public void test0872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0872");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        double double4 = rotation0.getQ0();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        double double13 = rotation11.getQ2();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation11.revert();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ2();
        double double17 = rotation15.getQ0();
        double[][] doubleArray18 = rotation15.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ3();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation15.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation22 = rotation14.applyInverseTo(rotation15);
        double double23 = rotation14.getAngle();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        double[][] doubleArray28 = rotation24.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(doubleArray28, (double) (short) 1);
        double double31 = rotation30.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation30.getAxis();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ3();
        double double35 = rotation33.getQ2();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation33.revert();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        double double39 = rotation37.getQ2();
        double double40 = rotation37.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation37.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation36.applyInverseTo(vector3D41);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(vector3D41, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation30.applyInverseTo(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation14.applyTo(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation10.applyInverseTo(vector3D46);
        org.apache.commons.math.geometry.Rotation rotation48 = rotation0.applyInverseTo(rotation10);
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation();
        double double51 = rotation50.getQ3();
        double double52 = rotation50.getQ2();
        org.apache.commons.math.geometry.Rotation rotation53 = rotation50.revert();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ2();
        double double56 = rotation54.getQ0();
        double[][] doubleArray57 = rotation54.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation();
        double double59 = rotation58.getQ3();
        org.apache.commons.math.geometry.Rotation rotation60 = rotation54.applyInverseTo(rotation58);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation53.applyInverseTo(rotation54);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1.0f), (double) 0, (double) (short) 0, true);
        org.apache.commons.math.geometry.Rotation rotation68 = rotation53.applyInverseTo(rotation67);
        double double69 = rotation68.getQ2();
        org.apache.commons.math.geometry.Rotation rotation70 = rotation68.revert();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation();
        double double72 = rotation71.getQ3();
        double double73 = rotation71.getQ2();
        double double74 = rotation71.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation71.getAxis();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(vector3D75, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation70.applyTo(vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotation0.applyTo(vector3D78);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
    }

    @Test
    public void test0873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0873");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.5d, (double) 0L, (double) ' ', (double) (-1L), false);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        double double16 = rotation13.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation12.applyTo(vector3D17);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ2();
        double double21 = rotation19.getQ0();
        double[][] doubleArray22 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation19.applyInverseTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        double double28 = rotation26.getQ2();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation26.revert();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ2();
        double double32 = rotation30.getQ0();
        double[][] doubleArray33 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation30.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation29.applyInverseTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        double double40 = rotation38.getQ2();
        double double41 = rotation38.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation38.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation30.applyTo(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation19.applyInverseTo(vector3D42);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(vector3D18, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation6.applyInverseTo(vector3D18);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(vector3D46, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(vector3D46, (double) 1);
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = null;
        double[] doubleArray52 = rotation50.getAngles(rotationOrder51);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[2.385149520955871, 0.5000822777287993, 3.022732071513935]");
    }

    @Test
    public void test0874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0874");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 10, (double) 'a', (double) 1, (double) (-1L), false);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotation6.getAxis();
        double double8 = rotation6.getQ3();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1.0d) + "'", double8 == (-1.0d));
    }

    @Test
    public void test0875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0875");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ1();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation5);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) (byte) 10, (double) 0, (double) '4', (double) (short) 100, false);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation16.applyInverseTo(rotation23);
        double double26 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ2();
        double double29 = rotation27.getQ0();
        double[][] doubleArray30 = rotation27.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation27.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        double double36 = rotation34.getQ2();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation34.revert();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ2();
        double double40 = rotation38.getQ0();
        double[][] doubleArray41 = rotation38.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyInverseTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation45 = rotation37.applyInverseTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        double double48 = rotation46.getQ2();
        double double49 = rotation46.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation46.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation38.applyTo(vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation27.applyInverseTo(vector3D50);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation23.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation15.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation0.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        double double57 = rotation56.getQ2();
        double double58 = rotation56.getQ0();
        double[][] doubleArray59 = rotation56.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation();
        double double61 = rotation60.getQ3();
        org.apache.commons.math.geometry.Rotation rotation62 = rotation56.applyInverseTo(rotation60);
        double double63 = rotation62.getQ0();
        double double64 = rotation62.getQ3();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation();
        double double66 = rotation65.getQ3();
        double double67 = rotation65.getQ2();
        double double68 = rotation65.getAngle();
        org.apache.commons.math.geometry.Rotation rotation69 = rotation65.revert();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation();
        double double71 = rotation70.getQ3();
        double double72 = rotation70.getQ2();
        double double73 = rotation70.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation70.getAxis();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(vector3D74, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation69.applyInverseTo(vector3D74);
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(vector3D74, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotation62.applyInverseTo(vector3D74);
        org.apache.commons.math.geometry.Rotation rotation81 = rotation55.applyInverseTo(rotation62);
        double[][] doubleArray82 = rotation62.getMatrix();
        double double83 = rotation62.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder84 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray85 = rotation62.getAngles(rotationOrder84);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-1.0d) + "'", double63 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
    }

    @Test
    public void test0876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0876");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 100L, (double) (byte) 10, (double) (short) -1, (-0.5d), true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation6.applyInverseTo(rotation13);
        double double16 = rotation13.getQ1();
        double[][] doubleArray17 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation18 = rotation5.applyTo(rotation13);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ3();
        double double21 = rotation19.getQ2();
        double double22 = rotation19.getAngle();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation19.revert();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation24.getAxis();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D28, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation23.applyInverseTo(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation5.applyInverseTo(vector3D31);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ2();
        double double35 = rotation33.getQ0();
        double[][] doubleArray36 = rotation33.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation33.applyInverseTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ3();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation33.applyInverseTo(rotation40);
        double double43 = rotation40.getQ3();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation();
        double double45 = rotation44.getQ2();
        double double46 = rotation44.getQ0();
        double[][] doubleArray47 = rotation44.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ3();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation44.applyInverseTo(rotation48);
        double double51 = rotation50.getQ0();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation40.applyInverseTo(rotation50);
        double[][] doubleArray53 = rotation40.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation5.applyTo(rotation40);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-1.0d) + "'", double51 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(rotation54);
    }

    @Test
    public void test0877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0877");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ1();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation5);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation9.getAxis();
        double double11 = rotation9.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-1.0d) + "'", double11 == (-1.0d));
    }

    @Test
    public void test0878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0878");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = null;
        double[] doubleArray7 = rotation5.getAngles(rotationOrder6);
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        double double16 = rotation13.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation12.applyInverseTo(vector3D17);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation24.applyTo(vector3D29);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D17, vector3D30);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(vector3D8, vector3D30);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ2();
        double double35 = rotation33.getQ0();
        double[][] doubleArray36 = rotation33.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation33.applyInverseTo(rotation37);
        double double40 = rotation37.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation37.getAxis();
        double double42 = rotation37.getQ2();
        double double43 = rotation37.getQ0();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation();
        double double45 = rotation44.getQ3();
        double double46 = rotation44.getQ2();
        double double47 = rotation44.getAngle();
        double[][] doubleArray48 = rotation44.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(doubleArray48, (double) (short) 1);
        double double51 = rotation50.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation50.getAxis();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ3();
        double double55 = rotation53.getQ2();
        org.apache.commons.math.geometry.Rotation rotation56 = rotation53.revert();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        double double59 = rotation57.getQ2();
        double double60 = rotation57.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation57.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation56.applyInverseTo(vector3D61);
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(vector3D61, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation50.applyInverseTo(vector3D61);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation();
        double double67 = rotation66.getQ2();
        double double68 = rotation66.getQ0();
        double[][] doubleArray69 = rotation66.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation();
        double double71 = rotation70.getQ3();
        org.apache.commons.math.geometry.Rotation rotation72 = rotation66.applyInverseTo(rotation70);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation();
        double double74 = rotation73.getQ3();
        double double75 = rotation73.getQ2();
        org.apache.commons.math.geometry.Rotation rotation76 = rotation73.revert();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation();
        double double78 = rotation77.getQ2();
        double double79 = rotation77.getQ0();
        double[][] doubleArray80 = rotation77.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation();
        double double82 = rotation81.getQ3();
        org.apache.commons.math.geometry.Rotation rotation83 = rotation77.applyInverseTo(rotation81);
        org.apache.commons.math.geometry.Rotation rotation84 = rotation76.applyInverseTo(rotation77);
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation();
        double double86 = rotation85.getQ3();
        double double87 = rotation85.getQ2();
        double double88 = rotation85.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation85.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotation77.applyTo(vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotation66.applyInverseTo(vector3D89);
        org.apache.commons.math.geometry.Rotation rotation93 = new org.apache.commons.math.geometry.Rotation(vector3D91, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D94 = rotation50.applyInverseTo(vector3D91);
        org.apache.commons.math.geometry.Vector3D vector3D95 = rotation50.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D96 = rotation37.applyInverseTo(vector3D95);
        org.apache.commons.math.geometry.Vector3D vector3D97 = rotation32.applyInverseTo(vector3D96);
        org.apache.commons.math.geometry.Vector3D vector3D98 = rotation32.getAxis();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[3.141592653589793, 1.5707963267948968, 3.141592653589793]");
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.0d + "'", double79 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(rotation83);
        org.junit.Assert.assertNotNull(rotation84);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertNotNull(vector3D96);
        org.junit.Assert.assertNotNull(vector3D97);
        org.junit.Assert.assertNotNull(vector3D98);
    }

    @Test
    public void test0879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0879");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double11 = rotation10.getQ2();
        double double12 = rotation10.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation10.getAxis();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D13);
        double double15 = rotation14.getQ1();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.995037190209989d + "'", double11 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    }

    @Test
    public void test0880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0880");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        double double12 = rotation3.getAngle();
        double double13 = rotation3.getQ1();
        double double14 = rotation3.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        double double17 = rotation15.getQ2();
        double double18 = rotation15.getAngle();
        double[][] doubleArray19 = rotation15.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ2();
        double double22 = rotation20.getQ1();
        double double23 = rotation20.getAngle();
        org.apache.commons.math.geometry.Rotation rotation24 = rotation15.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation25.revert();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ3();
        double double31 = rotation29.getQ2();
        double double32 = rotation29.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation29.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation28.applyInverseTo(vector3D33);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        double double43 = rotation41.getQ2();
        double double44 = rotation41.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation41.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation40.applyTo(vector3D45);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(vector3D33, vector3D46);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ2();
        double double50 = rotation48.getQ0();
        double[][] doubleArray51 = rotation48.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation();
        double double53 = rotation52.getQ3();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation48.applyInverseTo(rotation52);
        double double55 = rotation52.getQ2();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        double double57 = rotation56.getQ2();
        double double58 = rotation56.getQ0();
        double[][] doubleArray59 = rotation56.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation();
        double double61 = rotation60.getQ3();
        org.apache.commons.math.geometry.Rotation rotation62 = rotation56.applyInverseTo(rotation60);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation();
        double double64 = rotation63.getQ3();
        org.apache.commons.math.geometry.Rotation rotation65 = rotation56.applyInverseTo(rotation63);
        double double66 = rotation63.getQ3();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation();
        double double68 = rotation67.getQ2();
        double double69 = rotation67.getQ0();
        double[][] doubleArray70 = rotation67.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation();
        double double72 = rotation71.getQ3();
        org.apache.commons.math.geometry.Rotation rotation73 = rotation67.applyInverseTo(rotation71);
        double double74 = rotation73.getQ0();
        org.apache.commons.math.geometry.Rotation rotation75 = rotation63.applyInverseTo(rotation73);
        org.apache.commons.math.geometry.Rotation rotation76 = rotation52.applyInverseTo(rotation75);
        org.apache.commons.math.geometry.Rotation rotation77 = rotation47.applyTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation78 = rotation20.applyTo(rotation47);
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation();
        double double80 = rotation79.getQ3();
        double double81 = rotation79.getQ2();
        double double82 = rotation79.getAngle();
        double[][] doubleArray83 = rotation79.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation(doubleArray83, (double) (short) 1);
        double double86 = rotation85.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotation85.getAxis();
        org.apache.commons.math.geometry.Rotation rotation88 = rotation20.applyTo(rotation85);
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation20.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotation3.applyTo(vector3D89);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-1.0d) + "'", double74 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertNotNull(rotation78);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(rotation88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
    }

    @Test
    public void test0881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0881");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.0d, 2.943247885977952d, 0.6931032706702748d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0882");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (-0.5d), (double) (short) -1, (double) (-1.0f), false);
        double double6 = rotation5.getQ1();
        double[][] doubleArray7 = rotation5.getMatrix();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.5d) + "'", double6 == (-0.5d));
        org.junit.Assert.assertNotNull(doubleArray7);
    }

    @Test
    public void test0883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0883");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, 10.0d, (-0.031222023722052576d), 0.028545850260162355d, true);
    }

    @Test
    public void test0884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0884");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0d);
        double[][] doubleArray7 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(doubleArray7, 1.0d);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(doubleArray7, 0.9949879346007117d);
        double double12 = rotation11.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = null;
        double[] doubleArray14 = rotation11.getAngles(rotationOrder13);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.9649660284921133d + "'", double12 == 0.9649660284921133d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.5707963267948966, 0.530964914873383, -1.5707963267948966]");
    }

    @Test
    public void test0885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0885");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.995037190209989d, (double) '#', (double) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0886");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0018853026163470825d, (-0.0d), 0.007070537541434264d, 0.29814239699997197d, true);
    }

    @Test
    public void test0887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0887");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D10);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation12.revert();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation15.applyInverseTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation24.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation16.applyTo(vector3D28);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D29);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        double double33 = rotation31.getQ2();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation31.revert();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ2();
        double double37 = rotation35.getQ0();
        double[][] doubleArray38 = rotation35.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation35.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation42 = rotation34.applyInverseTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation30.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation((double) 100L, (double) (byte) 10, (double) (short) -1, (-0.5d), true);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation();
        double double51 = rotation50.getQ2();
        double double52 = rotation50.getQ0();
        double[][] doubleArray53 = rotation50.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ3();
        org.apache.commons.math.geometry.Rotation rotation56 = rotation50.applyInverseTo(rotation54);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation50.applyInverseTo(rotation57);
        double double60 = rotation57.getQ1();
        double[][] doubleArray61 = rotation57.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation62 = rotation49.applyTo(rotation57);
        double double63 = rotation49.getQ0();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation();
        double double65 = rotation64.getQ3();
        double double66 = rotation64.getQ2();
        double double67 = rotation64.getAngle();
        double[][] doubleArray68 = rotation64.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(doubleArray68, (double) 1L);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(doubleArray68, (double) 100);
        org.apache.commons.math.geometry.Rotation rotation73 = rotation49.applyInverseTo(rotation72);
        org.apache.commons.math.geometry.Rotation rotation74 = rotation30.applyTo(rotation73);
        double double75 = rotation74.getQ2();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.9949756218412634d + "'", double63 == 0.9949756218412634d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.009949756218412634d) + "'", double75 == (-0.009949756218412634d));
    }

    @Test
    public void test0888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0888");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.5d, 0.2857142857142857d, 0.7070891041799029d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0889");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (short) 0, (double) (short) 100, 0.2857142857142857d, 0.7208382876544367d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation6.applyInverseTo(rotation13);
        double double16 = rotation13.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation5.applyTo(vector3D17);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
    }

    @Test
    public void test0890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0890");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) (short) 1);
        double double7 = rotation6.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation6.getAxis();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        double double16 = rotation13.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation12.applyInverseTo(vector3D17);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(vector3D17, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation6.applyInverseTo(vector3D17);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        double double24 = rotation22.getQ0();
        double[][] doubleArray25 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ3();
        double double31 = rotation29.getQ2();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation29.revert();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ2();
        double double35 = rotation33.getQ0();
        double[][] doubleArray36 = rotation33.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation33.applyInverseTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation32.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        double double43 = rotation41.getQ2();
        double double44 = rotation41.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation41.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation33.applyTo(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation22.applyInverseTo(vector3D45);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(vector3D47, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation6.applyInverseTo(vector3D47);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(vector3D47, (double) 1);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ3();
        double double55 = rotation53.getQ2();
        double double56 = rotation53.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation53.getAxis();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(vector3D57, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation();
        double double67 = rotation66.getQ3();
        double double68 = rotation66.getQ2();
        double double69 = rotation66.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation66.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation65.applyTo(vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotation65.getAxis();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation();
        double double74 = rotation73.getQ3();
        double double75 = rotation73.getQ2();
        double double76 = rotation73.getAngle();
        org.apache.commons.math.geometry.Rotation rotation77 = rotation73.revert();
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation();
        double double79 = rotation78.getQ3();
        double double80 = rotation78.getQ2();
        double double81 = rotation78.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation78.getAxis();
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(vector3D82, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation77.applyInverseTo(vector3D82);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D47, vector3D57, vector3D72, vector3D82);
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(vector3D57, (-0.009999000149975004d));
        org.apache.commons.math.geometry.Rotation rotation89 = rotation88.revert();
        double double90 = rotation88.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(rotation89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.009999000149975004d + "'", double90 == 0.009999000149975004d);
    }

    @Test
    public void test0891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0891");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ1();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, 1.531570594506642d);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(doubleArray4, 0.995037190209989d);
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation8.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray11 = rotation8.getAngles(rotationOrder10);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(vector3D9);
    }

    @Test
    public void test0892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0892");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ2();
        double double14 = rotation12.getQ1();
        double double15 = rotation12.getAngle();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation7.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        double double19 = rotation17.getQ2();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation17.revert();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ2();
        double double23 = rotation21.getQ0();
        double[][] doubleArray24 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation21.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation20.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ3();
        double double31 = rotation29.getQ2();
        double double32 = rotation29.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation29.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation21.applyTo(vector3D33);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ3();
        double double37 = rotation35.getQ2();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation35.revert();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        double double41 = rotation39.getQ2();
        double double42 = rotation39.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation39.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation38.applyInverseTo(vector3D43);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(vector3D33, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation16.applyInverseTo(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation6.applyTo(vector3D46);
        java.lang.Class<?> wildcardClass48 = vector3D46.getClass();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0893");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.29814239699997197d, (-0.5d), (double) (-1L), (double) 1.0f, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray7 = rotation5.getAngles(rotationOrder6);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0894");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0d);
        double[][] doubleArray7 = rotation6.getMatrix();
        double double8 = rotation6.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation6.revert();
        double double10 = rotation6.getQ2();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }

    @Test
    public void test0895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0895");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(2.9422652488599566d, (double) 1, 2.9422652488599566d, 0.0d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(vector3D10, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        double double16 = rotation13.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(vector3D17, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        double double23 = rotation20.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation20.getAxis();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        double double33 = rotation31.getQ2();
        double double34 = rotation31.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation31.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation30.applyTo(vector3D35);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D17, vector3D24, vector3D35);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation5.applyInverseTo(rotation37);
        double double39 = rotation5.getQ1();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.2336738846784456d + "'", double39 == 0.2336738846784456d);
    }

    @Test
    public void test0896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0896");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        double double18 = rotation15.getQ2();
        double double19 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation7.applyTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ2();
        double double23 = rotation21.getQ0();
        double[][] doubleArray24 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation21.applyInverseTo(rotation25);
        double double28 = rotation25.getQ2();
        double double29 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ2();
        double double32 = rotation30.getQ0();
        double[][] doubleArray33 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation25.applyTo(rotation30);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation30.getAxis();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation20.applyTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation30.revert();
        double[][] doubleArray38 = rotation37.getMatrix();
        double double39 = rotation37.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
    }

    @Test
    public void test0897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0897");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray6 = rotation4.getAngles(rotationOrder5);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
    }

    @Test
    public void test0898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0898");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D10);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D10, 2.9422652488599566d);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(vector3D10, 2.9422652488599566d);
        double double16 = rotation15.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = null;
        double[] doubleArray18 = rotation15.getAngles(rotationOrder17);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.0d) + "'", double16 == (-0.0d));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.5707963267948966, 2.9422652488599566, 1.5707963267948966]");
    }

    @Test
    public void test0899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0899");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        double double13 = rotation11.getQ2();
        double double14 = rotation11.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation11.getAxis();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double22 = rotation21.getQ2();
        double double23 = rotation21.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation21.getAxis();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D15, vector3D24);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D15);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ3();
        double double29 = rotation27.getQ2();
        double double30 = rotation27.getAngle();
        double[][] doubleArray31 = rotation27.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ2();
        double double34 = rotation32.getQ1();
        double double35 = rotation32.getAngle();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation27.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation26.applyTo(rotation32);
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray39 = rotation32.getAngles(rotationOrder38);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.995037190209989d + "'", double22 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
    }

    @Test
    public void test0900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0900");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ1();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation5);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        double double12 = rotation10.getQ2();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation10.revert();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ2();
        double double16 = rotation14.getQ0();
        double[][] doubleArray17 = rotation14.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation14.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation13.applyInverseTo(rotation14);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        double double24 = rotation22.getQ2();
        double double25 = rotation22.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation22.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation14.applyTo(vector3D26);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        double double30 = rotation28.getQ2();
        org.apache.commons.math.geometry.Rotation rotation31 = rotation28.revert();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        double double35 = rotation32.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation32.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation31.applyInverseTo(vector3D36);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(vector3D26, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation9.applyInverseTo(vector3D36);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation((-1.0d), (double) 0, (double) (byte) 100, (double) (-1.0f), true);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ2();
        double double49 = rotation47.getQ0();
        double[][] doubleArray50 = rotation47.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation();
        double double52 = rotation51.getQ3();
        org.apache.commons.math.geometry.Rotation rotation53 = rotation47.applyInverseTo(rotation51);
        double double54 = rotation51.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation51.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation46.applyTo(vector3D55);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation62.getAxis();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(vector3D56, vector3D63);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation();
        double double66 = rotation65.getQ2();
        double double67 = rotation65.getQ0();
        double[][] doubleArray68 = rotation65.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation();
        double double70 = rotation69.getQ3();
        org.apache.commons.math.geometry.Rotation rotation71 = rotation65.applyInverseTo(rotation69);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation();
        double double73 = rotation72.getQ3();
        double double74 = rotation72.getQ2();
        org.apache.commons.math.geometry.Rotation rotation75 = rotation72.revert();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation();
        double double77 = rotation76.getQ2();
        double double78 = rotation76.getQ0();
        double[][] doubleArray79 = rotation76.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation();
        double double81 = rotation80.getQ3();
        org.apache.commons.math.geometry.Rotation rotation82 = rotation76.applyInverseTo(rotation80);
        org.apache.commons.math.geometry.Rotation rotation83 = rotation75.applyInverseTo(rotation76);
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation();
        double double85 = rotation84.getQ3();
        double double86 = rotation84.getQ2();
        double double87 = rotation84.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotation84.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation76.applyTo(vector3D88);
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotation65.applyInverseTo(vector3D88);
        org.apache.commons.math.geometry.Rotation rotation92 = new org.apache.commons.math.geometry.Rotation(vector3D90, (double) '4');
        org.apache.commons.math.geometry.Rotation rotation93 = new org.apache.commons.math.geometry.Rotation(vector3D63, vector3D90);
        org.apache.commons.math.geometry.Rotation rotation94 = rotation9.applyInverseTo(rotation93);
        double double95 = rotation93.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.0d + "'", double78 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(rotation82);
        org.junit.Assert.assertNotNull(rotation83);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(rotation94);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 1.5900247258946039d + "'", double95 == 1.5900247258946039d);
    }

    @Test
    public void test0901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0901");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.995037190209989d, 0.0d, (double) '4', (double) 1.0f, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation6.applyInverseTo(rotation13);
        double double16 = rotation13.getQ1();
        double[][] doubleArray17 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(doubleArray17, 0.0d);
        double double20 = rotation19.getAngle();
        double double21 = rotation19.getAngle();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation19.revert();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation22.revert();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation24.revert();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ3();
        double double31 = rotation29.getQ2();
        double double32 = rotation29.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation29.getAxis();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(vector3D33, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation28.applyInverseTo(vector3D33);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ2();
        double double39 = rotation37.getQ0();
        double[][] doubleArray40 = rotation37.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        org.apache.commons.math.geometry.Rotation rotation43 = rotation37.applyInverseTo(rotation41);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation();
        double double45 = rotation44.getQ3();
        double double46 = rotation44.getQ2();
        org.apache.commons.math.geometry.Rotation rotation47 = rotation44.revert();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ2();
        double double50 = rotation48.getQ0();
        double[][] doubleArray51 = rotation48.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation();
        double double53 = rotation52.getQ3();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation48.applyInverseTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation47.applyInverseTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        double double57 = rotation56.getQ3();
        double double58 = rotation56.getQ2();
        double double59 = rotation56.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation56.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation48.applyTo(vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation37.applyInverseTo(vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation28.applyInverseTo(vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation23.applyTo(vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation23.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation5.applyInverseTo(vector3D65);
        double double67 = rotation5.getQ0();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.019128292823014093d + "'", double67 == 0.019128292823014093d);
    }

    @Test
    public void test0902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0902");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        double double7 = rotation5.getQ2();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        double double10 = rotation8.getQ2();
        double double11 = rotation8.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation8.getAxis();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(vector3D12, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        double double17 = rotation15.getQ2();
        double double18 = rotation15.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation15.getAxis();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(vector3D19, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        double double24 = rotation22.getQ2();
        double double25 = rotation22.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation22.getAxis();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ3();
        double double35 = rotation33.getQ2();
        double double36 = rotation33.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation33.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation32.applyTo(vector3D37);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(vector3D12, vector3D19, vector3D26, vector3D37);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double46 = rotation45.getQ2();
        double double47 = rotation45.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation45.getAxis();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(vector3D19, vector3D48);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D48, (double) (-1L));
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(vector3D48, 0.7208382876544367d);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation5.applyTo(rotation53);
        double double55 = rotation54.getQ0();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.7071067811865475d + "'", double7 == 0.7071067811865475d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.995037190209989d + "'", double46 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.41353925772895467d + "'", double55 == 0.41353925772895467d);
    }

    @Test
    public void test0903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0903");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        org.apache.commons.math.geometry.Rotation rotation11 = rotation7.revert();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        double double15 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.getAxis();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(vector3D16, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation11.applyInverseTo(vector3D16);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ2();
        double double22 = rotation20.getQ0();
        double[][] doubleArray23 = rotation20.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation20.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ3();
        double double29 = rotation27.getQ2();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation27.revert();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ2();
        double double33 = rotation31.getQ0();
        double[][] doubleArray34 = rotation31.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ3();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation31.applyInverseTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation30.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        double double41 = rotation39.getQ2();
        double double42 = rotation39.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation39.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation31.applyTo(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation20.applyInverseTo(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation11.applyInverseTo(vector3D45);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        double double53 = rotation52.getQ3();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation11.applyTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ3();
        double double57 = rotation55.getQ2();
        double double58 = rotation55.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation55.getAxis();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(vector3D59, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        double double64 = rotation62.getQ2();
        double double65 = rotation62.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation62.getAxis();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(vector3D66, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation();
        double double70 = rotation69.getQ3();
        double double71 = rotation69.getQ2();
        double double72 = rotation69.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation69.getAxis();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation();
        double double81 = rotation80.getQ3();
        double double82 = rotation80.getQ2();
        double double83 = rotation80.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation80.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation79.applyTo(vector3D84);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D59, vector3D66, vector3D73, vector3D84);
        double double87 = rotation86.getQ3();
        org.apache.commons.math.geometry.Rotation rotation88 = rotation54.applyInverseTo(rotation86);
        org.apache.commons.math.geometry.Rotation rotation89 = rotation6.applyTo(rotation54);
        double double90 = rotation54.getQ2();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue(Double.isNaN(double87));
        org.junit.Assert.assertNotNull(rotation88);
        org.junit.Assert.assertNotNull(rotation89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.7071067811865475d) + "'", double90 == (-0.7071067811865475d));
    }

    @Test
    public void test0904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0904");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.9901956025589367d, 0.2857142857142857d, (double) 0, 2.943247885977952d, false);
    }

    @Test
    public void test0905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0905");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(1.0d, (double) 1L, (-0.0703597544730292d), (double) (-1L), false);
    }

    @Test
    public void test0906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0906");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.9689124217106447d, 0.9949879346007117d, 0.9540556703999103d, (double) 10.0f, false);
    }

    @Test
    public void test0907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0907");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.9949879346007117d, (double) (short) 0, 2.0943951023931953d, (double) (byte) -1, true);
    }

    @Test
    public void test0908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0908");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.995037190209989d, (double) (byte) 0, 0.7053441835437086d, 0.019227214231343204d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.junit.Assert.assertNotNull(rotation6);
    }

    @Test
    public void test0909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0909");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation7.getAxis();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D11, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation24.applyTo(vector3D29);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D11, vector3D18, vector3D29);
        double double32 = rotation31.getQ2();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
    }

    @Test
    public void test0910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0910");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, (double) (short) 1);
        double double14 = rotation13.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation13.getAxis();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ3();
        double double18 = rotation16.getQ2();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation16.revert();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        double double23 = rotation20.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation20.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation19.applyInverseTo(vector3D24);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(vector3D24, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation13.applyInverseTo(vector3D24);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ2();
        double double31 = rotation29.getQ0();
        double[][] doubleArray32 = rotation29.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ3();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation29.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        double double38 = rotation36.getQ2();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation36.revert();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ2();
        double double42 = rotation40.getQ0();
        double[][] doubleArray43 = rotation40.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation();
        double double45 = rotation44.getQ3();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation40.applyInverseTo(rotation44);
        org.apache.commons.math.geometry.Rotation rotation47 = rotation39.applyInverseTo(rotation40);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ3();
        double double50 = rotation48.getQ2();
        double double51 = rotation48.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation48.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation40.applyTo(vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation29.applyInverseTo(vector3D52);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(vector3D54, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation13.applyInverseTo(vector3D54);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(vector3D54, (double) 1);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation();
        double double61 = rotation60.getQ3();
        double double62 = rotation60.getQ2();
        double double63 = rotation60.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation60.getAxis();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(vector3D64, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation();
        double double74 = rotation73.getQ3();
        double double75 = rotation73.getQ2();
        double double76 = rotation73.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation73.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation72.applyTo(vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotation72.getAxis();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation();
        double double81 = rotation80.getQ3();
        double double82 = rotation80.getQ2();
        double double83 = rotation80.getAngle();
        org.apache.commons.math.geometry.Rotation rotation84 = rotation80.revert();
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation();
        double double86 = rotation85.getQ3();
        double double87 = rotation85.getQ2();
        double double88 = rotation85.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation85.getAxis();
        org.apache.commons.math.geometry.Rotation rotation91 = new org.apache.commons.math.geometry.Rotation(vector3D89, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotation84.applyInverseTo(vector3D89);
        org.apache.commons.math.geometry.Rotation rotation93 = new org.apache.commons.math.geometry.Rotation(vector3D54, vector3D64, vector3D79, vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D94 = rotation5.applyTo(vector3D64);
        org.apache.commons.math.geometry.Rotation rotation95 = rotation5.revert();
        double double96 = rotation5.getAngle();
        double double97 = rotation5.getQ2();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(rotation84);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(rotation95);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 1.5707963267948963d + "'", double96 == 1.5707963267948963d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.7071067811865475d + "'", double97 == 0.7071067811865475d);
    }

    @Test
    public void test0911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0911");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) -1, (double) (short) -1, (double) (-1.0f), (double) 1, true);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation5.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = null;
        double[] doubleArray9 = rotation7.getAngles(rotationOrder8);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.5d) + "'", double6 == (-0.5d));
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-1.5707963267948966, 1.5707963267948966, 0.0]");
    }

    @Test
    public void test0912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0912");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.0d);
        java.lang.Class<?> wildcardClass14 = rotation13.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0913");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.019227214231343204d);
        double[][] doubleArray14 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(doubleArray14, 0.7002759405293947d);
        double double17 = rotation16.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
    }

    @Test
    public void test0914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0914");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) 1L);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) '#');
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(doubleArray4, 0.0d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray12 = rotation10.getAngles(rotationOrder11);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
    }

    @Test
    public void test0915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0915");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        double double16 = rotation13.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation12.applyInverseTo(vector3D17);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation24.applyTo(vector3D29);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D17, vector3D30);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ2();
        double double34 = rotation32.getQ0();
        double[][] doubleArray35 = rotation32.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation32.applyInverseTo(rotation36);
        double double39 = rotation36.getQ2();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ2();
        double double42 = rotation40.getQ0();
        double[][] doubleArray43 = rotation40.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation();
        double double45 = rotation44.getQ3();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation40.applyInverseTo(rotation44);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ3();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation40.applyInverseTo(rotation47);
        double double50 = rotation47.getQ3();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation();
        double double52 = rotation51.getQ2();
        double double53 = rotation51.getQ0();
        double[][] doubleArray54 = rotation51.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ3();
        org.apache.commons.math.geometry.Rotation rotation57 = rotation51.applyInverseTo(rotation55);
        double double58 = rotation57.getQ0();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation47.applyInverseTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation60 = rotation36.applyInverseTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation31.applyTo(rotation36);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation5.applyInverseTo(rotation61);
        org.apache.commons.math.geometry.RotationOrder rotationOrder63 = null;
        double[] doubleArray64 = rotation5.getAngles(rotationOrder63);
        org.apache.commons.math.geometry.Rotation rotation65 = rotation5.revert();
        double double66 = rotation5.getQ0();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.995037190209989d + "'", double6 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-1.0d) + "'", double58 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.5707963267948966, 2.942255348607469, 1.5707963267948966]");
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
    }

    @Test
    public void test0916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0916");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D6, (double) (short) 100);
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation8.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ2();
        double double16 = rotation14.getQ0();
        double[][] doubleArray17 = rotation14.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation14.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation14.applyInverseTo(rotation21);
        double double24 = rotation21.getQ1();
        double[][] doubleArray25 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(doubleArray25, 0.0d);
        double double28 = rotation27.getAngle();
        double double29 = rotation27.getAngle();
        double double30 = rotation27.getQ3();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ2();
        double double33 = rotation31.getQ0();
        double[][] doubleArray34 = rotation31.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ3();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation31.applyInverseTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation31.applyInverseTo(rotation38);
        double double41 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ2();
        double double44 = rotation42.getQ0();
        double[][] doubleArray45 = rotation42.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation42.applyInverseTo(rotation46);
        double double49 = rotation46.getQ2();
        double double50 = rotation46.getQ3();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation38.applyTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation27.applyInverseTo(rotation46);
        double double53 = rotation27.getAngle();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation8.applyTo(rotation27);
        double double55 = rotation8.getQ2();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.26237485370392877d) + "'", double55 == (-0.26237485370392877d));
    }

    @Test
    public void test0917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0917");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.995037190209989d, (-1.0d), (double) 10L, (double) 10L, true);
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ3();
        double double8 = rotation5.getQ1();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.703614788711539d + "'", double6 == 0.703614788711539d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.703614788711539d + "'", double7 == 0.703614788711539d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-0.0703614788711539d) + "'", double8 == (-0.0703614788711539d));
    }

    @Test
    public void test0918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0918");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.8775825618903728d, 0.0994987934600711d, 0.6667006794044591d, 1.5900247258946039d, false);
    }

    @Test
    public void test0919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0919");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.5d), (double) 100, (double) (byte) 10, (double) 0L, false);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = null;
        double[] doubleArray8 = rotation6.getAngles(rotationOrder7);
        double double9 = rotation6.getQ0();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.6704649792860586, 2.0943951023931957, -1.6704649792860586]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.5d + "'", double9 == 0.5d);
    }

    @Test
    public void test0920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0920");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.019227214231343204d, 0.0d, (double) '4', 0.26237485370392877d, false);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) ' ', (double) (-1.0f), (double) 0L, 0.9142857142857143d, true);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        double double16 = rotation13.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(vector3D17, (double) 100.0f);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(vector3D17, (double) (-1.0f));
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation12.applyTo(vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation6.applyTo(vector3D22);
        double double24 = rotation6.getQ1();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
    }

    @Test
    public void test0921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0921");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        double double24 = rotation22.getQ0();
        double[][] doubleArray25 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation21.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation30.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation22.applyTo(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation11.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation7.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        double double40 = rotation38.getQ2();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation38.revert();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        double double44 = rotation42.getQ2();
        double double45 = rotation42.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation42.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation41.applyInverseTo(vector3D46);
        double double48 = rotation41.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation41.getAxis();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation7.applyInverseTo(rotation41);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation((double) 1.0f, (double) (short) 10, (double) 100.0f, (double) (byte) -1, false);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        double double59 = rotation57.getQ2();
        double double60 = rotation57.getAngle();
        double[][] doubleArray61 = rotation57.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ2();
        double double64 = rotation62.getQ1();
        double double65 = rotation62.getAngle();
        org.apache.commons.math.geometry.Rotation rotation66 = rotation57.applyInverseTo(rotation62);
        double double67 = rotation57.getQ3();
        org.apache.commons.math.geometry.Rotation rotation68 = rotation56.applyTo(rotation57);
        double double69 = rotation56.getQ3();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation();
        double double71 = rotation70.getQ3();
        double double72 = rotation70.getQ2();
        double double73 = rotation70.getAngle();
        double[][] doubleArray74 = rotation70.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(doubleArray74, (double) (short) 1);
        double double77 = rotation76.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation76.getAxis();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation();
        double double80 = rotation79.getQ3();
        double double81 = rotation79.getQ2();
        org.apache.commons.math.geometry.Rotation rotation82 = rotation79.revert();
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation();
        double double84 = rotation83.getQ3();
        double double85 = rotation83.getQ2();
        double double86 = rotation83.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotation83.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotation82.applyInverseTo(vector3D87);
        org.apache.commons.math.geometry.Rotation rotation90 = new org.apache.commons.math.geometry.Rotation(vector3D87, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotation76.applyInverseTo(vector3D87);
        double double92 = rotation76.getAngle();
        org.apache.commons.math.geometry.Rotation rotation93 = rotation56.applyTo(rotation76);
        org.apache.commons.math.geometry.Rotation rotation94 = rotation7.applyTo(rotation76);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-1.0d) + "'", double69 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(rotation82);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
        org.junit.Assert.assertNotNull(rotation93);
        org.junit.Assert.assertNotNull(rotation94);
    }

    @Test
    public void test0922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0922");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D10);
        double double12 = rotation5.getAngle();
        double double13 = rotation5.getAngle();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 2.9422652488599566d + "'", double12 == 2.9422652488599566d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 2.9422652488599566d + "'", double13 == 2.9422652488599566d);
    }

    @Test
    public void test0923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0923");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 100L, 10.0d, (double) (byte) 0, 100.0d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation6.applyInverseTo(rotation13);
        double double16 = rotation13.getQ1();
        double[][] doubleArray17 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(doubleArray17, 0.0d);
        double double20 = rotation19.getAngle();
        double double21 = rotation19.getAngle();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation19.revert();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation5.applyInverseTo(rotation22);
        java.lang.Class<?> wildcardClass24 = rotation23.getClass();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0924");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation4.applyInverseTo(vector3D9);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ2();
        double double15 = rotation13.getQ0();
        double[][] doubleArray16 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation13.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation20.revert();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ2();
        double double26 = rotation24.getQ0();
        double[][] doubleArray27 = rotation24.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation24.applyInverseTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation23.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        double double35 = rotation32.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation32.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation24.applyTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation13.applyInverseTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation4.applyInverseTo(vector3D38);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        double double46 = rotation45.getQ3();
        org.apache.commons.math.geometry.Rotation rotation47 = rotation4.applyTo(rotation45);
        org.apache.commons.math.geometry.Rotation rotation48 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation49 = rotation47.applyTo(rotation48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(rotation47);
    }

    @Test
    public void test0925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0925");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 100L, (double) 0, (double) (short) 1, 0.7071067811865475d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.junit.Assert.assertNotNull(rotation6);
    }

    @Test
    public void test0926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0926");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ2();
        double double14 = rotation12.getQ1();
        double double15 = rotation12.getAngle();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation7.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        double double19 = rotation17.getQ2();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation17.revert();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ2();
        double double23 = rotation21.getQ0();
        double[][] doubleArray24 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation21.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation20.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ3();
        double double31 = rotation29.getQ2();
        double double32 = rotation29.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation29.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation21.applyTo(vector3D33);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ3();
        double double37 = rotation35.getQ2();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation35.revert();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        double double41 = rotation39.getQ2();
        double double42 = rotation39.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation39.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation38.applyInverseTo(vector3D43);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(vector3D33, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation16.applyInverseTo(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation6.applyTo(vector3D46);
        double double48 = rotation6.getAngle();
        double double49 = rotation6.getQ2();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.5707963267948963d + "'", double48 == 1.5707963267948963d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.7071067811865475d + "'", double49 == 0.7071067811865475d);
    }

    @Test
    public void test0927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0927");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation4.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        double double9 = rotation4.getQ2();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.revert();
        org.apache.commons.math.geometry.Rotation rotation11 = rotation4.revert();
        double double12 = rotation4.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    }

    @Test
    public void test0928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0928");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(doubleArray11, (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(doubleArray11, (double) 'a');
        double double18 = rotation17.getQ1();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
    }

    @Test
    public void test0929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0929");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 100L, (double) (byte) 10, (double) (short) -1, (-0.5d), true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation6.applyInverseTo(rotation13);
        double double16 = rotation13.getQ1();
        double[][] doubleArray17 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation18 = rotation5.applyTo(rotation13);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ2();
        double double21 = rotation19.getQ0();
        double[][] doubleArray22 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation19.applyInverseTo(rotation23);
        double double26 = rotation23.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation23.getAxis();
        double double28 = rotation23.getQ2();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double35 = rotation34.getQ2();
        double double36 = rotation34.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation34.getAxis();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        double double40 = rotation38.getQ2();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation38.revert();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        double double44 = rotation42.getQ2();
        double double45 = rotation42.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation42.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation41.applyInverseTo(vector3D46);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ3();
        double double56 = rotation54.getQ2();
        double double57 = rotation54.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation54.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation53.applyTo(vector3D58);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(vector3D46, vector3D59);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation();
        double double62 = rotation61.getQ2();
        double double63 = rotation61.getQ0();
        double[][] doubleArray64 = rotation61.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation();
        double double66 = rotation65.getQ3();
        org.apache.commons.math.geometry.Rotation rotation67 = rotation61.applyInverseTo(rotation65);
        double double68 = rotation65.getQ2();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation();
        double double70 = rotation69.getQ2();
        double double71 = rotation69.getQ0();
        double[][] doubleArray72 = rotation69.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation();
        double double74 = rotation73.getQ3();
        org.apache.commons.math.geometry.Rotation rotation75 = rotation69.applyInverseTo(rotation73);
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation();
        double double77 = rotation76.getQ3();
        org.apache.commons.math.geometry.Rotation rotation78 = rotation69.applyInverseTo(rotation76);
        double double79 = rotation76.getQ3();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation();
        double double81 = rotation80.getQ2();
        double double82 = rotation80.getQ0();
        double[][] doubleArray83 = rotation80.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation();
        double double85 = rotation84.getQ3();
        org.apache.commons.math.geometry.Rotation rotation86 = rotation80.applyInverseTo(rotation84);
        double double87 = rotation86.getQ0();
        org.apache.commons.math.geometry.Rotation rotation88 = rotation76.applyInverseTo(rotation86);
        org.apache.commons.math.geometry.Rotation rotation89 = rotation65.applyInverseTo(rotation88);
        org.apache.commons.math.geometry.Rotation rotation90 = rotation60.applyTo(rotation65);
        org.apache.commons.math.geometry.Rotation rotation91 = rotation34.applyInverseTo(rotation90);
        org.apache.commons.math.geometry.RotationOrder rotationOrder92 = null;
        double[] doubleArray93 = rotation34.getAngles(rotationOrder92);
        org.apache.commons.math.geometry.Rotation rotation94 = rotation34.revert();
        org.apache.commons.math.geometry.Rotation rotation95 = rotation23.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation96 = rotation18.applyInverseTo(rotation34);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.995037190209989d + "'", double35 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertNotNull(rotation78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1.0d + "'", double82 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertNotNull(rotation86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-1.0d) + "'", double87 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation88);
        org.junit.Assert.assertNotNull(rotation89);
        org.junit.Assert.assertNotNull(rotation90);
        org.junit.Assert.assertNotNull(rotation91);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[1.5707963267948966, 2.942255348607469, 1.5707963267948966]");
        org.junit.Assert.assertNotNull(rotation94);
        org.junit.Assert.assertNotNull(rotation95);
        org.junit.Assert.assertNotNull(rotation96);
    }

    @Test
    public void test0930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0930");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0d);
        double[][] doubleArray7 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(doubleArray7, (double) (short) 1);
        double double10 = rotation9.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.5309649148733835d + "'", double10 == 0.5309649148733835d);
    }

    @Test
    public void test0931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0931");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 10, 0.7208382876544367d, (double) (byte) 100, 0.0994987934600711d, true);
        double double6 = rotation5.getAngle();
        double[][] doubleArray7 = rotation5.getMatrix();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 2.9422605910525994d + "'", double6 == 2.9422605910525994d);
        org.junit.Assert.assertNotNull(doubleArray7);
    }

    @Test
    public void test0932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0932");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) (short) 1);
        double double7 = rotation6.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation6.getAxis();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        double double16 = rotation13.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation12.applyInverseTo(vector3D17);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(vector3D17, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation6.applyInverseTo(vector3D17);
        double double22 = rotation6.getAngle();
        double double23 = rotation6.getQ3();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
    }

    @Test
    public void test0933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0933");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.7138722624641411d, 0.2623748537039287d, (-0.02857142857142857d), (double) 0L, true);
    }

    @Test
    public void test0934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0934");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.9649660284921133d, 2.9422652488599566d, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0935");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0d);
        double[][] doubleArray7 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(doubleArray7, 1.0d);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(doubleArray7, 0.9949879346007117d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D13 = rotation11.applyTo(vector3D12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(doubleArray7);
    }

    @Test
    public void test0936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0936");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getAngle();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double9 = rotation8.getQ2();
        double double10 = rotation8.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation8.getAxis();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation12.revert();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ3();
        double double18 = rotation16.getQ2();
        double double19 = rotation16.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation16.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation15.applyInverseTo(vector3D20);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        double double30 = rotation28.getQ2();
        double double31 = rotation28.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation28.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation27.applyTo(vector3D32);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(vector3D20, vector3D33);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ2();
        double double37 = rotation35.getQ0();
        double[][] doubleArray38 = rotation35.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation35.applyInverseTo(rotation39);
        double double42 = rotation39.getQ2();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation();
        double double44 = rotation43.getQ2();
        double double45 = rotation43.getQ0();
        double[][] doubleArray46 = rotation43.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ3();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation43.applyInverseTo(rotation47);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation();
        double double51 = rotation50.getQ3();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation43.applyInverseTo(rotation50);
        double double53 = rotation50.getQ3();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ2();
        double double56 = rotation54.getQ0();
        double[][] doubleArray57 = rotation54.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation();
        double double59 = rotation58.getQ3();
        org.apache.commons.math.geometry.Rotation rotation60 = rotation54.applyInverseTo(rotation58);
        double double61 = rotation60.getQ0();
        org.apache.commons.math.geometry.Rotation rotation62 = rotation50.applyInverseTo(rotation60);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation39.applyInverseTo(rotation62);
        org.apache.commons.math.geometry.Rotation rotation64 = rotation34.applyTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation65 = rotation8.applyInverseTo(rotation64);
        org.apache.commons.math.geometry.RotationOrder rotationOrder66 = null;
        double[] doubleArray67 = rotation8.getAngles(rotationOrder66);
        org.apache.commons.math.geometry.Rotation rotation68 = rotation0.applyInverseTo(rotation8);
        double[][] doubleArray69 = rotation8.getMatrix();
        double[][] doubleArray70 = rotation8.getMatrix();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.995037190209989d + "'", double9 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-1.0d) + "'", double61 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.5707963267948966, 2.942255348607469, 1.5707963267948966]");
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleArray70);
    }

    @Test
    public void test0937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0937");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.5d, 2.9422605910525994d, 0.7064762846593019d, (-0.479425538604203d), true);
    }

    @Test
    public void test0938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0938");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        double double15 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation11.applyTo(vector3D16);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ2();
        double double20 = rotation18.getQ0();
        double[][] doubleArray21 = rotation18.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        org.apache.commons.math.geometry.Rotation rotation24 = rotation18.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation25.revert();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ2();
        double double31 = rotation29.getQ0();
        double[][] doubleArray32 = rotation29.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ3();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation29.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation28.applyInverseTo(rotation29);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        double double39 = rotation37.getQ2();
        double double40 = rotation37.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation37.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation29.applyTo(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation18.applyInverseTo(vector3D41);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(vector3D17, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation5.applyTo(vector3D41);
        double double46 = rotation5.getAngle();
        double[][] doubleArray47 = rotation5.getMatrix();
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.5707963267948963d + "'", double46 == 1.5707963267948963d);
        org.junit.Assert.assertNotNull(doubleArray47);
    }

    @Test
    public void test0939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0939");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        double double12 = rotation3.getAngle();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        double double16 = rotation13.getAngle();
        double[][] doubleArray17 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(doubleArray17, (double) (short) 1);
        double double20 = rotation19.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation19.getAxis();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        double double24 = rotation22.getQ2();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation22.revert();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        double double28 = rotation26.getQ2();
        double double29 = rotation26.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation26.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation25.applyInverseTo(vector3D30);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(vector3D30, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation19.applyInverseTo(vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation3.applyTo(vector3D30);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation3.revert();
        double double37 = rotation3.getQ1();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
    }

    @Test
    public void test0940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0940");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation4.applyInverseTo(vector3D9);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ2();
        double double15 = rotation13.getQ0();
        double[][] doubleArray16 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation13.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation20.revert();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ2();
        double double26 = rotation24.getQ0();
        double[][] doubleArray27 = rotation24.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation24.applyInverseTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation23.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        double double35 = rotation32.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation32.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation24.applyTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation13.applyInverseTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation4.applyInverseTo(vector3D38);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        double double46 = rotation45.getQ3();
        org.apache.commons.math.geometry.Rotation rotation47 = rotation4.applyTo(rotation45);
        double double48 = rotation47.getQ2();
        double double49 = rotation47.getQ2();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + (-0.7071067811865475d) + "'", double48 == (-0.7071067811865475d));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-0.7071067811865475d) + "'", double49 == (-0.7071067811865475d));
    }

    @Test
    public void test0941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0941");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(doubleArray3, (double) 10);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(doubleArray3, 0.7064762846593019d);
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation7.getAxis();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(vector3D8, 0.981108438603097d);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertNotNull(vector3D8);
    }

    @Test
    public void test0942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0942");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D10);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation12.revert();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation15.applyInverseTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation24.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation16.applyTo(vector3D28);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D29);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        double double33 = rotation31.getQ2();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation31.revert();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ2();
        double double37 = rotation35.getQ0();
        double[][] doubleArray38 = rotation35.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation35.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation42 = rotation34.applyInverseTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation30.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation44 = rotation34.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray46 = rotation44.getAngles(rotationOrder45);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
    }

    @Test
    public void test0943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0943");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation4.getQ2();
        double double8 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ2();
        double double11 = rotation9.getQ0();
        double[][] doubleArray12 = rotation9.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation4.applyTo(rotation9);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        double[][] doubleArray18 = rotation14.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(doubleArray18, (double) (short) 1);
        double double21 = rotation20.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation20.getAxis();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        double double25 = rotation23.getQ2();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation23.revert();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ2();
        double double29 = rotation27.getQ0();
        double[][] doubleArray30 = rotation27.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation27.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation26.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ3();
        double double37 = rotation35.getQ2();
        double double38 = rotation35.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation35.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation27.applyTo(vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation20.applyInverseTo(vector3D40);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        double double44 = rotation42.getQ2();
        double double45 = rotation42.getAngle();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation42.revert();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ3();
        double double49 = rotation47.getQ2();
        double double50 = rotation47.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation47.getAxis();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(vector3D51, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation46.applyInverseTo(vector3D51);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(vector3D51, (double) (byte) 100);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        double double59 = rotation57.getQ2();
        org.apache.commons.math.geometry.Rotation rotation60 = rotation57.revert();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation();
        double double62 = rotation61.getQ2();
        double double63 = rotation61.getQ0();
        double[][] doubleArray64 = rotation61.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation();
        double double66 = rotation65.getQ3();
        org.apache.commons.math.geometry.Rotation rotation67 = rotation61.applyInverseTo(rotation65);
        org.apache.commons.math.geometry.Rotation rotation68 = rotation60.applyInverseTo(rotation61);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation();
        double double70 = rotation69.getQ3();
        double double71 = rotation69.getQ2();
        double double72 = rotation69.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation69.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation61.applyTo(vector3D73);
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(vector3D51, vector3D73);
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(vector3D40, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation13.applyTo(vector3D51);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D77);
    }

    @Test
    public void test0944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0944");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation4.applyInverseTo(vector3D9);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(vector3D9, (double) (byte) 100);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(vector3D9, Double.NaN);
        double[][] doubleArray17 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation16.getAxis();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ3();
        double double21 = rotation19.getQ2();
        double double22 = rotation19.getAngle();
        double[][] doubleArray23 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ2();
        double double26 = rotation24.getQ1();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation19.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ3();
        double double31 = rotation29.getQ2();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation29.revert();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ2();
        double double35 = rotation33.getQ0();
        double[][] doubleArray36 = rotation33.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation33.applyInverseTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation32.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        double double43 = rotation41.getQ2();
        double double44 = rotation41.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation41.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation33.applyTo(vector3D45);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ3();
        double double49 = rotation47.getQ2();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation47.revert();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation();
        double double52 = rotation51.getQ3();
        double double53 = rotation51.getQ2();
        double double54 = rotation51.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation51.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation50.applyInverseTo(vector3D55);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(vector3D45, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation28.applyInverseTo(vector3D55);
        org.apache.commons.math.geometry.Rotation rotation59 = rotation28.revert();
        double double60 = rotation59.getQ2();
        org.apache.commons.math.geometry.Rotation rotation61 = rotation16.applyTo(rotation59);
        double double62 = rotation16.getQ2();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
    }

    @Test
    public void test0945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0945");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(doubleArray3, (double) (byte) 0);
        double double6 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation5.revert();
        double double8 = rotation7.getQ3();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    }

    @Test
    public void test0946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0946");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, (double) 0);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ2();
        double double16 = rotation14.getQ0();
        double[][] doubleArray17 = rotation14.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation14.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation14.applyInverseTo(rotation21);
        double double24 = rotation21.getQ1();
        double[][] doubleArray25 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation13.applyTo(rotation21);
        double[][] doubleArray27 = rotation21.getMatrix();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(doubleArray27);
    }

    @Test
    public void test0947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0947");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation4.getQ2();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ2();
        double double10 = rotation8.getQ0();
        double[][] doubleArray11 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation8.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation8.applyInverseTo(rotation15);
        double double18 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ2();
        double double21 = rotation19.getQ0();
        double[][] doubleArray22 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation19.applyInverseTo(rotation23);
        double double26 = rotation25.getQ0();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation15.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation4.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ3();
        double double37 = rotation35.getQ2();
        double double38 = rotation35.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation35.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation34.applyTo(vector3D39);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        double double43 = rotation41.getQ2();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation41.revert();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ2();
        double double47 = rotation45.getQ0();
        double[][] doubleArray48 = rotation45.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation45.applyInverseTo(rotation49);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation44.applyInverseTo(rotation45);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ3();
        double double55 = rotation53.getQ2();
        double double56 = rotation53.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation53.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation45.applyTo(vector3D57);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(vector3D39, vector3D58);
        double[][] doubleArray60 = rotation59.getMatrix();
        double[][] doubleArray61 = rotation59.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(doubleArray61, (double) 0);
        org.apache.commons.math.geometry.Rotation rotation64 = rotation27.applyTo(rotation63);
        double[][] doubleArray65 = rotation27.getMatrix();
        double double66 = rotation27.getQ2();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1.0d) + "'", double26 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
    }

    @Test
    public void test0948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0948");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.9649660284921133d, (double) '4', 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0949");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ1();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) 100.0f);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) (byte) 100);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(doubleArray4, 0.9901956025589367d);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
    }

    @Test
    public void test0950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0950");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 10, 0.7208382876544367d, (double) (byte) 100, 0.0994987934600711d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation6.applyInverseTo(rotation13);
        double double16 = rotation13.getQ1();
        double[][] doubleArray17 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(doubleArray17, 0.0d);
        double double20 = rotation19.getAngle();
        double double21 = rotation19.getAngle();
        double double22 = rotation19.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation19.getAxis();
        double double24 = rotation19.getAngle();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation5.applyTo(rotation19);
        double double26 = rotation5.getQ0();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.09950111080672089d + "'", double26 == 0.09950111080672089d);
    }

    @Test
    public void test0951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0951");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) (short) 1);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(doubleArray4, 0.9999250084364456d);
        double double9 = rotation8.getQ1();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    }

    @Test
    public void test0952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0952");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        double double24 = rotation22.getQ0();
        double[][] doubleArray25 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation21.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation30.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation22.applyTo(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation11.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation7.applyInverseTo(rotation11);
        double double38 = rotation37.getAngle();
        double double39 = rotation37.getQ3();
        double double40 = rotation37.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D41 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D42 = rotation37.applyInverseTo(vector3D41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
    }

    @Test
    public void test0953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0953");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 10, (double) 0, (double) '4', (double) (short) 100, false);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation6.applyInverseTo(rotation13);
        double double16 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ2();
        double double19 = rotation17.getQ0();
        double[][] doubleArray20 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation17.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation24.revert();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ2();
        double double30 = rotation28.getQ0();
        double[][] doubleArray31 = rotation28.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation28.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation27.applyInverseTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        double double38 = rotation36.getQ2();
        double double39 = rotation36.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation36.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation28.applyTo(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation17.applyInverseTo(vector3D40);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation13.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation44 = rotation5.applyTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation45 = rotation17.revert();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation17.revert();
        double double47 = rotation17.getAngle();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
    }

    @Test
    public void test0954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0954");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation3.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation13.revert();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ2();
        double double19 = rotation17.getQ0();
        double[][] doubleArray20 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation17.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation24 = rotation16.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation17.applyTo(vector3D29);
        double double31 = rotation17.getQ1();
        double double32 = rotation17.getQ2();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation12.applyTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation17.revert();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ2();
        double double37 = rotation35.getAngle();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation34.applyInverseTo(rotation35);
        double double39 = rotation34.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation34.getAxis();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
    }

    @Test
    public void test0955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0955");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 100.0f, 0.0d, (double) 0, (double) 100, true);
        double double6 = rotation5.getQ1();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    }

    @Test
    public void test0956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0956");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.09950111080672089d, (double) (short) 100, 0.9540556703999103d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0957");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.625426981395601d, 0.15156571116200665d, 0.2623748537039287d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0958");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.0018853026163470825d, (double) 100.0f, 1.7345175425633084d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0959");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation5.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.getAxis();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.995037190209989d + "'", double6 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
    }

    @Test
    public void test0960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0960");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) 1L);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) '#');
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(doubleArray4, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(doubleArray4, 0.703614788711539d);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
    }

    @Test
    public void test0961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0961");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10L, (double) ' ', (double) 10, (double) (-1L), true);
        double double6 = rotation5.getQ1();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ2();
        double double9 = rotation7.getQ0();
        double[][] doubleArray10 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation7.applyInverseTo(rotation11);
        double double14 = rotation11.getQ2();
        double double15 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation11.applyTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray23 = rotation11.getAngles(rotationOrder22);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.9142857142857143d + "'", double6 == 0.9142857142857143d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
    }

    @Test
    public void test0962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0962");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(vector3D5, (-0.7625584504796028d));
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(vector3D5, 0.009949879346007126d);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D5, 0.019227214231343204d);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
    }

    @Test
    public void test0963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0963");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation7.revert();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        double double13 = rotation11.getQ2();
        double double14 = rotation11.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation11.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation10.applyInverseTo(vector3D15);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        double double25 = rotation23.getQ2();
        double double26 = rotation23.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation23.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation22.applyTo(vector3D27);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(vector3D15, vector3D28);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ2();
        double double32 = rotation30.getQ0();
        double[][] doubleArray33 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation30.applyInverseTo(rotation34);
        double double37 = rotation34.getQ2();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ2();
        double double40 = rotation38.getQ0();
        double[][] doubleArray41 = rotation38.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyInverseTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ3();
        org.apache.commons.math.geometry.Rotation rotation47 = rotation38.applyInverseTo(rotation45);
        double double48 = rotation45.getQ3();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ2();
        double double51 = rotation49.getQ0();
        double[][] doubleArray52 = rotation49.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ3();
        org.apache.commons.math.geometry.Rotation rotation55 = rotation49.applyInverseTo(rotation53);
        double double56 = rotation55.getQ0();
        org.apache.commons.math.geometry.Rotation rotation57 = rotation45.applyInverseTo(rotation55);
        org.apache.commons.math.geometry.Rotation rotation58 = rotation34.applyInverseTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation59 = rotation29.applyTo(rotation34);
        double double60 = rotation34.getQ3();
        double[][] doubleArray61 = rotation34.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation34.getAxis();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(vector3D6, vector3D62);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(vector3D6, (double) 0L);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-1.0d) + "'", double56 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertNotNull(vector3D62);
    }

    @Test
    public void test0964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0964");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation6.getQ0();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        double double10 = rotation8.getQ2();
        double double11 = rotation8.getAngle();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation8.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        double double16 = rotation13.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(vector3D17, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation12.applyInverseTo(vector3D17);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ2();
        double double23 = rotation21.getQ0();
        double[][] doubleArray24 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation21.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        double double30 = rotation28.getQ2();
        org.apache.commons.math.geometry.Rotation rotation31 = rotation28.revert();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ2();
        double double34 = rotation32.getQ0();
        double[][] doubleArray35 = rotation32.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation32.applyInverseTo(rotation36);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation31.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ3();
        double double42 = rotation40.getQ2();
        double double43 = rotation40.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation40.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation32.applyTo(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation21.applyInverseTo(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation12.applyInverseTo(vector3D46);
        org.apache.commons.math.geometry.Rotation rotation48 = rotation6.applyTo(rotation12);
        double double49 = rotation6.getQ2();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation6.revert();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-1.0d) + "'", double7 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(rotation50);
    }

    @Test
    public void test0965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0965");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(100.0d, (double) 100.0f, (double) (byte) -1, (double) 10, false);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ2();
        double double9 = rotation7.getQ0();
        double[][] doubleArray10 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation7.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation7.applyInverseTo(rotation14);
        double double17 = rotation14.getQ1();
        double[][] doubleArray18 = rotation14.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(doubleArray18, 0.0d);
        double double21 = rotation20.getAngle();
        double double22 = rotation20.getAngle();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation20.revert();
        org.apache.commons.math.geometry.Rotation rotation24 = rotation23.revert();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation6.applyTo(rotation23);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertNotNull(rotation25);
    }

    @Test
    public void test0966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0966");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation6.getQ0();
        double double8 = rotation6.getQ3();
        double double9 = rotation6.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray11 = rotation6.getAngles(rotationOrder10);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-1.0d) + "'", double7 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    }

    @Test
    public void test0967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0967");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation3.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation13.revert();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ2();
        double double19 = rotation17.getQ0();
        double[][] doubleArray20 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation17.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation24 = rotation16.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation17.applyTo(vector3D29);
        double double31 = rotation17.getQ1();
        double double32 = rotation17.getQ2();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation12.applyTo(rotation17);
        double[][] doubleArray34 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(doubleArray34, 0.9999250084364456d);
        java.lang.Class<?> wildcardClass37 = doubleArray34.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0968");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D10);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation12.revert();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation15.applyInverseTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation24.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation16.applyTo(vector3D28);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D29);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        double double33 = rotation31.getQ2();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation31.revert();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ2();
        double double37 = rotation35.getQ0();
        double[][] doubleArray38 = rotation35.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation35.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation42 = rotation34.applyInverseTo(rotation35);
        double double43 = rotation34.getQ0();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double50 = rotation49.getQ2();
        double double51 = rotation49.getQ1();
        double double52 = rotation49.getQ3();
        double double53 = rotation49.getQ2();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ3();
        double double56 = rotation54.getQ2();
        double double57 = rotation54.getAngle();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation54.revert();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation();
        double double60 = rotation59.getQ3();
        double double61 = rotation59.getQ2();
        double double62 = rotation59.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation59.getAxis();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(vector3D63, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation58.applyInverseTo(vector3D63);
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(vector3D63, (double) (byte) 100);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation();
        double double70 = rotation69.getQ3();
        double double71 = rotation69.getQ2();
        org.apache.commons.math.geometry.Rotation rotation72 = rotation69.revert();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation();
        double double74 = rotation73.getQ2();
        double double75 = rotation73.getQ0();
        double[][] doubleArray76 = rotation73.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation();
        double double78 = rotation77.getQ3();
        org.apache.commons.math.geometry.Rotation rotation79 = rotation73.applyInverseTo(rotation77);
        org.apache.commons.math.geometry.Rotation rotation80 = rotation72.applyInverseTo(rotation73);
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation();
        double double82 = rotation81.getQ3();
        double double83 = rotation81.getQ2();
        double double84 = rotation81.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation81.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation73.applyTo(vector3D85);
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(vector3D63, vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotation49.applyInverseTo(vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation34.applyTo(vector3D85);
        org.apache.commons.math.geometry.Rotation rotation90 = new org.apache.commons.math.geometry.Rotation(vector3D29, vector3D85);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-1.0d) + "'", double43 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.995037190209989d + "'", double50 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.09950371902099892d + "'", double52 == 0.09950371902099892d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.995037190209989d + "'", double53 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertNotNull(rotation79);
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
    }

    @Test
    public void test0969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0969");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) ' ', (double) 0.0f, (double) (byte) 10, (double) (byte) 1, true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = null;
        double[] doubleArray7 = rotation5.getAngles(rotationOrder6);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ2();
        double double10 = rotation8.getQ0();
        double[][] doubleArray11 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation8.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation8.applyInverseTo(rotation15);
        double double18 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ2();
        double double21 = rotation19.getQ0();
        double[][] doubleArray22 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation19.applyInverseTo(rotation23);
        double double26 = rotation23.getQ2();
        double double27 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation15.applyTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ2();
        double double31 = rotation29.getQ0();
        double[][] doubleArray32 = rotation29.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ3();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation29.applyInverseTo(rotation33);
        double double36 = rotation33.getQ2();
        double double37 = rotation33.getQ3();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ2();
        double double40 = rotation38.getQ0();
        double[][] doubleArray41 = rotation38.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation33.applyTo(rotation38);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation38.getAxis();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation28.applyTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ3();
        double double47 = rotation45.getQ2();
        double double48 = rotation45.getAngle();
        double[][] doubleArray49 = rotation45.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(doubleArray49, (double) (short) 1);
        double double52 = rotation51.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation51.getAxis();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ3();
        double double56 = rotation54.getQ2();
        org.apache.commons.math.geometry.Rotation rotation57 = rotation54.revert();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation();
        double double59 = rotation58.getQ3();
        double double60 = rotation58.getQ2();
        double double61 = rotation58.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation58.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation57.applyInverseTo(vector3D62);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(vector3D62, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation51.applyInverseTo(vector3D62);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation();
        double double68 = rotation67.getQ2();
        double double69 = rotation67.getQ0();
        double[][] doubleArray70 = rotation67.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation();
        double double72 = rotation71.getQ3();
        org.apache.commons.math.geometry.Rotation rotation73 = rotation67.applyInverseTo(rotation71);
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation();
        double double75 = rotation74.getQ3();
        double double76 = rotation74.getQ2();
        org.apache.commons.math.geometry.Rotation rotation77 = rotation74.revert();
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation();
        double double79 = rotation78.getQ2();
        double double80 = rotation78.getQ0();
        double[][] doubleArray81 = rotation78.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation();
        double double83 = rotation82.getQ3();
        org.apache.commons.math.geometry.Rotation rotation84 = rotation78.applyInverseTo(rotation82);
        org.apache.commons.math.geometry.Rotation rotation85 = rotation77.applyInverseTo(rotation78);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation();
        double double87 = rotation86.getQ3();
        double double88 = rotation86.getQ2();
        double double89 = rotation86.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotation86.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotation78.applyTo(vector3D90);
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotation67.applyInverseTo(vector3D90);
        org.apache.commons.math.geometry.Rotation rotation94 = new org.apache.commons.math.geometry.Rotation(vector3D92, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D95 = rotation51.applyInverseTo(vector3D92);
        org.apache.commons.math.geometry.Vector3D vector3D96 = rotation44.applyInverseTo(vector3D95);
        org.apache.commons.math.geometry.Rotation rotation97 = rotation5.applyInverseTo(rotation44);
        double double98 = rotation44.getQ1();
        double double99 = rotation44.getQ2();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[3.110352820159525, 0.605491903246008, 3.110352820159525]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0d + "'", double80 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(rotation84);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertNotNull(vector3D96);
        org.junit.Assert.assertNotNull(rotation97);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 0.0d + "'", double98 == 0.0d);
        org.junit.Assert.assertTrue("'" + double99 + "' != '" + 0.0d + "'", double99 == 0.0d);
    }

    @Test
    public void test0970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0970");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 10, (double) 'a', (double) 1, (double) (-1L), false);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation7.getAxis();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double18 = rotation17.getQ2();
        double double19 = rotation17.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation17.getAxis();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(vector3D11, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation6.applyInverseTo(vector3D11);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(vector3D22, 0.995037190209989d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.995037190209989d + "'", double18 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
    }

    @Test
    public void test0971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0971");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        double double24 = rotation22.getQ0();
        double[][] doubleArray25 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation21.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation30.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation22.applyTo(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation11.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation7.applyInverseTo(rotation11);
        double[][] doubleArray38 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(doubleArray38, 0.7071067811865475d);
        double double41 = rotation40.getQ0();
        double double42 = rotation40.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
    }

    @Test
    public void test0972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0972");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        double double24 = rotation22.getQ0();
        double[][] doubleArray25 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation21.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation30.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation22.applyTo(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation11.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation7.applyInverseTo(rotation11);
        double[][] doubleArray38 = rotation7.getMatrix();
        double double39 = rotation7.getQ1();
        double double40 = rotation7.getAngle();
        double double41 = rotation7.getQ2();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation7.revert();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation7.getAxis();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(vector3D43);
    }

    @Test
    public void test0973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0973");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        org.apache.commons.math.geometry.Rotation rotation8 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ2();
        double double11 = rotation9.getQ0();
        double[][] doubleArray12 = rotation9.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation9.applyInverseTo(rotation13);
        org.apache.commons.math.geometry.Rotation rotation16 = rotation8.applyInverseTo(rotation9);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        double double19 = rotation17.getQ2();
        double double20 = rotation17.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation17.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation9.applyTo(vector3D21);
        double double23 = rotation9.getQ1();
        double double24 = rotation9.getQ2();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation0.applyInverseTo(rotation9);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation((double) (byte) -1, (double) (short) -1, (double) (-1.0f), (double) 1, true);
        double double32 = rotation31.getQ0();
        double double33 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ2();
        double double36 = rotation34.getQ0();
        double[][] doubleArray37 = rotation34.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation34.applyInverseTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        double double43 = rotation41.getQ2();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation41.revert();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ2();
        double double47 = rotation45.getQ0();
        double[][] doubleArray48 = rotation45.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation45.applyInverseTo(rotation49);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation44.applyInverseTo(rotation45);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ3();
        double double55 = rotation53.getQ2();
        double double56 = rotation53.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation53.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation45.applyTo(vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation34.applyInverseTo(vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation31.applyInverseTo(vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation25.applyInverseTo(vector3D57);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(vector3D61, (-0.5d));
        double double64 = rotation63.getQ0();
        java.lang.Class<?> wildcardClass65 = rotation63.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(rotation8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-0.5d) + "'", double32 == (-0.5d));
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.5d + "'", double33 == 0.5d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.9689124217106447d + "'", double64 == 0.9689124217106447d);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0974");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation4.applyInverseTo(vector3D9);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ2();
        double double15 = rotation13.getQ0();
        double[][] doubleArray16 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation13.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation20.revert();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ2();
        double double26 = rotation24.getQ0();
        double[][] doubleArray27 = rotation24.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation24.applyInverseTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation23.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        double double35 = rotation32.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation32.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation24.applyTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation13.applyInverseTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation4.applyInverseTo(vector3D38);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        double double46 = rotation45.getQ3();
        org.apache.commons.math.geometry.Rotation rotation47 = rotation4.applyTo(rotation45);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ3();
        double double50 = rotation48.getQ2();
        double double51 = rotation48.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation48.getAxis();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(vector3D52, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ3();
        double double57 = rotation55.getQ2();
        double double58 = rotation55.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation55.getAxis();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(vector3D59, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        double double64 = rotation62.getQ2();
        double double65 = rotation62.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation62.getAxis();
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation();
        double double74 = rotation73.getQ3();
        double double75 = rotation73.getQ2();
        double double76 = rotation73.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation73.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation72.applyTo(vector3D77);
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(vector3D52, vector3D59, vector3D66, vector3D77);
        double double80 = rotation79.getQ3();
        org.apache.commons.math.geometry.Rotation rotation81 = rotation47.applyInverseTo(rotation79);
        double[][] doubleArray82 = rotation79.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation83 = rotation79.revert();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(rotation83);
    }

    @Test
    public void test0975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0975");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ1();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (-0.26237485370392877d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
    }

    @Test
    public void test0976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0976");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation4.getQ2();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ2();
        double double10 = rotation8.getQ0();
        double[][] doubleArray11 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation8.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation8.applyInverseTo(rotation15);
        double double18 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ2();
        double double21 = rotation19.getQ0();
        double[][] doubleArray22 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation19.applyInverseTo(rotation23);
        double double26 = rotation25.getQ0();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation15.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation4.applyInverseTo(rotation27);
        double[][] doubleArray29 = rotation27.getMatrix();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1.0d) + "'", double26 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(doubleArray29);
    }

    @Test
    public void test0977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0977");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 100, (double) '4', (double) 10.0f, true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = null;
        double[] doubleArray7 = rotation5.getAngles(rotationOrder6);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.2649174553900444, 2.8919544165217177, -2.835713782184941]");
    }

    @Test
    public void test0978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0978");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ0();
        double[][] doubleArray8 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = rotation5.applyInverseTo(rotation9);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyInverseTo(rotation12);
        double double15 = rotation12.getQ3();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        double double23 = rotation20.getQ2();
        double double24 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation12.applyTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ2();
        double double28 = rotation26.getQ0();
        double[][] doubleArray29 = rotation26.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation26.applyInverseTo(rotation30);
        double double33 = rotation30.getQ2();
        double double34 = rotation30.getQ3();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ2();
        double double37 = rotation35.getQ0();
        double[][] doubleArray38 = rotation35.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation30.applyTo(rotation35);
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation35.getAxis();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation25.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        double double44 = rotation42.getQ2();
        double double45 = rotation42.getAngle();
        double[][] doubleArray46 = rotation42.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(doubleArray46, (double) (short) 1);
        double double49 = rotation48.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation48.getAxis();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation();
        double double52 = rotation51.getQ3();
        double double53 = rotation51.getQ2();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation51.revert();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ3();
        double double57 = rotation55.getQ2();
        double double58 = rotation55.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation55.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation54.applyInverseTo(vector3D59);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(vector3D59, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation48.applyInverseTo(vector3D59);
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation();
        double double65 = rotation64.getQ2();
        double double66 = rotation64.getQ0();
        double[][] doubleArray67 = rotation64.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation();
        double double69 = rotation68.getQ3();
        org.apache.commons.math.geometry.Rotation rotation70 = rotation64.applyInverseTo(rotation68);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation();
        double double72 = rotation71.getQ3();
        double double73 = rotation71.getQ2();
        org.apache.commons.math.geometry.Rotation rotation74 = rotation71.revert();
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation();
        double double76 = rotation75.getQ2();
        double double77 = rotation75.getQ0();
        double[][] doubleArray78 = rotation75.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation();
        double double80 = rotation79.getQ3();
        org.apache.commons.math.geometry.Rotation rotation81 = rotation75.applyInverseTo(rotation79);
        org.apache.commons.math.geometry.Rotation rotation82 = rotation74.applyInverseTo(rotation75);
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation();
        double double84 = rotation83.getQ3();
        double double85 = rotation83.getQ2();
        double double86 = rotation83.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotation83.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotation75.applyTo(vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation64.applyInverseTo(vector3D87);
        org.apache.commons.math.geometry.Rotation rotation91 = new org.apache.commons.math.geometry.Rotation(vector3D89, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotation48.applyInverseTo(vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D93 = rotation41.applyInverseTo(vector3D92);
        org.apache.commons.math.geometry.Rotation rotation94 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D93);
        double double95 = rotation94.getQ2();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0d + "'", double77 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertNotNull(rotation82);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
    }

    @Test
    public void test0979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0979");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        double double10 = rotation3.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation3.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation14 = rotation13.revert();
        double[][] doubleArray15 = rotation14.getMatrix();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(doubleArray15);
    }

    @Test
    public void test0980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0980");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation3.getAxis();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ2();
        double double15 = rotation13.getQ0();
        double[][] doubleArray16 = rotation13.getMatrix();
        double double17 = rotation13.getQ0();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        double double21 = rotation18.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation18.getAxis();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(vector3D22, (double) 100.0f);
        double double25 = rotation24.getQ3();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation13.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ2();
        double double29 = rotation27.getQ0();
        double[][] doubleArray30 = rotation27.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation27.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation27.applyInverseTo(rotation34);
        double double37 = rotation34.getQ3();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ2();
        double double40 = rotation38.getQ0();
        double[][] doubleArray41 = rotation38.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyInverseTo(rotation42);
        double double45 = rotation44.getQ0();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation34.applyInverseTo(rotation44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation34.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation26.applyInverseTo(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation3.applyTo(vector3D48);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-1.0d) + "'", double45 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
    }

    @Test
    public void test0981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0981");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 100.0f, 0.7064762846593019d, 0.09950371902099892d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0982");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ1();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation5);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) (byte) 10, (double) 0, (double) '4', (double) (short) 100, false);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation16.applyInverseTo(rotation23);
        double double26 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ2();
        double double29 = rotation27.getQ0();
        double[][] doubleArray30 = rotation27.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation27.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        double double36 = rotation34.getQ2();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation34.revert();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ2();
        double double40 = rotation38.getQ0();
        double[][] doubleArray41 = rotation38.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyInverseTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation45 = rotation37.applyInverseTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        double double48 = rotation46.getQ2();
        double double49 = rotation46.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation46.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation38.applyTo(vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation27.applyInverseTo(vector3D50);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation23.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation15.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation0.applyTo(rotation27);
        double double56 = rotation55.getQ0();
        double double57 = rotation55.getQ1();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation((double) 0L, (double) 100, (double) (byte) 1, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation64 = rotation55.applyTo(rotation63);
        double double65 = rotation55.getQ3();
        java.lang.Class<?> wildcardClass66 = rotation55.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0983");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(doubleArray11, (double) (short) 1);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.9142857142857143d);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.019227214231343204d);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
    }

    @Test
    public void test0984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0984");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0, 0.7071067811865475d, (-1.0d), true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation6.applyInverseTo(rotation13);
        double double16 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ2();
        double double19 = rotation17.getQ0();
        double[][] doubleArray20 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation17.applyInverseTo(rotation21);
        double double24 = rotation21.getQ2();
        double double25 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation13.applyTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ2();
        double double29 = rotation27.getQ0();
        double[][] doubleArray30 = rotation27.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation27.applyInverseTo(rotation31);
        double double34 = rotation31.getQ2();
        double double35 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ2();
        double double38 = rotation36.getQ0();
        double[][] doubleArray39 = rotation36.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation31.applyTo(rotation36);
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation36.getAxis();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation26.applyTo(rotation36);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation26.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation5.applyInverseTo(vector3D43);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ3();
        double double47 = rotation45.getQ2();
        double double48 = rotation45.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation45.getAxis();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D49, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation();
        double double53 = rotation52.getQ3();
        double double54 = rotation52.getQ2();
        double double55 = rotation52.getAngle();
        org.apache.commons.math.geometry.Rotation rotation56 = rotation51.applyTo(rotation52);
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation52.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation52.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation5.applyTo(vector3D58);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(vector3D59, 1.5707963267948963d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
    }

    @Test
    public void test0985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0985");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 3.141592653589793d, (-0.009999000149975004d), 0.5309649148733835d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0986");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        double double10 = rotation3.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation3.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation19.getAxis();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation11.applyTo(rotation19);
        double double22 = rotation21.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation21.getAxis();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D23, 0.007070537541434264d);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D23);
    }

    @Test
    public void test0987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0987");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D10);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D10, 2.9422652488599566d);
        java.lang.Class<?> wildcardClass14 = vector3D10.getClass();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0988");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D10);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ2();
        double double14 = rotation12.getQ0();
        double[][] doubleArray15 = rotation12.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ3();
        org.apache.commons.math.geometry.Rotation rotation18 = rotation12.applyInverseTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ3();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation12.applyInverseTo(rotation19);
        double double22 = rotation19.getQ1();
        double[][] doubleArray23 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(doubleArray23, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(doubleArray23, (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(doubleArray23, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(doubleArray23, 0.0d);
        double double32 = rotation31.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation31.getAxis();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(vector3D11, vector3D33);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
    }

    @Test
    public void test0989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0989");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 100L, (double) (byte) 10, (double) (short) -1, (-0.5d), true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation6.applyInverseTo(rotation13);
        double double16 = rotation13.getQ1();
        double[][] doubleArray17 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation18 = rotation5.applyTo(rotation13);
        double double19 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        double double23 = rotation20.getAngle();
        double[][] doubleArray24 = rotation20.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(doubleArray24, (double) 1L);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(doubleArray24, (double) 100);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation5.applyInverseTo(rotation28);
        double double30 = rotation29.getAngle();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.9949756218412634d + "'", double19 == 0.9949756218412634d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.20057100889311433d + "'", double30 == 0.20057100889311433d);
    }

    @Test
    public void test0990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0990");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) ' ', (double) 0.0f, (double) (byte) 10, (double) (byte) 1, true);
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) (byte) 0, (-0.7071067811865475d), 0.0d, true);
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation13);
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = null;
        double[] doubleArray16 = rotation5.getAngles(rotationOrder15);
        java.lang.Class<?> wildcardClass17 = doubleArray16.getClass();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.29814239699997197d + "'", double6 == 0.29814239699997197d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.6086083682652702d + "'", double7 == 0.6086083682652702d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[3.110352820159525, 0.605491903246008, 3.110352820159525]");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0991");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) (short) 1);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(doubleArray4, 2.9422652488599566d);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(doubleArray4, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation12.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation12.getAxis();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
    }

    @Test
    public void test0992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0992");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ1();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation5);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        double double12 = rotation10.getQ2();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation10.revert();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation13.applyInverseTo(vector3D18);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        double double28 = rotation26.getQ2();
        double double29 = rotation26.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation26.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation25.applyTo(vector3D30);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(vector3D18, vector3D31);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ2();
        double double35 = rotation33.getQ0();
        double[][] doubleArray36 = rotation33.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation33.applyInverseTo(rotation37);
        double double40 = rotation37.getQ2();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ2();
        double double43 = rotation41.getQ0();
        double[][] doubleArray44 = rotation41.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ3();
        org.apache.commons.math.geometry.Rotation rotation47 = rotation41.applyInverseTo(rotation45);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ3();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation41.applyInverseTo(rotation48);
        double double51 = rotation48.getQ3();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation();
        double double53 = rotation52.getQ2();
        double double54 = rotation52.getQ0();
        double[][] doubleArray55 = rotation52.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        double double57 = rotation56.getQ3();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation52.applyInverseTo(rotation56);
        double double59 = rotation58.getQ0();
        org.apache.commons.math.geometry.Rotation rotation60 = rotation48.applyInverseTo(rotation58);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation37.applyInverseTo(rotation60);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation32.applyTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation5.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation();
        double double65 = rotation64.getQ3();
        double double66 = rotation64.getQ2();
        double double67 = rotation64.getAngle();
        double[][] doubleArray68 = rotation64.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(doubleArray68, (double) (short) 1);
        double double71 = rotation70.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotation70.getAxis();
        org.apache.commons.math.geometry.Rotation rotation73 = rotation5.applyTo(rotation70);
        org.apache.commons.math.geometry.Rotation rotation74 = rotation5.revert();
        double[][] doubleArray75 = rotation74.getMatrix();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-1.0d) + "'", double59 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertNotNull(doubleArray75);
    }

    @Test
    public void test0993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0993");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D10);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation12.revert();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation15.applyInverseTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation24.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation16.applyTo(vector3D28);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D29);
        double[][] doubleArray31 = rotation30.getMatrix();
        double[][] doubleArray32 = rotation30.getMatrix();
        double[][] doubleArray33 = rotation30.getMatrix();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(doubleArray33);
    }

    @Test
    public void test0994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0994");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation4.applyInverseTo(vector3D9);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ2();
        double double15 = rotation13.getQ0();
        double[][] doubleArray16 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation13.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation20.revert();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ2();
        double double26 = rotation24.getQ0();
        double[][] doubleArray27 = rotation24.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation24.applyInverseTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation23.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        double double35 = rotation32.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation32.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation24.applyTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation13.applyInverseTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation4.applyInverseTo(vector3D38);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        double double46 = rotation45.getQ3();
        org.apache.commons.math.geometry.Rotation rotation47 = rotation4.applyTo(rotation45);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ3();
        double double50 = rotation48.getQ2();
        double double51 = rotation48.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation48.getAxis();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(vector3D52, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ3();
        double double57 = rotation55.getQ2();
        double double58 = rotation55.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation55.getAxis();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(vector3D59, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        double double64 = rotation62.getQ2();
        double double65 = rotation62.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation62.getAxis();
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation();
        double double74 = rotation73.getQ3();
        double double75 = rotation73.getQ2();
        double double76 = rotation73.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation73.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation72.applyTo(vector3D77);
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(vector3D52, vector3D59, vector3D66, vector3D77);
        double double80 = rotation79.getQ3();
        org.apache.commons.math.geometry.Rotation rotation81 = rotation47.applyInverseTo(rotation79);
        org.apache.commons.math.geometry.Rotation rotation82 = rotation79.revert();
        double double83 = rotation79.getQ2();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertNotNull(rotation82);
        org.junit.Assert.assertTrue(Double.isNaN(double83));
    }

    @Test
    public void test0995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0995");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.0d);
        double double14 = rotation13.getAngle();
        double double15 = rotation13.getAngle();
        double double16 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ2();
        double double19 = rotation17.getQ0();
        double[][] doubleArray20 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation17.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation17.applyInverseTo(rotation24);
        double double27 = rotation24.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ2();
        double double30 = rotation28.getQ0();
        double[][] doubleArray31 = rotation28.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation28.applyInverseTo(rotation32);
        double double35 = rotation32.getQ2();
        double double36 = rotation32.getQ3();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation24.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation13.applyInverseTo(rotation32);
        double double39 = rotation13.getAngle();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation((-0.5d), (double) 100, (double) (byte) 10, (double) 0L, false);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation((double) '#', (-0.5d), (double) (-1), 0.0d, false);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation45.applyInverseTo(rotation51);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation13.applyInverseTo(rotation51);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
    }

    @Test
    public void test0996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0996");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ3();
        double double18 = rotation16.getQ2();
        double double19 = rotation16.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation16.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation15.applyTo(vector3D20);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(vector3D8, vector3D21);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double29 = rotation28.getQ2();
        double double30 = rotation28.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation28.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation22.applyTo(vector3D31);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.995037190209989d + "'", double29 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
    }

    @Test
    public void test0997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0997");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D10);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation12.revert();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation15.applyInverseTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation24.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation16.applyTo(vector3D28);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D29);
        double[][] doubleArray31 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ2();
        double double34 = rotation32.getQ0();
        double[][] doubleArray35 = rotation32.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation32.applyInverseTo(rotation36);
        double double39 = rotation38.getQ0();
        double double40 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation30.applyTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ2();
        double double44 = rotation42.getQ1();
        double double45 = rotation42.getAngle();
        double[][] doubleArray46 = rotation42.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(doubleArray46, (double) 100.0f);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(doubleArray46, 0.9142857142857143d);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation38.applyInverseTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation();
        double double53 = rotation52.getQ2();
        double double54 = rotation52.getQ0();
        double[][] doubleArray55 = rotation52.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        double double57 = rotation56.getQ3();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation52.applyInverseTo(rotation56);
        double double59 = rotation58.getQ0();
        double double60 = rotation58.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation58.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation38.applyInverseTo(vector3D61);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-1.0d) + "'", double39 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-1.0d) + "'", double59 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
    }

    @Test
    public void test0998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0998");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0, 0.7071067811865475d, (-1.0d), true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.junit.Assert.assertNotNull(rotation6);
    }

    @Test
    public void test0999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0999");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation4.applyInverseTo(vector3D9);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(vector3D9, (double) (byte) 100);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(vector3D9, Double.NaN);
        double[][] doubleArray17 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation16.getAxis();
        double double19 = rotation16.getQ1();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
    }

    @Test
    public void test1000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test1000");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (-1), 0.7138722624641411d, 0.28882826147499224d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }
}

