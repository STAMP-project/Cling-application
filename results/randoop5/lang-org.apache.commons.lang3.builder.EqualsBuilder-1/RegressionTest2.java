import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        java.lang.Object obj0 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray4 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray5 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder1.append(shortArray4, shortArray5);
        byte[] byteArray7 = new byte[] {};
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder1.append(byteArray7, byteArray12);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder1.append((double) 100L, (double) 10L);
        boolean boolean17 = equalsBuilder1.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder1.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray24 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray25 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder21.append(shortArray24, shortArray25);
        byte[] byteArray27 = new byte[] {};
        byte[] byteArray32 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder21.append(byteArray27, byteArray32);
        java.lang.String[] strArray37 = new java.lang.String[] { "", "hi!", "" };
        boolean boolean38 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder20, (java.lang.Object) byteArray32, strArray37);
        boolean boolean40 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj0, (java.lang.Object) boolean38, false);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder62.append((short) 10, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder69.append((float) (short) 100, 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder72.append((double) (byte) 10, (double) 1.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder75.append((long) (byte) -1, 10L);
        equalsBuilder78.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder78.append((long) (byte) 10, 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder78.append((float) (short) 10, (float) (byte) 0);
        equalsBuilder85.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        java.lang.Object obj7 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray18 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray19 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder15.append(shortArray18, shortArray19);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(byteArray21, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder8.append(byteArray14, byteArray26);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj7, (java.lang.Object) byteArray26, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray41 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray42 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder38.append(shortArray41, shortArray42);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder38.append(byteArray44, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder31.append(byteArray37, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(byteArray26, byteArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder52.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder52.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder52.append((-1L), (long) (short) 100);
        char[] charArray61 = new char[] {};
        char[] charArray62 = new char[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder52.append(charArray61, charArray62);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder52.append('4', '4');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[]");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(equalsBuilder66);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray9 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray10 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder6.append(shortArray9, shortArray10);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean20 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder11, (java.lang.Object) '#', strArray19);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder11.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray27 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray28 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder24.append(shortArray27, shortArray28);
        byte[] byteArray30 = new byte[] {};
        byte[] byteArray35 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append(byteArray30, byteArray35);
        char[] charArray41 = new char[] { '#', ' ', '#', '#' };
        char[] charArray44 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder24.append(charArray41, charArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray49 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray50 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder46.append(shortArray49, shortArray50);
        byte[] byteArray52 = new byte[] {};
        byte[] byteArray57 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder46.append(byteArray52, byteArray57);
        char[] charArray63 = new char[] { '#', ' ', '#', '#' };
        char[] charArray66 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder46.append(charArray63, charArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder11.append(charArray44, charArray63);
        java.lang.String[] strArray69 = null;
        boolean boolean70 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray4, (java.lang.Object) equalsBuilder11, strArray69);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder11.append(false, false);
        boolean[] booleanArray77 = new boolean[] { false, false, false };
        boolean[] booleanArray78 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder11.append(booleanArray77, booleanArray78);
        java.lang.Boolean boolean80 = equalsBuilder79.build();
        equalsBuilder79.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder79.append((double) 1L, (double) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder79.append((long) (byte) -1, (long) '4');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray77), "[false, false, false]");
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertEquals("'" + boolean80 + "' != '" + false + "'", boolean80, false);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray9 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray10 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder6.append(shortArray9, shortArray10);
        byte[] byteArray12 = new byte[] {};
        byte[] byteArray17 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder6.append(byteArray12, byteArray17);
        float[] floatArray24 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray27 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder18.append(floatArray24, floatArray27);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder18.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder32.append((short) (byte) 10, (short) 0);
        long[] longArray41 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray43 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder32.append(longArray41, longArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder0.append((java.lang.Object) true, (java.lang.Object) longArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray49 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray50 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder46.append(shortArray49, shortArray50);
        byte[] byteArray52 = new byte[] {};
        byte[] byteArray57 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder46.append(byteArray52, byteArray57);
        char[] charArray63 = new char[] { '#', ' ', '#', '#' };
        char[] charArray66 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder46.append(charArray63, charArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder67.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder67.append((int) (byte) 1, (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder73.append((int) (byte) 1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder76.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder79.append((byte) 100, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder79.append((float) (byte) -1, (float) (short) 0);
        boolean boolean87 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder45, (java.lang.Object) equalsBuilder79, true);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        boolean boolean16 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder19.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append((float) (-1L), 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append((float) (short) 0, (float) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder24.append('4', 'a');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder4 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder4.append((short) (byte) 10, (short) 0);
        equalsBuilder4.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder9.append((short) (byte) 10, (short) 0);
        long[] longArray18 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray20 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder9.append(longArray18, longArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder22.append((short) (byte) 10, (short) 0);
        long[] longArray31 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray33 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder22.append(longArray31, longArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder4.append(longArray18, longArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder36.append((short) (byte) 10, (short) 0);
        long[] longArray45 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray47 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder36.append(longArray45, longArray47);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray52 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray53 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder49.append(shortArray52, shortArray53);
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean63 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder54, (java.lang.Object) '#', strArray62);
        boolean boolean64 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray47, (java.lang.Object) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder3.append(longArray18, longArray47);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder3.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder67.append((long) 1, (long) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder70.append('#', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder73.append(false, true);
        boolean boolean77 = equalsBuilder73.isEquals();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append(false, true);
        boolean boolean43 = equalsBuilder42.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder42.append((int) ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder46.append('a', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder49.append((float) '#', (float) (-1));
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(equalsBuilder52);
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder77.append(10.0d, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder77.append((float) (byte) 10, (float) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder83.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder85.append((double) (byte) -1, (double) 100);
        equalsBuilder88.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        equalsBuilder12.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder12.append((short) 0, (short) 0);
        java.lang.Class<?> wildcardClass20 = equalsBuilder12.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray19 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray20 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder16.append(shortArray19, shortArray20);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder21, (java.lang.Object) '#', strArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder21.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray37 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray38 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder34.append(shortArray37, shortArray38);
        byte[] byteArray40 = new byte[] {};
        byte[] byteArray45 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder34.append(byteArray40, byteArray45);
        char[] charArray51 = new char[] { '#', ' ', '#', '#' };
        char[] charArray54 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder34.append(charArray51, charArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray59 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray60 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder56.append(shortArray59, shortArray60);
        byte[] byteArray62 = new byte[] {};
        byte[] byteArray67 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder56.append(byteArray62, byteArray67);
        char[] charArray73 = new char[] { '#', ' ', '#', '#' };
        char[] charArray76 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder56.append(charArray73, charArray76);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder21.append(charArray54, charArray73);
        java.lang.Object obj79 = null;
        boolean boolean80 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray54, obj79);
        java.lang.String[] strArray81 = new java.lang.String[] {};
        boolean boolean82 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder15, (java.lang.Object) charArray54, strArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder15.appendSuper(false);
        float[] floatArray85 = new float[] {};
        float[] floatArray87 = new float[] { (byte) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder15.append(floatArray85, floatArray87);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder88.append((byte) 0, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder88.append((-1), 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(floatArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray85), "[]");
        org.junit.Assert.assertNotNull(floatArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray87), "[-1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder94);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder62.append((short) 10, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder69.append((float) (short) 100, 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder72.append((double) (byte) 10, (double) 1.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder75.append((long) (byte) -1, 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder78.append((float) (short) 100, (float) ' ');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append((short) 100, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder42.append((-1.0f), 100.0f);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder21.append((int) (byte) 1, (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((int) (byte) 1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder27.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder27.append(false, false);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder0.append((double) 1, (double) (-1L));
        java.lang.Boolean boolean11 = equalsBuilder10.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray18 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        byte[] byteArray25 = new byte[] {};
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder19.append(byteArray25, byteArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder12.append(byteArray18, byteArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray37 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray38 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder34.append(shortArray37, shortArray38);
        byte[] byteArray40 = new byte[] {};
        byte[] byteArray45 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder34.append(byteArray40, byteArray45);
        boolean boolean47 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder10.append(byteArray18, byteArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder48.append((double) (short) -1, (double) (byte) 10);
        boolean boolean52 = equalsBuilder51.isEquals();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        boolean boolean16 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder19.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append((int) (short) -1, (int) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append((-1L), 0L);
        java.lang.Object obj28 = null;
        boolean boolean29 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (-1L), obj28);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 100, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder3.append((short) (byte) 100, (short) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder3.appendSuper(true);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(equalsBuilder12);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append((double) '4', (double) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder17.append((long) (-1), (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder17.append((short) (byte) 10, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder17.append(0.0f, (float) (-1));
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder51);
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        double[] doubleArray80 = new double[] { (short) 0, 0.0d, (byte) 10, (byte) 0 };
        double[] doubleArray81 = new double[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder64.append(doubleArray80, doubleArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder82.append((short) 0, (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder82.append((float) (short) 1, (float) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder88.append((short) 1, (short) 10);
        equalsBuilder91.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder91.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder97 = equalsBuilder91.append((byte) 0, (byte) 10);
        java.lang.Class<?> wildcardClass98 = equalsBuilder91.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0, 0.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder94);
        org.junit.Assert.assertNotNull(equalsBuilder97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder42.append((float) (byte) 1, 100.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder42.append((double) (byte) 0, (double) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder42.append((int) (byte) 100, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder51.append(' ', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder51.append((byte) 100, (byte) 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(equalsBuilder57);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        float[] floatArray65 = null;
        float[] floatArray66 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder64.append(floatArray65, floatArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder64.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder70.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder70.append((double) (byte) 1, (double) ' ');
        java.lang.Class<?> wildcardClass76 = equalsBuilder75.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((byte) 1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder35.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder37.append('a', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder40.appendSuper(true);
        java.lang.Class<?> wildcardClass43 = equalsBuilder42.getClass();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray13 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray14 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder10.append(shortArray13, shortArray14);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean24 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder15, (java.lang.Object) '#', strArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray31 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray32 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder28.append(shortArray31, shortArray32);
        byte[] byteArray34 = new byte[] {};
        byte[] byteArray39 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder28.append(byteArray34, byteArray39);
        char[] charArray45 = new char[] { '#', ' ', '#', '#' };
        char[] charArray48 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder28.append(charArray45, charArray48);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray53 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray54 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder50.append(shortArray53, shortArray54);
        byte[] byteArray56 = new byte[] {};
        byte[] byteArray61 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder50.append(byteArray56, byteArray61);
        char[] charArray67 = new char[] { '#', ' ', '#', '#' };
        char[] charArray70 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder50.append(charArray67, charArray70);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder15.append(charArray48, charArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder15.appendSuper(false);
        int[] intArray78 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray83 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder74.append(intArray78, intArray83);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder74.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder74.append((double) 10.0f, 100.0d);
        boolean boolean91 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder3, (java.lang.Object) 10.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder3.append(true, true);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(equalsBuilder94);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 100.0f, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder17.append(' ', '4');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder17.append((long) (byte) 10, (long) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder20.append((long) 1, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder20.append((float) 100, (float) (short) 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(equalsBuilder26);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder46.append(byteArray52, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder46.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder39.append((java.lang.Object) equalsBuilder45, (java.lang.Object) equalsBuilder46);
        long[] longArray73 = new long[] { (byte) 100, ' ', (short) 10 };
        long[] longArray79 = new long[] { 'a', 0L, (short) 10, (byte) 0, (byte) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder46.append(longArray73, longArray79);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder83.append(0, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder83.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder89.append((float) (short) 10, (float) (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder89.append(0L, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder98 = equalsBuilder95.append((short) 0, (short) (byte) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[100, 32, 10]");
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[97, 0, 10, 0, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertNotNull(equalsBuilder98);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((byte) 1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder35.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder35.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder39.append('a', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder42.append('4', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder45.append((byte) 1, (byte) 10);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        boolean boolean16 = equalsBuilder15.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray20 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray21 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder17.append(shortArray20, shortArray21);
        byte[] byteArray23 = new byte[] {};
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(byteArray23, byteArray28);
        byte[] byteArray30 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder15.append(byteArray28, byteArray30);
        java.lang.Boolean boolean32 = equalsBuilder15.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        float[] floatArray65 = null;
        float[] floatArray66 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder64.append(floatArray65, floatArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder64.append((double) 0.0f, 100.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder70.append('4', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder73.append((long) 'a', (long) ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder73.append((byte) 100, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder79.append(' ', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder82.appendSuper(false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder84);
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray19 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray20 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder16.append(shortArray19, shortArray20);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder21, (java.lang.Object) '#', strArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder21.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray37 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray38 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder34.append(shortArray37, shortArray38);
        byte[] byteArray40 = new byte[] {};
        byte[] byteArray45 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder34.append(byteArray40, byteArray45);
        char[] charArray51 = new char[] { '#', ' ', '#', '#' };
        char[] charArray54 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder34.append(charArray51, charArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray59 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray60 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder56.append(shortArray59, shortArray60);
        byte[] byteArray62 = new byte[] {};
        byte[] byteArray67 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder56.append(byteArray62, byteArray67);
        char[] charArray73 = new char[] { '#', ' ', '#', '#' };
        char[] charArray76 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder56.append(charArray73, charArray76);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder21.append(charArray54, charArray73);
        java.lang.Object obj79 = null;
        boolean boolean80 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray54, obj79);
        java.lang.String[] strArray81 = new java.lang.String[] {};
        boolean boolean82 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder15, (java.lang.Object) charArray54, strArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder15.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder15.append('4', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder15.append((float) (-1L), 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder90.append((float) 100, (float) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder93.append('#', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder98 = equalsBuilder93.appendSuper(true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
        org.junit.Assert.assertNotNull(equalsBuilder98);
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder64.append((long) 'a', (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append(100.0d, (double) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder80.append((long) '#', 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder80.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder80.append((byte) 10, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder92.append((short) (byte) -1, (short) 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder95);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append((int) (short) 100, (int) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder17.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder17.append((float) 'a', (float) 'a');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder47);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray4 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray5 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder1.append(shortArray4, shortArray5);
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean15 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder6, (java.lang.Object) '#', strArray14);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder6.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        byte[] byteArray25 = new byte[] {};
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder19.append(byteArray25, byteArray30);
        char[] charArray36 = new char[] { '#', ' ', '#', '#' };
        char[] charArray39 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder19.append(charArray36, charArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray44 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray45 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder41.append(shortArray44, shortArray45);
        byte[] byteArray47 = new byte[] {};
        byte[] byteArray52 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder41.append(byteArray47, byteArray52);
        char[] charArray58 = new char[] { '#', ' ', '#', '#' };
        char[] charArray61 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder41.append(charArray58, charArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder6.append(charArray39, charArray58);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder63.append(100, (int) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder63.append((short) 10, (short) -1);
        boolean boolean70 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) 100.0d, (java.lang.Object) equalsBuilder63);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder63.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder72.append((double) (short) 10, (double) (byte) 100);
        java.lang.Boolean boolean76 = equalsBuilder75.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder75.append((float) (-1), (float) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder75.append((short) 0, (short) -1);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertEquals("'" + boolean76 + "' != '" + false + "'", boolean76, false);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        java.lang.Boolean boolean79 = equalsBuilder78.build();
        short[] shortArray82 = new short[] { (short) -1, (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray86 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray87 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder83.append(shortArray86, shortArray87);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder78.append(shortArray82, shortArray86);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder78.append(100.0d, (double) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder78.append(1, 10);
        java.lang.Class<?> wildcardClass96 = equalsBuilder78.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertEquals("'" + boolean79 + "' != '" + false + "'", boolean79, false);
        org.junit.Assert.assertNotNull(shortArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray82), "[-1, 10]");
        org.junit.Assert.assertNotNull(shortArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray86), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray87), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder0.append((short) (byte) 10, (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder11.append(0.0f, (float) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder11.append((float) 1, (float) (short) 100);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(equalsBuilder17);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray25 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray26 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder22.append(shortArray25, shortArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray34 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray38 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray39 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder35.append(shortArray38, shortArray39);
        byte[] byteArray41 = new byte[] {};
        byte[] byteArray46 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder35.append(byteArray41, byteArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder28.append(byteArray34, byteArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray53 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray54 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder50.append(shortArray53, shortArray54);
        byte[] byteArray56 = new byte[] {};
        byte[] byteArray61 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder50.append(byteArray56, byteArray61);
        boolean boolean63 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder22.append(byteArray34, byteArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder22.append(100.0f, 100.0f);
        boolean boolean69 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder0, (java.lang.Object) equalsBuilder67, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder67.append((byte) -1, (byte) 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(equalsBuilder72);
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder64.append((long) 'a', (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder64.append((double) (-1.0f), (double) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder64.append((byte) 100, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder64.append((short) (byte) 0, (short) (byte) 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        long[] longArray9 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray11 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(longArray9, longArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder17.append((short) (byte) 10, (short) 0);
        long[] longArray26 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray28 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(longArray26, longArray28);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder30.append((short) (byte) 10, (short) 0);
        equalsBuilder30.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder35.append((short) (byte) 10, (short) 0);
        long[] longArray44 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray46 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder35.append(longArray44, longArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder48.append((short) (byte) 10, (short) 0);
        long[] longArray57 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray59 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder48.append(longArray57, longArray59);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder30.append(longArray44, longArray59);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder0.append(longArray28, longArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder62.append((byte) 0, (byte) 1);
        equalsBuilder62.reset();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder0.appendSuper(false);
        float[] floatArray8 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray12 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray13 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder9.append(shortArray12, shortArray13);
        byte[] byteArray15 = new byte[] {};
        byte[] byteArray20 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder9.append(byteArray15, byteArray20);
        float[] floatArray27 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray30 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder21.append(floatArray27, floatArray30);
        java.lang.Object obj33 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray38 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray39 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder35.append(shortArray38, shortArray39);
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean49 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder40, (java.lang.Object) '#', strArray48);
        boolean boolean50 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj33, (java.lang.Object) (byte) 1, strArray48);
        boolean boolean51 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) floatArray30, (java.lang.Object) (byte) 0, strArray48);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(floatArray8, floatArray30);
        equalsBuilder0.reset();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(equalsBuilder52);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        java.lang.Object obj7 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray18 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray19 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder15.append(shortArray18, shortArray19);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(byteArray21, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder8.append(byteArray14, byteArray26);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj7, (java.lang.Object) byteArray26, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray41 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray42 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder38.append(shortArray41, shortArray42);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder38.append(byteArray44, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder31.append(byteArray37, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(byteArray26, byteArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder52.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder52.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder52.append((float) (byte) 10, (float) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder60.append((short) 100, (short) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder63.append((-1.0f), (float) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder66.append((double) (short) 10, (double) (short) 10);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        boolean boolean16 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append(true, true);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder0.append((short) (byte) 100, (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray33 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray37 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray38 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder34.append(shortArray37, shortArray38);
        byte[] byteArray40 = new byte[] {};
        byte[] byteArray45 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder34.append(byteArray40, byteArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder27.append(byteArray33, byteArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder27.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder49.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder51.append(' ', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder54.append((int) (short) 10, (int) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder57.append((double) 1.0f, (double) (short) 10);
        boolean boolean62 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) 100, (java.lang.Object) 1.0f, true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        boolean boolean75 = equalsBuilder74.isEquals();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append(false, true);
        equalsBuilder12.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder42.append((float) (byte) 1, 100.0f);
        java.lang.Object obj46 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray51 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray52 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder48.append(shortArray51, shortArray52);
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean62 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder53, (java.lang.Object) '#', strArray61);
        boolean boolean63 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj46, (java.lang.Object) (byte) 1, strArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray67 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray68 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder64.append(shortArray67, shortArray68);
        java.lang.String[] strArray77 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean78 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder69, (java.lang.Object) '#', strArray77);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder79.append(false, false);
        java.lang.Boolean boolean83 = equalsBuilder82.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder82.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder82.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder82.append(false, false);
        boolean boolean93 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) strArray77, (java.lang.Object) false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder42.append((java.lang.Object[]) strArray61, (java.lang.Object[]) strArray77);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder97 = equalsBuilder42.append((byte) 0, (byte) 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray67), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertEquals("'" + boolean83 + "' != '" + true + "'", boolean83, true);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(equalsBuilder94);
        org.junit.Assert.assertNotNull(equalsBuilder97);
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray6 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray10 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray11 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder7.append(shortArray10, shortArray11);
        byte[] byteArray13 = new byte[] {};
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder7.append(byteArray13, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder0.append(byteArray6, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray24 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray25 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder21.append(shortArray24, shortArray25);
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean35 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder26, (java.lang.Object) '#', strArray34);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder26.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray42 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray43 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder39.append(shortArray42, shortArray43);
        byte[] byteArray45 = new byte[] {};
        byte[] byteArray50 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder39.append(byteArray45, byteArray50);
        char[] charArray56 = new char[] { '#', ' ', '#', '#' };
        char[] charArray59 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder39.append(charArray56, charArray59);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray64 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray65 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder61.append(shortArray64, shortArray65);
        byte[] byteArray67 = new byte[] {};
        byte[] byteArray72 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder61.append(byteArray67, byteArray72);
        char[] charArray78 = new char[] { '#', ' ', '#', '#' };
        char[] charArray81 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder61.append(charArray78, charArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder26.append(charArray59, charArray78);
        char[] charArray88 = new char[] { '#', '#', '4', '4' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder20.append(charArray78, charArray88);
        java.lang.Boolean boolean90 = equalsBuilder89.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder89.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder89.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder97 = equalsBuilder89.append('4', '4');
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray64), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[]");
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "##44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "##44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[#, #, 4, 4]");
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertEquals("'" + boolean90 + "' != '" + false + "'", boolean90, false);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder94);
        org.junit.Assert.assertNotNull(equalsBuilder97);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((float) 'a', (float) 10);
        java.lang.Boolean boolean82 = equalsBuilder81.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertEquals("'" + boolean82 + "' != '" + false + "'", boolean82, false);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        float[] floatArray18 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray21 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append(floatArray18, floatArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder12.append(true, true);
        byte[] byteArray29 = new byte[] { (byte) 100, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray33 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray34 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder30.append(shortArray33, shortArray34);
        byte[] byteArray36 = new byte[] {};
        byte[] byteArray41 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder30.append(byteArray36, byteArray41);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder25.append(byteArray29, byteArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder43.append((int) (short) 10, (int) (byte) 100);
        java.lang.Class<?> wildcardClass47 = equalsBuilder43.getClass();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder48.append((short) (byte) 10, (short) 0);
        long[] longArray57 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray59 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder48.append(longArray57, longArray59);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder48.appendSuper(true);
        boolean boolean64 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder43, (java.lang.Object) equalsBuilder62, true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100, 10, 1]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder3.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder13.append((short) (byte) 10, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder17.append((short) (byte) 10, (short) 0);
        equalsBuilder17.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder22.append((short) (byte) 10, (short) 0);
        long[] longArray31 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray33 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder22.append(longArray31, longArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder35.append((short) (byte) 10, (short) 0);
        long[] longArray44 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray46 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder35.append(longArray44, longArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder17.append(longArray31, longArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder49.append((short) (byte) 10, (short) 0);
        long[] longArray58 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray60 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder49.append(longArray58, longArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray65 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray66 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder62.append(shortArray65, shortArray66);
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean76 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder67, (java.lang.Object) '#', strArray75);
        boolean boolean77 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray60, (java.lang.Object) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder16.append(longArray31, longArray60);
        long[] longArray81 = new long[] { (byte) 10, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder12.append(longArray31, longArray81);
        java.lang.Boolean boolean83 = equalsBuilder82.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder82.append('a', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder86.append((short) 1, (short) 10);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(longArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray81), "[10, 0]");
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertEquals("'" + boolean83 + "' != '" + false + "'", boolean83, false);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        equalsBuilder12.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder12.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append((short) (byte) 1, (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder12.append('a', 'a');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        java.lang.Object obj0 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray4 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray5 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder1.append(shortArray4, shortArray5);
        byte[] byteArray7 = new byte[] {};
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder1.append(byteArray7, byteArray12);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder13.append((byte) 10, (byte) 0);
        boolean boolean17 = equalsBuilder16.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        byte[] byteArray31 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder16.append(byteArray29, byteArray31);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder32.append((float) ' ', (float) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder32.append((double) (short) 0, (double) (short) 100);
        java.lang.Class<?> wildcardClass39 = equalsBuilder32.getClass();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray46 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray50 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray51 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder47.append(shortArray50, shortArray51);
        byte[] byteArray53 = new byte[] {};
        byte[] byteArray58 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder47.append(byteArray53, byteArray58);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder40.append(byteArray46, byteArray58);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder40.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder40.append((short) (byte) -1, (short) 1);
        boolean boolean66 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) wildcardClass39, (java.lang.Object) equalsBuilder40);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray70 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray71 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder67.append(shortArray70, shortArray71);
        java.lang.String[] strArray80 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean81 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder72, (java.lang.Object) '#', strArray80);
        boolean boolean82 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj0, (java.lang.Object) equalsBuilder40, strArray80);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[]");
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        equalsBuilder12.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder12.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append((short) (byte) 1, (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder22.append((double) 100.0f, 1.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder25.append((byte) 100, (byte) -1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder28);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder3.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder13.append((short) (byte) 10, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder17.append((short) (byte) 10, (short) 0);
        equalsBuilder17.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder22.append((short) (byte) 10, (short) 0);
        long[] longArray31 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray33 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder22.append(longArray31, longArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder35.append((short) (byte) 10, (short) 0);
        long[] longArray44 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray46 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder35.append(longArray44, longArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder17.append(longArray31, longArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder49.append((short) (byte) 10, (short) 0);
        long[] longArray58 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray60 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder49.append(longArray58, longArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray65 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray66 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder62.append(shortArray65, shortArray66);
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean76 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder67, (java.lang.Object) '#', strArray75);
        boolean boolean77 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray60, (java.lang.Object) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder16.append(longArray31, longArray60);
        long[] longArray81 = new long[] { (byte) 10, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder12.append(longArray31, longArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder12.append('a', 'a');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(longArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray81), "[10, 0]");
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray6 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray10 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray11 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder7.append(shortArray10, shortArray11);
        byte[] byteArray13 = new byte[] {};
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder7.append(byteArray13, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder0.append(byteArray6, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder22.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append(' ', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((long) (short) 10, (long) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder27.append((int) (byte) 0, (int) (byte) 0);
        java.lang.Class<?> wildcardClass34 = equalsBuilder27.getClass();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        java.lang.Boolean boolean79 = equalsBuilder78.build();
        short[] shortArray82 = new short[] { (short) -1, (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray86 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray87 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder83.append(shortArray86, shortArray87);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder78.append(shortArray82, shortArray86);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder89.append((byte) 100, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder89.append((float) ' ', (float) (byte) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertEquals("'" + boolean79 + "' != '" + false + "'", boolean79, false);
        org.junit.Assert.assertNotNull(shortArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray82), "[-1, 10]");
        org.junit.Assert.assertNotNull(shortArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray86), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray87), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder95);
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder4 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder4.append((short) (byte) 10, (short) 0);
        equalsBuilder4.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder9.append((short) (byte) 10, (short) 0);
        long[] longArray18 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray20 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder9.append(longArray18, longArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder22.append((short) (byte) 10, (short) 0);
        long[] longArray31 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray33 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder22.append(longArray31, longArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder4.append(longArray18, longArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder36.append((short) (byte) 10, (short) 0);
        long[] longArray45 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray47 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder36.append(longArray45, longArray47);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray52 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray53 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder49.append(shortArray52, shortArray53);
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean63 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder54, (java.lang.Object) '#', strArray62);
        boolean boolean64 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray47, (java.lang.Object) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder3.append(longArray18, longArray47);
        java.lang.Boolean boolean66 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder3.append((float) (-1), (float) 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder69.append((double) 100.0f, (double) (-1.0f));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder72.append((int) '4', (int) (short) -1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertEquals("'" + boolean66 + "' != '" + false + "'", boolean66, false);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder4 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray7 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray8 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder4.append(shortArray7, shortArray8);
        byte[] byteArray10 = new byte[] {};
        byte[] byteArray15 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder4.append(byteArray10, byteArray15);
        char[] charArray21 = new char[] { '#', ' ', '#', '#' };
        char[] charArray24 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder4.append(charArray21, charArray24);
        char[] charArray32 = new char[] { '4', '#', '#', ' ', ' ', '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder0.append(charArray24, charArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder0.append((float) '#', (float) 1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "4##  #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "4##  #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[4, #, #,  ,  , #]");
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder36);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder0.append((byte) -1, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder0.append((float) (byte) 100, (float) (short) -1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(equalsBuilder11);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((byte) 1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder35.appendSuper(true);
        equalsBuilder35.reset();
        equalsBuilder35.reset();
        boolean boolean40 = equalsBuilder35.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder35.append((short) 10, (short) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder35.append((double) '#', (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder35.append(false, true);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder49);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray4 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray5 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder1.append(shortArray4, shortArray5);
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean15 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder6, (java.lang.Object) '#', strArray14);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder6.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        byte[] byteArray25 = new byte[] {};
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder19.append(byteArray25, byteArray30);
        char[] charArray36 = new char[] { '#', ' ', '#', '#' };
        char[] charArray39 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder19.append(charArray36, charArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray44 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray45 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder41.append(shortArray44, shortArray45);
        byte[] byteArray47 = new byte[] {};
        byte[] byteArray52 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder41.append(byteArray47, byteArray52);
        char[] charArray58 = new char[] { '#', ' ', '#', '#' };
        char[] charArray61 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder41.append(charArray58, charArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder6.append(charArray39, charArray58);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder63.append(100, (int) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder63.append((short) 10, (short) -1);
        boolean boolean70 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) 100.0d, (java.lang.Object) equalsBuilder63);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder63.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder72.append((double) (short) 10, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder75.append('a', '#');
        java.lang.Boolean boolean79 = equalsBuilder78.build();
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertEquals("'" + boolean79 + "' != '" + false + "'", boolean79, false);
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder4 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder4.append((short) (byte) 10, (short) 0);
        equalsBuilder4.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder9.append((short) (byte) 10, (short) 0);
        long[] longArray18 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray20 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder9.append(longArray18, longArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder22.append((short) (byte) 10, (short) 0);
        long[] longArray31 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray33 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder22.append(longArray31, longArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder4.append(longArray18, longArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder36.append((short) (byte) 10, (short) 0);
        long[] longArray45 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray47 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder36.append(longArray45, longArray47);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray52 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray53 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder49.append(shortArray52, shortArray53);
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean63 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder54, (java.lang.Object) '#', strArray62);
        boolean boolean64 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray47, (java.lang.Object) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder3.append(longArray18, longArray47);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder3.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder67.append((long) 1, (long) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder70.append('#', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder70.append(' ', ' ');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((double) 100L, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((byte) 10, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder84.append((double) (byte) 1, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder87.append('4', 'a');
        equalsBuilder87.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder87.append((byte) 1, (byte) 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder94);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder77.append((short) 10, (short) (byte) 100);
        boolean boolean81 = equalsBuilder77.isEquals();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray9 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray10 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder6.append(shortArray9, shortArray10);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean20 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder11, (java.lang.Object) '#', strArray19);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder11.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray27 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray28 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder24.append(shortArray27, shortArray28);
        byte[] byteArray30 = new byte[] {};
        byte[] byteArray35 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append(byteArray30, byteArray35);
        char[] charArray41 = new char[] { '#', ' ', '#', '#' };
        char[] charArray44 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder24.append(charArray41, charArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray49 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray50 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder46.append(shortArray49, shortArray50);
        byte[] byteArray52 = new byte[] {};
        byte[] byteArray57 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder46.append(byteArray52, byteArray57);
        char[] charArray63 = new char[] { '#', ' ', '#', '#' };
        char[] charArray66 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder46.append(charArray63, charArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder11.append(charArray44, charArray63);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder11.appendSuper(false);
        int[] intArray74 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray79 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder70.append(intArray74, intArray79);
        boolean boolean81 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray3, (java.lang.Object) equalsBuilder80);
        equalsBuilder80.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder80.appendSuper(false);
        boolean boolean85 = equalsBuilder80.isEquals();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        boolean boolean16 = equalsBuilder15.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray20 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray21 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder17.append(shortArray20, shortArray21);
        byte[] byteArray23 = new byte[] {};
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(byteArray23, byteArray28);
        byte[] byteArray30 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder15.append(byteArray28, byteArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((float) ' ', (float) 'a');
        long[] longArray37 = new long[] { (-1), '4' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder38.append((short) (byte) 10, (short) 0);
        equalsBuilder38.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder43.append((short) (byte) 10, (short) 0);
        long[] longArray52 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray54 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder43.append(longArray52, longArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder56.append((short) (byte) 10, (short) 0);
        long[] longArray65 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray67 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder56.append(longArray65, longArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder38.append(longArray52, longArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder31.append(longArray37, longArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder70.append('a', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder70.append((float) 1L, (float) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder76.append('4', ' ');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[-1, 52]");
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(longArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray65), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray67), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(equalsBuilder79);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.appendSuper(false);
        boolean boolean78 = equalsBuilder64.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder64.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((byte) 0, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder84.append((int) (byte) 100, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder84.append((long) 'a', 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder90.append((float) (short) 100, (float) 10L);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder42.append((float) (byte) 1, 100.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder42.append((double) (byte) 0, (double) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder48.append((byte) -1, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder48.append(0, (int) 'a');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder54);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        java.lang.Boolean boolean79 = equalsBuilder78.build();
        short[] shortArray82 = new short[] { (short) -1, (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray86 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray87 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder83.append(shortArray86, shortArray87);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder78.append(shortArray82, shortArray86);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder89.append('#', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder92.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder98 = equalsBuilder95.append((short) 100, (short) (byte) 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertEquals("'" + boolean79 + "' != '" + false + "'", boolean79, false);
        org.junit.Assert.assertNotNull(shortArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray82), "[-1, 10]");
        org.junit.Assert.assertNotNull(shortArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray86), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray87), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertNotNull(equalsBuilder98);
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder78.append((byte) 0, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder78.append(0.0f, (float) 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder78.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder87.append((long) (byte) 100, (long) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder90.append((byte) 100, (byte) 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder62.append((short) 10, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder69.append((float) (short) 100, 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder72.append((double) (byte) 10, (double) 1.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder75.append((long) (byte) -1, 10L);
        equalsBuilder78.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder78.append(100, (int) (short) 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder82);
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append((long) (byte) 1, (long) 1);
        equalsBuilder24.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder24.append(false, false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder28);
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder75.append((long) (short) -1, (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder75.append((float) (byte) 100, (float) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((short) 0, (short) 100);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        long[] longArray9 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray11 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(longArray9, longArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray16 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray17 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder13.append(shortArray16, shortArray17);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean27 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder18, (java.lang.Object) '#', strArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append((int) (short) -1, (int) (short) 0);
        boolean boolean31 = equalsBuilder30.isEquals();
        boolean boolean32 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder12, (java.lang.Object) boolean31);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder12.append((short) 0, (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder35.append(0L, 10L);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder38);
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        equalsBuilder12.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder12.append('#', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder19.append((double) (byte) 100, (double) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder22.appendSuper(false);
        java.lang.Class<?> wildcardClass25 = equalsBuilder22.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        java.lang.Object obj7 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray18 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray19 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder15.append(shortArray18, shortArray19);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(byteArray21, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder8.append(byteArray14, byteArray26);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj7, (java.lang.Object) byteArray26, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray41 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray42 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder38.append(shortArray41, shortArray42);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder38.append(byteArray44, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder31.append(byteArray37, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(byteArray26, byteArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder52.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder52.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder57.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder59.append((short) (byte) 100, (short) (byte) 100);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(equalsBuilder62);
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        long[] longArray9 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray11 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(longArray9, longArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder17.append((short) (byte) 10, (short) 0);
        long[] longArray26 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray28 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(longArray26, longArray28);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder30.append((short) (byte) 10, (short) 0);
        equalsBuilder30.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder35.append((short) (byte) 10, (short) 0);
        long[] longArray44 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray46 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder35.append(longArray44, longArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder48.append((short) (byte) 10, (short) 0);
        long[] longArray57 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray59 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder48.append(longArray57, longArray59);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder30.append(longArray44, longArray59);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder0.append(longArray28, longArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder62.append((short) 0, (short) 0);
        equalsBuilder65.reset();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        boolean boolean16 = equalsBuilder15.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray20 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray21 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder17.append(shortArray20, shortArray21);
        byte[] byteArray23 = new byte[] {};
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(byteArray23, byteArray28);
        byte[] byteArray30 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder15.append(byteArray28, byteArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((float) ' ', (float) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder31.append((double) (short) 0, (double) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder31.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder40.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.appendSuper(false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder45);
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder77.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder77.append((double) 1L, (double) 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder82.append((byte) 0, (byte) 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        boolean boolean16 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append(true, true);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder0.append((short) (byte) 100, (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder0.append(true, false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(equalsBuilder29);
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder77.append(10.0d, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder77.append((float) (byte) 10, (float) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder77.append((byte) 0, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder77.append(1.0f, (float) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder77.append((long) ' ', (long) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder92.append((byte) 10, (byte) 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder95);
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        java.lang.Object obj0 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray4 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray5 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder1.append(shortArray4, shortArray5);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder6.append((float) '#', 1.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder9.append(false, true);
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj0, (java.lang.Object) equalsBuilder9, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder9.append(' ', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder17.append((float) (-1L), (float) 'a');
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder21.append((int) (byte) 1, (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((int) (byte) 1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder27.append((long) (byte) 10, (long) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder33.append((int) '4', 0);
        java.lang.Boolean boolean37 = equalsBuilder33.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertEquals("'" + boolean37 + "' != '" + false + "'", boolean37, false);
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray6 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray10 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray11 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder7.append(shortArray10, shortArray11);
        byte[] byteArray13 = new byte[] {};
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder7.append(byteArray13, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder0.append(byteArray6, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray24 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray25 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder21.append(shortArray24, shortArray25);
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean35 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder26, (java.lang.Object) '#', strArray34);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder26.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray42 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray43 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder39.append(shortArray42, shortArray43);
        byte[] byteArray45 = new byte[] {};
        byte[] byteArray50 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder39.append(byteArray45, byteArray50);
        char[] charArray56 = new char[] { '#', ' ', '#', '#' };
        char[] charArray59 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder39.append(charArray56, charArray59);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray64 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray65 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder61.append(shortArray64, shortArray65);
        byte[] byteArray67 = new byte[] {};
        byte[] byteArray72 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder61.append(byteArray67, byteArray72);
        char[] charArray78 = new char[] { '#', ' ', '#', '#' };
        char[] charArray81 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder61.append(charArray78, charArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder26.append(charArray59, charArray78);
        char[] charArray88 = new char[] { '#', '#', '4', '4' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder20.append(charArray78, charArray88);
        java.lang.Boolean boolean90 = equalsBuilder89.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder89.append((-1), (int) ' ');
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray64), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[]");
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "##44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "##44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[#, #, 4, 4]");
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertEquals("'" + boolean90 + "' != '" + false + "'", boolean90, false);
        org.junit.Assert.assertNotNull(equalsBuilder93);
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        boolean boolean32 = equalsBuilder0.isEquals();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((double) 100L, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((short) (byte) -1, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder81.append((byte) 10, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder87.append((long) (byte) -1, (long) '4');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        float[] floatArray18 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray21 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append(floatArray18, floatArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder12.append((float) 0L, 10.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder25.append('#', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder28.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder31.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder33.append((float) 100, (float) (short) 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder36);
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append(true, false);
        boolean boolean67 = equalsBuilder66.isEquals();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray4 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray5 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder1.append(shortArray4, shortArray5);
        byte[] byteArray7 = new byte[] {};
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder1.append(byteArray7, byteArray12);
        char[] charArray18 = new char[] { '#', ' ', '#', '#' };
        char[] charArray21 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder1.append(charArray18, charArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder22.append('a', '#');
        java.util.Collection<java.lang.String> strCollection26 = null;
        boolean boolean27 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) 0L, (java.lang.Object) equalsBuilder25, strCollection26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder25.append((double) 0L, (double) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder30.append((short) 1, (short) 1);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((double) 100L, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((short) (byte) -1, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder81.append((double) 0.0f, (double) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder87.append(' ', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder90.append('a', '4');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        double[] doubleArray80 = new double[] { (short) 0, 0.0d, (byte) 10, (byte) 0 };
        double[] doubleArray81 = new double[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder64.append(doubleArray80, doubleArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder82.append((short) 0, (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder82.append((float) (short) 1, (float) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder88.append((short) 1, (short) 10);
        equalsBuilder91.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder91.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder97 = equalsBuilder94.append('a', ' ');
        java.lang.Class<?> wildcardClass98 = equalsBuilder97.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0, 0.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder94);
        org.junit.Assert.assertNotNull(equalsBuilder97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray4 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray5 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder1.append(shortArray4, shortArray5);
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean15 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder6, (java.lang.Object) '#', strArray14);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder6.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        byte[] byteArray25 = new byte[] {};
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder19.append(byteArray25, byteArray30);
        char[] charArray36 = new char[] { '#', ' ', '#', '#' };
        char[] charArray39 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder19.append(charArray36, charArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray44 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray45 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder41.append(shortArray44, shortArray45);
        byte[] byteArray47 = new byte[] {};
        byte[] byteArray52 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder41.append(byteArray47, byteArray52);
        char[] charArray58 = new char[] { '#', ' ', '#', '#' };
        char[] charArray61 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder41.append(charArray58, charArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder6.append(charArray39, charArray58);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder63.append(100, (int) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder63.append((short) 10, (short) -1);
        boolean boolean70 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) 100.0d, (java.lang.Object) equalsBuilder63);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder63.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder72.append((double) (short) 10, (double) (byte) 100);
        java.lang.Boolean boolean76 = equalsBuilder75.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder75.append((short) (byte) 0, (short) 10);
        boolean boolean80 = equalsBuilder79.isEquals();
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertEquals("'" + boolean76 + "' != '" + false + "'", boolean76, false);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder77.append(10.0d, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder77.append((float) (byte) 10, (float) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder83.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder85.append((double) (byte) -1, (double) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder85.append((double) 0L, (double) '4');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((float) '#', 1.0f);
        java.lang.Object obj9 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray13 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray14 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder10.append(shortArray13, shortArray14);
        byte[] byteArray16 = new byte[] {};
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder10.append(byteArray16, byteArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder22.append((byte) 10, (byte) 0);
        boolean boolean26 = equalsBuilder25.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray30 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray31 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder27.append(shortArray30, shortArray31);
        byte[] byteArray33 = new byte[] {};
        byte[] byteArray38 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder27.append(byteArray33, byteArray38);
        byte[] byteArray40 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder25.append(byteArray38, byteArray40);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder25.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray48 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray49 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder45.append(shortArray48, shortArray49);
        byte[] byteArray51 = new byte[] {};
        byte[] byteArray56 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder45.append(byteArray51, byteArray56);
        char[] charArray62 = new char[] { '#', ' ', '#', '#' };
        char[] charArray65 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder45.append(charArray62, charArray65);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder66.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder69.append((long) (short) 10, (long) '#');
        equalsBuilder72.reset();
        java.lang.Object obj74 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray78 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray79 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder75.append(shortArray78, shortArray79);
        byte[] byteArray81 = new byte[] {};
        byte[] byteArray86 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder75.append(byteArray81, byteArray86);
        java.lang.String[] strArray89 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList90 = new java.util.ArrayList<java.lang.String>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList90, strArray89);
        boolean boolean92 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj74, (java.lang.Object) equalsBuilder87, (java.util.Collection<java.lang.String>) strList90);
        boolean boolean93 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder44, (java.lang.Object) equalsBuilder72, (java.util.Collection<java.lang.String>) strList90);
        boolean boolean94 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, obj9, (java.util.Collection<java.lang.String>) strList90);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder5.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder99 = equalsBuilder96.append((float) (short) 100, (-1.0f));
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(shortArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray78), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray79), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[]");
        org.junit.Assert.assertNotNull(byteArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray86), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(equalsBuilder96);
        org.junit.Assert.assertNotNull(equalsBuilder99);
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder6.append((-1L), 100L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder9.append((int) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder9.append((short) (byte) 0, (short) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder9.append((byte) 10, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder9.append((double) 100L, (double) 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder9.append('#', '#');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        boolean boolean16 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append(true, true);
        java.lang.Boolean boolean23 = equalsBuilder22.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder22.append((double) 100, (double) 10);
        java.lang.Class<?> wildcardClass27 = equalsBuilder26.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertEquals("'" + boolean23 + "' != '" + false + "'", boolean23, false);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((byte) 1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder31.append((short) (byte) 10, (short) (byte) 0);
        long[] longArray43 = new long[] { 'a', (short) 1, (byte) -1, (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder44.append((short) (byte) 10, (short) 0);
        equalsBuilder44.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder49.append((short) (byte) 10, (short) 0);
        long[] longArray58 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray60 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder49.append(longArray58, longArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder62.append((short) (byte) 10, (short) 0);
        long[] longArray71 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray73 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder62.append(longArray71, longArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder44.append(longArray58, longArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder38.append(longArray43, longArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder38.append((double) 1, (double) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder79.append((-1), (int) ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder79.append('a', 'a');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[97, 1, -1, 10]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(longArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray71), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 100.0f, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder5.append((short) 0, (short) -1);
        boolean boolean21 = equalsBuilder5.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder5.append((double) (byte) 100, (double) 100L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder5.append((double) '#', (double) 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append(100.0f, 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder27.append((long) (short) 100, (long) 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((double) 100L, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((short) (byte) -1, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder81.append((byte) 10, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder87.append((long) (short) 1, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder87.append((int) '4', (int) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder93.append((int) (byte) 0, (int) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder99 = equalsBuilder96.append((float) 1, (float) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
        org.junit.Assert.assertNotNull(equalsBuilder99);
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray12 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray16 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray17 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder13.append(shortArray16, shortArray17);
        byte[] byteArray19 = new byte[] {};
        byte[] byteArray24 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder13.append(byteArray19, byteArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder6.append(byteArray12, byteArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray31 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray32 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder28.append(shortArray31, shortArray32);
        byte[] byteArray34 = new byte[] {};
        byte[] byteArray39 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder28.append(byteArray34, byteArray39);
        boolean boolean41 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder0.append(byteArray12, byteArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder42.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder45.append((long) (short) 1, (long) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder48.append((short) (byte) 1, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder51.appendSuper(false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder53);
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder64.append((double) 10.0f, 100.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((short) (byte) 1, (short) (byte) 1);
        boolean boolean84 = equalsBuilder80.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder80.append((long) (-1), 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder80.append(0L, (long) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder80.append((double) 0.0f, 10.0d);
        boolean boolean94 = equalsBuilder93.isEquals();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray12 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray16 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray17 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder13.append(shortArray16, shortArray17);
        byte[] byteArray19 = new byte[] {};
        byte[] byteArray24 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder13.append(byteArray19, byteArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder6.append(byteArray12, byteArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray31 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray32 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder28.append(shortArray31, shortArray32);
        byte[] byteArray34 = new byte[] {};
        byte[] byteArray39 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder28.append(byteArray34, byteArray39);
        boolean boolean41 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder0.append(byteArray12, byteArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder0.append(100.0f, 100.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder45.append((float) (short) -1, 10.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray52 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray53 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder49.append(shortArray52, shortArray53);
        byte[] byteArray55 = new byte[] {};
        byte[] byteArray60 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder49.append(byteArray55, byteArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray66 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray67 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder63.append(shortArray66, shortArray67);
        byte[] byteArray69 = new byte[] {};
        byte[] byteArray74 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder63.append(byteArray69, byteArray74);
        boolean boolean76 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray74);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder45.append(byteArray55, byteArray74);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder45.appendSuper(true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[]");
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray67), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[]");
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder79);
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append((long) (byte) 100, 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray10 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray11 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder7.append(shortArray10, shortArray11);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean21 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder12, (java.lang.Object) '#', strArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder12.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray28 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray29 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder25.append(shortArray28, shortArray29);
        byte[] byteArray31 = new byte[] {};
        byte[] byteArray36 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder25.append(byteArray31, byteArray36);
        char[] charArray42 = new char[] { '#', ' ', '#', '#' };
        char[] charArray45 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder25.append(charArray42, charArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray50 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray51 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder47.append(shortArray50, shortArray51);
        byte[] byteArray53 = new byte[] {};
        byte[] byteArray58 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder47.append(byteArray53, byteArray58);
        char[] charArray64 = new char[] { '#', ' ', '#', '#' };
        char[] charArray67 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder47.append(charArray64, charArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder12.append(charArray45, charArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder12.appendSuper(false);
        int[] intArray75 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray80 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder71.append(intArray75, intArray80);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder71.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder84.appendSuper(false);
        java.lang.Boolean boolean87 = equalsBuilder86.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder86.append((byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder86.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder86.append(false, true);
        boolean boolean97 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder6, (java.lang.Object) equalsBuilder86, true);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[]");
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertEquals("'" + boolean87 + "' != '" + false + "'", boolean87, false);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        java.lang.Boolean boolean79 = equalsBuilder78.build();
        short[] shortArray82 = new short[] { (short) -1, (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray86 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray87 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder83.append(shortArray86, shortArray87);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder78.append(shortArray82, shortArray86);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder89.append('#', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder92.appendSuper(true);
        equalsBuilder92.reset();
        int[] intArray96 = null;
        int[] intArray97 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder98 = equalsBuilder92.append(intArray96, intArray97);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertEquals("'" + boolean79 + "' != '" + false + "'", boolean79, false);
        org.junit.Assert.assertNotNull(shortArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray82), "[-1, 10]");
        org.junit.Assert.assertNotNull(shortArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray86), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray87), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder94);
        org.junit.Assert.assertNotNull(equalsBuilder98);
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append((int) (short) 100, (int) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder17.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder44.append(' ', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder47.append((int) (byte) 1, 100);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((double) (short) -1, (double) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder31.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder38.append(1.0d, (double) 10.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder41.append((short) (byte) 1, (short) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder41.append((double) (short) 1, (double) '4');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder47);
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        boolean[] booleanArray68 = new boolean[] { true, true, false };
        boolean[] booleanArray69 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder5.append(booleanArray68, booleanArray69);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder70.append((-1.0f), 0.0f);
        boolean boolean74 = equalsBuilder70.isEquals();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[true, true, false]");
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder42.append((float) (byte) 1, 100.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder42.append((double) (byte) 0, (double) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder42.append((int) (short) 0, (-1));
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder51);
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder46.append(byteArray52, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder46.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder39.append((java.lang.Object) equalsBuilder45, (java.lang.Object) equalsBuilder46);
        long[] longArray73 = new long[] { (byte) 100, ' ', (short) 10 };
        long[] longArray79 = new long[] { 'a', 0L, (short) 10, (byte) 0, (byte) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder46.append(longArray73, longArray79);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder46.append((double) (-1.0f), (double) 0L);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[100, 32, 10]");
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[97, 0, 10, 0, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((byte) 1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder35.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder37.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder37.append((float) 100, (float) 100L);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 100.0f, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder5.append((short) 0, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder20.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder23.append((float) (-1L), (float) (byte) 1);
        equalsBuilder26.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(equalsBuilder26);
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray6 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray10 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray11 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder7.append(shortArray10, shortArray11);
        byte[] byteArray13 = new byte[] {};
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder7.append(byteArray13, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder0.append(byteArray6, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray24 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray25 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder21.append(shortArray24, shortArray25);
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean35 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder26, (java.lang.Object) '#', strArray34);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder26.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray42 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray43 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder39.append(shortArray42, shortArray43);
        byte[] byteArray45 = new byte[] {};
        byte[] byteArray50 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder39.append(byteArray45, byteArray50);
        char[] charArray56 = new char[] { '#', ' ', '#', '#' };
        char[] charArray59 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder39.append(charArray56, charArray59);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray64 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray65 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder61.append(shortArray64, shortArray65);
        byte[] byteArray67 = new byte[] {};
        byte[] byteArray72 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder61.append(byteArray67, byteArray72);
        char[] charArray78 = new char[] { '#', ' ', '#', '#' };
        char[] charArray81 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder61.append(charArray78, charArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder26.append(charArray59, charArray78);
        char[] charArray88 = new char[] { '#', '#', '4', '4' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder20.append(charArray78, charArray88);
        java.lang.Boolean boolean90 = equalsBuilder89.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder89.append((long) '4', (long) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder93.append(false, false);
        boolean boolean97 = equalsBuilder96.isEquals();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray64), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[]");
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "##44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "##44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[#, #, 4, 4]");
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertEquals("'" + boolean90 + "' != '" + false + "'", boolean90, false);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder46.append(byteArray52, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder46.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder39.append((java.lang.Object) equalsBuilder45, (java.lang.Object) equalsBuilder46);
        long[] longArray73 = new long[] { (byte) 100, ' ', (short) 10 };
        long[] longArray79 = new long[] { 'a', 0L, (short) 10, (byte) 0, (byte) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder46.append(longArray73, longArray79);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder83.append(0, (int) (short) 0);
        boolean boolean87 = equalsBuilder83.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder83.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder83.append((double) '#', 10.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder93.append(0.0f, (float) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder99 = equalsBuilder96.append((int) (short) 100, (int) ' ');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[100, 32, 10]");
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[97, 0, 10, 0, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
        org.junit.Assert.assertNotNull(equalsBuilder99);
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder46.append(byteArray52, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder46.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder39.append((java.lang.Object) equalsBuilder45, (java.lang.Object) equalsBuilder46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder45.append((float) (short) 0, 100.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder45.append((float) 100L, (-1.0f));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder75.append((double) (byte) -1, (double) '4');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder9.append(true, true);
        boolean boolean13 = equalsBuilder9.isEquals();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder64.append((double) 10.0f, 100.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((short) 1, (short) (byte) 10);
        equalsBuilder83.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder83.append((short) 1, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder83.append(100L, (long) 'a');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder17.append((byte) 100, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray25 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray26 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder22.append(shortArray25, shortArray26);
        byte[] byteArray28 = new byte[] {};
        byte[] byteArray33 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder22.append(byteArray28, byteArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((byte) 10, (byte) 0);
        boolean boolean38 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder17, (java.lang.Object) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder17.appendSuper(true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(equalsBuilder40);
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder62.append((short) 10, (short) -1);
        boolean[] booleanArray74 = new boolean[] { true, true, false, true };
        boolean[] booleanArray78 = new boolean[] { true, true, false };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder69.append(booleanArray74, booleanArray78);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder79.append('4', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder79.append((double) (byte) 0, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder79.append('a', '4');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray74), "[true, true, false, true]");
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray78), "[true, true, false]");
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray25 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray26 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder22.append(shortArray25, shortArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray34 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray38 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray39 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder35.append(shortArray38, shortArray39);
        byte[] byteArray41 = new byte[] {};
        byte[] byteArray46 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder35.append(byteArray41, byteArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder28.append(byteArray34, byteArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray53 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray54 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder50.append(shortArray53, shortArray54);
        byte[] byteArray56 = new byte[] {};
        byte[] byteArray61 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder50.append(byteArray56, byteArray61);
        boolean boolean63 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder22.append(byteArray34, byteArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder22.append(100.0f, 100.0f);
        boolean boolean69 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder0, (java.lang.Object) equalsBuilder67, true);
        boolean[] booleanArray72 = new boolean[] { true, false };
        boolean[] booleanArray78 = new boolean[] { false, false, false, true, true };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder67.append(booleanArray72, booleanArray78);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder79.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder79.append((long) '#', 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder84.append(false, true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray72), "[true, false]");
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray78), "[false, false, false, true, true]");
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        double[] doubleArray80 = new double[] { (short) 0, 0.0d, (byte) 10, (byte) 0 };
        double[] doubleArray81 = new double[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder64.append(doubleArray80, doubleArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder64.append((float) 10, (float) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder64.append((short) (byte) 100, (short) (byte) -1);
        java.lang.Boolean boolean89 = equalsBuilder88.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0, 0.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertEquals("'" + boolean89 + "' != '" + false + "'", boolean89, false);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        float[] floatArray65 = null;
        float[] floatArray66 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder64.append(floatArray65, floatArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder67.append((double) 0, (double) (byte) 1);
        equalsBuilder70.reset();
        boolean boolean72 = equalsBuilder70.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder70.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder70.append((int) '4', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder70.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder70.append((float) (short) 1, (float) (byte) 100);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 100, (byte) 100);
        equalsBuilder3.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder3.append((byte) -1, (byte) 10);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder11);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        java.lang.Object obj0 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray4 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray5 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder1.append(shortArray4, shortArray5);
        byte[] byteArray7 = new byte[] {};
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder1.append(byteArray7, byteArray12);
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        boolean boolean18 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj0, (java.lang.Object) equalsBuilder13, (java.util.Collection<java.lang.String>) strList16);
        boolean boolean19 = equalsBuilder13.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder13.append((float) (byte) 1, (float) 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder13.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder13.append(1, (int) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder13.append((double) (-1.0f), (double) (short) 1);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.appendSuper(false);
        boolean boolean78 = equalsBuilder64.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray82 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray83 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder79.append(shortArray82, shortArray83);
        boolean boolean85 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean78, (java.lang.Object) equalsBuilder84);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder84.append((long) (byte) -1, (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder84.append((short) 0, (short) (byte) 1);
        equalsBuilder84.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder84.append(10.0f, (float) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder98 = equalsBuilder84.append((short) 1, (short) (byte) 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(shortArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray82), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray83), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertNotNull(equalsBuilder98);
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder75.append((long) (short) -1, (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder75.append((float) (byte) 1, (float) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((short) (byte) -1, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder84.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder87.append((float) 0, (float) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder87.append(false, false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder78.append((double) (byte) 0, (double) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder78.append(10L, (-1L));
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder0.append((short) (byte) 10, (short) 10);
        java.lang.Object obj8 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray12 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray13 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder9.append(shortArray12, shortArray13);
        byte[] byteArray15 = new byte[] {};
        byte[] byteArray20 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder9.append(byteArray15, byteArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder9.append((byte) 100, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder7.append(obj8, (java.lang.Object) (byte) 100);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder25);
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        long[] longArray9 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray11 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(longArray9, longArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray16 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray17 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder13.append(shortArray16, shortArray17);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean27 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder18, (java.lang.Object) '#', strArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append((int) (short) -1, (int) (short) 0);
        boolean boolean31 = equalsBuilder30.isEquals();
        boolean boolean32 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder12, (java.lang.Object) boolean31);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder12.append((short) 0, (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder36.append((short) (byte) 10, (short) 0);
        long[] longArray45 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray47 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder36.append(longArray45, longArray47);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder49.append((short) (byte) 10, (short) 0);
        long[] longArray58 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray60 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder49.append(longArray58, longArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder12.append(longArray45, longArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder12.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder65.append((byte) 10, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder68.append(' ', 'a');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder71);
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append((double) '4', (double) 0);
        equalsBuilder17.reset();
        equalsBuilder17.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder17.append((short) 10, (short) (byte) 0);
        java.lang.Class<?> wildcardClass48 = equalsBuilder17.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        equalsBuilder12.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder12.append((byte) 100, (byte) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder19);
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray12 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray16 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray17 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder13.append(shortArray16, shortArray17);
        byte[] byteArray19 = new byte[] {};
        byte[] byteArray24 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder13.append(byteArray19, byteArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder6.append(byteArray12, byteArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray31 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray32 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder28.append(shortArray31, shortArray32);
        byte[] byteArray34 = new byte[] {};
        byte[] byteArray39 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder28.append(byteArray34, byteArray39);
        boolean boolean41 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder0.append(byteArray12, byteArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder0.append(100.0f, 100.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder45.append((float) (short) -1, 10.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray52 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray53 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder49.append(shortArray52, shortArray53);
        byte[] byteArray55 = new byte[] {};
        byte[] byteArray60 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder49.append(byteArray55, byteArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray66 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray67 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder63.append(shortArray66, shortArray67);
        byte[] byteArray69 = new byte[] {};
        byte[] byteArray74 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder63.append(byteArray69, byteArray74);
        boolean boolean76 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray74);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder45.append(byteArray55, byteArray74);
        boolean boolean78 = equalsBuilder77.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder77.append((double) '4', 1.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((short) (byte) 1, (short) -1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[]");
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray67), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[]");
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append((long) (byte) 100, 1L);
        boolean boolean7 = equalsBuilder6.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray11 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray12 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder8.append(shortArray11, shortArray12);
        byte[] byteArray14 = new byte[] {};
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder8.append(byteArray14, byteArray19);
        float[] floatArray26 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray29 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder20.append(floatArray26, floatArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder20.append((float) 0L, 10.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder33.append('#', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder36.append('a', '#');
        float[] floatArray45 = new float[] { (short) -1, (-1), 0.0f, (byte) -1, (-1) };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray49 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray50 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder46.append(shortArray49, shortArray50);
        byte[] byteArray52 = new byte[] {};
        byte[] byteArray57 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder46.append(byteArray52, byteArray57);
        float[] floatArray64 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray67 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder58.append(floatArray64, floatArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder36.append(floatArray45, floatArray64);
        boolean boolean71 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder6, (java.lang.Object) floatArray64, true);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[-1.0, -1.0, 0.0, -1.0, -1.0]");
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(floatArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray64), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray67), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.appendSuper(true);
        java.lang.Class<?> wildcardClass10 = equalsBuilder3.getClass();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray25 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray26 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder22.append(shortArray25, shortArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray34 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray38 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray39 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder35.append(shortArray38, shortArray39);
        byte[] byteArray41 = new byte[] {};
        byte[] byteArray46 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder35.append(byteArray41, byteArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder28.append(byteArray34, byteArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray53 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray54 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder50.append(shortArray53, shortArray54);
        byte[] byteArray56 = new byte[] {};
        byte[] byteArray61 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder50.append(byteArray56, byteArray61);
        boolean boolean63 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder22.append(byteArray34, byteArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder22.append(100.0f, 100.0f);
        boolean boolean69 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder0, (java.lang.Object) equalsBuilder67, true);
        boolean[] booleanArray72 = new boolean[] { true, false };
        boolean[] booleanArray78 = new boolean[] { false, false, false, true, true };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder67.append(booleanArray72, booleanArray78);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder79.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder79.append((long) '#', 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder79.append((double) (-1L), 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder79.append((int) (byte) 1, (int) (short) 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray72), "[true, false]");
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray78), "[false, false, false, true, true]");
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((double) 100L, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((short) (byte) -1, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder81.append((double) 0.0f, (double) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder81.append((float) '#', (float) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder81.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder92.append((int) (byte) 1, (int) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder98 = equalsBuilder92.append((byte) 100, (byte) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertNotNull(equalsBuilder98);
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        float[] floatArray65 = null;
        float[] floatArray66 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder64.append(floatArray65, floatArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder64.append((double) 0.0f, 100.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append((short) 10, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder73.append((float) 10, (float) (byte) 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((double) (short) -1, (double) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder35.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder35.append((byte) 1, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder35.append((byte) 10, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder35.append((int) (short) 10, (int) (short) 10);
        equalsBuilder46.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder46.append((short) 100, (short) -1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder50);
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder75.append((long) (short) -1, (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder75.append((float) (byte) 1, (float) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((short) (byte) -1, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder84.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder87.append((double) (short) 100, (double) 1L);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.appendSuper(false);
        boolean boolean78 = equalsBuilder64.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder64.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((byte) 0, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder84.append((int) (byte) 100, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder87.append(10.0d, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder87.append(false, true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray19 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray20 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder16.append(shortArray19, shortArray20);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder21, (java.lang.Object) '#', strArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder21.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray37 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray38 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder34.append(shortArray37, shortArray38);
        byte[] byteArray40 = new byte[] {};
        byte[] byteArray45 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder34.append(byteArray40, byteArray45);
        char[] charArray51 = new char[] { '#', ' ', '#', '#' };
        char[] charArray54 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder34.append(charArray51, charArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray59 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray60 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder56.append(shortArray59, shortArray60);
        byte[] byteArray62 = new byte[] {};
        byte[] byteArray67 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder56.append(byteArray62, byteArray67);
        char[] charArray73 = new char[] { '#', ' ', '#', '#' };
        char[] charArray76 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder56.append(charArray73, charArray76);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder21.append(charArray54, charArray73);
        java.lang.Object obj79 = null;
        boolean boolean80 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray54, obj79);
        java.lang.String[] strArray81 = new java.lang.String[] {};
        boolean boolean82 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder15, (java.lang.Object) charArray54, strArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder15.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder15.append('4', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder15.append((float) (-1L), 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder90.append((int) (short) 10, (int) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder90.append((short) -1, (short) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        java.lang.Object obj7 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray18 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray19 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder15.append(shortArray18, shortArray19);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(byteArray21, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder8.append(byteArray14, byteArray26);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj7, (java.lang.Object) byteArray26, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray41 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray42 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder38.append(shortArray41, shortArray42);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder38.append(byteArray44, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder31.append(byteArray37, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(byteArray26, byteArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray69 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray70 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder66.append(shortArray69, shortArray70);
        byte[] byteArray72 = new byte[] {};
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder66.append(byteArray72, byteArray77);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder0.append(byteArray59, byteArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder0.append(0, (int) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder0.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder0.append((long) 10, (long) 1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((double) (short) -1, (double) 10);
        java.lang.Boolean boolean36 = equalsBuilder35.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder35.append((int) (byte) 1, 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder35.append(0L, (long) (-1));
        long[] longArray45 = new long[] { 0, (short) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder46.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder46.append((float) 10L, (float) (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder53.append((short) (byte) 10, (short) 0);
        long[] longArray62 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray64 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(longArray62, longArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder66.append((short) (byte) 10, (short) 0);
        long[] longArray75 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray77 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder66.append(longArray75, longArray77);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder52.append(longArray62, longArray77);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder42.append(longArray45, longArray62);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder42.append((byte) -1, (byte) 1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertEquals("'" + boolean36 + "' != '" + false + "'", boolean36, false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[0, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(longArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray62), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(longArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray75), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray77), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder0.append((double) (short) 0, (double) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder0.append((long) (byte) 100, (long) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((short) (byte) 1, (short) (byte) 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        boolean boolean16 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder19.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append((float) (-1L), 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder19.append((short) 100, (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray31 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray32 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder28.append(shortArray31, shortArray32);
        byte[] byteArray34 = new byte[] {};
        byte[] byteArray39 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder28.append(byteArray34, byteArray39);
        char[] charArray45 = new char[] { '#', ' ', '#', '#' };
        char[] charArray48 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder28.append(charArray45, charArray48);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder49.append((double) (byte) 0, (double) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder52.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder52.append(true, true);
        boolean boolean58 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder27, (java.lang.Object) true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((byte) 100, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder15.append((double) 1L, (double) 1L);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder18);
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder62.append(100, (int) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder62.append((short) 10, (short) -1);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder62.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder72.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder72.append((byte) 0, (byte) 1);
        equalsBuilder72.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((short) -1, (short) (byte) 1);
        equalsBuilder81.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder81.append((byte) -1, (byte) 100);
        boolean boolean86 = equalsBuilder85.isEquals();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 'a', 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder5.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder5.append((long) '#', (long) (short) 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder23);
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((short) -1, (short) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((byte) 1, (byte) 0);
        java.lang.Class<?> wildcardClass85 = equalsBuilder84.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder17.append((byte) 100, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder17.append((long) '#', 1L);
        java.lang.Boolean boolean25 = equalsBuilder17.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder17.append((short) 1, (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder28.append('4', '#');
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertEquals("'" + boolean25 + "' != '" + false + "'", boolean25, false);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder64.append((double) 10.0f, 100.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((short) (byte) 1, (short) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder83.append(10.0f, (float) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder83.appendSuper(false);
        java.lang.Object obj89 = null;
        boolean boolean90 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder83, obj89);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder83.append((long) (byte) 1, (long) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder93.append((byte) 0, (byte) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append((byte) 10, (byte) 100);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 100, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder3.append((byte) 10, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder10.append((double) '4', (double) 1.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder13.append(' ', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray20 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray21 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder17.append(shortArray20, shortArray21);
        byte[] byteArray23 = new byte[] {};
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(byteArray23, byteArray28);
        float[] floatArray35 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray38 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder29.append(floatArray35, floatArray38);
        java.lang.Object obj41 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray46 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray47 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder43.append(shortArray46, shortArray47);
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean57 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder48, (java.lang.Object) '#', strArray56);
        boolean boolean58 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj41, (java.lang.Object) (byte) 1, strArray56);
        boolean boolean59 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) floatArray38, (java.lang.Object) (byte) 0, strArray56);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray63 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray64 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder60.append(shortArray63, shortArray64);
        byte[] byteArray66 = new byte[] {};
        byte[] byteArray71 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder60.append(byteArray66, byteArray71);
        float[] floatArray78 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray81 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder72.append(floatArray78, floatArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder13.append(floatArray38, floatArray81);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray38), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray63), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray64), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[]");
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(floatArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray78), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray81), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder83);
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray19 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray20 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder16.append(shortArray19, shortArray20);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder21, (java.lang.Object) '#', strArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder21.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray37 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray38 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder34.append(shortArray37, shortArray38);
        byte[] byteArray40 = new byte[] {};
        byte[] byteArray45 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder34.append(byteArray40, byteArray45);
        char[] charArray51 = new char[] { '#', ' ', '#', '#' };
        char[] charArray54 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder34.append(charArray51, charArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray59 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray60 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder56.append(shortArray59, shortArray60);
        byte[] byteArray62 = new byte[] {};
        byte[] byteArray67 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder56.append(byteArray62, byteArray67);
        char[] charArray73 = new char[] { '#', ' ', '#', '#' };
        char[] charArray76 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder56.append(charArray73, charArray76);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder21.append(charArray54, charArray73);
        java.lang.Object obj79 = null;
        boolean boolean80 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray54, obj79);
        java.lang.String[] strArray81 = new java.lang.String[] {};
        boolean boolean82 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder15, (java.lang.Object) charArray54, strArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder15.appendSuper(false);
        float[] floatArray85 = new float[] {};
        float[] floatArray87 = new float[] { (byte) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder15.append(floatArray85, floatArray87);
        boolean[] booleanArray89 = new boolean[] {};
        boolean[] booleanArray90 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder88.append(booleanArray89, booleanArray90);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder91.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder93.append((int) (byte) -1, (int) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder99 = equalsBuilder93.append('#', ' ');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(floatArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray85), "[]");
        org.junit.Assert.assertNotNull(floatArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray87), "[-1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(booleanArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray89), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
        org.junit.Assert.assertNotNull(equalsBuilder99);
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder21.append((int) (byte) 1, (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((int) (byte) 1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder30.append('#', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder30.appendSuper(false);
        equalsBuilder30.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder35);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((double) 100L, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((short) (byte) -1, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder81.append((double) 0.0f, (double) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder81.append((float) '#', (float) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder81.append((byte) 10, (byte) 1);
        java.lang.Boolean boolean94 = equalsBuilder93.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder97 = equalsBuilder93.append((byte) 1, (byte) 10);
        java.lang.Class<?> wildcardClass98 = equalsBuilder97.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertEquals("'" + boolean94 + "' != '" + false + "'", boolean94, false);
        org.junit.Assert.assertNotNull(equalsBuilder97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((float) '#', 1.0f);
        equalsBuilder8.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(equalsBuilder8);
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray12 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray16 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray17 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder13.append(shortArray16, shortArray17);
        byte[] byteArray19 = new byte[] {};
        byte[] byteArray24 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder13.append(byteArray19, byteArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder6.append(byteArray12, byteArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray31 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray32 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder28.append(shortArray31, shortArray32);
        byte[] byteArray34 = new byte[] {};
        byte[] byteArray39 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder28.append(byteArray34, byteArray39);
        boolean boolean41 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder0.append(byteArray12, byteArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder0.append(100.0f, 100.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder0.append((byte) 10, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder48.append(0.0f, (float) 'a');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder51);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder17.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder21.append((short) 100, (short) 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder0.append((long) (byte) 1, (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder0.append((float) (-1L), (float) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder0.append((byte) 0, (byte) 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(equalsBuilder14);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray25 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray26 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder22.append(shortArray25, shortArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray34 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray38 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray39 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder35.append(shortArray38, shortArray39);
        byte[] byteArray41 = new byte[] {};
        byte[] byteArray46 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder35.append(byteArray41, byteArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder28.append(byteArray34, byteArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray53 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray54 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder50.append(shortArray53, shortArray54);
        byte[] byteArray56 = new byte[] {};
        byte[] byteArray61 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder50.append(byteArray56, byteArray61);
        boolean boolean63 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder22.append(byteArray34, byteArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder22.append(100.0f, 100.0f);
        boolean boolean69 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder0, (java.lang.Object) equalsBuilder67, true);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder0.append(10, (int) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder0.append('4', 'a');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        java.lang.Boolean boolean79 = equalsBuilder78.build();
        short[] shortArray82 = new short[] { (short) -1, (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray86 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray87 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder83.append(shortArray86, shortArray87);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder78.append(shortArray82, shortArray86);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder89.append('#', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder92.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder98 = equalsBuilder95.append(0, (int) (short) 100);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertEquals("'" + boolean79 + "' != '" + false + "'", boolean79, false);
        org.junit.Assert.assertNotNull(shortArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray82), "[-1, 10]");
        org.junit.Assert.assertNotNull(shortArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray86), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray87), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertNotNull(equalsBuilder98);
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder0.append((short) 1, (short) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder0.append((float) 10L, (float) 100);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append((int) (short) 100, (int) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder17.append((long) 1, (long) 100);
        equalsBuilder17.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder46.append(byteArray52, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder46.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder39.append((java.lang.Object) equalsBuilder45, (java.lang.Object) equalsBuilder46);
        long[] longArray73 = new long[] { (byte) 100, ' ', (short) 10 };
        long[] longArray79 = new long[] { 'a', 0L, (short) 10, (byte) 0, (byte) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder46.append(longArray73, longArray79);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder83.append(0, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder83.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder89.append((float) (short) 10, (float) (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder89.append(0L, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder97 = equalsBuilder95.appendSuper(true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[100, 32, 10]");
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[97, 0, 10, 0, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertNotNull(equalsBuilder97);
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        java.lang.Object obj7 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray18 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray19 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder15.append(shortArray18, shortArray19);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(byteArray21, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder8.append(byteArray14, byteArray26);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj7, (java.lang.Object) byteArray26, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray41 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray42 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder38.append(shortArray41, shortArray42);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder38.append(byteArray44, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder31.append(byteArray37, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(byteArray26, byteArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder52.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder52.append((float) '4', (float) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder52.append((byte) 0, (byte) 1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(equalsBuilder61);
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder3.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((-1.0d), (double) (byte) 100);
        long[] longArray9 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder10.append((short) (byte) 10, (short) 0);
        equalsBuilder10.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder15.append((short) (byte) 10, (short) 0);
        long[] longArray24 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray26 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(longArray24, longArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder28.append((short) (byte) 10, (short) 0);
        long[] longArray37 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray39 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder28.append(longArray37, longArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder10.append(longArray24, longArray39);
        java.lang.Boolean boolean42 = equalsBuilder41.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder41.append((byte) 1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder41.append((short) (byte) 10, (short) (byte) 0);
        long[] longArray53 = new long[] { 'a', (short) 1, (byte) -1, (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder54.append((short) (byte) 10, (short) 0);
        equalsBuilder54.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder59.append((short) (byte) 10, (short) 0);
        long[] longArray68 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray70 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder59.append(longArray68, longArray70);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder72.append((short) (byte) 10, (short) 0);
        long[] longArray81 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray83 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder72.append(longArray81, longArray83);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder54.append(longArray68, longArray83);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder48.append(longArray53, longArray83);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder5.append(longArray9, longArray83);
        java.lang.Class<?> wildcardClass88 = longArray83.getClass();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray39), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertEquals("'" + boolean42 + "' != '" + false + "'", boolean42, false);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(longArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray53), "[97, 1, -1, 10]");
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(longArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray68), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray70), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(longArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray81), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray83), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 100.0f, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder5.append((short) 0, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder20.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder20.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray30 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray31 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder27.append(shortArray30, shortArray31);
        byte[] byteArray33 = new byte[] {};
        byte[] byteArray38 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder27.append(byteArray33, byteArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder27.append((double) 100L, (double) 10L);
        boolean boolean43 = equalsBuilder27.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder27.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder46.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder46.append((float) (-1L), 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder51.append((float) (short) 0, (float) 1);
        boolean boolean56 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder26, (java.lang.Object) 1, false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder64.append((double) 10.0f, 100.0d);
        boolean boolean81 = equalsBuilder64.isEquals();
        java.lang.Boolean boolean82 = equalsBuilder64.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + boolean82 + "' != '" + false + "'", boolean82, false);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        double[] doubleArray80 = new double[] { (short) 0, 0.0d, (byte) 10, (byte) 0 };
        double[] doubleArray81 = new double[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder64.append(doubleArray80, doubleArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder64.append((short) (byte) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder85.append((float) (short) 100, 0.0f);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0, 0.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append((short) 100, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray46 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray47 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder43.append(shortArray46, shortArray47);
        byte[] byteArray49 = new byte[] {};
        byte[] byteArray54 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder43.append(byteArray49, byteArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder55.append((byte) 10, (byte) 0);
        equalsBuilder55.reset();
        boolean boolean60 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 100, (java.lang.Object) equalsBuilder55);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder55.appendSuper(false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[]");
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(equalsBuilder62);
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        boolean boolean16 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder19.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append((int) (short) -1, (int) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder19.append((byte) 1, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder19.append((float) 0L, 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder30.append((short) (byte) -1, (short) (byte) 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder5.append((short) -1, (short) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder65.append((double) 'a', (double) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder68.append((double) (byte) 100, (double) 'a');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder71);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append((int) (short) 100, (int) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder17.append((long) 1, (long) 100);
        java.lang.Class<?> wildcardClass46 = equalsBuilder45.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append(false, true);
        boolean boolean43 = equalsBuilder42.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder42.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray50 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray51 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder47.append(shortArray50, shortArray51);
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean61 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder52, (java.lang.Object) '#', strArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder52.append((int) (short) -1, (int) (short) 0);
        boolean boolean65 = equalsBuilder64.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder64.append((byte) 100, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder64.append((long) '#', 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder71.append((float) 0L, (float) 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder71.append((int) (byte) 1, (int) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder78.append(false, false);
        java.lang.Boolean boolean82 = equalsBuilder81.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder81.append((byte) 100, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder81.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder88.append((double) (byte) 0, 100.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder88.append((long) '4', (long) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder97 = equalsBuilder88.append('#', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder98 = equalsBuilder46.append((java.lang.Object) equalsBuilder71, (java.lang.Object) equalsBuilder88);
        boolean boolean99 = equalsBuilder71.isEquals();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertEquals("'" + boolean82 + "' != '" + true + "'", boolean82, true);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder94);
        org.junit.Assert.assertNotNull(equalsBuilder97);
        org.junit.Assert.assertNotNull(equalsBuilder98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder62.append((short) 10, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder69.append((float) (short) 100, 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder72.append((double) (byte) 10, (double) 1.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder75.append((long) (byte) -1, 10L);
        equalsBuilder78.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder78.append((long) (byte) 10, 10L);
        boolean boolean83 = equalsBuilder78.isEquals();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        boolean boolean16 = equalsBuilder15.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray20 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray21 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder17.append(shortArray20, shortArray21);
        byte[] byteArray23 = new byte[] {};
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(byteArray23, byteArray28);
        byte[] byteArray30 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder15.append(byteArray28, byteArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((float) ' ', (float) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder34.append(1.0d, (double) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder40.append((long) (byte) 0, (long) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder40.append((short) (byte) 10, (short) (byte) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder46);
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((double) 100L, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((short) (byte) -1, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder84.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder84.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder89.append((byte) -1, (byte) 10);
        java.lang.Boolean boolean93 = equalsBuilder89.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder89.append((float) 10, (float) (short) 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertEquals("'" + boolean93 + "' != '" + false + "'", boolean93, false);
        org.junit.Assert.assertNotNull(equalsBuilder96);
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append('#', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder7.append((short) (byte) 10, (short) 0);
        long[] longArray16 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray18 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder7.append(longArray16, longArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder20.append((short) (byte) 10, (short) 0);
        long[] longArray29 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray31 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder20.append(longArray29, longArray31);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder20.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder20.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder37.append((short) (byte) 10, (short) 0);
        long[] longArray46 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray48 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder37.append(longArray46, longArray48);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder50.append((short) (byte) 10, (short) 0);
        equalsBuilder50.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder55.append((short) (byte) 10, (short) 0);
        long[] longArray64 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray66 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder55.append(longArray64, longArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder68.append((short) (byte) 10, (short) 0);
        long[] longArray77 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray79 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder68.append(longArray77, longArray79);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder50.append(longArray64, longArray79);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder20.append(longArray48, longArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder6.append(longArray18, longArray64);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray48), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray66), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(longArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray77), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder83);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append((float) (byte) 10, (float) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder66.append(0.0d, (double) '4');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder62.append(100, (int) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder62.append((short) 10, (short) -1);
        equalsBuilder68.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder68.append((float) (byte) -1, (float) 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder68.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder75.append((float) 0L, 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder78.append((float) (byte) 0, (float) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((short) 0, (short) -1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 100.0f, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder5.append((short) 0, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder5.append((long) ' ', (long) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder5.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder25.append((long) (byte) 0, (long) 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder28);
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder15.append((long) '#', (long) (byte) 0);
        java.lang.Boolean boolean19 = equalsBuilder15.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertEquals("'" + boolean19 + "' != '" + false + "'", boolean19, false);
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray36 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray37 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder33.append(shortArray36, shortArray37);
        byte[] byteArray39 = new byte[] {};
        byte[] byteArray44 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder33.append(byteArray39, byteArray44);
        float[] floatArray51 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray54 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder45.append(floatArray51, floatArray54);
        float[] floatArray60 = new float[] { (-1), (byte) 10, (-1), (short) 100 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder31.append(floatArray54, floatArray60);
        equalsBuilder61.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder61.append((long) (byte) 100, (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder61.append((short) (byte) 0, (short) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder61.append((byte) 10, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray78 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray82 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray83 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder79.append(shortArray82, shortArray83);
        byte[] byteArray85 = new byte[] {};
        byte[] byteArray90 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder79.append(byteArray85, byteArray90);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder72.append(byteArray78, byteArray90);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder92.append((byte) 10, (byte) 10);
        boolean boolean96 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder61, (java.lang.Object) equalsBuilder92);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder99 = equalsBuilder61.append((short) 0, (short) (byte) -1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(floatArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray60), "[-1.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray82), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray83), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[]");
        org.junit.Assert.assertNotNull(byteArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray90), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(equalsBuilder99);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder46.append(byteArray52, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder46.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder39.append((java.lang.Object) equalsBuilder45, (java.lang.Object) equalsBuilder46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder46.append((byte) 0, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder72.append((byte) 100, (byte) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((byte) 1, (byte) 0);
        boolean boolean36 = equalsBuilder35.isEquals();
        equalsBuilder35.reset();
        equalsBuilder35.reset();
        equalsBuilder35.reset();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray13 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray14 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder10.append(shortArray13, shortArray14);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean24 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder15, (java.lang.Object) '#', strArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray31 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray32 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder28.append(shortArray31, shortArray32);
        byte[] byteArray34 = new byte[] {};
        byte[] byteArray39 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder28.append(byteArray34, byteArray39);
        char[] charArray45 = new char[] { '#', ' ', '#', '#' };
        char[] charArray48 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder28.append(charArray45, charArray48);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray53 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray54 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder50.append(shortArray53, shortArray54);
        byte[] byteArray56 = new byte[] {};
        byte[] byteArray61 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder50.append(byteArray56, byteArray61);
        char[] charArray67 = new char[] { '#', ' ', '#', '#' };
        char[] charArray70 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder50.append(charArray67, charArray70);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder15.append(charArray48, charArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder15.appendSuper(false);
        int[] intArray78 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray83 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder74.append(intArray78, intArray83);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder74.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder74.append((double) 10.0f, 100.0d);
        boolean boolean91 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder3, (java.lang.Object) 10.0f);
        equalsBuilder3.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder3.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder98 = equalsBuilder95.append((int) '4', 10);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertNotNull(equalsBuilder98);
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append((-1), (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((int) (byte) -1, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder27.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray40 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray44 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray45 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder41.append(shortArray44, shortArray45);
        byte[] byteArray47 = new byte[] {};
        byte[] byteArray52 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder41.append(byteArray47, byteArray52);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder34.append(byteArray40, byteArray52);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder34.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder56.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder58.append(' ', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder61.append((long) (short) 10, (long) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder61.append((int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder67.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder67.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray77 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray78 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder74.append(shortArray77, shortArray78);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray83 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray84 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder80.append(shortArray83, shortArray84);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder73.append(shortArray77, shortArray84);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray90 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray91 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder87.append(shortArray90, shortArray91);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder33.append(shortArray84, shortArray90);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder33.append(true, true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(shortArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray77), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray78), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(shortArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray83), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray84), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(shortArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray90), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray91), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.appendSuper(true);
        boolean boolean10 = equalsBuilder9.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder9.append((float) 100L, (float) (short) 10);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(equalsBuilder13);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        java.lang.Object obj7 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray18 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray19 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder15.append(shortArray18, shortArray19);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(byteArray21, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder8.append(byteArray14, byteArray26);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj7, (java.lang.Object) byteArray26, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray41 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray42 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder38.append(shortArray41, shortArray42);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder38.append(byteArray44, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder31.append(byteArray37, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(byteArray26, byteArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder52.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder52.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder52.append((float) (byte) 10, (float) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder60.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder60.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder60.append((double) 0, (double) (short) 10);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 100.0f, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder5.append((short) 0, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder20.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder23.append(100.0d, (double) 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(equalsBuilder26);
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        boolean boolean16 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder19.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append((int) (short) -1, (int) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder19.append((byte) 1, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray34 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray38 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray39 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder35.append(shortArray38, shortArray39);
        byte[] byteArray41 = new byte[] {};
        byte[] byteArray46 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder35.append(byteArray41, byteArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder28.append(byteArray34, byteArray46);
        boolean boolean49 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder27, (java.lang.Object) equalsBuilder48);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder27.append((float) '4', (float) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder52.append((long) (byte) 100, (long) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder52.append((byte) 1, (byte) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder58);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray19 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray20 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder16.append(shortArray19, shortArray20);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder21, (java.lang.Object) '#', strArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder21.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray37 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray38 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder34.append(shortArray37, shortArray38);
        byte[] byteArray40 = new byte[] {};
        byte[] byteArray45 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder34.append(byteArray40, byteArray45);
        char[] charArray51 = new char[] { '#', ' ', '#', '#' };
        char[] charArray54 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder34.append(charArray51, charArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray59 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray60 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder56.append(shortArray59, shortArray60);
        byte[] byteArray62 = new byte[] {};
        byte[] byteArray67 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder56.append(byteArray62, byteArray67);
        char[] charArray73 = new char[] { '#', ' ', '#', '#' };
        char[] charArray76 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder56.append(charArray73, charArray76);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder21.append(charArray54, charArray73);
        java.lang.Object obj79 = null;
        boolean boolean80 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray54, obj79);
        java.lang.String[] strArray81 = new java.lang.String[] {};
        boolean boolean82 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder15, (java.lang.Object) charArray54, strArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder15.appendSuper(false);
        float[] floatArray85 = new float[] {};
        float[] floatArray87 = new float[] { (byte) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder15.append(floatArray85, floatArray87);
        boolean[] booleanArray89 = new boolean[] {};
        boolean[] booleanArray90 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder88.append(booleanArray89, booleanArray90);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder91.append((long) 'a', (long) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder97 = equalsBuilder91.append((long) (short) 0, (long) (short) 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(floatArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray85), "[]");
        org.junit.Assert.assertNotNull(floatArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray87), "[-1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(booleanArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray89), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder94);
        org.junit.Assert.assertNotNull(equalsBuilder97);
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder0.appendSuper(false);
        float[] floatArray8 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray12 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray13 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder9.append(shortArray12, shortArray13);
        byte[] byteArray15 = new byte[] {};
        byte[] byteArray20 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder9.append(byteArray15, byteArray20);
        float[] floatArray27 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray30 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder21.append(floatArray27, floatArray30);
        java.lang.Object obj33 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray38 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray39 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder35.append(shortArray38, shortArray39);
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean49 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder40, (java.lang.Object) '#', strArray48);
        boolean boolean50 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj33, (java.lang.Object) (byte) 1, strArray48);
        boolean boolean51 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) floatArray30, (java.lang.Object) (byte) 0, strArray48);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(floatArray8, floatArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder52.append((short) 10, (short) 100);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder55);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder64.append((double) 10.0f, 100.0d);
        java.lang.Class<?> wildcardClass81 = equalsBuilder80.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append((float) (byte) 10, (float) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder66.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder69.append((float) 100, (float) 0L);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        java.lang.Boolean boolean19 = equalsBuilder17.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + boolean19 + "' != '" + false + "'", boolean19, false);
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        long[] longArray9 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray11 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(longArray9, longArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray16 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray17 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder13.append(shortArray16, shortArray17);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean27 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder18, (java.lang.Object) '#', strArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append((int) (short) -1, (int) (short) 0);
        boolean boolean31 = equalsBuilder30.isEquals();
        boolean boolean32 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder12, (java.lang.Object) boolean31);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder12.append((short) 0, (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray39 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray40 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder36.append(shortArray39, shortArray40);
        byte[] byteArray42 = new byte[] {};
        byte[] byteArray47 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder36.append(byteArray42, byteArray47);
        char[] charArray53 = new char[] { '#', ' ', '#', '#' };
        char[] charArray56 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder36.append(charArray53, charArray56);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder57.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder57.append((int) (byte) 1, (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder63.append((int) (byte) 1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder63.append('a', '#');
        boolean boolean71 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 100, (java.lang.Object) equalsBuilder69, false);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder17.append((byte) 100, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder17.append((long) '#', 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append((float) (-1), (float) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append(100.0d, (double) (short) 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder62.append((float) 10, (float) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder65.append((float) 0, (float) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder68.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder68.append((byte) 100, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder68.append(' ', 'a');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 100, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder3.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder10.append((int) (short) 0, (int) (byte) 0);
        java.lang.Boolean boolean14 = equalsBuilder13.build();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder64.append((long) 'a', (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append(100.0d, (double) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder80.append((int) (short) 100, 10);
        java.lang.Boolean boolean87 = equalsBuilder80.build();
        boolean boolean88 = equalsBuilder80.isEquals();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertEquals("'" + boolean87 + "' != '" + false + "'", boolean87, false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray12 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray16 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray17 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder13.append(shortArray16, shortArray17);
        byte[] byteArray19 = new byte[] {};
        byte[] byteArray24 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder13.append(byteArray19, byteArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder6.append(byteArray12, byteArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray31 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray32 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder28.append(shortArray31, shortArray32);
        byte[] byteArray34 = new byte[] {};
        byte[] byteArray39 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder28.append(byteArray34, byteArray39);
        boolean boolean41 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder0.append(byteArray12, byteArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder0.append(100.0f, 100.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder45.appendSuper(false);
        java.lang.Boolean boolean48 = equalsBuilder45.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder45.append('a', '#');
        equalsBuilder45.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder45.append((byte) 0, (byte) 0);
        java.lang.Object obj56 = null;
        boolean boolean58 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder45, obj56, true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertEquals("'" + boolean48 + "' != '" + false + "'", boolean48, false);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((double) 100L, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((short) (byte) -1, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder81.append((byte) 10, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder87.append((short) (byte) -1, (short) (byte) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray6 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray10 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray11 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder7.append(shortArray10, shortArray11);
        byte[] byteArray13 = new byte[] {};
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder7.append(byteArray13, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder0.append(byteArray6, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder22.append(true, false);
        byte[] byteArray27 = new byte[] { (byte) 0 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray31 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray32 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder28.append(shortArray31, shortArray32);
        byte[] byteArray34 = new byte[] {};
        byte[] byteArray39 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder28.append(byteArray34, byteArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder40.append((byte) 10, (byte) 0);
        boolean boolean44 = equalsBuilder43.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray48 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray49 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder45.append(shortArray48, shortArray49);
        byte[] byteArray51 = new byte[] {};
        byte[] byteArray56 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder45.append(byteArray51, byteArray56);
        byte[] byteArray58 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder43.append(byteArray56, byteArray58);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder25.append(byteArray27, byteArray58);
        boolean boolean61 = equalsBuilder25.isEquals();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0]");
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray19 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray20 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder16.append(shortArray19, shortArray20);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder21, (java.lang.Object) '#', strArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder21.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray37 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray38 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder34.append(shortArray37, shortArray38);
        byte[] byteArray40 = new byte[] {};
        byte[] byteArray45 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder34.append(byteArray40, byteArray45);
        char[] charArray51 = new char[] { '#', ' ', '#', '#' };
        char[] charArray54 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder34.append(charArray51, charArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray59 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray60 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder56.append(shortArray59, shortArray60);
        byte[] byteArray62 = new byte[] {};
        byte[] byteArray67 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder56.append(byteArray62, byteArray67);
        char[] charArray73 = new char[] { '#', ' ', '#', '#' };
        char[] charArray76 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder56.append(charArray73, charArray76);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder21.append(charArray54, charArray73);
        java.lang.Object obj79 = null;
        boolean boolean80 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray54, obj79);
        java.lang.String[] strArray81 = new java.lang.String[] {};
        boolean boolean82 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder15, (java.lang.Object) charArray54, strArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder15.appendSuper(false);
        float[] floatArray85 = new float[] {};
        float[] floatArray87 = new float[] { (byte) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder15.append(floatArray85, floatArray87);
        boolean[] booleanArray89 = new boolean[] {};
        boolean[] booleanArray90 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder88.append(booleanArray89, booleanArray90);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder91.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder93.append((short) 0, (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder99 = equalsBuilder96.append((int) (byte) 100, (int) (byte) 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(floatArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray85), "[]");
        org.junit.Assert.assertNotNull(floatArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray87), "[-1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(booleanArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray89), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
        org.junit.Assert.assertNotNull(equalsBuilder99);
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray9 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray10 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder6.append(shortArray9, shortArray10);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean20 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder11, (java.lang.Object) '#', strArray19);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder11.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray27 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray28 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder24.append(shortArray27, shortArray28);
        byte[] byteArray30 = new byte[] {};
        byte[] byteArray35 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append(byteArray30, byteArray35);
        char[] charArray41 = new char[] { '#', ' ', '#', '#' };
        char[] charArray44 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder24.append(charArray41, charArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray49 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray50 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder46.append(shortArray49, shortArray50);
        byte[] byteArray52 = new byte[] {};
        byte[] byteArray57 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder46.append(byteArray52, byteArray57);
        char[] charArray63 = new char[] { '#', ' ', '#', '#' };
        char[] charArray66 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder46.append(charArray63, charArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder11.append(charArray44, charArray63);
        java.lang.String[] strArray69 = null;
        boolean boolean70 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray4, (java.lang.Object) equalsBuilder11, strArray69);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder11.append((float) (byte) 10, (float) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder73.append((long) ' ', (long) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder73.append((byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder79.append((byte) 100, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder82.append((byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder82.append((long) (byte) 0, (long) ' ');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray19 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray20 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder16.append(shortArray19, shortArray20);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder21, (java.lang.Object) '#', strArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder21.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray37 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray38 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder34.append(shortArray37, shortArray38);
        byte[] byteArray40 = new byte[] {};
        byte[] byteArray45 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder34.append(byteArray40, byteArray45);
        char[] charArray51 = new char[] { '#', ' ', '#', '#' };
        char[] charArray54 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder34.append(charArray51, charArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray59 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray60 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder56.append(shortArray59, shortArray60);
        byte[] byteArray62 = new byte[] {};
        byte[] byteArray67 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder56.append(byteArray62, byteArray67);
        char[] charArray73 = new char[] { '#', ' ', '#', '#' };
        char[] charArray76 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder56.append(charArray73, charArray76);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder21.append(charArray54, charArray73);
        java.lang.Object obj79 = null;
        boolean boolean80 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray54, obj79);
        java.lang.String[] strArray81 = new java.lang.String[] {};
        boolean boolean82 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder15, (java.lang.Object) charArray54, strArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder15.appendSuper(false);
        float[] floatArray85 = new float[] {};
        float[] floatArray87 = new float[] { (byte) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder15.append(floatArray85, floatArray87);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder88.append((byte) 0, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder91.append((int) 'a', (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder97 = equalsBuilder91.append((short) 10, (short) (byte) 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(floatArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray85), "[]");
        org.junit.Assert.assertNotNull(floatArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray87), "[-1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder94);
        org.junit.Assert.assertNotNull(equalsBuilder97);
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder0.append((short) 1, (short) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray38 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray39 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder35.append(shortArray38, shortArray39);
        byte[] byteArray41 = new byte[] {};
        byte[] byteArray46 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder35.append(byteArray41, byteArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder35.append((double) 100L, (double) 10L);
        boolean boolean51 = equalsBuilder35.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder35.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray58 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray59 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder55.append(shortArray58, shortArray59);
        byte[] byteArray61 = new byte[] {};
        byte[] byteArray66 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder55.append(byteArray61, byteArray66);
        java.lang.String[] strArray71 = new java.lang.String[] { "", "hi!", "" };
        boolean boolean72 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder54, (java.lang.Object) byteArray66, strArray71);
        java.lang.Object[] objArray73 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder0.append((java.lang.Object[]) strArray71, objArray73);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray58), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(equalsBuilder74);
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        java.lang.Boolean boolean79 = equalsBuilder78.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder78.append(false, true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertEquals("'" + boolean79 + "' != '" + false + "'", boolean79, false);
        org.junit.Assert.assertNotNull(equalsBuilder82);
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 100, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder3.append((byte) 10, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder10.append((double) '4', (double) 1.0f);
        equalsBuilder13.reset();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(equalsBuilder13);
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        boolean boolean16 = equalsBuilder15.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray20 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray21 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder17.append(shortArray20, shortArray21);
        byte[] byteArray23 = new byte[] {};
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(byteArray23, byteArray28);
        byte[] byteArray30 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder15.append(byteArray28, byteArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder15.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray38 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray39 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder35.append(shortArray38, shortArray39);
        byte[] byteArray41 = new byte[] {};
        byte[] byteArray46 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder35.append(byteArray41, byteArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder35.append((double) 100L, (double) 10L);
        boolean boolean51 = equalsBuilder35.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder35.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray58 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray59 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder55.append(shortArray58, shortArray59);
        byte[] byteArray61 = new byte[] {};
        byte[] byteArray66 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder55.append(byteArray61, byteArray66);
        java.lang.String[] strArray71 = new java.lang.String[] { "", "hi!", "" };
        boolean boolean72 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder54, (java.lang.Object) byteArray66, strArray71);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray76 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray77 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder73.append(shortArray76, shortArray77);
        byte[] byteArray79 = new byte[] {};
        byte[] byteArray84 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder73.append(byteArray79, byteArray84);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder34.append(byteArray66, byteArray84);
        boolean boolean88 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) byteArray66, (java.lang.Object) (short) 100);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray58), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(shortArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray76), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray77), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[]");
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray8 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray9 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder5.append(shortArray8, shortArray9);
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean19 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder10, (java.lang.Object) '#', strArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder10.append((int) (short) -1, (int) (short) 0);
        boolean boolean23 = equalsBuilder22.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray27 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray28 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder24.append(shortArray27, shortArray28);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean38 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder29, (java.lang.Object) '#', strArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder29.append((int) (short) -1, (int) (short) 0);
        boolean boolean42 = equalsBuilder41.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder22.append((java.lang.Object) boolean42, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder22.append(false, true);
        boolean boolean48 = equalsBuilder47.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder47.append((int) ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder51.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray58 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray59 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder55.append(shortArray58, shortArray59);
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean69 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder60, (java.lang.Object) '#', strArray68);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder70.append(false, false);
        java.lang.Boolean boolean74 = equalsBuilder73.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder73.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder73.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder73.append(false, false);
        boolean boolean84 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) strArray68, (java.lang.Object) false, true);
        boolean boolean85 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder0, (java.lang.Object) equalsBuilder51, strArray68);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder51.append(' ', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder51.appendSuper(true);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray58), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertEquals("'" + boolean74 + "' != '" + true + "'", boolean74, true);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder90);
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        boolean boolean16 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder19.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append((int) (short) -1, (int) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder19.append((byte) 1, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray34 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray38 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray39 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder35.append(shortArray38, shortArray39);
        byte[] byteArray41 = new byte[] {};
        byte[] byteArray46 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder35.append(byteArray41, byteArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder28.append(byteArray34, byteArray46);
        boolean boolean49 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder27, (java.lang.Object) equalsBuilder48);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder48.append((long) 'a', 0L);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(equalsBuilder52);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        boolean boolean16 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder19.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append((float) (-1L), 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder19.append((short) 0, (short) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder19.append((long) (byte) -1, (long) ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder19.append((byte) 10, (byte) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray4 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray5 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder1.append(shortArray4, shortArray5);
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean15 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder6, (java.lang.Object) '#', strArray14);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder6.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        byte[] byteArray25 = new byte[] {};
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder19.append(byteArray25, byteArray30);
        char[] charArray36 = new char[] { '#', ' ', '#', '#' };
        char[] charArray39 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder19.append(charArray36, charArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray44 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray45 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder41.append(shortArray44, shortArray45);
        byte[] byteArray47 = new byte[] {};
        byte[] byteArray52 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder41.append(byteArray47, byteArray52);
        char[] charArray58 = new char[] { '#', ' ', '#', '#' };
        char[] charArray61 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder41.append(charArray58, charArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder6.append(charArray39, charArray58);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder6.appendSuper(false);
        int[] intArray69 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray74 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder65.append(intArray69, intArray74);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder65.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder65.append((long) 'a', (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder65.append((double) (-1.0f), (double) (byte) 1);
        boolean boolean85 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) 0, (java.lang.Object) equalsBuilder65);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append(true, false);
        boolean boolean80 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder77, (java.lang.Object) (short) 1, false);
        java.lang.Class<?> wildcardClass81 = equalsBuilder77.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.appendSuper(false);
        java.lang.Boolean boolean78 = equalsBuilder77.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder77.append(1L, (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder77.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder77.append((long) ' ', (long) (byte) 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertEquals("'" + boolean78 + "' != '" + false + "'", boolean78, false);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray36 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray37 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder33.append(shortArray36, shortArray37);
        byte[] byteArray39 = new byte[] {};
        byte[] byteArray44 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder33.append(byteArray39, byteArray44);
        float[] floatArray51 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray54 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder45.append(floatArray51, floatArray54);
        float[] floatArray60 = new float[] { (-1), (byte) 10, (-1), (short) 100 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder31.append(floatArray54, floatArray60);
        equalsBuilder61.reset();
        java.lang.Boolean boolean63 = equalsBuilder61.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder61.append(false, true);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(floatArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray60), "[-1.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertEquals("'" + boolean63 + "' != '" + true + "'", boolean63, true);
        org.junit.Assert.assertNotNull(equalsBuilder66);
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray9 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray10 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder6.append(shortArray9, shortArray10);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean20 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder11, (java.lang.Object) '#', strArray19);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder11.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray27 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray28 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder24.append(shortArray27, shortArray28);
        byte[] byteArray30 = new byte[] {};
        byte[] byteArray35 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append(byteArray30, byteArray35);
        char[] charArray41 = new char[] { '#', ' ', '#', '#' };
        char[] charArray44 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder24.append(charArray41, charArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray49 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray50 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder46.append(shortArray49, shortArray50);
        byte[] byteArray52 = new byte[] {};
        byte[] byteArray57 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder46.append(byteArray52, byteArray57);
        char[] charArray63 = new char[] { '#', ' ', '#', '#' };
        char[] charArray66 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder46.append(charArray63, charArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder11.append(charArray44, charArray63);
        java.lang.String[] strArray69 = null;
        boolean boolean70 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray4, (java.lang.Object) equalsBuilder11, strArray69);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder11.append((float) (byte) 10, (float) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder73.append(' ', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder73.append('4', 'a');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(equalsBuilder79);
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        java.lang.Object obj7 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray18 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray19 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder15.append(shortArray18, shortArray19);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(byteArray21, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder8.append(byteArray14, byteArray26);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj7, (java.lang.Object) byteArray26, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray41 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray42 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder38.append(shortArray41, shortArray42);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder38.append(byteArray44, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder31.append(byteArray37, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(byteArray26, byteArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder52.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder52.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder52.append((float) (byte) 10, (float) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder60.append((short) 100, (short) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder60.append(10, (int) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder60.append(false, false);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray12 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray16 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray17 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder13.append(shortArray16, shortArray17);
        byte[] byteArray19 = new byte[] {};
        byte[] byteArray24 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder13.append(byteArray19, byteArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder6.append(byteArray12, byteArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray31 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray32 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder28.append(shortArray31, shortArray32);
        byte[] byteArray34 = new byte[] {};
        byte[] byteArray39 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder28.append(byteArray34, byteArray39);
        boolean boolean41 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder0.append(byteArray12, byteArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder0.append(100.0f, 100.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder45.append((float) (short) -1, 10.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder48.append('4', '#');
        equalsBuilder48.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder51);
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append((double) '4', (double) 0);
        equalsBuilder17.reset();
        equalsBuilder17.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder17.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder17.append((float) 'a', (float) (byte) 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        equalsBuilder12.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder12.append('#', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append((byte) 10, (byte) -1);
        boolean boolean23 = equalsBuilder12.isEquals();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append(false, true);
        boolean boolean43 = equalsBuilder42.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder42.append((int) ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder46.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder49.append((short) (byte) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder49.append(0, (int) (byte) 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder55);
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray6 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray10 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray11 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder7.append(shortArray10, shortArray11);
        byte[] byteArray13 = new byte[] {};
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder7.append(byteArray13, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder0.append(byteArray6, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray29 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray33 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray34 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder30.append(shortArray33, shortArray34);
        byte[] byteArray36 = new byte[] {};
        byte[] byteArray41 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder30.append(byteArray36, byteArray41);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder23.append(byteArray29, byteArray41);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray50 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray54 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray55 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder51.append(shortArray54, shortArray55);
        byte[] byteArray57 = new byte[] {};
        byte[] byteArray62 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder51.append(byteArray57, byteArray62);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder44.append(byteArray50, byteArray62);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder0.append(byteArray41, byteArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder0.append((int) ' ', (int) (short) -1);
        boolean boolean69 = equalsBuilder68.isEquals();
        equalsBuilder68.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder68.appendSuper(false);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(equalsBuilder72);
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray19 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray20 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder16.append(shortArray19, shortArray20);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder21, (java.lang.Object) '#', strArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder21.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray37 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray38 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder34.append(shortArray37, shortArray38);
        byte[] byteArray40 = new byte[] {};
        byte[] byteArray45 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder34.append(byteArray40, byteArray45);
        char[] charArray51 = new char[] { '#', ' ', '#', '#' };
        char[] charArray54 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder34.append(charArray51, charArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray59 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray60 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder56.append(shortArray59, shortArray60);
        byte[] byteArray62 = new byte[] {};
        byte[] byteArray67 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder56.append(byteArray62, byteArray67);
        char[] charArray73 = new char[] { '#', ' ', '#', '#' };
        char[] charArray76 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder56.append(charArray73, charArray76);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder21.append(charArray54, charArray73);
        java.lang.Object obj79 = null;
        boolean boolean80 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray54, obj79);
        java.lang.String[] strArray81 = new java.lang.String[] {};
        boolean boolean82 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder15, (java.lang.Object) charArray54, strArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder15.appendSuper(false);
        float[] floatArray85 = new float[] {};
        float[] floatArray87 = new float[] { (byte) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder15.append(floatArray85, floatArray87);
        boolean[] booleanArray89 = new boolean[] {};
        boolean[] booleanArray90 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder88.append(booleanArray89, booleanArray90);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder91.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder91.append('#', '#');
        equalsBuilder96.reset();
        java.lang.Boolean boolean98 = equalsBuilder96.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(floatArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray85), "[]");
        org.junit.Assert.assertNotNull(floatArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray87), "[-1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(booleanArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray89), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
        org.junit.Assert.assertEquals("'" + boolean98 + "' != '" + true + "'", boolean98, true);
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray9 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray10 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder6.append(shortArray9, shortArray10);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean20 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder11, (java.lang.Object) '#', strArray19);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder11.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray27 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray28 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder24.append(shortArray27, shortArray28);
        byte[] byteArray30 = new byte[] {};
        byte[] byteArray35 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append(byteArray30, byteArray35);
        char[] charArray41 = new char[] { '#', ' ', '#', '#' };
        char[] charArray44 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder24.append(charArray41, charArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray49 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray50 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder46.append(shortArray49, shortArray50);
        byte[] byteArray52 = new byte[] {};
        byte[] byteArray57 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder46.append(byteArray52, byteArray57);
        char[] charArray63 = new char[] { '#', ' ', '#', '#' };
        char[] charArray66 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder46.append(charArray63, charArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder11.append(charArray44, charArray63);
        java.lang.String[] strArray69 = null;
        boolean boolean70 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray4, (java.lang.Object) equalsBuilder11, strArray69);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder11.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder73.append((short) (byte) -1, (short) 100);
        java.lang.Boolean boolean77 = equalsBuilder76.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertEquals("'" + boolean77 + "' != '" + false + "'", boolean77, false);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder64.append((double) 10.0f, 100.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((short) (byte) 1, (short) (byte) 1);
        boolean boolean84 = equalsBuilder80.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder80.append((long) (-1), 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder80.appendSuper(false);
        java.lang.Class<?> wildcardClass90 = equalsBuilder89.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        boolean boolean16 = equalsBuilder15.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray20 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray21 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder17.append(shortArray20, shortArray21);
        byte[] byteArray23 = new byte[] {};
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(byteArray23, byteArray28);
        byte[] byteArray30 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder15.append(byteArray28, byteArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder15.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((byte) -1, (byte) 100);
        equalsBuilder37.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder3.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((-1.0d), (double) (byte) 100);
        byte[] byteArray9 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray13 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray14 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder10.append(shortArray13, shortArray14);
        byte[] byteArray16 = new byte[] {};
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder10.append(byteArray16, byteArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder22.append((byte) 10, (byte) 0);
        boolean boolean26 = equalsBuilder25.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray30 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray31 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder27.append(shortArray30, shortArray31);
        byte[] byteArray33 = new byte[] {};
        byte[] byteArray38 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder27.append(byteArray33, byteArray38);
        byte[] byteArray40 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder25.append(byteArray38, byteArray40);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder25.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray48 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray49 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder45.append(shortArray48, shortArray49);
        byte[] byteArray51 = new byte[] {};
        byte[] byteArray56 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder45.append(byteArray51, byteArray56);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder45.append((double) 100L, (double) 10L);
        boolean boolean61 = equalsBuilder45.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder45.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray68 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray69 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder65.append(shortArray68, shortArray69);
        byte[] byteArray71 = new byte[] {};
        byte[] byteArray76 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder65.append(byteArray71, byteArray76);
        java.lang.String[] strArray81 = new java.lang.String[] { "", "hi!", "" };
        boolean boolean82 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder64, (java.lang.Object) byteArray76, strArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray86 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray87 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder83.append(shortArray86, shortArray87);
        byte[] byteArray89 = new byte[] {};
        byte[] byteArray94 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder83.append(byteArray89, byteArray94);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder44.append(byteArray76, byteArray94);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder97 = equalsBuilder5.append(byteArray9, byteArray76);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[]");
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(shortArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray86), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray87), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray89), "[]");
        org.junit.Assert.assertNotNull(byteArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray94), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertNotNull(equalsBuilder96);
        org.junit.Assert.assertNotNull(equalsBuilder97);
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 100.0f, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder5.append((short) 0, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder20.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder20.append(0.0f, (float) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder26.append((byte) 0, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder26.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append(0, 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder21.append((int) (byte) 1, (int) (byte) 0);
        short[] shortArray28 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray32 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray33 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder29.append(shortArray32, shortArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder27.append(shortArray28, shortArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder27.append((short) (byte) 1, (short) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder38.append('a', '4');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(equalsBuilder41);
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((short) -1, (short) (byte) 1);
        equalsBuilder81.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder81.append('4', 'a');
        boolean boolean86 = equalsBuilder85.isEquals();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder64.append((long) 'a', (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append(100.0d, (double) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder80.append((long) '#', 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder80.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder80.append((short) 10, (short) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder80.append((double) 10L, 1.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder98 = equalsBuilder80.append(100.0f, (float) 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertNotNull(equalsBuilder98);
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        float[] floatArray18 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray21 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append(floatArray18, floatArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder12.append(true, true);
        byte[] byteArray29 = new byte[] { (byte) 100, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray33 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray34 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder30.append(shortArray33, shortArray34);
        byte[] byteArray36 = new byte[] {};
        byte[] byteArray41 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder30.append(byteArray36, byteArray41);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder25.append(byteArray29, byteArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder43.append((byte) 0, (byte) 1);
        boolean boolean47 = equalsBuilder46.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder46.append((float) (byte) 10, (-1.0f));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder46.append((double) 1.0f, (double) 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder46.append((double) (byte) 100, (double) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder56.append(true, true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100, 10, 1]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(equalsBuilder59);
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append((double) '4', (double) 0);
        equalsBuilder17.reset();
        equalsBuilder17.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder17.append((int) (short) 100, (int) ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder17.append((float) (byte) 0, (float) (short) 100);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        boolean boolean16 = equalsBuilder15.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray20 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray21 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder17.append(shortArray20, shortArray21);
        byte[] byteArray23 = new byte[] {};
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(byteArray23, byteArray28);
        byte[] byteArray30 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder15.append(byteArray28, byteArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((float) ' ', (float) 'a');
        long[] longArray37 = new long[] { (-1), '4' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder38.append((short) (byte) 10, (short) 0);
        equalsBuilder38.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder43.append((short) (byte) 10, (short) 0);
        long[] longArray52 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray54 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder43.append(longArray52, longArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder56.append((short) (byte) 10, (short) 0);
        long[] longArray65 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray67 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder56.append(longArray65, longArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder38.append(longArray52, longArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder31.append(longArray37, longArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder70.append('a', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder70.append((float) 1L, (float) (byte) 10);
        equalsBuilder76.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder76.append('#', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder80.appendSuper(true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[-1, 52]");
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(longArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray65), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray67), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder82);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder77.appendSuper(false);
        java.lang.Boolean boolean80 = equalsBuilder79.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder79.append((byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder79.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder79.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder88.append(true, true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertEquals("'" + boolean80 + "' != '" + false + "'", boolean80, false);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((byte) 1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder35.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder37.append(false, true);
        java.lang.Object[] objArray41 = null;
        java.lang.Object obj42 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray46 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray47 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder43.append(shortArray46, shortArray47);
        byte[] byteArray49 = new byte[] {};
        byte[] byteArray54 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder43.append(byteArray49, byteArray54);
        char[] charArray60 = new char[] { '#', ' ', '#', '#' };
        char[] charArray63 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder43.append(charArray60, charArray63);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder64.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder64.append((int) (byte) 1, (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder73.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder73.append((long) (byte) 100, (long) (short) -1);
        java.lang.Object obj80 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray85 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray86 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder82.append(shortArray85, shortArray86);
        java.lang.String[] strArray95 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean96 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder87, (java.lang.Object) '#', strArray95);
        boolean boolean97 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj80, (java.lang.Object) (byte) 1, strArray95);
        boolean boolean98 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj42, (java.lang.Object) (byte) 100, strArray95);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder99 = equalsBuilder40.append(objArray41, (java.lang.Object[]) strArray95);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[]");
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(shortArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray85), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray86), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(strArray95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertNotNull(equalsBuilder99);
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        java.lang.Object obj7 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray18 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray19 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder15.append(shortArray18, shortArray19);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(byteArray21, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder8.append(byteArray14, byteArray26);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj7, (java.lang.Object) byteArray26, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray41 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray42 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder38.append(shortArray41, shortArray42);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder38.append(byteArray44, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder31.append(byteArray37, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(byteArray26, byteArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder52.append((byte) -1, (byte) 0);
        equalsBuilder52.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder52.append((short) (byte) -1, (short) 0);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder59);
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        float[] floatArray18 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray21 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append(floatArray18, floatArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder12.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder12.append((short) 0, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder28.append((double) (short) -1, (double) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder28.append((double) 10, (double) 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder28.append((short) -1, (short) (byte) -1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray6 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray10 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray11 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder7.append(shortArray10, shortArray11);
        byte[] byteArray13 = new byte[] {};
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder7.append(byteArray13, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder0.append(byteArray6, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder20.append((byte) 10, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append((short) (byte) 10, (short) 0);
        equalsBuilder24.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder29.append((short) (byte) 10, (short) 0);
        long[] longArray38 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray40 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder29.append(longArray38, longArray40);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder42.append((short) (byte) 10, (short) 0);
        long[] longArray51 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray53 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder42.append(longArray51, longArray53);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder24.append(longArray38, longArray53);
        java.lang.Boolean boolean56 = equalsBuilder55.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder55.append((byte) 1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder59.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder61.append(false, true);
        boolean boolean65 = equalsBuilder64.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder64.append('#', 'a');
        boolean boolean69 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) 10, (java.lang.Object) '#');
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray53), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertEquals("'" + boolean56 + "' != '" + false + "'", boolean56, false);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        long[] longArray9 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray11 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(longArray9, longArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder14.append('4', '4');
        java.lang.Class<?> wildcardClass18 = equalsBuilder17.getClass();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder46.append(byteArray52, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder46.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder39.append((java.lang.Object) equalsBuilder45, (java.lang.Object) equalsBuilder46);
        long[] longArray73 = new long[] { (byte) 100, ' ', (short) 10 };
        long[] longArray79 = new long[] { 'a', 0L, (short) 10, (byte) 0, (byte) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder46.append(longArray73, longArray79);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder83.append(0, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder83.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder89.append((byte) 100, (byte) 100);
        java.lang.Boolean boolean93 = equalsBuilder92.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[100, 32, 10]");
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[97, 0, 10, 0, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertEquals("'" + boolean93 + "' != '" + false + "'", boolean93, false);
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append((int) (short) 100, (int) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder17.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder45.append((short) (byte) 10, (short) 0);
        equalsBuilder45.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder50.append((short) (byte) 10, (short) 0);
        long[] longArray59 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray61 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder50.append(longArray59, longArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder63.append((short) (byte) 10, (short) 0);
        long[] longArray72 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray74 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder63.append(longArray72, longArray74);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder45.append(longArray59, longArray74);
        java.lang.Boolean boolean77 = equalsBuilder76.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder76.append((byte) 1, (byte) 0);
        boolean boolean81 = equalsBuilder80.isEquals();
        equalsBuilder80.reset();
        boolean boolean84 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder17, (java.lang.Object) equalsBuilder80, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder17.append((short) 0, (short) 0);
        equalsBuilder17.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray74), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertEquals("'" + boolean77 + "' != '" + false + "'", boolean77, false);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(equalsBuilder87);
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder0.append((double) 1, (double) (-1L));
        java.lang.Boolean boolean11 = equalsBuilder10.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder10.append(0, (int) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder14.append((long) (short) 1, (long) (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder14.append((byte) 100, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder20.append('a', ' ');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder23);
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        java.lang.Object obj7 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray18 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray19 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder15.append(shortArray18, shortArray19);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(byteArray21, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder8.append(byteArray14, byteArray26);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj7, (java.lang.Object) byteArray26, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray41 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray42 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder38.append(shortArray41, shortArray42);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder38.append(byteArray44, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder31.append(byteArray37, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(byteArray26, byteArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray69 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray70 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder66.append(shortArray69, shortArray70);
        byte[] byteArray72 = new byte[] {};
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder66.append(byteArray72, byteArray77);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder0.append(byteArray59, byteArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder0.append(0, (int) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder82.append((short) 100, (short) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder82.appendSuper(false);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder87);
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        float[] floatArray18 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray21 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append(floatArray18, floatArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder12.append((float) 0L, 10.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder25.append('#', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray32 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray33 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder29.append(shortArray32, shortArray33);
        byte[] byteArray35 = new byte[] {};
        byte[] byteArray40 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder29.append(byteArray35, byteArray40);
        char[] charArray46 = new char[] { '#', ' ', '#', '#' };
        char[] charArray49 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder29.append(charArray46, charArray49);
        char[] charArray53 = new char[] { 'a', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder25.append(charArray49, charArray53);
        boolean boolean55 = equalsBuilder25.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder25.appendSuper(false);
        boolean boolean58 = equalsBuilder57.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder57.appendSuper(true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(equalsBuilder60);
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder46.append(byteArray52, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder46.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder39.append((java.lang.Object) equalsBuilder45, (java.lang.Object) equalsBuilder46);
        long[] longArray73 = new long[] { (byte) 100, ' ', (short) 10 };
        long[] longArray79 = new long[] { 'a', 0L, (short) 10, (byte) 0, (byte) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder46.append(longArray73, longArray79);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder83.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder85.append(100.0d, (double) 10.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder85.append(0, (int) (byte) 100);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[100, 32, 10]");
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[97, 0, 10, 0, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        long[] longArray9 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray11 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(longArray9, longArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder17.append((short) (byte) 10, (short) 0);
        long[] longArray26 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray28 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(longArray26, longArray28);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder30.append((short) (byte) 10, (short) 0);
        equalsBuilder30.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder35.append((short) (byte) 10, (short) 0);
        long[] longArray44 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray46 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder35.append(longArray44, longArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder48.append((short) (byte) 10, (short) 0);
        long[] longArray57 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray59 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder48.append(longArray57, longArray59);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder30.append(longArray44, longArray59);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder0.append(longArray28, longArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder62.append((short) 0, (short) 0);
        java.lang.Class<?> wildcardClass66 = equalsBuilder65.getClass();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        equalsBuilder12.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder12.append('#', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append((byte) 10, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder22.append(true, false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        float[] floatArray65 = null;
        float[] floatArray66 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder64.append(floatArray65, floatArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder64.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append((float) 100L, (float) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder73.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder73.append('#', '4');
        java.lang.Boolean boolean80 = equalsBuilder79.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder79.append(false, true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertEquals("'" + boolean80 + "' != '" + false + "'", boolean80, false);
        org.junit.Assert.assertNotNull(equalsBuilder83);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 100, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder3.append((byte) 10, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder10.append((double) '4', (double) 1.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder14.append(false, false);
        java.lang.Boolean boolean18 = equalsBuilder17.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder17.append((byte) 100, (byte) 100);
        equalsBuilder21.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder21.append(true, false);
        float[] floatArray26 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray30 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray31 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder27.append(shortArray30, shortArray31);
        byte[] byteArray33 = new byte[] {};
        byte[] byteArray38 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder27.append(byteArray33, byteArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder39.append((byte) 10, (byte) 0);
        equalsBuilder39.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder39.append((short) 0, (short) 0);
        float[] floatArray47 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray51 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray52 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder48.append(shortArray51, shortArray52);
        byte[] byteArray54 = new byte[] {};
        byte[] byteArray59 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder48.append(byteArray54, byteArray59);
        float[] floatArray66 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray69 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder60.append(floatArray66, floatArray69);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder46.append(floatArray47, floatArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder25.append(floatArray26, floatArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray76 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray77 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder73.append(shortArray76, shortArray77);
        byte[] byteArray79 = new byte[] {};
        byte[] byteArray84 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder73.append(byteArray79, byteArray84);
        float[] floatArray91 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray94 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder85.append(floatArray91, floatArray94);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder13.append(floatArray26, floatArray91);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + true + "'", boolean18, true);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[]");
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(floatArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray66), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray69), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(shortArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray76), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray77), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[]");
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(floatArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray91), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray94), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertNotNull(equalsBuilder96);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((double) 100L, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((short) (byte) -1, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder84.append('#', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder84.append('4', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder84.append((byte) 0, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder93.append((double) ' ', (double) 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        boolean boolean16 = equalsBuilder15.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray20 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray21 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder17.append(shortArray20, shortArray21);
        byte[] byteArray23 = new byte[] {};
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(byteArray23, byteArray28);
        byte[] byteArray30 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder15.append(byteArray28, byteArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder15.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray38 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray39 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder35.append(shortArray38, shortArray39);
        byte[] byteArray41 = new byte[] {};
        byte[] byteArray46 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder35.append(byteArray41, byteArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder35.append((double) 100L, (double) 10L);
        boolean boolean51 = equalsBuilder35.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder35.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray58 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray59 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder55.append(shortArray58, shortArray59);
        byte[] byteArray61 = new byte[] {};
        byte[] byteArray66 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder55.append(byteArray61, byteArray66);
        java.lang.String[] strArray71 = new java.lang.String[] { "", "hi!", "" };
        boolean boolean72 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder54, (java.lang.Object) byteArray66, strArray71);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray76 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray77 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder73.append(shortArray76, shortArray77);
        byte[] byteArray79 = new byte[] {};
        byte[] byteArray84 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder73.append(byteArray79, byteArray84);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder34.append(byteArray66, byteArray84);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder86.append((byte) 0, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder89.append((float) 100L, 0.0f);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray58), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(shortArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray76), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray77), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[]");
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder78.append((byte) 0, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder78.appendSuper(false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder83);
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        java.lang.Boolean boolean79 = equalsBuilder78.build();
        short[] shortArray82 = new short[] { (short) -1, (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray86 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray87 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder83.append(shortArray86, shortArray87);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder78.append(shortArray82, shortArray86);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder89.append('#', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder92.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder97 = equalsBuilder92.append((double) 1.0f, (double) (short) -1);
        java.lang.Boolean boolean98 = equalsBuilder92.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertEquals("'" + boolean79 + "' != '" + false + "'", boolean79, false);
        org.junit.Assert.assertNotNull(shortArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray82), "[-1, 10]");
        org.junit.Assert.assertNotNull(shortArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray86), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray87), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder94);
        org.junit.Assert.assertNotNull(equalsBuilder97);
        org.junit.Assert.assertEquals("'" + boolean98 + "' != '" + false + "'", boolean98, false);
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 100.0f, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder5.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder19.append((double) 0L, (double) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder22.append((int) (byte) 0, 100);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder78.append((byte) 0, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder78.append(0.0f, (float) 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder78.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder87.append((long) (byte) 100, (long) '4');
        java.lang.Class<?> wildcardClass91 = equalsBuilder87.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((double) 100L, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((short) (byte) -1, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder81.append((double) 0.0f, (double) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder81.append((float) '#', (float) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder81.append((byte) 10, (byte) 1);
        boolean boolean94 = equalsBuilder93.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder97 = equalsBuilder93.append((float) (short) 0, (-1.0f));
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(equalsBuilder97);
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((byte) 1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder35.appendSuper(true);
        equalsBuilder35.reset();
        equalsBuilder35.reset();
        boolean boolean40 = equalsBuilder35.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder35.append((short) 10, (short) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder35.append((double) '#', (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder47.append((short) (byte) 10, (short) 0);
        equalsBuilder47.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder52.append((short) (byte) 10, (short) 0);
        long[] longArray61 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray63 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder52.append(longArray61, longArray63);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder65.append((short) (byte) 10, (short) 0);
        long[] longArray74 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray76 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder65.append(longArray74, longArray76);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder47.append(longArray61, longArray76);
        java.lang.Boolean boolean79 = equalsBuilder78.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder78.append((byte) 1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder82.appendSuper(true);
        short[] shortArray85 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray89 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray90 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder86.append(shortArray89, shortArray90);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder84.append(shortArray85, shortArray89);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray96 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray97 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder98 = equalsBuilder93.append(shortArray96, shortArray97);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder99 = equalsBuilder46.append(shortArray89, shortArray97);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray63), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(longArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray74), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray76), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertEquals("'" + boolean79 + "' != '" + false + "'", boolean79, false);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(shortArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray85), "[]");
        org.junit.Assert.assertNotNull(shortArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray89), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray90), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(shortArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray96), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray97), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder98);
        org.junit.Assert.assertNotNull(equalsBuilder99);
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        boolean boolean16 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder19.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append((float) (-1L), 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder19.append((short) 100, (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder19.append((byte) 10, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder30.appendSuper(true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder32);
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        java.lang.Object obj7 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray18 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray19 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder15.append(shortArray18, shortArray19);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(byteArray21, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder8.append(byteArray14, byteArray26);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj7, (java.lang.Object) byteArray26, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray41 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray42 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder38.append(shortArray41, shortArray42);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder38.append(byteArray44, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder31.append(byteArray37, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(byteArray26, byteArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder52.append((double) (byte) 10, (double) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder55.append((short) -1, (short) (byte) 100);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder58);
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder62.append((short) 10, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder62.append((float) ' ', 1.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder62.append(0, (int) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder62.append((byte) 100, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder78.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder78.append((byte) 1, (byte) 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder0.append((double) 'a', (double) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray11 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray12 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder8.append(shortArray11, shortArray12);
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean22 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder13, (java.lang.Object) '#', strArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder13.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray29 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray30 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder26.append(shortArray29, shortArray30);
        byte[] byteArray32 = new byte[] {};
        byte[] byteArray37 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder26.append(byteArray32, byteArray37);
        char[] charArray43 = new char[] { '#', ' ', '#', '#' };
        char[] charArray46 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder26.append(charArray43, charArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray51 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray52 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder48.append(shortArray51, shortArray52);
        byte[] byteArray54 = new byte[] {};
        byte[] byteArray59 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder48.append(byteArray54, byteArray59);
        char[] charArray65 = new char[] { '#', ' ', '#', '#' };
        char[] charArray68 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder48.append(charArray65, charArray68);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder13.append(charArray46, charArray65);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder13.appendSuper(false);
        float[] floatArray73 = null;
        float[] floatArray74 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder72.append(floatArray73, floatArray74);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder72.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((short) (byte) 10, (short) 0);
        equalsBuilder80.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder80.append((double) 'a', (double) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder78.append((java.lang.Object) (short) 0, (java.lang.Object) equalsBuilder87);
        boolean boolean90 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) 10, (java.lang.Object) equalsBuilder87, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder87.append((long) (short) 0, (long) (byte) 100);
        java.lang.Class<?> wildcardClass94 = equalsBuilder93.getClass();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[]");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[]");
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append((double) '4', (double) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder42.append((int) '4', (int) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder42.append((byte) 100, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder48.append((double) 100.0f, (double) (byte) 100);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder51);
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray12 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray16 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray17 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder13.append(shortArray16, shortArray17);
        byte[] byteArray19 = new byte[] {};
        byte[] byteArray24 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder13.append(byteArray19, byteArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder6.append(byteArray12, byteArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray31 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray32 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder28.append(shortArray31, shortArray32);
        byte[] byteArray34 = new byte[] {};
        byte[] byteArray39 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder28.append(byteArray34, byteArray39);
        boolean boolean41 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder0.append(byteArray12, byteArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder0.append(100.0f, 100.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder45.appendSuper(false);
        java.lang.Boolean boolean48 = equalsBuilder45.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder45.append('a', '#');
        equalsBuilder51.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder51.append((float) (short) 0, (float) 10L);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertEquals("'" + boolean48 + "' != '" + false + "'", boolean48, false);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder55);
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append((long) (byte) 100, 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder7.append((short) (byte) 10, (short) 0);
        equalsBuilder7.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((short) (byte) 10, (short) 0);
        long[] longArray21 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray23 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder12.append(longArray21, longArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder25.append((short) (byte) 10, (short) 0);
        long[] longArray34 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray36 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder25.append(longArray34, longArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder7.append(longArray21, longArray36);
        java.lang.Boolean boolean39 = equalsBuilder38.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder38.append((double) (short) -1, (double) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder42.appendSuper(false);
        boolean boolean45 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder3, (java.lang.Object) equalsBuilder44);
        boolean boolean46 = equalsBuilder3.isEquals();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(longArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray21), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray36), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertEquals("'" + boolean39 + "' != '" + false + "'", boolean39, false);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((byte) 1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder31.append((short) (byte) 10, (short) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder38.append((long) (short) 0, 10L);
        boolean boolean42 = equalsBuilder38.isEquals();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder62.append((short) 10, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder69.append((float) (short) 100, 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder69.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder69.append((long) (short) 100, (long) (byte) 0);
        java.lang.Class<?> wildcardClass78 = equalsBuilder77.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        boolean boolean16 = equalsBuilder15.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray20 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray21 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder17.append(shortArray20, shortArray21);
        byte[] byteArray23 = new byte[] {};
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(byteArray23, byteArray28);
        byte[] byteArray30 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder15.append(byteArray28, byteArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder15.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray38 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray39 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder35.append(shortArray38, shortArray39);
        byte[] byteArray41 = new byte[] {};
        byte[] byteArray46 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder35.append(byteArray41, byteArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder35.append((double) 100L, (double) 10L);
        boolean boolean51 = equalsBuilder35.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder35.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray58 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray59 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder55.append(shortArray58, shortArray59);
        byte[] byteArray61 = new byte[] {};
        byte[] byteArray66 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder55.append(byteArray61, byteArray66);
        java.lang.String[] strArray71 = new java.lang.String[] { "", "hi!", "" };
        boolean boolean72 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder54, (java.lang.Object) byteArray66, strArray71);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray76 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray77 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder73.append(shortArray76, shortArray77);
        byte[] byteArray79 = new byte[] {};
        byte[] byteArray84 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder73.append(byteArray79, byteArray84);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder34.append(byteArray66, byteArray84);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder34.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder34.append((double) (short) -1, 0.0d);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray58), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(shortArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray76), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray77), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[]");
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder17.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder19.append((byte) 10, (byte) 0);
        boolean boolean23 = equalsBuilder22.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder22.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder22.append((byte) 0, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder29.append((double) 100L, (double) (short) 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder32);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append(false, true);
        boolean boolean43 = equalsBuilder42.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder42.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder46.append('a', 'a');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder49);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray12 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray16 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray17 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder13.append(shortArray16, shortArray17);
        byte[] byteArray19 = new byte[] {};
        byte[] byteArray24 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder13.append(byteArray19, byteArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder6.append(byteArray12, byteArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray31 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray32 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder28.append(shortArray31, shortArray32);
        byte[] byteArray34 = new byte[] {};
        byte[] byteArray39 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder28.append(byteArray34, byteArray39);
        boolean boolean41 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder0.append(byteArray12, byteArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder0.append(100.0f, 100.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder45.appendSuper(false);
        java.lang.Boolean boolean48 = equalsBuilder47.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder47.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder47.append((float) 100L, (float) 100L);
        java.lang.Class<?> wildcardClass55 = equalsBuilder47.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertEquals("'" + boolean48 + "' != '" + false + "'", boolean48, false);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        boolean boolean16 = equalsBuilder15.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray20 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray21 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder17.append(shortArray20, shortArray21);
        byte[] byteArray23 = new byte[] {};
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(byteArray23, byteArray28);
        byte[] byteArray30 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder15.append(byteArray28, byteArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((float) ' ', (float) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray38 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray39 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder35.append(shortArray38, shortArray39);
        byte[] byteArray41 = new byte[] {};
        byte[] byteArray46 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder35.append(byteArray41, byteArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder35.append((double) 100L, (double) 10L);
        boolean boolean51 = equalsBuilder35.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder35.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder54.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder54.append((float) (-1L), 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder54.append((short) -1, (short) (byte) 0);
        boolean boolean64 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) 'a', (java.lang.Object) equalsBuilder62, false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray25 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray26 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder22.append(shortArray25, shortArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray34 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray38 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray39 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder35.append(shortArray38, shortArray39);
        byte[] byteArray41 = new byte[] {};
        byte[] byteArray46 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder35.append(byteArray41, byteArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder28.append(byteArray34, byteArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray53 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray54 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder50.append(shortArray53, shortArray54);
        byte[] byteArray56 = new byte[] {};
        byte[] byteArray61 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder50.append(byteArray56, byteArray61);
        boolean boolean63 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder22.append(byteArray34, byteArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder22.append(100.0f, 100.0f);
        boolean boolean69 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder0, (java.lang.Object) equalsBuilder67, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder0.append((long) 100, (long) (short) 100);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(equalsBuilder72);
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder77.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder79.append((double) (byte) 100, (double) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder82.append(0, 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder85.append((-1.0f), (float) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder85.append((short) 0, (short) (byte) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        float[] floatArray65 = null;
        float[] floatArray66 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder64.append(floatArray65, floatArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder64.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append((float) 100L, (float) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder74.append((short) (byte) 10, (short) 0);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((double) 'a', (double) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((short) -1, (short) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder84.append((double) '#', 0.0d);
        boolean boolean88 = equalsBuilder84.isEquals();
        boolean boolean89 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder64, (java.lang.Object) equalsBuilder84);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder46.append(byteArray52, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder46.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder39.append((java.lang.Object) equalsBuilder45, (java.lang.Object) equalsBuilder46);
        long[] longArray73 = new long[] { (byte) 100, ' ', (short) 10 };
        long[] longArray79 = new long[] { 'a', 0L, (short) 10, (byte) 0, (byte) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder46.append(longArray73, longArray79);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder83.append(0, (int) (short) 0);
        boolean boolean87 = equalsBuilder83.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder83.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder83.append((double) '#', 10.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder83.append('4', ' ');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[100, 32, 10]");
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[97, 0, 10, 0, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append((double) '4', (double) 0);
        java.lang.Class<?> wildcardClass43 = equalsBuilder17.getClass();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray47 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray48 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder44.append(shortArray47, shortArray48);
        byte[] byteArray50 = new byte[] {};
        byte[] byteArray55 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder44.append(byteArray50, byteArray55);
        char[] charArray61 = new char[] { '#', ' ', '#', '#' };
        char[] charArray64 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder44.append(charArray61, charArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder65.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder65.append((int) (byte) 1, (int) (byte) 0);
        short[] shortArray72 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray76 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray77 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder73.append(shortArray76, shortArray77);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder71.append(shortArray72, shortArray77);
        java.lang.String[] strArray84 = new java.lang.String[] { "", "hi!", "hi!", "hi!" };
        boolean boolean85 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder17, (java.lang.Object) shortArray77, strArray84);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(shortArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray76), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray77), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((long) 0, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder0.append((int) (byte) 0, (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder9.append('#', ' ');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(equalsBuilder12);
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((byte) 1, (byte) 0);
        boolean boolean36 = equalsBuilder35.isEquals();
        equalsBuilder35.reset();
        equalsBuilder35.reset();
        java.lang.Boolean boolean39 = equalsBuilder35.build();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + boolean39 + "' != '" + true + "'", boolean39, true);
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 'a', 0.0d);
        boolean boolean18 = equalsBuilder5.isEquals();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder46.append(byteArray52, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder46.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder39.append((java.lang.Object) equalsBuilder45, (java.lang.Object) equalsBuilder46);
        long[] longArray73 = new long[] { (byte) 100, ' ', (short) 10 };
        long[] longArray79 = new long[] { 'a', 0L, (short) 10, (byte) 0, (byte) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder46.append(longArray73, longArray79);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((int) 'a', (int) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder83.append(true, false);
        java.lang.Boolean boolean87 = equalsBuilder83.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder83.append(true, true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[100, 32, 10]");
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[97, 0, 10, 0, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertEquals("'" + boolean87 + "' != '" + false + "'", boolean87, false);
        org.junit.Assert.assertNotNull(equalsBuilder90);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((double) 100L, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((short) (byte) -1, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder81.append((double) 0.0f, (double) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder81.append((float) '#', (float) 'a');
        boolean boolean91 = equalsBuilder90.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder90.append((long) (byte) 1, (long) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder90.appendSuper(true);
        boolean boolean97 = equalsBuilder90.isEquals();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(equalsBuilder94);
        org.junit.Assert.assertNotNull(equalsBuilder96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder17.append((byte) 100, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray25 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray26 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder22.append(shortArray25, shortArray26);
        byte[] byteArray28 = new byte[] {};
        byte[] byteArray33 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder22.append(byteArray28, byteArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((byte) 10, (byte) 0);
        boolean boolean38 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder17, (java.lang.Object) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder17.append((long) (short) -1, (long) ' ');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(equalsBuilder41);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder13.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder13.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder13.appendSuper(false);
        boolean boolean21 = equalsBuilder13.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder13.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((long) (byte) 100, 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder27.append((double) 10, (double) (byte) 1);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.String[] strArray37 = new java.lang.String[] { "", "" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        boolean boolean40 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder33, obj34, (java.util.Collection<java.lang.String>) strList38);
        boolean boolean41 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) byteArray11, (java.lang.Object) false, (java.util.Collection<java.lang.String>) strList38);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append((short) 100, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray46 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray47 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder43.append(shortArray46, shortArray47);
        byte[] byteArray49 = new byte[] {};
        byte[] byteArray54 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder43.append(byteArray49, byteArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder55.append((byte) 10, (byte) 0);
        equalsBuilder55.reset();
        boolean boolean60 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 100, (java.lang.Object) equalsBuilder55);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder55.append((int) (short) 10, 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder55.append((float) '4', (float) (-1L));
        java.lang.Boolean boolean67 = equalsBuilder55.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[]");
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertEquals("'" + boolean67 + "' != '" + false + "'", boolean67, false);
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        double[] doubleArray80 = new double[] { (short) 0, 0.0d, (byte) 10, (byte) 0 };
        double[] doubleArray81 = new double[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder64.append(doubleArray80, doubleArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder64.append((float) 10, (float) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder64.append((short) (byte) 100, (short) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder88.append((long) 'a', (long) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder91.append(10, 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0, 0.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder94);
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder62.append(100, (int) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder62.append((short) 10, (short) -1);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder62.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder72.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder72.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder77.append(10.0f, (-1.0f));
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray6 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray10 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray11 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder7.append(shortArray10, shortArray11);
        byte[] byteArray13 = new byte[] {};
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder7.append(byteArray13, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder0.append(byteArray6, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder22.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append(' ', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((short) -1, (short) 1);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder62.append((short) 10, (short) -1);
        boolean[] booleanArray74 = new boolean[] { true, true, false, true };
        boolean[] booleanArray78 = new boolean[] { true, true, false };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder69.append(booleanArray74, booleanArray78);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder79.append('4', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder79.append((double) (byte) 0, 0.0d);
        java.lang.Boolean boolean86 = equalsBuilder85.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder85.append((byte) -1, (byte) 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray74), "[true, true, false, true]");
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray78), "[true, true, false]");
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertEquals("'" + boolean86 + "' != '" + false + "'", boolean86, false);
        org.junit.Assert.assertNotNull(equalsBuilder89);
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((double) 100L, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((byte) 10, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder81.append(true, false);
        java.lang.Boolean boolean88 = equalsBuilder81.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder81.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder81.append((float) (-1L), 100.0f);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertEquals("'" + boolean88 + "' != '" + false + "'", boolean88, false);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder4 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray7 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray8 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder4.append(shortArray7, shortArray8);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean18 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder9, (java.lang.Object) '#', strArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder9.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray25 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray26 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder22.append(shortArray25, shortArray26);
        byte[] byteArray28 = new byte[] {};
        byte[] byteArray33 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder22.append(byteArray28, byteArray33);
        char[] charArray39 = new char[] { '#', ' ', '#', '#' };
        char[] charArray42 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder22.append(charArray39, charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray47 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray48 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder44.append(shortArray47, shortArray48);
        byte[] byteArray50 = new byte[] {};
        byte[] byteArray55 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder44.append(byteArray50, byteArray55);
        char[] charArray61 = new char[] { '#', ' ', '#', '#' };
        char[] charArray64 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder44.append(charArray61, charArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder9.append(charArray42, charArray61);
        java.lang.Object obj67 = null;
        boolean boolean68 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray42, obj67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray72 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray73 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder69.append(shortArray72, shortArray73);
        byte[] byteArray75 = new byte[] {};
        byte[] byteArray80 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder69.append(byteArray75, byteArray80);
        char[] charArray86 = new char[] { '#', ' ', '#', '#' };
        char[] charArray89 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder69.append(charArray86, charArray89);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder3.append(charArray42, charArray86);
        boolean boolean92 = equalsBuilder91.isEquals();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray72), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[]");
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder64.append(1.0f, (float) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder64.append((float) (byte) 10, (float) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder64.append((double) 1.0f, (double) 1L);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        java.lang.Boolean boolean79 = equalsBuilder78.build();
        short[] shortArray82 = new short[] { (short) -1, (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray86 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray87 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder83.append(shortArray86, shortArray87);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder78.append(shortArray82, shortArray86);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder89.append('#', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder89.append((long) '4', (long) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder98 = equalsBuilder95.append(true, false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertEquals("'" + boolean79 + "' != '" + false + "'", boolean79, false);
        org.junit.Assert.assertNotNull(shortArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray82), "[-1, 10]");
        org.junit.Assert.assertNotNull(shortArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray86), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray87), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertNotNull(equalsBuilder98);
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((double) 100L, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((short) (byte) -1, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder81.append((byte) 10, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder87.append('a', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder90.appendSuper(true);
        equalsBuilder92.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder92);
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        float[] floatArray18 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray21 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append(floatArray18, floatArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder12.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder12.append((short) 0, (short) -1);
        boolean boolean29 = equalsBuilder28.isEquals();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray25 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray26 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder22.append(shortArray25, shortArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray34 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray38 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray39 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder35.append(shortArray38, shortArray39);
        byte[] byteArray41 = new byte[] {};
        byte[] byteArray46 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder35.append(byteArray41, byteArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder28.append(byteArray34, byteArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray53 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray54 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder50.append(shortArray53, shortArray54);
        byte[] byteArray56 = new byte[] {};
        byte[] byteArray61 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder50.append(byteArray56, byteArray61);
        boolean boolean63 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder22.append(byteArray34, byteArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder22.append(100.0f, 100.0f);
        boolean boolean69 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder0, (java.lang.Object) equalsBuilder67, true);
        boolean[] booleanArray72 = new boolean[] { true, false };
        boolean[] booleanArray78 = new boolean[] { false, false, false, true, true };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder67.append(booleanArray72, booleanArray78);
        java.lang.Class<?> wildcardClass80 = equalsBuilder79.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray72), "[true, false]");
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray78), "[false, false, false, true, true]");
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder64.append((double) 10.0f, 100.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((int) ' ', (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder80.append((float) ' ', (float) ' ');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder0.append((double) 1, (double) (-1L));
        java.lang.Boolean boolean11 = equalsBuilder10.build();
        boolean boolean12 = equalsBuilder10.isEquals();
        java.lang.Object obj13 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder14.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder14.append((-1), (int) (short) 10);
        java.lang.Object obj21 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray28 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray32 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray33 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder29.append(shortArray32, shortArray33);
        byte[] byteArray35 = new byte[] {};
        byte[] byteArray40 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder29.append(byteArray35, byteArray40);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder22.append(byteArray28, byteArray40);
        boolean boolean44 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj21, (java.lang.Object) byteArray40, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray51 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray55 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray56 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder52.append(shortArray55, shortArray56);
        byte[] byteArray58 = new byte[] {};
        byte[] byteArray63 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder52.append(byteArray58, byteArray63);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder45.append(byteArray51, byteArray63);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder14.append(byteArray40, byteArray51);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder66.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder66.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder66.append((float) (byte) 10, (float) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder66.append((double) (byte) 100, 100.0d);
        java.lang.Object obj78 = null;
        java.lang.String[] strArray80 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList81 = new java.util.ArrayList<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        boolean boolean83 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) 100, obj78, (java.util.Collection<java.lang.String>) strList81);
        boolean boolean84 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder10, obj13, (java.util.Collection<java.lang.String>) strList81);
        equalsBuilder10.reset();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[]");
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray19 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray20 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder16.append(shortArray19, shortArray20);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder21, (java.lang.Object) '#', strArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder21.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray37 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray38 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder34.append(shortArray37, shortArray38);
        byte[] byteArray40 = new byte[] {};
        byte[] byteArray45 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder34.append(byteArray40, byteArray45);
        char[] charArray51 = new char[] { '#', ' ', '#', '#' };
        char[] charArray54 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder34.append(charArray51, charArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray59 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray60 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder56.append(shortArray59, shortArray60);
        byte[] byteArray62 = new byte[] {};
        byte[] byteArray67 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder56.append(byteArray62, byteArray67);
        char[] charArray73 = new char[] { '#', ' ', '#', '#' };
        char[] charArray76 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder56.append(charArray73, charArray76);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder21.append(charArray54, charArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder21.appendSuper(false);
        long[] longArray81 = null;
        long[] longArray88 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder80.append(longArray81, longArray88);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder80.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder91.append((long) (short) -1, (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder97 = equalsBuilder91.append((float) (byte) 1, (float) (short) -1);
        boolean boolean98 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder15, (java.lang.Object) equalsBuilder91);
        java.lang.Class<?> wildcardClass99 = equalsBuilder91.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(longArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray88), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder94);
        org.junit.Assert.assertNotNull(equalsBuilder97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray25 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray26 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder22.append(shortArray25, shortArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray34 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray38 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray39 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder35.append(shortArray38, shortArray39);
        byte[] byteArray41 = new byte[] {};
        byte[] byteArray46 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder35.append(byteArray41, byteArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder28.append(byteArray34, byteArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray53 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray54 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder50.append(shortArray53, shortArray54);
        byte[] byteArray56 = new byte[] {};
        byte[] byteArray61 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder50.append(byteArray56, byteArray61);
        boolean boolean63 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder22.append(byteArray34, byteArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder22.append(100.0f, 100.0f);
        boolean boolean69 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder0, (java.lang.Object) equalsBuilder67, true);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder0.append((byte) 100, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder73.append((long) 0, 100L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder76.append((double) 10.0f, (double) 'a');
        java.lang.Class<?> wildcardClass80 = equalsBuilder79.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        float[] floatArray65 = null;
        float[] floatArray66 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder64.append(floatArray65, floatArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder67.append((double) 0, (double) (byte) 1);
        equalsBuilder70.reset();
        boolean boolean72 = equalsBuilder70.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder70.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder70.append((int) '4', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder70.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((short) (byte) 1, (short) 1);
        java.lang.Boolean boolean84 = equalsBuilder83.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder83.append(false, true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertEquals("'" + boolean84 + "' != '" + false + "'", boolean84, false);
        org.junit.Assert.assertNotNull(equalsBuilder87);
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder62.append((short) 10, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder69.append((float) (short) 100, 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder72.append((double) (byte) 10, (double) 1.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder72.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder72.append((double) (short) 1, 1.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder72.append((float) (byte) 100, (float) (byte) 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 100.0f, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder5.append((short) 0, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder20.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder23.append(false, true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(equalsBuilder26);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append((-1), (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((int) (byte) -1, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder27.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray40 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray44 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray45 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder41.append(shortArray44, shortArray45);
        byte[] byteArray47 = new byte[] {};
        byte[] byteArray52 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder41.append(byteArray47, byteArray52);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder34.append(byteArray40, byteArray52);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder34.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder56.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder58.append(' ', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder61.append((long) (short) 10, (long) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder61.append((int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder67.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder67.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray77 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray78 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder74.append(shortArray77, shortArray78);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray83 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray84 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder80.append(shortArray83, shortArray84);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder73.append(shortArray77, shortArray84);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray90 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray91 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder87.append(shortArray90, shortArray91);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder33.append(shortArray84, shortArray90);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder93.append((short) 0, (short) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(shortArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray77), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray78), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(shortArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray83), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray84), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(shortArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray90), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray91), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        float[] floatArray18 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray21 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append(floatArray18, floatArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder12.append((float) 0L, 10.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder25.append('#', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray32 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray33 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder29.append(shortArray32, shortArray33);
        byte[] byteArray35 = new byte[] {};
        byte[] byteArray40 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder29.append(byteArray35, byteArray40);
        char[] charArray46 = new char[] { '#', ' ', '#', '#' };
        char[] charArray49 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder29.append(charArray46, charArray49);
        char[] charArray53 = new char[] { 'a', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder25.append(charArray49, charArray53);
        boolean boolean55 = equalsBuilder25.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder25.appendSuper(false);
        equalsBuilder25.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(equalsBuilder57);
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray4 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray5 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder1.append(shortArray4, shortArray5);
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean15 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder6, (java.lang.Object) '#', strArray14);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder6.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        byte[] byteArray25 = new byte[] {};
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder19.append(byteArray25, byteArray30);
        char[] charArray36 = new char[] { '#', ' ', '#', '#' };
        char[] charArray39 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder19.append(charArray36, charArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray44 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray45 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder41.append(shortArray44, shortArray45);
        byte[] byteArray47 = new byte[] {};
        byte[] byteArray52 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder41.append(byteArray47, byteArray52);
        char[] charArray58 = new char[] { '#', ' ', '#', '#' };
        char[] charArray61 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder41.append(charArray58, charArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder6.append(charArray39, charArray58);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder6.appendSuper(false);
        long[] longArray66 = null;
        long[] longArray73 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder65.append(longArray66, longArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder65.append(true, true);
        boolean boolean79 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) 1.0f, (java.lang.Object) equalsBuilder65, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder65.append((long) 10, (long) (short) 0);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(equalsBuilder82);
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        java.lang.Object obj0 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray4 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray5 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder1.append(shortArray4, shortArray5);
        byte[] byteArray7 = new byte[] {};
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder1.append(byteArray7, byteArray12);
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        boolean boolean18 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj0, (java.lang.Object) equalsBuilder13, (java.util.Collection<java.lang.String>) strList16);
        boolean boolean19 = equalsBuilder13.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder13.append((float) (byte) 1, (float) 1L);
        boolean boolean23 = equalsBuilder13.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder13.append('4', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder26.append((double) 1, (double) 0L);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(equalsBuilder29);
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder46.append(byteArray52, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder46.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder39.append((java.lang.Object) equalsBuilder45, (java.lang.Object) equalsBuilder46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder46.append((byte) 0, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder72.append((int) (short) 0, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder75.append((long) (short) 0, (long) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder78.append((long) 0, (long) (-1));
        java.lang.Boolean boolean82 = equalsBuilder78.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertEquals("'" + boolean82 + "' != '" + false + "'", boolean82, false);
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        boolean boolean16 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder19.append(0L, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder19.append('4', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder19.append(100, (-1));
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder28);
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder46.append(byteArray52, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder46.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder39.append((java.lang.Object) equalsBuilder45, (java.lang.Object) equalsBuilder46);
        long[] longArray73 = new long[] { (byte) 100, ' ', (short) 10 };
        long[] longArray79 = new long[] { 'a', 0L, (short) 10, (byte) 0, (byte) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder46.append(longArray73, longArray79);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder83.append(0, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder83.append((byte) -1, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder83.append((double) 1, (double) 1.0f);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[100, 32, 10]");
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[97, 0, 10, 0, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        float[] floatArray18 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray21 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append(floatArray18, floatArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder12.append(true, true);
        byte[] byteArray29 = new byte[] { (byte) 100, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray33 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray34 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder30.append(shortArray33, shortArray34);
        byte[] byteArray36 = new byte[] {};
        byte[] byteArray41 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder30.append(byteArray36, byteArray41);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder25.append(byteArray29, byteArray36);
        boolean boolean44 = equalsBuilder25.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder25.append((float) 1L, (float) (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder25.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder25.append(true, true);
        java.lang.Boolean boolean53 = equalsBuilder52.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder52.append((float) ' ', (float) (-1));
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100, 10, 1]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertEquals("'" + boolean53 + "' != '" + false + "'", boolean53, false);
        org.junit.Assert.assertNotNull(equalsBuilder56);
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        long[] longArray9 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray11 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(longArray9, longArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder17.append((short) (byte) 10, (short) 0);
        long[] longArray26 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray28 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(longArray26, longArray28);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder30.append((short) (byte) 10, (short) 0);
        equalsBuilder30.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder35.append((short) (byte) 10, (short) 0);
        long[] longArray44 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray46 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder35.append(longArray44, longArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder48.append((short) (byte) 10, (short) 0);
        long[] longArray57 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray59 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder48.append(longArray57, longArray59);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder30.append(longArray44, longArray59);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder0.append(longArray28, longArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder62.append((byte) 0, (byte) 1);
        java.lang.Boolean boolean66 = equalsBuilder62.build();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertEquals("'" + boolean66 + "' != '" + false + "'", boolean66, false);
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 100, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder3.append((byte) 10, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder3.append((byte) 10, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder13.append((byte) 0, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder13.appendSuper(true);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(equalsBuilder18);
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        boolean boolean16 = equalsBuilder15.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray20 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray21 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder17.append(shortArray20, shortArray21);
        byte[] byteArray23 = new byte[] {};
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(byteArray23, byteArray28);
        byte[] byteArray30 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder15.append(byteArray28, byteArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((float) ' ', (float) 'a');
        long[] longArray37 = new long[] { (-1), '4' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder38.append((short) (byte) 10, (short) 0);
        equalsBuilder38.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder43.append((short) (byte) 10, (short) 0);
        long[] longArray52 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray54 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder43.append(longArray52, longArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder56.append((short) (byte) 10, (short) 0);
        long[] longArray65 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray67 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder56.append(longArray65, longArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder38.append(longArray52, longArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder31.append(longArray37, longArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder70.append('a', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder70.append((float) 1L, (float) (byte) 10);
        equalsBuilder76.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder76.append('#', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append(1, (int) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder80.append((long) (byte) 1, (long) ' ');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[-1, 52]");
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(longArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray65), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray67), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder6.append((-1L), 100L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder6.append((int) (byte) 100, (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray16 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray17 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder13.append(shortArray16, shortArray17);
        byte[] byteArray19 = new byte[] {};
        byte[] byteArray24 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder13.append(byteArray19, byteArray24);
        char[] charArray30 = new char[] { '#', ' ', '#', '#' };
        char[] charArray33 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder13.append(charArray30, charArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray38 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray39 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder35.append(shortArray38, shortArray39);
        byte[] byteArray41 = new byte[] {};
        byte[] byteArray46 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder35.append(byteArray41, byteArray46);
        char[] charArray52 = new char[] { '#', ' ', '#', '#' };
        char[] charArray55 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder35.append(charArray52, charArray55);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder57.append((short) (byte) 10, (short) 0);
        equalsBuilder57.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder62.append((short) (byte) 10, (short) 0);
        long[] longArray71 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray73 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder62.append(longArray71, longArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder75.append((short) (byte) 10, (short) 0);
        long[] longArray84 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray86 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder75.append(longArray84, longArray86);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder57.append(longArray71, longArray86);
        java.lang.Boolean boolean89 = equalsBuilder88.build();
        boolean boolean90 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray52, (java.lang.Object) boolean89);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder6.append(charArray33, charArray52);
        equalsBuilder6.reset();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(longArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray71), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(longArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray84), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray86), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertEquals("'" + boolean89 + "' != '" + false + "'", boolean89, false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(equalsBuilder91);
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        float[] floatArray18 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray21 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append(floatArray18, floatArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder12.append(true, true);
        byte[] byteArray29 = new byte[] { (byte) 100, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray33 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray34 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder30.append(shortArray33, shortArray34);
        byte[] byteArray36 = new byte[] {};
        byte[] byteArray41 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder30.append(byteArray36, byteArray41);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder25.append(byteArray29, byteArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder43.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder43.append((int) (byte) 0, (int) (short) 0);
        java.lang.Boolean boolean50 = equalsBuilder43.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100, 10, 1]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertEquals("'" + boolean50 + "' != '" + false + "'", boolean50, false);
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 100.0f, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder5.append((short) 0, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder20.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder20.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder26.append(true, true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(equalsBuilder29);
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder42.append((float) (byte) 1, 100.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder42.append((double) (byte) 0, (double) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder42.append((int) (byte) 100, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder51.append(' ', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder54.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder57.append((short) (byte) 0, (short) 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(equalsBuilder60);
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder62.append(100, (int) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder62.append((short) 10, (short) -1);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder62.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder72.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder72.append((int) (byte) 100, (int) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder77.append((long) (byte) 100, (long) (byte) 100);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        float[] floatArray18 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray21 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append(floatArray18, floatArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder12.append((float) 0L, 10.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder25.append(100.0d, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder28.append(false, true);
        boolean boolean32 = equalsBuilder28.isEquals();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 100, (byte) 100);
        equalsBuilder3.reset();
        int[] intArray13 = new int[] { (short) -1, (-1), (byte) 1, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray17 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray18 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder14.append(shortArray17, shortArray18);
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean28 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder19, (java.lang.Object) '#', strArray27);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder19.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray35 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray36 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder32.append(shortArray35, shortArray36);
        byte[] byteArray38 = new byte[] {};
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder32.append(byteArray38, byteArray43);
        char[] charArray49 = new char[] { '#', ' ', '#', '#' };
        char[] charArray52 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder32.append(charArray49, charArray52);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray57 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray58 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder54.append(shortArray57, shortArray58);
        byte[] byteArray60 = new byte[] {};
        byte[] byteArray65 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder54.append(byteArray60, byteArray65);
        char[] charArray71 = new char[] { '#', ' ', '#', '#' };
        char[] charArray74 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder54.append(charArray71, charArray74);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder19.append(charArray52, charArray71);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder19.appendSuper(false);
        int[] intArray82 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray87 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder78.append(intArray82, intArray87);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder3.append(intArray13, intArray82);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder89.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder89.append((float) 10, 10.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder97 = equalsBuilder94.append(false, true);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, -1, 1, 35]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray58), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder94);
        org.junit.Assert.assertNotNull(equalsBuilder97);
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((short) -1, (short) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder81.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder81.append((long) (short) 10, (long) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder81.append((double) (byte) 100, (double) 1.0f);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray6 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray10 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray11 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder7.append(shortArray10, shortArray11);
        byte[] byteArray13 = new byte[] {};
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder7.append(byteArray13, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder0.append(byteArray6, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder22.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append((byte) -1, (byte) 10);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 100, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder3.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder3.append('a', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder13.append((short) (byte) 1, (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder13.append('#', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder13.append('#', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray26 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray27 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder23.append(shortArray26, shortArray27);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean37 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder28, (java.lang.Object) '#', strArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder28.append((double) 100.0f, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder28.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder42.append((double) 0L, (double) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder42.append('4', '4');
        long[] longArray49 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder50.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder50.append((-1), (int) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder56.append((-1L), 100L);
        long[] longArray66 = new long[] { (byte) 10, (short) 1, (short) -1, '4', (-1L), (short) 10 };
        long[] longArray67 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder59.append(longArray66, longArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder48.append(longArray49, longArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder70.append((short) (byte) 10, (short) 0);
        long[] longArray79 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray81 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder70.append(longArray79, longArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder13.append(longArray49, longArray81);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(longArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray66), "[10, 1, -1, 52, -1, 10]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray81), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder83);
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append((long) (byte) 100, 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.append((double) 10, (double) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder3.append((long) '#', 100L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder13.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder13.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder13.appendSuper(false);
        boolean boolean21 = equalsBuilder13.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder22.append(false, false);
        java.lang.Boolean boolean26 = equalsBuilder25.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder25.append((byte) 100, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray33 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray34 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder30.append(shortArray33, shortArray34);
        byte[] byteArray36 = new byte[] {};
        byte[] byteArray41 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder30.append(byteArray36, byteArray41);
        char[] charArray47 = new char[] { '#', ' ', '#', '#' };
        char[] charArray50 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder30.append(charArray47, charArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray55 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray56 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder52.append(shortArray55, shortArray56);
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean66 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder57, (java.lang.Object) '#', strArray65);
        boolean boolean67 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) 100, (java.lang.Object) charArray50, strArray65);
        boolean boolean68 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder12, (java.lang.Object) equalsBuilder13, strArray65);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder13.append((float) (short) 0, (float) 10);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertEquals("'" + boolean26 + "' != '" + true + "'", boolean26, true);
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(equalsBuilder71);
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((short) -1, (short) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder74.append((byte) 100, (byte) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray19 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray20 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder16.append(shortArray19, shortArray20);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder21, (java.lang.Object) '#', strArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder21.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray37 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray38 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder34.append(shortArray37, shortArray38);
        byte[] byteArray40 = new byte[] {};
        byte[] byteArray45 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder34.append(byteArray40, byteArray45);
        char[] charArray51 = new char[] { '#', ' ', '#', '#' };
        char[] charArray54 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder34.append(charArray51, charArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray59 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray60 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder56.append(shortArray59, shortArray60);
        byte[] byteArray62 = new byte[] {};
        byte[] byteArray67 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder56.append(byteArray62, byteArray67);
        char[] charArray73 = new char[] { '#', ' ', '#', '#' };
        char[] charArray76 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder56.append(charArray73, charArray76);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder21.append(charArray54, charArray73);
        java.lang.Object obj79 = null;
        boolean boolean80 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray54, obj79);
        java.lang.String[] strArray81 = new java.lang.String[] {};
        boolean boolean82 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder15, (java.lang.Object) charArray54, strArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder15.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder15.append((byte) -1, (byte) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((double) 100L, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder74.append((byte) 10, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder84.append((short) (byte) -1, (short) (byte) 100);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        java.lang.Object obj7 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray18 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray19 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder15.append(shortArray18, shortArray19);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(byteArray21, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder8.append(byteArray14, byteArray26);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj7, (java.lang.Object) byteArray26, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray41 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray42 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder38.append(shortArray41, shortArray42);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder38.append(byteArray44, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder31.append(byteArray37, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(byteArray26, byteArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray69 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray70 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder66.append(shortArray69, shortArray70);
        byte[] byteArray72 = new byte[] {};
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder66.append(byteArray72, byteArray77);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder0.append(byteArray59, byteArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder0.append(0, (int) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder0.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder0.append((float) (byte) 0, 1.0f);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        java.lang.Object obj7 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray18 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray19 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder15.append(shortArray18, shortArray19);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(byteArray21, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder8.append(byteArray14, byteArray26);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj7, (java.lang.Object) byteArray26, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray41 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray42 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder38.append(shortArray41, shortArray42);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder38.append(byteArray44, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder31.append(byteArray37, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(byteArray26, byteArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray69 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray70 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder66.append(shortArray69, shortArray70);
        byte[] byteArray72 = new byte[] {};
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder66.append(byteArray72, byteArray77);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder0.append(byteArray59, byteArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder0.append(0, (int) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder0.append((byte) -1, (byte) -1);
        java.lang.Class<?> wildcardClass86 = equalsBuilder0.getClass();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((byte) 1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder35.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder35.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder35.append(10, 100);
        java.lang.Boolean boolean43 = equalsBuilder42.build();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertEquals("'" + boolean43 + "' != '" + false + "'", boolean43, false);
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder0.appendSuper(false);
        boolean boolean34 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder0.append('a', '4');
        java.lang.Boolean boolean38 = equalsBuilder37.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder37.append(true, false);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertEquals("'" + boolean38 + "' != '" + false + "'", boolean38, false);
        org.junit.Assert.assertNotNull(equalsBuilder41);
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        float[] floatArray18 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray21 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append(floatArray18, floatArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder12.append(true, true);
        byte[] byteArray29 = new byte[] { (byte) 100, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray33 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray34 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder30.append(shortArray33, shortArray34);
        byte[] byteArray36 = new byte[] {};
        byte[] byteArray41 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder30.append(byteArray36, byteArray41);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder25.append(byteArray29, byteArray36);
        boolean boolean44 = equalsBuilder25.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder25.append(1L, (long) (-1));
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100, 10, 1]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(equalsBuilder47);
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder21.append((int) (byte) 1, (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((int) (byte) 1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder30.append('#', '4');
        java.lang.Class<?> wildcardClass34 = equalsBuilder30.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.appendSuper(false);
        java.lang.Boolean boolean78 = equalsBuilder77.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder77.append(1L, (long) (byte) 1);
        java.lang.Boolean boolean82 = equalsBuilder81.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertEquals("'" + boolean78 + "' != '" + false + "'", boolean78, false);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertEquals("'" + boolean82 + "' != '" + false + "'", boolean82, false);
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder46.append(byteArray52, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder46.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder39.append((java.lang.Object) equalsBuilder45, (java.lang.Object) equalsBuilder46);
        long[] longArray73 = new long[] { (byte) 100, ' ', (short) 10 };
        long[] longArray79 = new long[] { 'a', 0L, (short) 10, (byte) 0, (byte) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder46.append(longArray73, longArray79);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder83.append(0, (int) (short) 0);
        boolean boolean87 = equalsBuilder83.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder83.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder83.append((double) '#', 10.0d);
        java.lang.Class<?> wildcardClass94 = equalsBuilder83.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[100, 32, 10]");
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[97, 0, 10, 0, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((double) (short) -1, (double) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder31.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder31.append('#', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder31.append(0, (int) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder31.append(false, true);
        java.lang.Boolean boolean48 = equalsBuilder31.build();
        java.lang.Boolean boolean49 = equalsBuilder31.build();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertEquals("'" + boolean48 + "' != '" + false + "'", boolean48, false);
        org.junit.Assert.assertEquals("'" + boolean49 + "' != '" + false + "'", boolean49, false);
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder78.append((byte) 0, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder78.append((byte) 1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder78.append((double) 100, (double) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder87.append((int) (short) 100, 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray19 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray20 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder16.append(shortArray19, shortArray20);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder21, (java.lang.Object) '#', strArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder21.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray37 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray38 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder34.append(shortArray37, shortArray38);
        byte[] byteArray40 = new byte[] {};
        byte[] byteArray45 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder34.append(byteArray40, byteArray45);
        char[] charArray51 = new char[] { '#', ' ', '#', '#' };
        char[] charArray54 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder34.append(charArray51, charArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray59 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray60 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder56.append(shortArray59, shortArray60);
        byte[] byteArray62 = new byte[] {};
        byte[] byteArray67 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder56.append(byteArray62, byteArray67);
        char[] charArray73 = new char[] { '#', ' ', '#', '#' };
        char[] charArray76 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder56.append(charArray73, charArray76);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder21.append(charArray54, charArray73);
        java.lang.Object obj79 = null;
        boolean boolean80 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray54, obj79);
        java.lang.String[] strArray81 = new java.lang.String[] {};
        boolean boolean82 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder15, (java.lang.Object) charArray54, strArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder15.appendSuper(false);
        float[] floatArray85 = new float[] {};
        float[] floatArray87 = new float[] { (byte) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder15.append(floatArray85, floatArray87);
        boolean[] booleanArray89 = new boolean[] {};
        boolean[] booleanArray90 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder88.append(booleanArray89, booleanArray90);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder91.appendSuper(false);
        double[] doubleArray94 = new double[] {};
        double[] doubleArray96 = new double[] { 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder97 = equalsBuilder93.append(doubleArray94, doubleArray96);
        boolean boolean98 = equalsBuilder97.isEquals();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(floatArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray85), "[]");
        org.junit.Assert.assertNotNull(floatArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray87), "[-1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(booleanArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray89), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[]");
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray96), "[1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        float[] floatArray65 = null;
        float[] floatArray66 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder64.append(floatArray65, floatArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder67.append((double) 0, (double) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder70.append(false, true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray4 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray5 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder1.append(shortArray4, shortArray5);
        byte[] byteArray7 = new byte[] {};
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder1.append(byteArray7, byteArray12);
        char[] charArray18 = new char[] { '#', ' ', '#', '#' };
        char[] charArray21 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder1.append(charArray18, charArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder22.append('a', '#');
        java.util.Collection<java.lang.String> strCollection26 = null;
        boolean boolean27 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) 0L, (java.lang.Object) equalsBuilder25, strCollection26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder25.appendSuper(true);
        java.lang.Boolean boolean30 = equalsBuilder29.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder29.append((double) 1, (double) (byte) 1);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertEquals("'" + boolean30 + "' != '" + false + "'", boolean30, false);
        org.junit.Assert.assertNotNull(equalsBuilder33);
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder0.append((double) 'a', (double) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder7.append((short) -1, (short) (byte) 10);
        boolean boolean11 = equalsBuilder10.isEquals();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray9 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray10 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder6.append(shortArray9, shortArray10);
        byte[] byteArray12 = new byte[] {};
        byte[] byteArray17 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder6.append(byteArray12, byteArray17);
        float[] floatArray24 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray27 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder18.append(floatArray24, floatArray27);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder18.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder32.append((short) (byte) 10, (short) 0);
        long[] longArray41 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray43 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder32.append(longArray41, longArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder0.append((java.lang.Object) true, (java.lang.Object) longArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder0.append((short) -1, (short) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder48.append((byte) -1, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder48.append(1, 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder48.appendSuper(true);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(equalsBuilder56);
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray25 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray26 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder22.append(shortArray25, shortArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray34 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray38 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray39 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder35.append(shortArray38, shortArray39);
        byte[] byteArray41 = new byte[] {};
        byte[] byteArray46 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder35.append(byteArray41, byteArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder28.append(byteArray34, byteArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray53 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray54 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder50.append(shortArray53, shortArray54);
        byte[] byteArray56 = new byte[] {};
        byte[] byteArray61 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder50.append(byteArray56, byteArray61);
        boolean boolean63 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder22.append(byteArray34, byteArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder22.append(100.0f, 100.0f);
        boolean boolean69 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder0, (java.lang.Object) equalsBuilder67, true);
        boolean[] booleanArray72 = new boolean[] { true, false };
        boolean[] booleanArray78 = new boolean[] { false, false, false, true, true };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder67.append(booleanArray72, booleanArray78);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder79.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder79.append((long) '#', 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder84.append((double) 10, (double) (-1L));
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray72), "[true, false]");
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray78), "[false, false, false, true, true]");
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((double) (short) -1, (double) 10);
        java.lang.Boolean boolean36 = equalsBuilder35.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder35.append((int) (byte) 1, 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder35.append(0L, (long) (-1));
        java.lang.Class<?> wildcardClass43 = equalsBuilder35.getClass();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertEquals("'" + boolean36 + "' != '" + false + "'", boolean36, false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        float[] floatArray18 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray21 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append(floatArray18, floatArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder12.append(true, true);
        byte[] byteArray29 = new byte[] { (byte) 100, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray33 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray34 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder30.append(shortArray33, shortArray34);
        byte[] byteArray36 = new byte[] {};
        byte[] byteArray41 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder30.append(byteArray36, byteArray41);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder25.append(byteArray29, byteArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder25.append((int) (byte) 0, 100);
        equalsBuilder25.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder25.append((float) 100L, (float) (byte) -1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100, 10, 1]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder50);
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        java.lang.Object obj7 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray18 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray19 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder15.append(shortArray18, shortArray19);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(byteArray21, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder8.append(byteArray14, byteArray26);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj7, (java.lang.Object) byteArray26, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray41 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray42 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder38.append(shortArray41, shortArray42);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder38.append(byteArray44, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder31.append(byteArray37, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(byteArray26, byteArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray69 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray70 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder66.append(shortArray69, shortArray70);
        byte[] byteArray72 = new byte[] {};
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder66.append(byteArray72, byteArray77);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder0.append(byteArray59, byteArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder0.append(0, (int) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder82.append((short) 100, (short) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder85.append((float) 10, (float) (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder88.append((short) (byte) 0, (short) (byte) 100);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder4 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray7 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray8 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder4.append(shortArray7, shortArray8);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean18 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder9, (java.lang.Object) '#', strArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder9.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray25 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray26 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder22.append(shortArray25, shortArray26);
        byte[] byteArray28 = new byte[] {};
        byte[] byteArray33 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder22.append(byteArray28, byteArray33);
        char[] charArray39 = new char[] { '#', ' ', '#', '#' };
        char[] charArray42 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder22.append(charArray39, charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray47 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray48 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder44.append(shortArray47, shortArray48);
        byte[] byteArray50 = new byte[] {};
        byte[] byteArray55 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder44.append(byteArray50, byteArray55);
        char[] charArray61 = new char[] { '#', ' ', '#', '#' };
        char[] charArray64 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder44.append(charArray61, charArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder9.append(charArray42, charArray61);
        java.lang.Object obj67 = null;
        boolean boolean68 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray42, obj67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray72 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray73 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder69.append(shortArray72, shortArray73);
        byte[] byteArray75 = new byte[] {};
        byte[] byteArray80 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder69.append(byteArray75, byteArray80);
        char[] charArray86 = new char[] { '#', ' ', '#', '#' };
        char[] charArray89 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder69.append(charArray86, charArray89);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder3.append(charArray42, charArray86);
        equalsBuilder3.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder3.appendSuper(false);
        java.lang.Class<?> wildcardClass95 = equalsBuilder94.getClass();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray72), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[]");
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        float[] floatArray65 = null;
        float[] floatArray66 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder64.append(floatArray65, floatArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder67.append((double) 0, (double) (byte) 1);
        equalsBuilder70.reset();
        boolean boolean72 = equalsBuilder70.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder70.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder70.append((int) '4', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder70.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((short) (byte) 1, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder83.append((float) '4', (float) (short) 1);
        equalsBuilder86.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder86.append('#', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder86.append(true, true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder6.append((-1L), 100L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder9.append((int) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder9.append((short) (byte) 0, (short) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray19 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray20 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder16.append(shortArray19, shortArray20);
        byte[] byteArray22 = new byte[] {};
        byte[] byteArray27 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder16.append(byteArray22, byteArray27);
        float[] floatArray34 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray37 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder28.append(floatArray34, floatArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder28.append((float) 0L, 10.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder41.append('#', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray48 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray49 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder45.append(shortArray48, shortArray49);
        byte[] byteArray51 = new byte[] {};
        byte[] byteArray56 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder45.append(byteArray51, byteArray56);
        char[] charArray62 = new char[] { '#', ' ', '#', '#' };
        char[] charArray65 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder45.append(charArray62, charArray65);
        char[] charArray69 = new char[] { 'a', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder41.append(charArray65, charArray69);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray74 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray75 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder71.append(shortArray74, shortArray75);
        byte[] byteArray77 = new byte[] {};
        byte[] byteArray82 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder71.append(byteArray77, byteArray82);
        char[] charArray88 = new char[] { '#', ' ', '#', '#' };
        char[] charArray91 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder71.append(charArray88, charArray91);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder15.append(charArray65, charArray91);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "a ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "a ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[a,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(shortArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray74), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray75), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder93);
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        long[] longArray9 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray11 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(longArray9, longArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder0.appendSuper(false);
        java.lang.Boolean boolean17 = equalsBuilder0.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder0.append((byte) 1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder0.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder23.append((short) -1, (short) 10);
        boolean boolean27 = equalsBuilder23.isEquals();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + false + "'", boolean17, false);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder17.append((byte) 100, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder17.append((long) '#', 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder17.append((byte) -1, (byte) -1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder46.append(byteArray52, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder46.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder39.append((java.lang.Object) equalsBuilder45, (java.lang.Object) equalsBuilder46);
        long[] longArray73 = new long[] { (byte) 100, ' ', (short) 10 };
        long[] longArray79 = new long[] { 'a', 0L, (short) 10, (byte) 0, (byte) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder46.append(longArray73, longArray79);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder83.append(0, (int) (short) 0);
        boolean boolean87 = equalsBuilder83.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder83.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder83.append((int) (byte) 0, (int) '#');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[100, 32, 10]");
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[97, 0, 10, 0, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((byte) 1, (byte) 0);
        boolean boolean36 = equalsBuilder35.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder35.append((long) (short) 10, 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder35.append(' ', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder42.append((int) (short) 0, (int) '4');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append((double) (byte) 0, (double) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder24.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder26.append((byte) 0, (byte) -1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(equalsBuilder29);
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        boolean[] booleanArray68 = new boolean[] { true, true, false };
        boolean[] booleanArray69 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder5.append(booleanArray68, booleanArray69);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder5.append((short) -1, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder73.append((int) '4', (int) (byte) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[true, true, false]");
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((double) 100L, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((byte) 10, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder84.append((double) 100, (double) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder84.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder89.append('4', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder92.append((long) (byte) 0, (long) '#');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder95);
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray9 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray10 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder6.append(shortArray9, shortArray10);
        byte[] byteArray12 = new byte[] {};
        byte[] byteArray17 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder6.append(byteArray12, byteArray17);
        float[] floatArray24 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray27 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder18.append(floatArray24, floatArray27);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder18.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder32.append((short) (byte) 10, (short) 0);
        long[] longArray41 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray43 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder32.append(longArray41, longArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder0.append((java.lang.Object) true, (java.lang.Object) longArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder0.append((long) '4', (long) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder0.append((short) -1, (short) (byte) 1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder51);
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder64.append((long) 'a', (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append(100.0d, (double) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder80.append((byte) -1, (byte) 1);
        java.lang.Boolean boolean87 = equalsBuilder86.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder86.append((long) (byte) 10, (long) '#');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertEquals("'" + boolean87 + "' != '" + false + "'", boolean87, false);
        org.junit.Assert.assertNotNull(equalsBuilder90);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        boolean boolean16 = equalsBuilder15.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray20 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray21 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder17.append(shortArray20, shortArray21);
        byte[] byteArray23 = new byte[] {};
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(byteArray23, byteArray28);
        byte[] byteArray30 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder15.append(byteArray28, byteArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((float) ' ', (float) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder34.append(1.0d, (double) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder40.append((byte) -1, (byte) 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.appendSuper(false);
        boolean boolean78 = equalsBuilder64.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray82 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray83 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder79.append(shortArray82, shortArray83);
        boolean boolean85 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean78, (java.lang.Object) equalsBuilder84);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder84.append((long) (byte) -1, (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder84.append((short) 0, (short) (byte) 1);
        equalsBuilder84.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder84.append(10.0f, (float) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder98 = equalsBuilder95.append(false, false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(shortArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray82), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray83), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertNotNull(equalsBuilder98);
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        boolean boolean16 = equalsBuilder15.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray20 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray21 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder17.append(shortArray20, shortArray21);
        byte[] byteArray23 = new byte[] {};
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(byteArray23, byteArray28);
        byte[] byteArray30 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder15.append(byteArray28, byteArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) (byte) 1, (double) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((float) (byte) -1, (float) 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder34.append((int) (byte) 1, (int) (byte) -1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder64.append((long) (byte) 100, (long) ' ');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder0.append((byte) -1, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder0.append((double) 100L, (double) (byte) 100);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(equalsBuilder11);
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray4 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray5 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder1.append(shortArray4, shortArray5);
        byte[] byteArray7 = new byte[] {};
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder1.append(byteArray7, byteArray12);
        char[] charArray18 = new char[] { '#', ' ', '#', '#' };
        char[] charArray21 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder1.append(charArray18, charArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder22.append('a', '#');
        java.util.Collection<java.lang.String> strCollection26 = null;
        boolean boolean27 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) 0L, (java.lang.Object) equalsBuilder25, strCollection26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder25.append((double) 0L, (double) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder30.append('a', ' ');
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray36 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray37 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder33.append(shortArray36, shortArray37);
        byte[] byteArray39 = new byte[] {};
        byte[] byteArray44 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder33.append(byteArray39, byteArray44);
        float[] floatArray51 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray54 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder45.append(floatArray51, floatArray54);
        float[] floatArray60 = new float[] { (-1), (byte) 10, (-1), (short) 100 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder31.append(floatArray54, floatArray60);
        equalsBuilder61.reset();
        java.lang.Boolean boolean63 = equalsBuilder61.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder61.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder66.appendSuper(true);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(floatArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray60), "[-1.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertEquals("'" + boolean63 + "' != '" + true + "'", boolean63, true);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder68);
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        long[] longArray9 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray11 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(longArray9, longArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder17.append((short) (byte) 10, (short) 0);
        long[] longArray26 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray28 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(longArray26, longArray28);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder30.append((short) (byte) 10, (short) 0);
        equalsBuilder30.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder35.append((short) (byte) 10, (short) 0);
        long[] longArray44 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray46 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder35.append(longArray44, longArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder48.append((short) (byte) 10, (short) 0);
        long[] longArray57 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray59 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder48.append(longArray57, longArray59);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder30.append(longArray44, longArray59);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder0.append(longArray28, longArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder62.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder65.append((byte) 100, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder65.append((byte) 0, (byte) 1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder71);
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 100, (byte) 100);
        equalsBuilder3.reset();
        int[] intArray13 = new int[] { (short) -1, (-1), (byte) 1, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray17 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray18 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder14.append(shortArray17, shortArray18);
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean28 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder19, (java.lang.Object) '#', strArray27);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder19.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray35 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray36 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder32.append(shortArray35, shortArray36);
        byte[] byteArray38 = new byte[] {};
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder32.append(byteArray38, byteArray43);
        char[] charArray49 = new char[] { '#', ' ', '#', '#' };
        char[] charArray52 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder32.append(charArray49, charArray52);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray57 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray58 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder54.append(shortArray57, shortArray58);
        byte[] byteArray60 = new byte[] {};
        byte[] byteArray65 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder54.append(byteArray60, byteArray65);
        char[] charArray71 = new char[] { '#', ' ', '#', '#' };
        char[] charArray74 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder54.append(charArray71, charArray74);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder19.append(charArray52, charArray71);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder19.appendSuper(false);
        int[] intArray82 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray87 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder78.append(intArray82, intArray87);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder3.append(intArray13, intArray82);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder89.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder89.append((float) 10, 10.0f);
        boolean boolean95 = equalsBuilder89.isEquals();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, -1, 1, 35]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray58), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        float[] floatArray65 = null;
        float[] floatArray66 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder64.append(floatArray65, floatArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder67.append((double) 0, (double) (byte) 1);
        equalsBuilder70.reset();
        boolean boolean72 = equalsBuilder70.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder70.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder70.append((int) '4', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder70.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((short) (byte) 1, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder80.append(100.0f, (float) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder86.append((float) 10, (float) 100);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder78.append(0, (int) (byte) -1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray9 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray10 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder6.append(shortArray9, shortArray10);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean20 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder11, (java.lang.Object) '#', strArray19);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder11.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray27 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray28 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder24.append(shortArray27, shortArray28);
        byte[] byteArray30 = new byte[] {};
        byte[] byteArray35 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append(byteArray30, byteArray35);
        char[] charArray41 = new char[] { '#', ' ', '#', '#' };
        char[] charArray44 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder24.append(charArray41, charArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray49 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray50 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder46.append(shortArray49, shortArray50);
        byte[] byteArray52 = new byte[] {};
        byte[] byteArray57 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder46.append(byteArray52, byteArray57);
        char[] charArray63 = new char[] { '#', ' ', '#', '#' };
        char[] charArray66 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder46.append(charArray63, charArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder11.append(charArray44, charArray63);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder11.appendSuper(false);
        int[] intArray74 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray79 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder70.append(intArray74, intArray79);
        boolean boolean81 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray3, (java.lang.Object) equalsBuilder80);
        equalsBuilder80.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder80.appendSuper(false);
        java.lang.Boolean boolean85 = equalsBuilder84.build();
        boolean boolean86 = equalsBuilder84.isEquals();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertEquals("'" + boolean85 + "' != '" + false + "'", boolean85, false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder64.append((double) 10.0f, 100.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((short) (byte) 1, (short) (byte) 1);
        boolean boolean84 = equalsBuilder80.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder80.append((long) (-1), 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder80.append(0L, (long) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder90.append((int) '#', (int) ' ');
        java.lang.Class<?> wildcardClass94 = equalsBuilder93.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        float[] floatArray65 = null;
        float[] floatArray66 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder64.append(floatArray65, floatArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder67.append((double) 0, (double) (byte) 1);
        equalsBuilder70.reset();
        boolean boolean72 = equalsBuilder70.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder70.append((float) '#', (float) 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder75.append((float) (short) 10, (float) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder78.append(false, false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray12 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray16 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray17 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder13.append(shortArray16, shortArray17);
        byte[] byteArray19 = new byte[] {};
        byte[] byteArray24 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder13.append(byteArray19, byteArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder6.append(byteArray12, byteArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray31 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray32 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder28.append(shortArray31, shortArray32);
        byte[] byteArray34 = new byte[] {};
        byte[] byteArray39 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder28.append(byteArray34, byteArray39);
        boolean boolean41 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder0.append(byteArray12, byteArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder0.append(100.0f, 100.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder45.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder47.append((double) (short) 0, (double) 1);
        java.lang.Boolean boolean51 = equalsBuilder47.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertEquals("'" + boolean51 + "' != '" + false + "'", boolean51, false);
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append('#', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder0.appendSuper(true);
        java.lang.Boolean boolean9 = equalsBuilder0.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append((float) (byte) 10, 0.0f);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertEquals("'" + boolean9 + "' != '" + false + "'", boolean9, false);
        org.junit.Assert.assertNotNull(equalsBuilder12);
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        double[] doubleArray80 = new double[] { (short) 0, 0.0d, (byte) 10, (byte) 0 };
        double[] doubleArray81 = new double[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder64.append(doubleArray80, doubleArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder82.append((short) 0, (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder82.append((float) (short) 1, (float) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder88.append((short) 1, (short) 10);
        equalsBuilder91.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder91.append(false, false);
        boolean boolean96 = equalsBuilder95.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder99 = equalsBuilder95.append(false, true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0, 0.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(equalsBuilder99);
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        java.lang.Object obj7 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray18 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray19 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder15.append(shortArray18, shortArray19);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(byteArray21, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder8.append(byteArray14, byteArray26);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj7, (java.lang.Object) byteArray26, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray41 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray42 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder38.append(shortArray41, shortArray42);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder38.append(byteArray44, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder31.append(byteArray37, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(byteArray26, byteArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder52.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder52.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder52.append((-1L), (long) (short) 100);
        char[] charArray61 = new char[] {};
        char[] charArray62 = new char[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder52.append(charArray61, charArray62);
        java.lang.Class<?> wildcardClass64 = equalsBuilder63.getClass();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[]");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder78.append((byte) 0, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder78.append((byte) 1, (byte) -1);
        boolean boolean85 = equalsBuilder78.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder78.append((float) '4', 1.0f);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(equalsBuilder88);
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray6 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray10 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray11 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder7.append(shortArray10, shortArray11);
        byte[] byteArray13 = new byte[] {};
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder7.append(byteArray13, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder0.append(byteArray6, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray24 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray25 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder21.append(shortArray24, shortArray25);
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean35 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder26, (java.lang.Object) '#', strArray34);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder26.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray42 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray43 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder39.append(shortArray42, shortArray43);
        byte[] byteArray45 = new byte[] {};
        byte[] byteArray50 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder39.append(byteArray45, byteArray50);
        char[] charArray56 = new char[] { '#', ' ', '#', '#' };
        char[] charArray59 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder39.append(charArray56, charArray59);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray64 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray65 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder61.append(shortArray64, shortArray65);
        byte[] byteArray67 = new byte[] {};
        byte[] byteArray72 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder61.append(byteArray67, byteArray72);
        char[] charArray78 = new char[] { '#', ' ', '#', '#' };
        char[] charArray81 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder61.append(charArray78, charArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder26.append(charArray59, charArray78);
        char[] charArray88 = new char[] { '#', '#', '4', '4' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder20.append(charArray78, charArray88);
        java.lang.Boolean boolean90 = equalsBuilder89.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder89.append(100.0d, (double) 1);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray64), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[]");
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "##44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "##44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[#, #, 4, 4]");
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertEquals("'" + boolean90 + "' != '" + false + "'", boolean90, false);
        org.junit.Assert.assertNotNull(equalsBuilder93);
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.appendSuper(false);
        boolean boolean78 = equalsBuilder64.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray82 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray83 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder79.append(shortArray82, shortArray83);
        boolean boolean85 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean78, (java.lang.Object) equalsBuilder84);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder84.append((long) (byte) -1, (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder84.append((short) 0, (short) (byte) 1);
        equalsBuilder84.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder84.append((float) 0, (-1.0f));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder98 = equalsBuilder84.append(false, true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(shortArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray82), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray83), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertNotNull(equalsBuilder98);
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray12 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray16 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray17 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder13.append(shortArray16, shortArray17);
        byte[] byteArray19 = new byte[] {};
        byte[] byteArray24 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder13.append(byteArray19, byteArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder6.append(byteArray12, byteArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray31 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray32 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder28.append(shortArray31, shortArray32);
        byte[] byteArray34 = new byte[] {};
        byte[] byteArray39 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder28.append(byteArray34, byteArray39);
        boolean boolean41 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder0.append(byteArray12, byteArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder0.append(100.0f, 100.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder45.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder47.append((double) (short) 0, (double) 1);
        java.lang.Boolean boolean51 = equalsBuilder50.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertEquals("'" + boolean51 + "' != '" + false + "'", boolean51, false);
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append((double) '4', (double) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder17.append((long) (-1), (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder17.append((short) (byte) 10, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder17.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder17.append((int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder17.append((byte) 1, (byte) 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(equalsBuilder56);
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append((long) (byte) 100, 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.append((double) 10, (double) (byte) 1);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.String[] strArray13 = new java.lang.String[] { "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder9, obj10, (java.util.Collection<java.lang.String>) strList14);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder9.append((float) '#', (float) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder9.append((long) (byte) 100, (long) (short) 0);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((byte) 1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder35.appendSuper(true);
        java.lang.Boolean boolean38 = equalsBuilder35.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder35.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder35.append((float) (byte) 100, 10.0f);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertEquals("'" + boolean38 + "' != '" + false + "'", boolean38, false);
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(equalsBuilder44);
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder75.append((long) (short) -1, (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder75.append((float) (byte) 100, (float) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder81.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder81.append('#', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder81.append((short) (byte) 1, (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder81.append((byte) 0, (byte) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append((long) (byte) 100, 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.append((double) 10, (double) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray13 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray14 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder10.append(shortArray13, shortArray14);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean24 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder15, (java.lang.Object) '#', strArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray31 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray32 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder28.append(shortArray31, shortArray32);
        byte[] byteArray34 = new byte[] {};
        byte[] byteArray39 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder28.append(byteArray34, byteArray39);
        char[] charArray45 = new char[] { '#', ' ', '#', '#' };
        char[] charArray48 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder28.append(charArray45, charArray48);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray53 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray54 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder50.append(shortArray53, shortArray54);
        byte[] byteArray56 = new byte[] {};
        byte[] byteArray61 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder50.append(byteArray56, byteArray61);
        char[] charArray67 = new char[] { '#', ' ', '#', '#' };
        char[] charArray70 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder50.append(charArray67, charArray70);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder15.append(charArray48, charArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder15.appendSuper(false);
        int[] intArray78 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray83 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder74.append(intArray78, intArray83);
        int[] intArray89 = new int[] { (byte) 0, (-1), 1, 100 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder3.append(intArray83, intArray89);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder90.append((long) ' ', (long) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder90.append('a', 'a');
        java.lang.Boolean boolean97 = equalsBuilder96.build();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, -1, 1, 100]");
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
        org.junit.Assert.assertEquals("'" + boolean97 + "' != '" + false + "'", boolean97, false);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append((long) (byte) 100, 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.append((double) 10, (double) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray13 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray14 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder10.append(shortArray13, shortArray14);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean24 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder15, (java.lang.Object) '#', strArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray31 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray32 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder28.append(shortArray31, shortArray32);
        byte[] byteArray34 = new byte[] {};
        byte[] byteArray39 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder28.append(byteArray34, byteArray39);
        char[] charArray45 = new char[] { '#', ' ', '#', '#' };
        char[] charArray48 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder28.append(charArray45, charArray48);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray53 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray54 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder50.append(shortArray53, shortArray54);
        byte[] byteArray56 = new byte[] {};
        byte[] byteArray61 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder50.append(byteArray56, byteArray61);
        char[] charArray67 = new char[] { '#', ' ', '#', '#' };
        char[] charArray70 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder50.append(charArray67, charArray70);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder15.append(charArray48, charArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder15.appendSuper(false);
        int[] intArray78 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray83 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder74.append(intArray78, intArray83);
        int[] intArray89 = new int[] { (byte) 0, (-1), 1, 100 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder3.append(intArray83, intArray89);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder3.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder92.append((float) 100L, (float) 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder98 = equalsBuilder92.append(' ', ' ');
        equalsBuilder92.reset();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, -1, 1, 100]");
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertNotNull(equalsBuilder98);
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder39.append((long) '#', (long) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        boolean boolean16 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder19.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append((float) (-1L), 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder19.append((short) 100, (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder19.append((byte) 10, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder30.append((float) (byte) 100, (float) 'a');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray36 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray37 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder33.append(shortArray36, shortArray37);
        byte[] byteArray39 = new byte[] {};
        byte[] byteArray44 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder33.append(byteArray39, byteArray44);
        float[] floatArray51 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray54 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder45.append(floatArray51, floatArray54);
        float[] floatArray60 = new float[] { (-1), (byte) 10, (-1), (short) 100 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder31.append(floatArray54, floatArray60);
        equalsBuilder61.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder61.append((long) (byte) 100, (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder61.append((short) (byte) 10, (short) 1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(floatArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray60), "[-1.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 100, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder3.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder3.append('a', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder13.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder16.append(10L, (long) (short) 10);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(equalsBuilder19);
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder0.append((double) (byte) 100, (double) '4');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(equalsBuilder11);
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder62.append((short) 10, (short) -1);
        boolean[] booleanArray74 = new boolean[] { true, true, false, true };
        boolean[] booleanArray78 = new boolean[] { true, true, false };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder69.append(booleanArray74, booleanArray78);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder79.append('4', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder82.append((short) (byte) 100, (short) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder82.append((short) 100, (short) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray74), "[true, true, false, true]");
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray78), "[true, true, false]");
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder78.append((double) (byte) 0, (double) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((float) 0, (float) 100);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append((double) '4', (double) 0);
        equalsBuilder17.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder17.append((long) (-1), 1L);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder46);
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder64.append((double) 10.0f, 100.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((short) (byte) 1, (short) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder83.append(10.0f, (float) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder83.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder88.append('#', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder88.appendSuper(false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder93);
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder62.append((short) 10, (short) -1);
        boolean[] booleanArray74 = new boolean[] { true, true, false, true };
        boolean[] booleanArray78 = new boolean[] { true, true, false };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder69.append(booleanArray74, booleanArray78);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder79.append('4', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder79.append((double) (byte) 0, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder79.append((double) 1.0f, (-1.0d));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder88.append((byte) 100, (byte) -1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray74), "[true, true, false, true]");
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray78), "[true, true, false]");
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder64.append((double) 10.0f, 100.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((short) (byte) 1, (short) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder80.append((byte) 0, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder86.append((byte) 10, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder89.append(0L, (long) (short) 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        boolean boolean16 = equalsBuilder15.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray20 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray21 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder17.append(shortArray20, shortArray21);
        byte[] byteArray23 = new byte[] {};
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(byteArray23, byteArray28);
        byte[] byteArray30 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder15.append(byteArray28, byteArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((float) ' ', (float) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append(false, true);
        boolean boolean38 = equalsBuilder37.isEquals();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append('#', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder10.append(1, 10);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(equalsBuilder13);
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        long[] longArray9 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray11 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(longArray9, longArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder0.appendSuper(false);
        java.lang.Boolean boolean17 = equalsBuilder0.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder0.append((byte) 1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder0.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append(false, false);
        java.lang.Boolean boolean28 = equalsBuilder27.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder27.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder27.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder33.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder33.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder39.append(true, false);
        boolean boolean43 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder23, (java.lang.Object) true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder23.append((short) (byte) 0, (short) -1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + false + "'", boolean17, false);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertEquals("'" + boolean28 + "' != '" + true + "'", boolean28, true);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(equalsBuilder46);
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        java.lang.Object obj7 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray18 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray19 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder15.append(shortArray18, shortArray19);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(byteArray21, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder8.append(byteArray14, byteArray26);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj7, (java.lang.Object) byteArray26, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray41 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray42 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder38.append(shortArray41, shortArray42);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder38.append(byteArray44, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder31.append(byteArray37, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(byteArray26, byteArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder52.append(true, false);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder55);
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder0.appendSuper(false);
        float[] floatArray8 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray12 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray13 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder9.append(shortArray12, shortArray13);
        byte[] byteArray15 = new byte[] {};
        byte[] byteArray20 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder9.append(byteArray15, byteArray20);
        float[] floatArray27 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray30 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder21.append(floatArray27, floatArray30);
        java.lang.Object obj33 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray38 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray39 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder35.append(shortArray38, shortArray39);
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean49 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder40, (java.lang.Object) '#', strArray48);
        boolean boolean50 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj33, (java.lang.Object) (byte) 1, strArray48);
        boolean boolean51 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) floatArray30, (java.lang.Object) (byte) 0, strArray48);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(floatArray8, floatArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder52.append((double) '#', (double) (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder52.append((short) 1, (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder58.append((long) (short) 1, (long) (byte) 0);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(equalsBuilder61);
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((double) (short) -1, (double) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder31.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder31.append('#', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder31.append(0, (int) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder44.append((byte) 1, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder47.append((int) (byte) 0, (int) (byte) 10);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder62.append((short) 10, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder69.append((float) (short) 100, 0.0f);
        equalsBuilder72.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder72.append((float) 100L, (float) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder76.append((short) 1, (short) (byte) 100);
        boolean boolean80 = equalsBuilder76.isEquals();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append((short) 100, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray46 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray47 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder43.append(shortArray46, shortArray47);
        byte[] byteArray49 = new byte[] {};
        byte[] byteArray54 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder43.append(byteArray49, byteArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder55.append((byte) 10, (byte) 0);
        equalsBuilder55.reset();
        boolean boolean60 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 100, (java.lang.Object) equalsBuilder55);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder55.append((int) (short) 10, 0);
        boolean boolean64 = equalsBuilder55.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder55.append(0L, (-1L));
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[]");
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(equalsBuilder67);
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append((long) (short) 10, (long) '#');
        equalsBuilder27.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder27.append((float) (byte) 0, (float) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder27.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder27.append((short) 0, (short) (byte) -1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder36);
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        java.lang.Boolean boolean33 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((short) (byte) 10, (short) 0);
        equalsBuilder34.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder39.append((short) (byte) 10, (short) 0);
        long[] longArray48 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray50 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder39.append(longArray48, longArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder52.append((short) (byte) 10, (short) 0);
        long[] longArray61 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray63 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder52.append(longArray61, longArray63);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder34.append(longArray48, longArray63);
        java.lang.Boolean boolean66 = equalsBuilder65.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder65.append((byte) 1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder69.append((int) (byte) 100, (int) (short) 1);
        boolean boolean74 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean33, (java.lang.Object) equalsBuilder69, true);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertEquals("'" + boolean33 + "' != '" + false + "'", boolean33, false);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(longArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray48), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray63), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertEquals("'" + boolean66 + "' != '" + false + "'", boolean66, false);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.appendSuper(false);
        boolean boolean78 = equalsBuilder64.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder64.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((byte) 0, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder84.append((int) (byte) 100, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder84.append((short) 100, (short) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder90.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder93.append((int) (byte) 100, (int) (short) 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        float[] floatArray65 = null;
        float[] floatArray66 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder64.append(floatArray65, floatArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder67.append((double) 0, (double) (byte) 1);
        equalsBuilder70.reset();
        boolean boolean72 = equalsBuilder70.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder70.appendSuper(true);
        java.lang.Boolean boolean75 = equalsBuilder70.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder70.append((short) (byte) 0, (short) (byte) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertEquals("'" + boolean75 + "' != '" + true + "'", boolean75, true);
        org.junit.Assert.assertNotNull(equalsBuilder78);
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray6 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray10 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray11 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder7.append(shortArray10, shortArray11);
        byte[] byteArray13 = new byte[] {};
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder7.append(byteArray13, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder0.append(byteArray6, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder22.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append(' ', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((long) (short) 10, (long) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder27.append((int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder33.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder33.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder39.append((float) ' ', (float) (-1));
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((byte) 1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder35.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder37.append('a', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder37.append((byte) 0, (byte) 10);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append((double) '4', (double) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder17.append((long) (-1), (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder17.append((short) (byte) 10, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray52 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray53 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder49.append(shortArray52, shortArray53);
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean63 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder54, (java.lang.Object) '#', strArray62);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder64.append(false, false);
        java.lang.Boolean boolean68 = equalsBuilder67.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder67.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder67.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder67.append(false, false);
        boolean boolean78 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) strArray62, (java.lang.Object) false, true);
        java.lang.Object[] objArray79 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder17.append((java.lang.Object[]) strArray62, objArray79);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertEquals("'" + boolean68 + "' != '" + true + "'", boolean68, true);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(equalsBuilder80);
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        int[] intArray6 = new int[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray10 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray11 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder7.append(shortArray10, shortArray11);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean21 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder12, (java.lang.Object) '#', strArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder12.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray28 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray29 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder25.append(shortArray28, shortArray29);
        byte[] byteArray31 = new byte[] {};
        byte[] byteArray36 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder25.append(byteArray31, byteArray36);
        char[] charArray42 = new char[] { '#', ' ', '#', '#' };
        char[] charArray45 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder25.append(charArray42, charArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray50 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray51 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder47.append(shortArray50, shortArray51);
        byte[] byteArray53 = new byte[] {};
        byte[] byteArray58 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder47.append(byteArray53, byteArray58);
        char[] charArray64 = new char[] { '#', ' ', '#', '#' };
        char[] charArray67 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder47.append(charArray64, charArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder12.append(charArray45, charArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder12.appendSuper(false);
        int[] intArray75 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray80 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder71.append(intArray75, intArray80);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder5.append(intArray6, intArray80);
        boolean boolean83 = equalsBuilder5.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder5.append((float) (short) 10, 10.0f);
        equalsBuilder5.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder5.appendSuper(false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[]");
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        int[] intArray6 = new int[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray10 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray11 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder7.append(shortArray10, shortArray11);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean21 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder12, (java.lang.Object) '#', strArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder12.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray28 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray29 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder25.append(shortArray28, shortArray29);
        byte[] byteArray31 = new byte[] {};
        byte[] byteArray36 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder25.append(byteArray31, byteArray36);
        char[] charArray42 = new char[] { '#', ' ', '#', '#' };
        char[] charArray45 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder25.append(charArray42, charArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray50 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray51 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder47.append(shortArray50, shortArray51);
        byte[] byteArray53 = new byte[] {};
        byte[] byteArray58 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder47.append(byteArray53, byteArray58);
        char[] charArray64 = new char[] { '#', ' ', '#', '#' };
        char[] charArray67 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder47.append(charArray64, charArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder12.append(charArray45, charArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder12.appendSuper(false);
        int[] intArray75 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray80 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder71.append(intArray75, intArray80);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder5.append(intArray6, intArray80);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder5.append((double) (byte) 10, (double) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder5.append((byte) -1, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder5.append((double) (-1), (double) 10L);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[]");
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append((long) (byte) 100, 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder7.append((short) (byte) 10, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder7.append('#', '4');
        java.lang.Boolean boolean14 = equalsBuilder7.build();
        boolean boolean16 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder3, (java.lang.Object) equalsBuilder7, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder3.append(10, 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder19.append((double) 0.0f, 0.0d);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append((double) '4', (double) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder42.append((int) '4', (int) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder45.append(0L, (long) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray52 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray53 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder49.append(shortArray52, shortArray53);
        byte[] byteArray55 = new byte[] {};
        byte[] byteArray60 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder49.append(byteArray55, byteArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder49.append((double) 100L, (double) 10L);
        boolean boolean65 = equalsBuilder49.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder49.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder68.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder68.append((float) (-1L), 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder73.append((float) (short) 0, (float) 1);
        boolean boolean77 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) 0, (java.lang.Object) 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[]");
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        boolean boolean16 = equalsBuilder15.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray20 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray21 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder17.append(shortArray20, shortArray21);
        byte[] byteArray23 = new byte[] {};
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(byteArray23, byteArray28);
        byte[] byteArray30 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder15.append(byteArray28, byteArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder15.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder34.appendSuper(false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder36);
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        boolean boolean16 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder19.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append((long) (byte) -1, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder19.append('4', 'a');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray9 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray10 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder6.append(shortArray9, shortArray10);
        byte[] byteArray12 = new byte[] {};
        byte[] byteArray17 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder6.append(byteArray12, byteArray17);
        float[] floatArray24 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray27 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder18.append(floatArray24, floatArray27);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder18.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder32.append((short) (byte) 10, (short) 0);
        long[] longArray41 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray43 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder32.append(longArray41, longArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder0.append((java.lang.Object) true, (java.lang.Object) longArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder0.append((short) -1, (short) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder48.append((short) (byte) 100, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder51.appendSuper(false);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder53);
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        boolean boolean16 = equalsBuilder15.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray20 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray21 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder17.append(shortArray20, shortArray21);
        byte[] byteArray23 = new byte[] {};
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(byteArray23, byteArray28);
        byte[] byteArray30 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder15.append(byteArray28, byteArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder15.append((byte) 1, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder15.append((short) (byte) -1, (short) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder37.append(' ', '4');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray6 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray10 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray11 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder7.append(shortArray10, shortArray11);
        byte[] byteArray13 = new byte[] {};
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder7.append(byteArray13, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder0.append(byteArray6, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder22.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray28 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray29 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder25.append(shortArray28, shortArray29);
        byte[] byteArray31 = new byte[] {};
        byte[] byteArray36 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder25.append(byteArray31, byteArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder25.append((double) 100L, (double) 10L);
        boolean boolean41 = equalsBuilder25.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder25.append(' ', '4');
        boolean boolean46 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '4', false);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        float[] floatArray18 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray21 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append(floatArray18, floatArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder12.append(true, true);
        byte[] byteArray29 = new byte[] { (byte) 100, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray33 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray34 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder30.append(shortArray33, shortArray34);
        byte[] byteArray36 = new byte[] {};
        byte[] byteArray41 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder30.append(byteArray36, byteArray41);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder25.append(byteArray29, byteArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder43.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder45.append((int) (short) 100, (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder45.append('#', '4');
        java.lang.Class<?> wildcardClass52 = equalsBuilder45.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100, 10, 1]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder43.append((short) (byte) 10, (short) 0);
        long[] longArray52 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray54 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder43.append(longArray52, longArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder56.append((short) (byte) 10, (short) 0);
        long[] longArray65 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray67 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder56.append(longArray65, longArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray72 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray73 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder69.append(shortArray72, shortArray73);
        java.lang.String[] strArray82 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean83 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder74, (java.lang.Object) '#', strArray82);
        boolean boolean84 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray67, (java.lang.Object) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder42.append(longArray52, longArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder42.append((int) (short) 0, 100);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(longArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray65), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray67), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray72), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        long[] longArray9 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray11 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(longArray9, longArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder17.append((short) (byte) 10, (short) 0);
        long[] longArray26 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray28 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(longArray26, longArray28);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder30.append((short) (byte) 10, (short) 0);
        equalsBuilder30.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder35.append((short) (byte) 10, (short) 0);
        long[] longArray44 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray46 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder35.append(longArray44, longArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder48.append((short) (byte) 10, (short) 0);
        long[] longArray57 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray59 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder48.append(longArray57, longArray59);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder30.append(longArray44, longArray59);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder0.append(longArray28, longArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder62.append((byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder65.append((int) (short) 1, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder68.append((short) 1, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder71.append((short) (byte) 10, (short) 100);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(equalsBuilder74);
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 100, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder3.append((short) (byte) 100, (short) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder10.append(true, false);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(equalsBuilder13);
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((byte) 1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder35.appendSuper(true);
        short[] shortArray38 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray42 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray43 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder39.append(shortArray42, shortArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder37.append(shortArray38, shortArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder45.append((long) ' ', (long) (short) 0);
        equalsBuilder45.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder45.append((int) (byte) 0, 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder45.append('a', '#');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder55);
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append((long) (byte) 100, 1L);
        boolean boolean7 = equalsBuilder3.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray11 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray12 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder8.append(shortArray11, shortArray12);
        byte[] byteArray14 = new byte[] {};
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder8.append(byteArray14, byteArray19);
        char[] charArray25 = new char[] { '#', ' ', '#', '#' };
        char[] charArray28 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder8.append(charArray25, charArray28);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder29.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder29.append((int) (byte) 1, (int) (byte) 0);
        short[] shortArray36 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray40 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray41 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder37.append(shortArray40, shortArray41);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder35.append(shortArray36, shortArray41);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray50 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray54 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray55 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder51.append(shortArray54, shortArray55);
        byte[] byteArray57 = new byte[] {};
        byte[] byteArray62 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder51.append(byteArray57, byteArray62);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder44.append(byteArray50, byteArray62);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder44.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder66.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder68.append(' ', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder71.append((long) (short) 10, (long) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder71.append((int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder77.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder77.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray87 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray88 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder84.append(shortArray87, shortArray88);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray93 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray94 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder90.append(shortArray93, shortArray94);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder83.append(shortArray87, shortArray94);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder97 = equalsBuilder3.append(shortArray41, shortArray87);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(shortArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray87), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray88), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(shortArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray93), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray94), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertNotNull(equalsBuilder96);
        org.junit.Assert.assertNotNull(equalsBuilder97);
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder0.append((double) 1, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder0.append((float) 'a', 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder13.append((byte) 1, (byte) 1);
        equalsBuilder16.reset();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder16);
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((double) 100L, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((short) (byte) -1, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder81.append((double) 0.0f, (double) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder87.append(' ', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder90.append((double) 'a', (double) 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder93.append((double) (short) 0, (double) '4');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        boolean boolean16 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder19.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append((float) (-1L), 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder19.append((short) 0, (short) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder19.append((long) (byte) -1, (long) ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder30.appendSuper(true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder32);
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        java.lang.Object obj7 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray18 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray19 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder15.append(shortArray18, shortArray19);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(byteArray21, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder8.append(byteArray14, byteArray26);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj7, (java.lang.Object) byteArray26, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray41 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray42 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder38.append(shortArray41, shortArray42);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder38.append(byteArray44, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder31.append(byteArray37, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(byteArray26, byteArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder52.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder56.append((short) (byte) 10, (short) 0);
        long[] longArray65 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray67 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder56.append(longArray65, longArray67);
        long[] longArray71 = new long[] { (short) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder52.append(longArray67, longArray71);
        equalsBuilder52.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder52.append((double) (-1.0f), (double) 100.0f);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(longArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray65), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray67), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(longArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray71), "[10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder76);
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append((double) '4', (double) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder17.append((long) (-1), (long) (byte) 1);
        java.lang.Object obj46 = null;
        boolean boolean47 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (-1), obj46);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        java.lang.Boolean boolean79 = equalsBuilder78.build();
        short[] shortArray82 = new short[] { (short) -1, (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray86 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray87 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder83.append(shortArray86, shortArray87);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder78.append(shortArray82, shortArray86);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder78.append(100.0d, (double) (short) -1);
        java.lang.Boolean boolean93 = equalsBuilder78.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertEquals("'" + boolean79 + "' != '" + false + "'", boolean79, false);
        org.junit.Assert.assertNotNull(shortArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray82), "[-1, 10]");
        org.junit.Assert.assertNotNull(shortArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray86), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray87), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertEquals("'" + boolean93 + "' != '" + false + "'", boolean93, false);
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        float[] floatArray65 = null;
        float[] floatArray66 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder64.append(floatArray65, floatArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder64.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append((float) 100L, (float) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder73.append(true, false);
        boolean boolean77 = equalsBuilder73.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder73.append((byte) 100, (byte) 100);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(equalsBuilder80);
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder0.append((float) (short) 0, (float) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append(' ', ' ');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(equalsBuilder21);
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder0.append((short) (byte) 10, (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder0.append((short) (byte) 10, (short) (byte) 1);
        java.lang.Class<?> wildcardClass15 = equalsBuilder0.getClass();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder46.append(byteArray52, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder46.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder39.append((java.lang.Object) equalsBuilder45, (java.lang.Object) equalsBuilder46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder46.append((byte) 0, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder46.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder46.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder46.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder46.append((float) 100L, 0.0f);
        java.lang.Boolean boolean84 = equalsBuilder83.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertEquals("'" + boolean84 + "' != '" + false + "'", boolean84, false);
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder0.append((short) (byte) 10, (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder0.append((short) (byte) 10, (short) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder0.append(true, false);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(equalsBuilder17);
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        long[] longArray9 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray11 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(longArray9, longArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder17.append((short) (byte) 10, (short) 0);
        long[] longArray26 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray28 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(longArray26, longArray28);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder30.append((short) (byte) 10, (short) 0);
        equalsBuilder30.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder35.append((short) (byte) 10, (short) 0);
        long[] longArray44 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray46 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder35.append(longArray44, longArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder48.append((short) (byte) 10, (short) 0);
        long[] longArray57 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray59 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder48.append(longArray57, longArray59);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder30.append(longArray44, longArray59);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder0.append(longArray28, longArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder62.append((byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder62.append((double) (byte) -1, (double) (byte) 0);
        java.lang.Boolean boolean69 = equalsBuilder68.build();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertEquals("'" + boolean69 + "' != '" + false + "'", boolean69, false);
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray6 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray10 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray11 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder7.append(shortArray10, shortArray11);
        byte[] byteArray13 = new byte[] {};
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder7.append(byteArray13, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder0.append(byteArray6, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder22.appendSuper(true);
        java.lang.Class<?> wildcardClass25 = equalsBuilder22.getClass();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((float) 'a', (float) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append(100.0f, (float) 10L);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        float[] floatArray65 = null;
        float[] floatArray66 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder64.append(floatArray65, floatArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder67.append((double) 0, (double) (byte) 1);
        equalsBuilder70.reset();
        boolean boolean72 = equalsBuilder70.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder70.appendSuper(true);
        java.lang.Boolean boolean75 = equalsBuilder70.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder70.append((byte) 100, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder78.append((float) 1L, (float) (-1L));
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertEquals("'" + boolean75 + "' != '" + true + "'", boolean75, true);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder7.append((float) (byte) 1, (float) 100L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder7.append((float) 10, (float) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder7.append(false, true);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder16);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.appendSuper(false);
        boolean boolean78 = equalsBuilder64.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder64.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((byte) 0, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder84.append((short) (byte) 10, (short) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder87.append((float) '4', (float) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder87.append('4', ' ');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.appendSuper(true);
        boolean boolean10 = equalsBuilder9.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray14 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray15 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder11.append(shortArray14, shortArray15);
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean25 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder16, (java.lang.Object) '#', strArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder16.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray32 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray33 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder29.append(shortArray32, shortArray33);
        byte[] byteArray35 = new byte[] {};
        byte[] byteArray40 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder29.append(byteArray35, byteArray40);
        char[] charArray46 = new char[] { '#', ' ', '#', '#' };
        char[] charArray49 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder29.append(charArray46, charArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray54 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray55 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder51.append(shortArray54, shortArray55);
        byte[] byteArray57 = new byte[] {};
        byte[] byteArray62 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder51.append(byteArray57, byteArray62);
        char[] charArray68 = new char[] { '#', ' ', '#', '#' };
        char[] charArray71 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder51.append(charArray68, charArray71);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder16.append(charArray49, charArray68);
        equalsBuilder73.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder73.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder73.append((short) 10, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((float) (short) 100, 0.0f);
        equalsBuilder83.reset();
        boolean boolean85 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder9, (java.lang.Object) equalsBuilder83);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder83.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder88.append((-1L), (long) (short) 100);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder64.append((long) 'a', (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder64.append((double) (-1.0f), (double) (byte) 1);
        java.lang.Class<?> wildcardClass84 = equalsBuilder83.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        float[] floatArray18 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray21 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append(floatArray18, floatArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder12.append((short) (byte) 100, (short) (byte) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 100.0f, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder5.append((short) 0, (short) -1);
        boolean boolean21 = equalsBuilder5.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder5.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder5.append((short) 0, (short) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder5.append((double) 10.0f, 1.0d);
        equalsBuilder5.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder0.append((double) 'a', (double) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder7.append((short) -1, (short) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder10.append((double) '#', 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder13.append('#', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder13.append((byte) 1, (byte) 100);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(equalsBuilder19);
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((double) 100L, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((short) (byte) -1, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder84.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder84.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder89.append((byte) -1, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder89.append(' ', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder98 = equalsBuilder89.append(100, 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertNotNull(equalsBuilder98);
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        float[] floatArray65 = null;
        float[] floatArray66 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder64.append(floatArray65, floatArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder64.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append((float) 100L, (float) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder73.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder73.append('#', '4');
        java.lang.Boolean boolean80 = equalsBuilder79.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder79.append((int) (byte) -1, 100);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertEquals("'" + boolean80 + "' != '" + false + "'", boolean80, false);
        org.junit.Assert.assertNotNull(equalsBuilder83);
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder6.append((-1L), 100L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder9.append((int) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder9.append((short) (byte) 0, (short) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder15.append((short) (byte) -1, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder15.append((long) (byte) 10, (long) 0);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(equalsBuilder21);
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append((long) (byte) 100, 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder7.append((short) (byte) 10, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder7.append('#', '4');
        java.lang.Boolean boolean14 = equalsBuilder7.build();
        boolean boolean16 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder3, (java.lang.Object) equalsBuilder7, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray20 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray21 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder17.append(shortArray20, shortArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray26 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray27 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder23.append(shortArray26, shortArray27);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean37 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder28, (java.lang.Object) '#', strArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder28.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray44 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray45 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder41.append(shortArray44, shortArray45);
        byte[] byteArray47 = new byte[] {};
        byte[] byteArray52 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder41.append(byteArray47, byteArray52);
        char[] charArray58 = new char[] { '#', ' ', '#', '#' };
        char[] charArray61 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder41.append(charArray58, charArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray66 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray67 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder63.append(shortArray66, shortArray67);
        byte[] byteArray69 = new byte[] {};
        byte[] byteArray74 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder63.append(byteArray69, byteArray74);
        char[] charArray80 = new char[] { '#', ' ', '#', '#' };
        char[] charArray83 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder63.append(charArray80, charArray83);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder28.append(charArray61, charArray80);
        java.lang.String[] strArray86 = null;
        boolean boolean87 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray21, (java.lang.Object) equalsBuilder28, strArray86);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder28.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder28.append((byte) 10, (byte) -1);
        equalsBuilder28.reset();
        java.lang.Boolean boolean95 = equalsBuilder28.build();
        boolean boolean97 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) false, (java.lang.Object) equalsBuilder28, true);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray67), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[]");
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertEquals("'" + boolean95 + "' != '" + true + "'", boolean95, true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder62.append(100, (int) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder62.append((short) 10, (short) -1);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder62.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder62.append((float) (short) -1, (float) (short) 100);
        java.lang.Class<?> wildcardClass76 = equalsBuilder75.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((byte) 1, (byte) 0);
        boolean boolean36 = equalsBuilder35.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder35.append((long) (short) 10, 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder35.append(' ', 'a');
        java.lang.Class<?> wildcardClass43 = equalsBuilder35.getClass();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder0.appendSuper(false);
        boolean boolean8 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder10.append(0.0f, (float) 'a');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(equalsBuilder13);
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray12 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray16 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray17 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder13.append(shortArray16, shortArray17);
        byte[] byteArray19 = new byte[] {};
        byte[] byteArray24 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder13.append(byteArray19, byteArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder6.append(byteArray12, byteArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray31 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray32 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder28.append(shortArray31, shortArray32);
        byte[] byteArray34 = new byte[] {};
        byte[] byteArray39 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder28.append(byteArray34, byteArray39);
        boolean boolean41 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder0.append(byteArray12, byteArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder0.append(100.0f, 100.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder45.append((int) (byte) -1, (int) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder48.append('#', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder48.append((long) (short) -1, (long) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder54.append((double) 100L, 10.0d);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(equalsBuilder57);
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((byte) 1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder35.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder37.append('a', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder40.append((float) 0, (float) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.appendSuper(true);
        boolean boolean46 = equalsBuilder45.isEquals();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray6 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray10 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray11 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder7.append(shortArray10, shortArray11);
        byte[] byteArray13 = new byte[] {};
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder7.append(byteArray13, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder0.append(byteArray6, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder22.append(true, false);
        byte[] byteArray27 = new byte[] { (byte) 0 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray31 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray32 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder28.append(shortArray31, shortArray32);
        byte[] byteArray34 = new byte[] {};
        byte[] byteArray39 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder28.append(byteArray34, byteArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder40.append((byte) 10, (byte) 0);
        boolean boolean44 = equalsBuilder43.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray48 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray49 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder45.append(shortArray48, shortArray49);
        byte[] byteArray51 = new byte[] {};
        byte[] byteArray56 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder45.append(byteArray51, byteArray56);
        byte[] byteArray58 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder43.append(byteArray56, byteArray58);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder25.append(byteArray27, byteArray58);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder25.append(' ', ' ');
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0]");
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(equalsBuilder63);
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder62.append((short) 10, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder69.append((float) (short) 100, 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder69.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder69.append(' ', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder77.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder77.append((short) (byte) 1, (short) (byte) 100);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder62.append((short) 10, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder69.append((float) (short) 100, 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder72.append((double) (byte) 10, (double) 1.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder75.append((long) (byte) -1, 10L);
        equalsBuilder78.reset();
        java.lang.Boolean boolean80 = equalsBuilder78.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder78.append(false, true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertEquals("'" + boolean80 + "' != '" + true + "'", boolean80, true);
        org.junit.Assert.assertNotNull(equalsBuilder83);
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder46.append(byteArray52, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder46.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder39.append((java.lang.Object) equalsBuilder45, (java.lang.Object) equalsBuilder46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder69.append('4', ' ');
        equalsBuilder72.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        java.lang.Object obj7 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray18 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray19 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder15.append(shortArray18, shortArray19);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(byteArray21, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder8.append(byteArray14, byteArray26);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj7, (java.lang.Object) byteArray26, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray41 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray42 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder38.append(shortArray41, shortArray42);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder38.append(byteArray44, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder31.append(byteArray37, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(byteArray26, byteArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder52.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder52.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder52.append((float) (byte) 10, (float) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder60.append((short) 100, (short) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder60.append(10, (int) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder66.append((double) 0.0f, (double) 100L);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder6.append((byte) 10, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder9.appendSuper(false);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(equalsBuilder11);
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        float[] floatArray18 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray21 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append(floatArray18, floatArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder12.append(true, true);
        byte[] byteArray29 = new byte[] { (byte) 100, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray33 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray34 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder30.append(shortArray33, shortArray34);
        byte[] byteArray36 = new byte[] {};
        byte[] byteArray41 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder30.append(byteArray36, byteArray41);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder25.append(byteArray29, byteArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder43.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder43.append('#', '#');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100, 10, 1]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder0.append((short) (byte) 0, (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder36.append((double) (-1), (double) (-1));
        java.lang.Class<?> wildcardClass40 = equalsBuilder39.getClass();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder46.append(byteArray52, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder46.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder39.append((java.lang.Object) equalsBuilder45, (java.lang.Object) equalsBuilder46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder46.append((byte) 0, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder46.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder46.append((short) (byte) 1, (short) 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        long[] longArray9 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray11 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(longArray9, longArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder0.append((-1), (int) (byte) 1);
        java.lang.Boolean boolean18 = equalsBuilder0.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append((int) '4', (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder0.append((short) 1, (short) 10);
        java.lang.Boolean boolean25 = equalsBuilder24.build();
        equalsBuilder24.reset();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertEquals("'" + boolean25 + "' != '" + false + "'", boolean25, false);
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 100.0f, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder5.append((short) 0, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder20.append((long) (short) -1, (long) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder23.append((byte) 10, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder23.append((float) 10L, 0.0f);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(equalsBuilder29);
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        java.lang.Object obj0 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder2 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray8 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray12 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray13 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder9.append(shortArray12, shortArray13);
        byte[] byteArray15 = new byte[] {};
        byte[] byteArray20 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder9.append(byteArray15, byteArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder2.append(byteArray8, byteArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder22.append((byte) 10, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray31 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray32 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder28.append(shortArray31, shortArray32);
        byte[] byteArray34 = new byte[] {};
        byte[] byteArray39 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder28.append(byteArray34, byteArray39);
        float[] floatArray46 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray49 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder40.append(floatArray46, floatArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder40.append((float) 0L, 10.0f);
        boolean boolean55 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) 100, (java.lang.Object) equalsBuilder53, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray59 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray60 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder56.append(shortArray59, shortArray60);
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean70 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder61, (java.lang.Object) '#', strArray69);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder71.append(false, false);
        java.lang.Boolean boolean75 = equalsBuilder74.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder74.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder74.append(false, false);
        boolean boolean85 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) strArray69, (java.lang.Object) false, true);
        boolean boolean86 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) "hi!", (java.lang.Object) (byte) 100, strArray69);
        boolean boolean87 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) 10.0f, (java.lang.Object) equalsBuilder25, strArray69);
        boolean boolean89 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj0, (java.lang.Object) boolean87, true);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray46), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertEquals("'" + boolean75 + "' != '" + true + "'", boolean75, true);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        java.lang.Boolean boolean18 = equalsBuilder5.build();
        java.lang.Boolean boolean19 = equalsBuilder5.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder5.append((short) 0, (short) (byte) -1);
        boolean boolean23 = equalsBuilder5.isEquals();
        java.lang.Class<?> wildcardClass24 = equalsBuilder5.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertEquals("'" + boolean19 + "' != '" + false + "'", boolean19, false);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 100.0f, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder5.append((short) 0, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder20.append(0.0d, (double) 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder23.append(10, (int) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder26.append((long) (short) 10, (long) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder26.append((long) (short) 1, (long) ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder26.append(false, false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertNotNull(equalsBuilder35);
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 100, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder3.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder3.append((short) 10, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder3.append((double) 1, 0.0d);
        boolean boolean17 = equalsBuilder3.isEquals();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((double) (short) -1, (double) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder35.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder37.append((double) 0, (double) 1.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder37.append((double) 100.0f, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder43.append((long) '#', 0L);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder46);
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        java.lang.Boolean boolean33 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder31.append((byte) 0, (byte) 0);
        java.lang.Class<?> wildcardClass37 = equalsBuilder31.getClass();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertEquals("'" + boolean33 + "' != '" + false + "'", boolean33, false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((byte) 1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder35.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder35.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder39.append('a', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder39.append('4', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder45.append((float) (byte) 0, (float) (short) 1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder42.append((float) (byte) 1, 100.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder42.append((double) (byte) 0, (double) 10);
        boolean boolean49 = equalsBuilder48.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder48.append((short) 100, (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder48.append((short) (byte) 10, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder55.appendSuper(true);
        boolean boolean58 = equalsBuilder55.isEquals();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        java.lang.Object obj0 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray4 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray5 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder1.append(shortArray4, shortArray5);
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean15 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder6, (java.lang.Object) '#', strArray14);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder6.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        byte[] byteArray25 = new byte[] {};
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder19.append(byteArray25, byteArray30);
        char[] charArray36 = new char[] { '#', ' ', '#', '#' };
        char[] charArray39 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder19.append(charArray36, charArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray44 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray45 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder41.append(shortArray44, shortArray45);
        byte[] byteArray47 = new byte[] {};
        byte[] byteArray52 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder41.append(byteArray47, byteArray52);
        char[] charArray58 = new char[] { '#', ' ', '#', '#' };
        char[] charArray61 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder41.append(charArray58, charArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder6.append(charArray39, charArray58);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder6.appendSuper(false);
        int[] intArray69 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray74 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder65.append(intArray69, intArray74);
        equalsBuilder75.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder75.append((int) (byte) -1, (int) (short) 0);
        java.lang.Boolean boolean80 = equalsBuilder79.build();
        short[] shortArray83 = new short[] { (short) -1, (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray87 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray88 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder84.append(shortArray87, shortArray88);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder79.append(shortArray83, shortArray87);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder90.append('#', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder93.appendSuper(true);
        equalsBuilder93.reset();
        java.util.Collection<java.lang.String> strCollection97 = null;
        boolean boolean98 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj0, (java.lang.Object) equalsBuilder93, strCollection97);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertEquals("'" + boolean80 + "' != '" + false + "'", boolean80, false);
        org.junit.Assert.assertNotNull(shortArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray83), "[-1, 10]");
        org.junit.Assert.assertNotNull(shortArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray87), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray88), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray12 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray16 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray17 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder13.append(shortArray16, shortArray17);
        byte[] byteArray19 = new byte[] {};
        byte[] byteArray24 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder13.append(byteArray19, byteArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder6.append(byteArray12, byteArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray31 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray32 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder28.append(shortArray31, shortArray32);
        byte[] byteArray34 = new byte[] {};
        byte[] byteArray39 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder28.append(byteArray34, byteArray39);
        boolean boolean41 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder0.append(byteArray12, byteArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder42.append(false, true);
        java.lang.Class<?> wildcardClass46 = equalsBuilder45.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder46.append(byteArray52, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder46.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder39.append((java.lang.Object) equalsBuilder45, (java.lang.Object) equalsBuilder46);
        long[] longArray73 = new long[] { (byte) 100, ' ', (short) 10 };
        long[] longArray79 = new long[] { 'a', 0L, (short) 10, (byte) 0, (byte) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder46.append(longArray73, longArray79);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder83.append(0, (int) (short) 0);
        boolean boolean87 = equalsBuilder83.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder83.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder90.append((byte) 1, (byte) -1);
        java.lang.Boolean boolean94 = equalsBuilder90.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[100, 32, 10]");
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[97, 0, 10, 0, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertEquals("'" + boolean94 + "' != '" + false + "'", boolean94, false);
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        java.lang.Object obj7 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray18 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray19 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder15.append(shortArray18, shortArray19);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(byteArray21, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder8.append(byteArray14, byteArray26);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj7, (java.lang.Object) byteArray26, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray41 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray42 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder38.append(shortArray41, shortArray42);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder38.append(byteArray44, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder31.append(byteArray37, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(byteArray26, byteArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray69 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray70 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder66.append(shortArray69, shortArray70);
        byte[] byteArray72 = new byte[] {};
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder66.append(byteArray72, byteArray77);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder0.append(byteArray59, byteArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder0.append(0, (int) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder0.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder0.append((short) 100, (short) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder90.append(10.0d, (double) (-1.0f));
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        java.lang.Boolean boolean79 = equalsBuilder78.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder78.appendSuper(false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertEquals("'" + boolean79 + "' != '" + false + "'", boolean79, false);
        org.junit.Assert.assertNotNull(equalsBuilder81);
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        java.lang.Object obj0 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray4 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray5 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder1.append(shortArray4, shortArray5);
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean15 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder6, (java.lang.Object) '#', strArray14);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder6.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        byte[] byteArray25 = new byte[] {};
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder19.append(byteArray25, byteArray30);
        char[] charArray36 = new char[] { '#', ' ', '#', '#' };
        char[] charArray39 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder19.append(charArray36, charArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray44 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray45 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder41.append(shortArray44, shortArray45);
        byte[] byteArray47 = new byte[] {};
        byte[] byteArray52 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder41.append(byteArray47, byteArray52);
        char[] charArray58 = new char[] { '#', ' ', '#', '#' };
        char[] charArray61 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder41.append(charArray58, charArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder6.append(charArray39, charArray58);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder63.append((float) 10, (float) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder66.append((float) 0, (float) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder69.appendSuper(true);
        boolean boolean72 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj0, (java.lang.Object) true);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append((double) '4', (double) 0);
        equalsBuilder17.reset();
        equalsBuilder17.reset();
        boolean boolean45 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder17.appendSuper(true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(equalsBuilder47);
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        java.lang.Boolean boolean79 = equalsBuilder78.build();
        short[] shortArray82 = new short[] { (short) -1, (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray86 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray87 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder83.append(shortArray86, shortArray87);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder78.append(shortArray82, shortArray86);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder89.append(0, 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertEquals("'" + boolean79 + "' != '" + false + "'", boolean79, false);
        org.junit.Assert.assertNotNull(shortArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray82), "[-1, 10]");
        org.junit.Assert.assertNotNull(shortArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray86), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray87), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        long[] longArray9 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray11 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(longArray9, longArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder0.appendSuper(false);
        java.lang.Boolean boolean17 = equalsBuilder0.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder0.append((long) (short) 10, (long) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder21.append((-1), (int) (short) 10);
        java.lang.Object obj28 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray35 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray39 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray40 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder36.append(shortArray39, shortArray40);
        byte[] byteArray42 = new byte[] {};
        byte[] byteArray47 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder36.append(byteArray42, byteArray47);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder29.append(byteArray35, byteArray47);
        boolean boolean51 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj28, (java.lang.Object) byteArray47, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray58 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray62 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray63 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder59.append(shortArray62, shortArray63);
        byte[] byteArray65 = new byte[] {};
        byte[] byteArray70 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder59.append(byteArray65, byteArray70);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder52.append(byteArray58, byteArray70);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder21.append(byteArray47, byteArray58);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray80 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray84 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray85 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder81.append(shortArray84, shortArray85);
        byte[] byteArray87 = new byte[] {};
        byte[] byteArray92 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder81.append(byteArray87, byteArray92);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder74.append(byteArray80, byteArray92);
        java.lang.Object obj95 = null;
        boolean boolean96 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) byteArray80, obj95);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder97 = equalsBuilder20.append(byteArray47, byteArray80);
        java.lang.Class<?> wildcardClass98 = equalsBuilder97.getClass();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + false + "'", boolean17, false);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray62), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray63), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray84), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray85), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(byteArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray87), "[]");
        org.junit.Assert.assertNotNull(byteArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray92), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder94);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(equalsBuilder97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        boolean boolean16 = equalsBuilder15.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray20 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray21 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder17.append(shortArray20, shortArray21);
        byte[] byteArray23 = new byte[] {};
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(byteArray23, byteArray28);
        byte[] byteArray30 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder15.append(byteArray28, byteArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) (byte) 1, (double) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder31.append((byte) 100, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder31.append((float) (short) 10, (-1.0f));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder31.append((float) 10L, (float) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder43.append('a', '#');
        long[] longArray47 = null;
        long[] longArray50 = new long[] { (short) 10, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder43.append(longArray47, longArray50);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[10, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder21.append((int) (byte) 1, (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((int) (byte) 1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder30.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder33.append((byte) 100, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder33.append((float) (byte) -1, (float) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder39.append((int) (byte) 100, 0);
        boolean boolean43 = equalsBuilder42.isEquals();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 100.0f, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder5.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder19.append((double) 0L, (double) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder19.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder19.append((double) 100.0f, (double) 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder28);
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        java.lang.Boolean boolean40 = equalsBuilder39.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertEquals("'" + boolean40 + "' != '" + false + "'", boolean40, false);
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray9 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray10 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder6.append(shortArray9, shortArray10);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean20 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder11, (java.lang.Object) '#', strArray19);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder11.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray27 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray28 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder24.append(shortArray27, shortArray28);
        byte[] byteArray30 = new byte[] {};
        byte[] byteArray35 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append(byteArray30, byteArray35);
        char[] charArray41 = new char[] { '#', ' ', '#', '#' };
        char[] charArray44 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder24.append(charArray41, charArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray49 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray50 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder46.append(shortArray49, shortArray50);
        byte[] byteArray52 = new byte[] {};
        byte[] byteArray57 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder46.append(byteArray52, byteArray57);
        char[] charArray63 = new char[] { '#', ' ', '#', '#' };
        char[] charArray66 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder46.append(charArray63, charArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder11.append(charArray44, charArray63);
        java.lang.String[] strArray69 = null;
        boolean boolean70 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray4, (java.lang.Object) equalsBuilder11, strArray69);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder11.append(false, false);
        boolean[] booleanArray77 = new boolean[] { false, false, false };
        boolean[] booleanArray78 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder11.append(booleanArray77, booleanArray78);
        java.lang.Boolean boolean80 = equalsBuilder79.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder79.append('#', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder83.appendSuper(true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray77), "[false, false, false]");
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertEquals("'" + boolean80 + "' != '" + false + "'", boolean80, false);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder85);
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        java.lang.Object obj0 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray4 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray5 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder1.append(shortArray4, shortArray5);
        byte[] byteArray7 = new byte[] {};
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder1.append(byteArray7, byteArray12);
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        boolean boolean18 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj0, (java.lang.Object) equalsBuilder13, (java.util.Collection<java.lang.String>) strList16);
        boolean boolean19 = equalsBuilder13.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder13.append((float) (byte) 1, (float) 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder13.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append((int) 'a', (int) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder24.append(0, (int) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder30.append((long) '4', (long) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder30.append((float) 10L, 1.0f);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder36);
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder77.append(10.0d, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder77.append((float) (byte) 10, (float) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder77.append((byte) 0, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder77.append(1.0f, (float) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder89.append((short) (byte) 0, (short) 100);
        java.lang.Boolean boolean93 = equalsBuilder92.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder92.append((float) (byte) 0, (float) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder99 = equalsBuilder96.append((long) (byte) 100, (long) 100);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertEquals("'" + boolean93 + "' != '" + false + "'", boolean93, false);
        org.junit.Assert.assertNotNull(equalsBuilder96);
        org.junit.Assert.assertNotNull(equalsBuilder99);
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        float[] floatArray65 = null;
        float[] floatArray66 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder64.append(floatArray65, floatArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder64.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder72.append((short) (byte) 10, (short) 0);
        equalsBuilder72.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder72.append((double) 'a', (double) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder70.append((java.lang.Object) (short) 0, (java.lang.Object) equalsBuilder79);
        short[] shortArray81 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray85 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray86 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder82.append(shortArray85, shortArray86);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder80.append(shortArray81, shortArray86);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder88.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder90.append((short) (byte) 10, (short) (byte) -1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(shortArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray85), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray86), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append((long) (byte) 100, 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.append((double) 10, (double) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder3.append((long) '#', 100L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder3.append((byte) 100, (byte) 100);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        java.lang.Object obj7 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray18 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray19 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder15.append(shortArray18, shortArray19);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(byteArray21, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder8.append(byteArray14, byteArray26);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj7, (java.lang.Object) byteArray26, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray41 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray42 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder38.append(shortArray41, shortArray42);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder38.append(byteArray44, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder31.append(byteArray37, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(byteArray26, byteArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder52.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder52.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder52.append((-1L), (long) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder52.append((byte) 100, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder52.append(true, true);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(equalsBuilder66);
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder46.append(byteArray52, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder46.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder39.append((java.lang.Object) equalsBuilder45, (java.lang.Object) equalsBuilder46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder45.append((float) (short) 0, 100.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder45.append((float) 100L, (-1.0f));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder45.append('#', '#');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
    }
}

