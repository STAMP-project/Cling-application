import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        double[] doubleArray2 = new double[] { 10, 'a' };
        // The following exception was thrown during execution in test generation
        try {
            double double5 = org.apache.commons.math.stat.StatUtils.variance(doubleArray2, (int) (byte) 1, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 97.0]");
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double3 = org.apache.commons.math.stat.StatUtils.min(doubleArray0, (int) 'a', (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            double double10 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (int) (short) 10, (int) (byte) -1, (double) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            double double9 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 0, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            double double9 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, (int) (byte) 10, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double1 = org.apache.commons.math.stat.StatUtils.max(doubleArray0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double18 = org.apache.commons.math.stat.StatUtils.min(doubleArray3, (int) '#', (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        double[] doubleArray0 = new double[] {};
        double[] doubleArray5 = new double[] { 101.0d, '4', 4.641588833612779d, (-1L) };
        // The following exception was thrown during execution in test generation
        try {
            double double6 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray0, doubleArray5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Input arrays must have the same (positive) length.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray0), "[]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[101.0, 52.0, 4.641588833612779, -1.0]");
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double19 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, 10, (int) ' ', (double) 10.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        java.lang.Class<?> wildcardClass5 = doubleArray3.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double10 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3, 10, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double18 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11, 0, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double11 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, 0, (int) ' ', (double) 100L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 10, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray9 = new double[] { 0.0d };
        // The following exception was thrown during execution in test generation
        try {
            double double10 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Input arrays must have the same (positive) length.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0]");
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double18 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3, (int) (short) 10, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double10 = org.apache.commons.math.stat.StatUtils.min(doubleArray3, 10, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double18 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double8 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, (int) (byte) 100, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double9 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) ' ', 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double4 = org.apache.commons.math.stat.StatUtils.variance(doubleArray0, (double) (byte) 1, 0, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        // The following exception was thrown during execution in test generation
        try {
            double double11 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: invalid quantile value: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double8 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 21.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double11 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) -1, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 37.0d + "'", double8 == 37.0d);
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double8 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 21.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double11 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3, 0, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 37.0d + "'", double8 == 37.0d);
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 10, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 21.0d + "'", double7 == 21.0d);
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, 1, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double10 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (int) (short) 100, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double7 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3, (int) (byte) 10, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double1 = org.apache.commons.math.stat.StatUtils.sum(doubleArray0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double10 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3, (int) (short) 100, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        java.lang.Class<?> wildcardClass7 = doubleArray3.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double10 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, 10, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double8 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 21.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double12 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10, (int) (byte) 100, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 37.0d + "'", double8 == 37.0d);
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double10 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 100, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double10 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3, (int) '#', 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) ' ', (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double3 = org.apache.commons.math.stat.StatUtils.variance(doubleArray0, (int) '#', (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double10 = org.apache.commons.math.stat.StatUtils.product(doubleArray3, (int) ' ', (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        // The following exception was thrown during execution in test generation
        try {
            double double20 = org.apache.commons.math.stat.StatUtils.sum(doubleArray10, 10, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3, (int) (byte) 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            double double12 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, (int) ' ', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double10 = org.apache.commons.math.stat.StatUtils.min(doubleArray3, (int) (short) 100, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3, (int) (byte) 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            double double12 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3, (int) (byte) 10, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) 10);
        double double18 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double21 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3, (int) (short) 100, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 37.0d + "'", double17 == 37.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double8 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 21.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double12 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 3.0d, (int) ' ', 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 37.0d + "'", double8 == 37.0d);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        // The following exception was thrown during execution in test generation
        try {
            double double20 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, 1, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        // The following exception was thrown during execution in test generation
        try {
            double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3, 100, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        // The following exception was thrown during execution in test generation
        try {
            double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3, (-1), (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double19 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) '4', (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double10 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, (int) (short) 10, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        // The following exception was thrown during execution in test generation
        try {
            double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10, (int) '4', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double19 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, (int) (short) 1, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3, (int) '4', (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 9.0d + "'", double16 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 1);
        // The following exception was thrown during execution in test generation
        try {
            double double13 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 0.0f, (int) (short) 0, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) 10);
        double double18 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double22 = org.apache.commons.math.stat.StatUtils.min(doubleArray11, (int) (short) 0, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 37.0d + "'", double17 == 37.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 101.0d + "'", double19 == 101.0d);
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double11 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) ' ', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 21.0d + "'", double7 == 21.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        // The following exception was thrown during execution in test generation
        try {
            double double21 = org.apache.commons.math.stat.StatUtils.sum(doubleArray10, (int) (short) 10, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 3.0d + "'", double18 == 3.0d);
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        // The following exception was thrown during execution in test generation
        try {
            double double17 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10, (int) (byte) 10, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 27.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double9 = org.apache.commons.math.stat.StatUtils.min(doubleArray3, (int) (byte) -1, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 27.0d + "'", double6 == 27.0d);
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        java.lang.Class<?> wildcardClass8 = doubleArray3.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) 10);
        double double18 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 100, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 37.0d + "'", double17 == 37.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 101.0d + "'", double19 == 101.0d);
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 27.0d);
        double double16 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) (byte) 10);
        double double17 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11, 1, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 27.0d + "'", double14 == 27.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 27.0d + "'", double16 == 27.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        double[] doubleArray6 = new double[] { (byte) 10, (byte) 0, (short) 1, (-1L), 1, (short) 100 };
        // The following exception was thrown during execution in test generation
        try {
            double double9 = org.apache.commons.math.stat.StatUtils.mean(doubleArray6, (int) (short) -1, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[10.0, 0.0, 1.0, -1.0, 1.0, 100.0]");
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 27.0d);
        double double16 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) (byte) 10);
        double double17 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double20 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (int) (short) 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            double double23 = org.apache.commons.math.stat.StatUtils.min(doubleArray3, (int) (byte) 10, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 27.0d + "'", double14 == 27.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 27.0d + "'", double16 == 27.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        // The following exception was thrown during execution in test generation
        try {
            double double26 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray18, 0, (int) (byte) 100, (double) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 27.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double9 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, (int) '4', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 27.0d + "'", double6 == 27.0d);
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        // The following exception was thrown during execution in test generation
        try {
            double double24 = org.apache.commons.math.stat.StatUtils.product(doubleArray18, (int) '#', 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, (int) '4', (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double10 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3, 10, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 21.0d + "'", double7 == 21.0d);
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double19 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, (int) (short) 1, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            double double22 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, (int) (short) 0, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 9.0d + "'", double16 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double18 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray13);
        // The following exception was thrown during execution in test generation
        try {
            double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13, 0.0d, 0, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.641588833612779d + "'", double15 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.605170185988092d + "'", double16 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 27.0d + "'", double17 == 27.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-4.0d) + "'", double18 == (-4.0d));
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        java.lang.Class<?> wildcardClass10 = doubleArray3.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 4.641588833612779d + "'", double8 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 4.605170185988092d + "'", double9 == 4.605170185988092d);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (double) 100.0f);
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, 27.0d);
        double double24 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) (byte) 10);
        double double25 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, (double) (short) 1);
        double double28 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double31 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, (int) (short) 10, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 27.0d + "'", double22 == 27.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 27.0d + "'", double24 == 27.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 27.0d + "'", double28 == 27.0d);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double10 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3, 1, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3, 0, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        // The following exception was thrown during execution in test generation
        try {
            double double12 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (int) (byte) -1, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double8 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 21.0d);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        java.lang.Class<?> wildcardClass10 = doubleArray3.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 37.0d + "'", double8 == 37.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double19 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, (int) (short) 1, (int) (short) 0);
        double double20 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 10.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double25 = org.apache.commons.math.stat.StatUtils.product(doubleArray3, (int) (byte) 10, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 9.0d + "'", double16 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.0d) + "'", double20 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 37.0d + "'", double22 == 37.0d);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        double[] doubleArray5 = new double[] { '#', 10.0f, 'a', 12.0d, 37.0d };
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray5);
        // The following exception was thrown during execution in test generation
        try {
            double double9 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray5, (int) (byte) 10, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[35.0, 10.0, 97.0, 12.0, 37.0]");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 191.0d + "'", double6 == 191.0d);
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        double double28 = org.apache.commons.math.stat.StatUtils.max(doubleArray25, 0, 0);
        double double29 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray25);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        double double36 = org.apache.commons.math.stat.StatUtils.max(doubleArray33, 0, 0);
        double double37 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray33);
        double double39 = org.apache.commons.math.stat.StatUtils.variance(doubleArray33, (double) 10);
        double double40 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray25, doubleArray33);
        double double42 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray25, 100.0d);
        java.lang.Class<?> wildcardClass43 = doubleArray25.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 101.0d + "'", double29 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 101.0d + "'", double37 == 101.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 37.0d + "'", double39 == 37.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 127.0d + "'", double42 == 127.0d);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        // The following exception was thrown during execution in test generation
        try {
            double double25 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray18, (int) (byte) 0, 10, (double) 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 27.0d);
        double double16 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) (byte) 10);
        double double17 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double21 = org.apache.commons.math.stat.StatUtils.product(doubleArray11, (int) (byte) 1, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 27.0d + "'", double14 == 27.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 27.0d + "'", double16 == 27.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4.605170185988092d + "'", double18 == 4.605170185988092d);
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 1);
        // The following exception was thrown during execution in test generation
        try {
            double double12 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, (int) 'a', 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double1 = org.apache.commons.math.stat.StatUtils.min(doubleArray0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray27);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27);
        double double33 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray27);
        // The following exception was thrown during execution in test generation
        try {
            double double36 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27, (int) ' ', (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4.641588833612779d + "'", double29 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 27.0d);
        double double16 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) (byte) 10);
        double double17 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double[] doubleArray22 = new double[] { (-1L), 0, 10L };
        double double25 = org.apache.commons.math.stat.StatUtils.max(doubleArray22, 0, 0);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray22, 21.0d);
        double double28 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray22);
        // The following exception was thrown during execution in test generation
        try {
            double double31 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 27.0d + "'", double14 == 27.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 27.0d + "'", double16 == 27.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4.605170185988092d + "'", double18 == 4.605170185988092d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 37.0d + "'", double27 == 37.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 12.0d + "'", double28 == 12.0d);
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) 10);
        double double18 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double21 = org.apache.commons.math.stat.StatUtils.product(doubleArray11, (int) ' ', (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 37.0d + "'", double17 == 37.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) 10);
        double double18 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        java.lang.Class<?> wildcardClass20 = doubleArray3.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 37.0d + "'", double17 == 37.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 37.0d + "'", double19 == 37.0d);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double19 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, (int) (short) 1, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3, (int) (byte) 100, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 9.0d + "'", double16 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        double[] doubleArray18 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double19 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray10, doubleArray18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double3 = org.apache.commons.math.stat.StatUtils.max(doubleArray0, (int) (byte) 10, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray15 = new double[] { (-1L), 0, 10L };
        double double18 = org.apache.commons.math.stat.StatUtils.max(doubleArray15, 0, 0);
        double double19 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray15);
        double[] doubleArray23 = new double[] { (-1L), 0, 10L };
        double double26 = org.apache.commons.math.stat.StatUtils.max(doubleArray23, 0, 0);
        double double27 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray23);
        double double29 = org.apache.commons.math.stat.StatUtils.variance(doubleArray23, (double) 10);
        double double30 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray15, doubleArray23);
        double double31 = org.apache.commons.math.stat.StatUtils.variance(doubleArray15);
        double double32 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray15);
        // The following exception was thrown during execution in test generation
        try {
            double double35 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray15, (int) ' ', (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 101.0d + "'", double19 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 101.0d + "'", double27 == 101.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 37.0d + "'", double29 == 37.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 37.0d + "'", double31 == 37.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4.0d + "'", double32 == 4.0d);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double18 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray13);
        // The following exception was thrown during execution in test generation
        try {
            double double21 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, (int) ' ', (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.641588833612779d + "'", double15 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.605170185988092d + "'", double16 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 27.0d + "'", double17 == 27.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-4.0d) + "'", double18 == (-4.0d));
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        // The following exception was thrown during execution in test generation
        try {
            double double9 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, 100, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        // The following exception was thrown during execution in test generation
        try {
            double double21 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, (int) (short) 100, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 3.0d + "'", double18 == 3.0d);
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double8 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 21.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double11 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 100, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 37.0d + "'", double8 == 37.0d);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        // The following exception was thrown during execution in test generation
        try {
            double double26 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray18, (int) (short) -1, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.641588833612779d + "'", double23 == 4.641588833612779d);
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double2 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray0, (-4.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double10 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (int) (byte) 100, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 4.641588833612779d + "'", double7 == 4.641588833612779d);
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double19 = org.apache.commons.math.stat.StatUtils.max(doubleArray10);
        double double20 = org.apache.commons.math.stat.StatUtils.sum(doubleArray10);
        // The following exception was thrown during execution in test generation
        try {
            double double23 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10, 10, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 3.0d + "'", double18 == 3.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 9.0d + "'", double20 == 9.0d);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 27.0d);
        double double16 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) (byte) 10);
        double double17 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double20 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (int) (short) 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            double double22 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: invalid quantile value: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 27.0d + "'", double14 == 27.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 27.0d + "'", double16 == 27.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double18 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray13);
        // The following exception was thrown during execution in test generation
        try {
            double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3, (int) (byte) 100, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.641588833612779d + "'", double15 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.605170185988092d + "'", double16 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 27.0d + "'", double17 == 27.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-4.0d) + "'", double18 == (-4.0d));
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3, (int) (short) 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            double double16 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (int) '#', 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double20 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (int) (short) -1, 0, (double) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 9.0d + "'", double16 == 9.0d);
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3, 10, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double double15 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double19 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (int) (byte) -1, 1, (double) 10.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 100.0d + "'", double15 == 100.0d);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double11 = org.apache.commons.math.stat.StatUtils.min(doubleArray3, (int) (short) -1, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 100.0d + "'", double8 == 100.0d);
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        double double28 = org.apache.commons.math.stat.StatUtils.max(doubleArray25, 0, 0);
        double double29 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray25);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        double double36 = org.apache.commons.math.stat.StatUtils.max(doubleArray33, 0, 0);
        double double37 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray33);
        double double39 = org.apache.commons.math.stat.StatUtils.variance(doubleArray33, (double) 10);
        double double40 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray25, doubleArray33);
        double double42 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray25, 100.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double45 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3, (int) (short) 0, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 101.0d + "'", double29 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 101.0d + "'", double37 == 101.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 37.0d + "'", double39 == 37.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 127.0d + "'", double42 == 127.0d);
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double double11 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double12 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double13 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double16 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3, (int) (byte) 0, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 21.0d + "'", double13 == 21.0d);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double8 = org.apache.commons.math.stat.StatUtils.product(doubleArray3, (int) '4', (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double18 = org.apache.commons.math.stat.StatUtils.product(doubleArray3, (int) (short) 1, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double1 = org.apache.commons.math.stat.StatUtils.mean(doubleArray0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        // The following exception was thrown during execution in test generation
        try {
            double double17 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3, (-1), (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray27);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27);
        double double33 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray27);
        // The following exception was thrown during execution in test generation
        try {
            double double36 = org.apache.commons.math.stat.StatUtils.min(doubleArray27, (int) ' ', (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4.641588833612779d + "'", double29 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double[] doubleArray19 = new double[] { (-1L), 0, 10L };
        double double22 = org.apache.commons.math.stat.StatUtils.max(doubleArray19, 0, 0);
        double double23 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray19);
        double double25 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) 10);
        double double26 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11);
        double double29 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, 3.0d);
        java.lang.Class<?> wildcardClass30 = doubleArray11.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 4.641588833612779d + "'", double7 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 101.0d + "'", double23 == 101.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 37.0d + "'", double25 == 37.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 37.0d + "'", double27 == 37.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 127.0d + "'", double29 == 127.0d);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double19 = org.apache.commons.math.stat.StatUtils.max(doubleArray10);
        double double20 = org.apache.commons.math.stat.StatUtils.sum(doubleArray10);
        double[] doubleArray24 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double25 = org.apache.commons.math.stat.StatUtils.mean(doubleArray24);
        double double26 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray24);
        double double27 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray24);
        double double28 = org.apache.commons.math.stat.StatUtils.max(doubleArray24);
        double double31 = org.apache.commons.math.stat.StatUtils.sum(doubleArray24, (int) (short) 1, 0);
        double double34 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray24, (int) (short) 0, (int) (byte) 0);
        double double36 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray10, doubleArray24, (double) '#');
        // The following exception was thrown during execution in test generation
        try {
            double double38 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray10, 1237.7d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: invalid quantile value: 1237.7");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 3.0d + "'", double18 == 3.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 9.0d + "'", double20 == 9.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 7.0d + "'", double25 == 7.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 4.641588833612779d + "'", double26 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 4.605170185988092d + "'", double27 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 127.0d + "'", double36 == 127.0d);
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) 10);
        double double18 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double22 = org.apache.commons.math.stat.StatUtils.min(doubleArray11, (int) (short) 1, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 37.0d + "'", double17 == 37.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 27.0d);
        double double16 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) (byte) 10);
        double double17 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double[] doubleArray22 = new double[] { (-1L), 0, 10L };
        double double25 = org.apache.commons.math.stat.StatUtils.max(doubleArray22, 0, 0);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray22, 21.0d);
        double double28 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray22);
        double double30 = org.apache.commons.math.stat.StatUtils.variance(doubleArray22, (-4.0d));
        // The following exception was thrown during execution in test generation
        try {
            double double33 = org.apache.commons.math.stat.StatUtils.product(doubleArray22, (int) (byte) 1, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 27.0d + "'", double14 == 27.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 27.0d + "'", double16 == 27.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4.605170185988092d + "'", double18 == 4.605170185988092d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 37.0d + "'", double27 == 37.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 12.0d + "'", double28 == 12.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 37.0d + "'", double30 == 37.0d);
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) 10);
        double double18 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11, (int) (short) 100, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 37.0d + "'", double17 == 37.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 101.0d + "'", double19 == 101.0d);
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (double) 100.0f);
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, 27.0d);
        double double24 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) (byte) 10);
        double double25 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, (double) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            double double31 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, 100, (int) (short) -1, (-4.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 27.0d + "'", double22 == 27.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 27.0d + "'", double24 == 27.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 27.0d);
        double double16 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) (byte) 10);
        double double17 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double[] doubleArray22 = new double[] { (-1L), 0, 10L };
        double double25 = org.apache.commons.math.stat.StatUtils.max(doubleArray22, 0, 0);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray22, 21.0d);
        double double28 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray22);
        double double30 = org.apache.commons.math.stat.StatUtils.variance(doubleArray22, (-4.0d));
        // The following exception was thrown during execution in test generation
        try {
            double double33 = org.apache.commons.math.stat.StatUtils.variance(doubleArray22, (int) (byte) 10, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 27.0d + "'", double14 == 27.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 27.0d + "'", double16 == 27.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4.605170185988092d + "'", double18 == 4.605170185988092d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 37.0d + "'", double27 == 37.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 12.0d + "'", double28 == 12.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 37.0d + "'", double30 == 37.0d);
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double19 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, (int) (short) 1, (int) (short) 0);
        double double20 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double23 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 1, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 9.0d + "'", double16 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.0d) + "'", double20 == (-0.0d));
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double4 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray0, (-1), (-1), (double) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11, (int) (byte) 1, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            double double21 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, (int) (byte) 10, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double20 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, (int) (short) 0, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double1 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double3 = org.apache.commons.math.stat.StatUtils.max(doubleArray0, (int) (byte) -1, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sum(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray11, doubleArray19);
        double double24 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double27 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11, (int) (short) 1, (int) (short) 0);
        double double28 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double30 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            double double33 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (int) '#', (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 21.0d + "'", double22 == 21.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-4.0d) + "'", double23 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 9.0d + "'", double24 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 12.0d + "'", double28 == 12.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 37.0d + "'", double30 == 37.0d);
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double3 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray0, (int) '4', (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double double15 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3, (int) (byte) 100, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 100.0d + "'", double15 == 100.0d);
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 27.0d);
        double double16 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) (byte) 10);
        double double17 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double20 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (int) (byte) 0, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 27.0d + "'", double14 == 27.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 27.0d + "'", double16 == 27.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) 10);
        double double18 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double22 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11, 0, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            double double26 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) (byte) 1, (int) (short) 0, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 37.0d + "'", double17 == 37.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 101.0d + "'", double19 == 101.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3, (int) (byte) 0, 0);
        double double10 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double13 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double11 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, (int) (short) 10, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double8 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 21.0d);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3, (int) (byte) -1, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 37.0d + "'", double8 == 37.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double19 = org.apache.commons.math.stat.StatUtils.max(doubleArray10);
        java.lang.Class<?> wildcardClass20 = doubleArray10.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 3.0d + "'", double18 == 3.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) 10);
        double double18 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double22 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11, 0, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            double double25 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11, (-1), 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 37.0d + "'", double17 == 37.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 101.0d + "'", double19 == 101.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) 10);
        double double18 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double20 = org.apache.commons.math.stat.StatUtils.product(doubleArray11);
        java.lang.Class<?> wildcardClass21 = doubleArray11.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 37.0d + "'", double17 == 37.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 101.0d + "'", double19 == 101.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.0d) + "'", double20 == (-0.0d));
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double4 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray0, (int) (byte) -1, (int) ' ', (double) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double1 = org.apache.commons.math.stat.StatUtils.product(doubleArray0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray27);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27);
        double double33 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray27);
        // The following exception was thrown during execution in test generation
        try {
            double double36 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray27, (int) (short) -1, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4.641588833612779d + "'", double29 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double10 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (int) (byte) 0, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double10 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: invalid quantile value: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 21.0d + "'", double7 == 21.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 21.0d + "'", double8 == 21.0d);
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double9 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, 0, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        double[] doubleArray2 = new double[] { (byte) 10, 0.0d };
        double double4 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray2, 100.0d);
        double double5 = org.apache.commons.math.stat.StatUtils.variance(doubleArray2);
        // The following exception was thrown during execution in test generation
        try {
            double double8 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray2, (int) (short) 1, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 10.0d + "'", double4 == 10.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 50.0d + "'", double5 == 50.0d);
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double double10 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3, 100, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double13 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (int) 'a', (int) (short) 10, (double) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 4.641588833612779d + "'", double8 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 4.605170185988092d + "'", double9 == 4.605170185988092d);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double[] doubleArray19 = new double[] { (-1L), 0, 10L };
        double double22 = org.apache.commons.math.stat.StatUtils.max(doubleArray19, 0, 0);
        double double23 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray19);
        double double25 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) 10);
        double double26 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11);
        double double29 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, 3.0d);
        double double30 = org.apache.commons.math.stat.StatUtils.min(doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double33 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11, (int) (short) 0, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 4.641588833612779d + "'", double7 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 101.0d + "'", double23 == 101.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 37.0d + "'", double25 == 37.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 37.0d + "'", double27 == 37.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 127.0d + "'", double29 == 127.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-1.0d) + "'", double30 == (-1.0d));
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 27.0d);
        double double16 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) (byte) 10);
        double double17 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double[] doubleArray22 = new double[] { (-1L), 0, 10L };
        double double25 = org.apache.commons.math.stat.StatUtils.max(doubleArray22, 0, 0);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray22, 21.0d);
        double double28 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray22);
        double double30 = org.apache.commons.math.stat.StatUtils.variance(doubleArray22, (-4.0d));
        double[] doubleArray36 = new double[] { '#', 10.0f, 'a', 12.0d, 37.0d };
        double double37 = org.apache.commons.math.stat.StatUtils.sum(doubleArray36);
        double double38 = org.apache.commons.math.stat.StatUtils.min(doubleArray36);
        // The following exception was thrown during execution in test generation
        try {
            double double39 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray22, doubleArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Input arrays must have the same (positive) length.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 27.0d + "'", double14 == 27.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 27.0d + "'", double16 == 27.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4.605170185988092d + "'", double18 == 4.605170185988092d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 37.0d + "'", double27 == 37.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 12.0d + "'", double28 == 12.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 37.0d + "'", double30 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[35.0, 10.0, 97.0, 12.0, 37.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 191.0d + "'", double37 == 191.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 10.0d + "'", double38 == 10.0d);
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (double) 100.0f);
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, 27.0d);
        double double24 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) (byte) 10);
        double double25 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, (double) (short) 1);
        double double28 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double32 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (int) (byte) 100, 0, (double) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 27.0d + "'", double22 == 27.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 27.0d + "'", double24 == 27.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 100.0d + "'", double28 == 100.0d);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double8 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 21.0d);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double12 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3, (int) '#', 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 37.0d + "'", double8 == 37.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 27.0d);
        double double16 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) (byte) 10);
        double double17 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double[] doubleArray22 = new double[] { (-1L), 0, 10L };
        double double25 = org.apache.commons.math.stat.StatUtils.max(doubleArray22, 0, 0);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray22, 21.0d);
        double double28 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray22);
        double double30 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (double) 10.0f);
        // The following exception was thrown during execution in test generation
        try {
            double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11, (int) (byte) 1, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 27.0d + "'", double14 == 27.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 27.0d + "'", double16 == 27.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4.605170185988092d + "'", double18 == 4.605170185988092d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 37.0d + "'", double27 == 37.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 12.0d + "'", double28 == 12.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, 50.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double13 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (int) (short) 10, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1.0d) + "'", double8 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sum(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray11, doubleArray19);
        double double24 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double27 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11, (int) (short) 1, (int) (short) 0);
        double double28 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double30 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            double double33 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11, (int) '#', (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 21.0d + "'", double22 == 21.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-4.0d) + "'", double23 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 9.0d + "'", double24 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 12.0d + "'", double28 == 12.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 37.0d + "'", double30 == 37.0d);
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        java.lang.Class<?> wildcardClass8 = doubleArray3.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double24 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double[] doubleArray28 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double29 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        double double30 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray28);
        double double31 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray28);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray28);
        double double34 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28);
        double double37 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28, (int) (short) 1, 0);
        double double38 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray28);
        // The following exception was thrown during execution in test generation
        try {
            double double41 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray28, (int) '4', (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.641588833612779d + "'", double23 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 7.0d + "'", double24 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 7.0d + "'", double29 == 7.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 4.641588833612779d + "'", double30 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.605170185988092d + "'", double31 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.605170185988092d + "'", double34 == 4.605170185988092d);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (double) 100.0f);
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, 27.0d);
        double double24 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) (byte) 10);
        double double25 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, (double) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            double double30 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, (int) (short) 10, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 27.0d + "'", double22 == 27.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 27.0d + "'", double24 == 27.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double12 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (byte) 0, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 4.641588833612779d + "'", double8 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 4.605170185988092d + "'", double9 == 4.605170185988092d);
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3, (int) (byte) 0, 0);
        java.lang.Class<?> wildcardClass10 = doubleArray3.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double19 = org.apache.commons.math.stat.StatUtils.max(doubleArray10);
        double double20 = org.apache.commons.math.stat.StatUtils.sum(doubleArray10);
        // The following exception was thrown during execution in test generation
        try {
            double double23 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10, (int) '4', (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 3.0d + "'", double18 == 3.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 9.0d + "'", double20 == 9.0d);
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double[] doubleArray27 = new double[] { (-1L), 0, 10L };
        double double30 = org.apache.commons.math.stat.StatUtils.max(doubleArray27, 0, 0);
        double double31 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray27);
        double[] doubleArray35 = new double[] { (-1L), 0, 10L };
        double double38 = org.apache.commons.math.stat.StatUtils.max(doubleArray35, 0, 0);
        double double39 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray35);
        double double41 = org.apache.commons.math.stat.StatUtils.variance(doubleArray35, (double) 10);
        double double42 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray27, doubleArray35);
        double double43 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray35);
        double double46 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35, 1, (int) (short) 0);
        double double48 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray18, doubleArray35, 101.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double51 = org.apache.commons.math.stat.StatUtils.sum(doubleArray35, (int) (short) 10, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.641588833612779d + "'", double23 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 101.0d + "'", double31 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 101.0d + "'", double39 == 101.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 37.0d + "'", double41 == 37.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 127.0d + "'", double48 == 127.0d);
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray27);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27);
        double double33 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray27);
        double double34 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3, (int) (short) 0, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4.641588833612779d + "'", double29 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 201.0d + "'", double34 == 201.0d);
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, 50.0d);
        java.lang.Class<?> wildcardClass11 = doubleArray3.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1.0d) + "'", double8 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            double double14 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (int) (byte) 10, 10, 4.605170185988092d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double12 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        // The following exception was thrown during execution in test generation
        try {
            double double15 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (byte) 10, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1.0d) + "'", double8 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 37.0d + "'", double10 == 37.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 10.0d + "'", double12 == 10.0d);
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        double[] doubleArray5 = new double[] { '#', 10.0f, 'a', 12.0d, 37.0d };
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray5);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray5);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.min(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double18 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray5, doubleArray11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Input arrays must have the same (positive) length.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[35.0, 10.0, 97.0, 12.0, 37.0]");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 191.0d + "'", double6 == 191.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1237.7d + "'", double7 == 1237.7d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-1.0d) + "'", double16 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 37.0d + "'", double17 == 37.0d);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            double double12 = org.apache.commons.math.stat.StatUtils.product(doubleArray3, 0, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double18 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray13);
        double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double20 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        java.lang.Class<?> wildcardClass21 = doubleArray3.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.641588833612779d + "'", double15 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.605170185988092d + "'", double16 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 27.0d + "'", double17 == 27.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-4.0d) + "'", double18 == (-4.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 9.0d + "'", double20 == 9.0d);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double12 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3, (int) (short) 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3, 0, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 4.641588833612779d + "'", double8 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 4.605170185988092d + "'", double9 == 4.605170185988092d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) 10);
        double double18 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double20 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: invalid quantile value: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 37.0d + "'", double17 == 37.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) (byte) 100);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double19 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray13, 37.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3, (int) (short) 10, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.641588833612779d + "'", double15 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.605170185988092d + "'", double16 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 27.0d + "'", double17 == 27.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray27);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27);
        double double33 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray27);
        double double34 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double37 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, (int) '4', (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4.641588833612779d + "'", double29 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double20 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11, 0, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3, (int) (short) 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            double double16 = org.apache.commons.math.stat.StatUtils.min(doubleArray3, (int) (short) 1, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3, (int) (byte) 0, 0);
        double double10 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double12 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (-0.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: invalid quantile value: -0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        double[] doubleArray5 = new double[] { '#', 10.0f, 'a', 12.0d, 37.0d };
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray5);
        // The following exception was thrown during execution in test generation
        try {
            double double9 = org.apache.commons.math.stat.StatUtils.min(doubleArray5, 0, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[35.0, 10.0, 97.0, 12.0, 37.0]");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 191.0d + "'", double6 == 191.0d);
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double24 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double[] doubleArray28 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double29 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        double double30 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray28);
        double double31 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray28);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray28);
        double double34 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28);
        double double37 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28, (int) (short) 1, 0);
        double double38 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray28);
        // The following exception was thrown during execution in test generation
        try {
            double double41 = org.apache.commons.math.stat.StatUtils.max(doubleArray28, (int) (short) 100, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.641588833612779d + "'", double23 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 7.0d + "'", double24 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 7.0d + "'", double29 == 7.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 4.641588833612779d + "'", double30 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.605170185988092d + "'", double31 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.605170185988092d + "'", double34 == 4.605170185988092d);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        java.lang.Class<?> wildcardClass7 = doubleArray3.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        double[] doubleArray5 = new double[] { '#', 10.0f, 'a', 12.0d, 37.0d };
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray5);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray5);
        // The following exception was thrown during execution in test generation
        try {
            double double11 = org.apache.commons.math.stat.StatUtils.variance(doubleArray5, (double) 100, 0, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[35.0, 10.0, 97.0, 12.0, 37.0]");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 191.0d + "'", double6 == 191.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1237.7d + "'", double7 == 1237.7d);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        java.lang.Class<?> wildcardClass10 = doubleArray3.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 21.0d + "'", double7 == 21.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 201.0d + "'", double9 == 201.0d);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double11 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 1, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double10 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, (int) (short) 100, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double7 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3, (int) (byte) 1, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sum(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray11, doubleArray19);
        double double24 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double27 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11, (int) (short) 1, (int) (short) 0);
        double double28 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double31 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11, 100, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 21.0d + "'", double22 == 21.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-4.0d) + "'", double23 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 9.0d + "'", double24 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 12.0d + "'", double28 == 12.0d);
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double11 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (int) ' ', (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 100.0d + "'", double8 == 100.0d);
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double19 = org.apache.commons.math.stat.StatUtils.max(doubleArray10);
        double double20 = org.apache.commons.math.stat.StatUtils.sum(doubleArray10);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 10.000000000000002d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 3.0d + "'", double18 == 3.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 9.0d + "'", double20 == 9.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 37.0d + "'", double22 == 37.0d);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        // The following exception was thrown during execution in test generation
        try {
            double double21 = org.apache.commons.math.stat.StatUtils.min(doubleArray10, (int) '4', 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 3.0d + "'", double18 == 3.0d);
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) (byte) 100);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double19 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray13, 37.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double23 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (int) (short) 10, (int) ' ', (double) 10L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.641588833612779d + "'", double15 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.605170185988092d + "'", double16 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 27.0d + "'", double17 == 27.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double10 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3, 100, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10);
        double double16 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        // The following exception was thrown during execution in test generation
        try {
            double double19 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray10, (int) '4', (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 27.0d + "'", double15 == 27.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.641588833612779d + "'", double16 == 4.641588833612779d);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        double double28 = org.apache.commons.math.stat.StatUtils.max(doubleArray25, 0, 0);
        double double29 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray25);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        double double36 = org.apache.commons.math.stat.StatUtils.max(doubleArray33, 0, 0);
        double double37 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray33);
        double double39 = org.apache.commons.math.stat.StatUtils.variance(doubleArray33, (double) 10);
        double double40 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray25, doubleArray33);
        double double42 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray25, 100.0d);
        double double44 = org.apache.commons.math.stat.StatUtils.variance(doubleArray25, (double) 100.0f);
        // The following exception was thrown during execution in test generation
        try {
            double double48 = org.apache.commons.math.stat.StatUtils.variance(doubleArray25, (double) 10, (int) (byte) 1, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 101.0d + "'", double29 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 101.0d + "'", double37 == 101.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 37.0d + "'", double39 == 37.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 127.0d + "'", double42 == 127.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 37.0d + "'", double44 == 37.0d);
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (double) 100.0f);
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, 27.0d);
        double double24 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) (byte) 10);
        double double25 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, (double) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            double double30 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11, (int) (short) -1, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 27.0d + "'", double22 == 27.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 27.0d + "'", double24 == 27.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        double double29 = org.apache.commons.math.stat.StatUtils.max(doubleArray26, 0, 0);
        double double30 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray26);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        double double37 = org.apache.commons.math.stat.StatUtils.max(doubleArray34, 0, 0);
        double double38 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double double40 = org.apache.commons.math.stat.StatUtils.variance(doubleArray34, (double) 10);
        double double41 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray26, doubleArray34);
        double double42 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double double43 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray34);
        // The following exception was thrown during execution in test generation
        try {
            double double46 = org.apache.commons.math.stat.StatUtils.product(doubleArray18, (int) (byte) 100, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 7.0d + "'", double22 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 101.0d + "'", double30 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 101.0d + "'", double38 == 101.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 37.0d + "'", double40 == 37.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 101.0d + "'", double42 == 101.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.0d + "'", double43 == 4.0d);
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double8 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 21.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double11 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3, (int) (byte) 1, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 37.0d + "'", double8 == 37.0d);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double10 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, (int) (short) 100, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (double) 100.0f);
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, 27.0d);
        double double24 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) (byte) 10);
        double double25 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, (double) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            double double31 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (int) (byte) 100, (int) (short) -1, 101.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 27.0d + "'", double22 == 27.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 27.0d + "'", double24 == 27.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) 10);
        double double18 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11, 1, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            double double25 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11, (int) (short) 100, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 37.0d + "'", double17 == 37.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3, (int) (byte) 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            double double12 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, (int) (byte) 10, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        // The following exception was thrown during execution in test generation
        try {
            double double24 = org.apache.commons.math.stat.StatUtils.min(doubleArray3, 10, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        double[] doubleArray2 = new double[] { (byte) 10, 0.0d };
        double double4 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray2, 100.0d);
        double double5 = org.apache.commons.math.stat.StatUtils.variance(doubleArray2);
        // The following exception was thrown during execution in test generation
        try {
            double double8 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray2, (int) (short) 100, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 10.0d + "'", double4 == 10.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 50.0d + "'", double5 == 50.0d);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) (short) 1);
        java.lang.Class<?> wildcardClass9 = doubleArray3.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 27.0d + "'", double6 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 27.0d + "'", double8 == 27.0d);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (double) 100.0f);
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, 27.0d);
        double double24 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) (byte) 10);
        double double25 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, (double) (short) 1);
        double double28 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double29 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double32 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11, 0, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 27.0d + "'", double22 == 27.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 27.0d + "'", double24 == 27.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 21.0d + "'", double28 == 21.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 21.0d + "'", double29 == 21.0d);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double9 = org.apache.commons.math.stat.StatUtils.min(doubleArray3, (int) (short) 10, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 7.0d + "'", double6 == 7.0d);
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 0, 1, (int) (short) 1);
        double double10 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double13 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 0, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 27.0d + "'", double10 == 27.0d);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, (int) (byte) 1, (int) (short) 0);
        java.lang.Class<?> wildcardClass19 = doubleArray3.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (double) 100.0f);
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, 27.0d);
        double double24 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) (byte) 10);
        double double25 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, (double) (short) 1);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.sum(doubleArray31);
        double double35 = org.apache.commons.math.stat.StatUtils.max(doubleArray31);
        double double37 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray31, (double) (byte) 100);
        double[] doubleArray41 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double42 = org.apache.commons.math.stat.StatUtils.mean(doubleArray41);
        double double43 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray41);
        double double44 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray41);
        double double45 = org.apache.commons.math.stat.StatUtils.variance(doubleArray41);
        double double47 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray31, doubleArray41, 37.0d);
        double double48 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            double double51 = org.apache.commons.math.stat.StatUtils.product(doubleArray11, (int) (short) 0, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 27.0d + "'", double22 == 27.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 27.0d + "'", double24 == 27.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 21.0d + "'", double34 == 21.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 10.0d + "'", double35 == 10.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 10.0d + "'", double37 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 7.0d + "'", double42 == 7.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.641588833612779d + "'", double43 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 4.605170185988092d + "'", double44 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 27.0d + "'", double45 == 27.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray27);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27);
        double double33 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray27);
        double double34 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double35 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray27);
        // The following exception was thrown during execution in test generation
        try {
            double double38 = org.apache.commons.math.stat.StatUtils.sum(doubleArray27, (int) (byte) 0, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 21.0d + "'", double7 == 21.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4.641588833612779d + "'", double29 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.641588833612779d + "'", double34 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 4.605170185988092d + "'", double35 == 4.605170185988092d);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        java.lang.Class<?> wildcardClass8 = doubleArray3.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 21.0d + "'", double7 == 21.0d);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        java.lang.Class<?> wildcardClass8 = doubleArray3.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            double double9 = org.apache.commons.math.stat.StatUtils.product(doubleArray3, (int) '#', (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3, (int) (byte) 0, 0);
        double double10 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double14 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (int) (byte) 10, (int) (short) 100, (-4.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray27);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27);
        double double33 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray27);
        double double34 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double36 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 0.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double39 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) '4', (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4.641588833612779d + "'", double29 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 201.0d + "'", double34 == 201.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 27.0d + "'", double36 == 27.0d);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, 7.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double12 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (int) 'a', (int) (short) 10, 10.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double8 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 4.605170185988092d);
        java.lang.Class<?> wildcardClass9 = doubleArray3.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 27.000000000000004d + "'", double8 == 27.000000000000004d);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) 10);
        double double18 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double23 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (int) 'a', 0, (double) 100.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 37.0d + "'", double17 == 37.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 37.0d + "'", double19 == 37.0d);
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.sum(doubleArray31);
        double[] doubleArray38 = new double[] { (-1L), 0, 10L };
        double double41 = org.apache.commons.math.stat.StatUtils.max(doubleArray38, 0, 0);
        double double43 = org.apache.commons.math.stat.StatUtils.variance(doubleArray38, 21.0d);
        double double45 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray31, doubleArray38, 4.605170185988092d);
        double double46 = org.apache.commons.math.stat.StatUtils.mean(doubleArray38);
        double double47 = org.apache.commons.math.stat.StatUtils.max(doubleArray38);
        double double48 = org.apache.commons.math.stat.StatUtils.sum(doubleArray38);
        double[] doubleArray52 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double53 = org.apache.commons.math.stat.StatUtils.mean(doubleArray52);
        double double54 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray52);
        double double55 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray52);
        double double56 = org.apache.commons.math.stat.StatUtils.max(doubleArray52);
        double double59 = org.apache.commons.math.stat.StatUtils.sum(doubleArray52, (int) (short) 1, 0);
        double double62 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray52, (int) (short) 0, (int) (byte) 0);
        double double64 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray38, doubleArray52, (double) '#');
        double double65 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray52);
        double[] doubleArray69 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double70 = org.apache.commons.math.stat.StatUtils.mean(doubleArray69);
        double double72 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray69, (double) 100.0f);
        double[] doubleArray76 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double77 = org.apache.commons.math.stat.StatUtils.mean(doubleArray76);
        double double78 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray76);
        double double79 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray76);
        double double80 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray69, doubleArray76);
        double[] doubleArray84 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double85 = org.apache.commons.math.stat.StatUtils.mean(doubleArray84);
        double double86 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray84);
        double double87 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray69, doubleArray84);
        double double88 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray84);
        double double89 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray52, doubleArray84);
        // The following exception was thrown during execution in test generation
        try {
            double double92 = org.apache.commons.math.stat.StatUtils.mean(doubleArray52, (int) (byte) -1, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 21.0d + "'", double34 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 37.0d + "'", double43 == 37.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 127.00000000000001d + "'", double45 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 3.0d + "'", double46 == 3.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10.0d + "'", double47 == 10.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 9.0d + "'", double48 == 9.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 7.0d + "'", double53 == 7.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 4.641588833612779d + "'", double54 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 4.605170185988092d + "'", double55 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 10.0d + "'", double56 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 127.0d + "'", double64 == 127.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 7.0d + "'", double70 == 7.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 10.0d + "'", double72 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 7.0d + "'", double77 == 7.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 4.641588833612779d + "'", double78 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 4.605170185988092d + "'", double79 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 7.0d + "'", double85 == 7.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 4.641588833612779d + "'", double86 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 4.641588833612779d + "'", double88 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3, (int) (byte) 10, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray27);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27);
        double double33 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray27);
        // The following exception was thrown during execution in test generation
        try {
            double double35 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray27, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: invalid quantile value: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4.641588833612779d + "'", double29 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double double15 = org.apache.commons.math.stat.StatUtils.min(doubleArray10);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sum(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray19);
        double double24 = org.apache.commons.math.stat.StatUtils.min(doubleArray19);
        double[] doubleArray28 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double29 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        double double31 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray28, (double) 100.0f);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray35);
        double double39 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray28, doubleArray35);
        double[] doubleArray43 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double44 = org.apache.commons.math.stat.StatUtils.mean(doubleArray43);
        double double45 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray43);
        double double46 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray28, doubleArray43);
        double double47 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray43);
        double double48 = org.apache.commons.math.stat.StatUtils.variance(doubleArray43);
        double double49 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray19, doubleArray43);
        double double50 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray43);
        double double51 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray43);
        double double53 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray10, doubleArray43, (double) 0.0f);
        java.lang.Class<?> wildcardClass54 = doubleArray43.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 21.0d + "'", double22 == 21.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 7.0d + "'", double29 == 7.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 10.0d + "'", double31 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 4.605170185988092d + "'", double38 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 7.0d + "'", double44 == 7.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 4.641588833612779d + "'", double45 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 4.641588833612779d + "'", double47 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 27.0d + "'", double48 == 27.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4.641588833612779d + "'", double50 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4.605170185988092d + "'", double51 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (double) 100.0f);
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, 27.0d);
        double double24 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) (byte) 10);
        double double25 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, (double) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            double double30 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3, (int) ' ', (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 27.0d + "'", double22 == 27.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 27.0d + "'", double24 == 27.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray15 = new double[] { (-1L), 0, 10L };
        double double18 = org.apache.commons.math.stat.StatUtils.max(doubleArray15, 0, 0);
        double double19 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray15);
        double[] doubleArray23 = new double[] { (-1L), 0, 10L };
        double double26 = org.apache.commons.math.stat.StatUtils.max(doubleArray23, 0, 0);
        double double27 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray23);
        double double29 = org.apache.commons.math.stat.StatUtils.variance(doubleArray23, (double) 10);
        double double30 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray15, doubleArray23);
        double double31 = org.apache.commons.math.stat.StatUtils.variance(doubleArray15);
        double double32 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray15);
        double[] doubleArray36 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double37 = org.apache.commons.math.stat.StatUtils.mean(doubleArray36);
        double double38 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray36);
        double double39 = org.apache.commons.math.stat.StatUtils.sum(doubleArray36);
        double double40 = org.apache.commons.math.stat.StatUtils.max(doubleArray36);
        double[] doubleArray44 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double45 = org.apache.commons.math.stat.StatUtils.mean(doubleArray44);
        double double47 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray44, (double) 100.0f);
        double double48 = org.apache.commons.math.stat.StatUtils.mean(doubleArray44);
        double[] doubleArray52 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double53 = org.apache.commons.math.stat.StatUtils.mean(doubleArray52);
        double double55 = org.apache.commons.math.stat.StatUtils.variance(doubleArray52, 27.0d);
        double double57 = org.apache.commons.math.stat.StatUtils.variance(doubleArray52, (double) (byte) 10);
        double double58 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray44, doubleArray52);
        double double60 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray36, doubleArray44, (double) (short) 1);
        double double61 = org.apache.commons.math.stat.StatUtils.sum(doubleArray44);
        double double63 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray44, 0.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double67 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (int) (byte) -1, (int) (short) 10, 127.00000000000001d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 101.0d + "'", double19 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 101.0d + "'", double27 == 101.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 37.0d + "'", double29 == 37.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 37.0d + "'", double31 == 37.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4.0d + "'", double32 == 4.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 7.0d + "'", double37 == 7.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 4.641588833612779d + "'", double38 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 21.0d + "'", double39 == 21.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 10.0d + "'", double40 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 7.0d + "'", double45 == 7.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10.0d + "'", double47 == 10.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 7.0d + "'", double48 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 7.0d + "'", double53 == 7.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 27.0d + "'", double55 == 27.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 27.0d + "'", double57 == 27.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 21.0d + "'", double61 == 21.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double24 = org.apache.commons.math.stat.StatUtils.min(doubleArray18);
        double double25 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        // The following exception was thrown during execution in test generation
        try {
            double double29 = org.apache.commons.math.stat.StatUtils.variance(doubleArray18, (double) (-1.0f), (int) (short) 0, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.641588833612779d + "'", double23 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4.641588833612779d + "'", double25 == 4.641588833612779d);
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double19 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, (int) (short) 1, (int) (short) 0);
        double double20 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double double21 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double24 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, (int) (short) -1, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 9.0d + "'", double16 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.0d) + "'", double20 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double2 = org.apache.commons.math.stat.StatUtils.variance(doubleArray0, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) 10);
        double double18 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double22 = org.apache.commons.math.stat.StatUtils.min(doubleArray11, (int) (short) 100, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 37.0d + "'", double17 == 37.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray27);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27);
        double double33 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray27);
        java.lang.Class<?> wildcardClass34 = doubleArray27.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 21.0d + "'", double7 == 21.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4.641588833612779d + "'", double29 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.variance(doubleArray18);
        double[] doubleArray27 = new double[] { (-1L), 0, 10L };
        double double30 = org.apache.commons.math.stat.StatUtils.max(doubleArray27, 0, 0);
        double double31 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray27);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.sum(doubleArray35);
        double double39 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray27, doubleArray35);
        double double40 = org.apache.commons.math.stat.StatUtils.max(doubleArray27);
        double double42 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray18, doubleArray27, 27.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double46 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27, (-1.0d), 100, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 27.0d + "'", double23 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 101.0d + "'", double31 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 21.0d + "'", double38 == 21.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-4.0d) + "'", double39 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 10.0d + "'", double40 == 10.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 127.0d + "'", double42 == 127.0d);
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double[] doubleArray19 = new double[] { (-1L), 0, 10L };
        double double22 = org.apache.commons.math.stat.StatUtils.max(doubleArray19, 0, 0);
        double double23 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray19);
        double double25 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) 10);
        double double26 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11);
        double double29 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, 3.0d);
        double double30 = org.apache.commons.math.stat.StatUtils.min(doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double33 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11, (int) '#', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 4.641588833612779d + "'", double7 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 101.0d + "'", double23 == 101.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 37.0d + "'", double25 == 37.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 37.0d + "'", double27 == 37.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 127.0d + "'", double29 == 127.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-1.0d) + "'", double30 == (-1.0d));
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray10);
        double double16 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, (double) '#');
        // The following exception was thrown during execution in test generation
        try {
            double double19 = org.apache.commons.math.stat.StatUtils.product(doubleArray10, (int) (short) 100, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double2 = org.apache.commons.math.stat.StatUtils.variance(doubleArray0, (double) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double double11 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double12 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, (int) (byte) -1, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double double10 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double13 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) '#', (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-0.0d) + "'", double10 == (-0.0d));
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray15 = new double[] { (-1L), 0, 10L };
        double double18 = org.apache.commons.math.stat.StatUtils.max(doubleArray15, 0, 0);
        double double19 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray15);
        double[] doubleArray23 = new double[] { (-1L), 0, 10L };
        double double26 = org.apache.commons.math.stat.StatUtils.max(doubleArray23, 0, 0);
        double double27 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray23);
        double double29 = org.apache.commons.math.stat.StatUtils.variance(doubleArray23, (double) 10);
        double double30 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray15, doubleArray23);
        double double31 = org.apache.commons.math.stat.StatUtils.variance(doubleArray15);
        double double32 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray15);
        double[] doubleArray36 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double37 = org.apache.commons.math.stat.StatUtils.mean(doubleArray36);
        double double38 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray36);
        double double39 = org.apache.commons.math.stat.StatUtils.sum(doubleArray36);
        double double40 = org.apache.commons.math.stat.StatUtils.max(doubleArray36);
        double[] doubleArray44 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double45 = org.apache.commons.math.stat.StatUtils.mean(doubleArray44);
        double double47 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray44, (double) 100.0f);
        double double48 = org.apache.commons.math.stat.StatUtils.mean(doubleArray44);
        double[] doubleArray52 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double53 = org.apache.commons.math.stat.StatUtils.mean(doubleArray52);
        double double55 = org.apache.commons.math.stat.StatUtils.variance(doubleArray52, 27.0d);
        double double57 = org.apache.commons.math.stat.StatUtils.variance(doubleArray52, (double) (byte) 10);
        double double58 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray44, doubleArray52);
        double double60 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray36, doubleArray44, (double) (short) 1);
        double double61 = org.apache.commons.math.stat.StatUtils.sum(doubleArray44);
        double double63 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray44, 0.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double66 = org.apache.commons.math.stat.StatUtils.mean(doubleArray44, (int) (short) -1, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 101.0d + "'", double19 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 101.0d + "'", double27 == 101.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 37.0d + "'", double29 == 37.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 37.0d + "'", double31 == 37.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4.0d + "'", double32 == 4.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 7.0d + "'", double37 == 7.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 4.641588833612779d + "'", double38 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 21.0d + "'", double39 == 21.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 10.0d + "'", double40 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 7.0d + "'", double45 == 7.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10.0d + "'", double47 == 10.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 7.0d + "'", double48 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 7.0d + "'", double53 == 7.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 27.0d + "'", double55 == 27.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 27.0d + "'", double57 == 27.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 21.0d + "'", double61 == 21.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) 10);
        double double18 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double20 = org.apache.commons.math.stat.StatUtils.product(doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double23 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11, (-1), (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 37.0d + "'", double17 == 37.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 101.0d + "'", double19 == 101.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.0d) + "'", double20 == (-0.0d));
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray27);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27);
        double double33 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray27);
        double double34 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double36 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) '#');
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double38 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double41 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        java.lang.Class<?> wildcardClass42 = doubleArray3.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4.641588833612779d + "'", double29 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 27.0d + "'", double36 == 27.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 21.0d + "'", double38 == 21.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double3 = org.apache.commons.math.stat.StatUtils.variance(doubleArray0, (int) (short) 0, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double1 = org.apache.commons.math.stat.StatUtils.variance(doubleArray0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input values array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double18 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray13);
        double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double20 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double23 = org.apache.commons.math.stat.StatUtils.product(doubleArray3, (int) (short) -1, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.641588833612779d + "'", double15 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.605170185988092d + "'", double16 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 27.0d + "'", double17 == 27.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-4.0d) + "'", double18 == (-4.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 9.0d + "'", double20 == 9.0d);
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        double[] doubleArray5 = new double[] { 4.641588833612779d, (byte) 10, 0, 0, 27.267451525600872d };
        double[] doubleArray9 = new double[] { (-1L), 0, 10L };
        double double12 = org.apache.commons.math.stat.StatUtils.max(doubleArray9, 0, 0);
        double double13 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray9);
        double[] doubleArray17 = new double[] { (-1L), 0, 10L };
        double double20 = org.apache.commons.math.stat.StatUtils.max(doubleArray17, 0, 0);
        double double21 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray17);
        double double23 = org.apache.commons.math.stat.StatUtils.variance(doubleArray17, (double) 10);
        double double24 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray9, doubleArray17);
        double double25 = org.apache.commons.math.stat.StatUtils.max(doubleArray17);
        double double26 = org.apache.commons.math.stat.StatUtils.product(doubleArray17);
        // The following exception was thrown during execution in test generation
        try {
            double double27 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray5, doubleArray17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Input arrays must have the same (positive) length.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[4.641588833612779, 10.0, 0.0, 0.0, 27.267451525600872]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 101.0d + "'", double13 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 101.0d + "'", double21 == 101.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 37.0d + "'", double23 == 37.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 10.0d + "'", double25 == 10.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-0.0d) + "'", double26 == (-0.0d));
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (double) 100.0f);
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, 27.0d);
        double double24 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) (byte) 10);
        double double25 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, (double) (short) 1);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.sum(doubleArray31);
        double double35 = org.apache.commons.math.stat.StatUtils.max(doubleArray31);
        double double37 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray31, (double) (byte) 100);
        double[] doubleArray41 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double42 = org.apache.commons.math.stat.StatUtils.mean(doubleArray41);
        double double43 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray41);
        double double44 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray41);
        double double45 = org.apache.commons.math.stat.StatUtils.variance(doubleArray41);
        double double47 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray31, doubleArray41, 37.0d);
        double double48 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            double double50 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray41, (double) (-1.0f));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: invalid quantile value: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 27.0d + "'", double22 == 27.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 27.0d + "'", double24 == 27.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 21.0d + "'", double34 == 21.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 10.0d + "'", double35 == 10.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 10.0d + "'", double37 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 7.0d + "'", double42 == 7.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.641588833612779d + "'", double43 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 4.605170185988092d + "'", double44 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 27.0d + "'", double45 == 27.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double14 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 0.0f, (int) (short) -1, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 21.0d + "'", double7 == 21.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 201.0d + "'", double9 == 201.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 4.641588833612779d + "'", double10 == 4.641588833612779d);
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double17 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double19 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, Double.NaN);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double double11 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double12 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double16 = org.apache.commons.math.stat.StatUtils.product(doubleArray3, (int) ' ', (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 10.0d + "'", double13 == 10.0d);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3, (int) '#', (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 27.0d + "'", double6 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 27.0d + "'", double8 == 27.0d);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        double double28 = org.apache.commons.math.stat.StatUtils.variance(doubleArray12);
        // The following exception was thrown during execution in test generation
        try {
            double double31 = org.apache.commons.math.stat.StatUtils.min(doubleArray12, 0, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 37.0d + "'", double28 == 37.0d);
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double double11 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double12 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double13 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double16 = org.apache.commons.math.stat.StatUtils.min(doubleArray3, (int) ' ', (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 21.0d + "'", double13 == 21.0d);
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        double[] doubleArray0 = null;
        double[] doubleArray4 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double5 = org.apache.commons.math.stat.StatUtils.mean(doubleArray4);
        double double6 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray4);
        double double7 = org.apache.commons.math.stat.StatUtils.sum(doubleArray4);
        double double8 = org.apache.commons.math.stat.StatUtils.sum(doubleArray4);
        double double9 = org.apache.commons.math.stat.StatUtils.min(doubleArray4);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray13, (double) 100.0f);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray13, doubleArray20);
        double[] doubleArray28 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double29 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        double double30 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray28);
        double double31 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray13, doubleArray28);
        double double32 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray28);
        double double33 = org.apache.commons.math.stat.StatUtils.variance(doubleArray28);
        double double34 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray4, doubleArray28);
        // The following exception was thrown during execution in test generation
        try {
            double double35 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray0, doubleArray28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 7.0d + "'", double5 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.641588833612779d + "'", double6 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 21.0d + "'", double7 == 21.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 21.0d + "'", double8 == 21.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.605170185988092d + "'", double23 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 7.0d + "'", double29 == 7.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 4.641588833612779d + "'", double30 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4.641588833612779d + "'", double32 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 27.0d + "'", double33 == 27.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        double double29 = org.apache.commons.math.stat.StatUtils.max(doubleArray26, 0, 0);
        double double30 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray26);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        double double37 = org.apache.commons.math.stat.StatUtils.max(doubleArray34, 0, 0);
        double double38 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double double40 = org.apache.commons.math.stat.StatUtils.variance(doubleArray34, (double) 10);
        double double41 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray26, doubleArray34);
        double double42 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double double43 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray34);
        // The following exception was thrown during execution in test generation
        try {
            double double46 = org.apache.commons.math.stat.StatUtils.min(doubleArray18, (int) ' ', (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 7.0d + "'", double22 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 101.0d + "'", double30 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 101.0d + "'", double38 == 101.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 37.0d + "'", double40 == 37.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 101.0d + "'", double42 == 101.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.0d + "'", double43 == 4.0d);
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 1);
        // The following exception was thrown during execution in test generation
        try {
            double double12 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, (int) (byte) -1, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray20);
        double double26 = org.apache.commons.math.stat.StatUtils.min(doubleArray20);
        // The following exception was thrown during execution in test generation
        try {
            double double30 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray20, (int) (byte) 1, 0, (double) 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: invalid quantile value: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 21.0d + "'", double8 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double24 = org.apache.commons.math.stat.StatUtils.min(doubleArray18);
        double double25 = org.apache.commons.math.stat.StatUtils.variance(doubleArray18);
        // The following exception was thrown during execution in test generation
        try {
            double double28 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray18, (int) 'a', 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.641588833612779d + "'", double23 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 27.0d + "'", double25 == 27.0d);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double11 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 100, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 27.0d + "'", double8 == 27.0d);
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double13 = org.apache.commons.math.stat.StatUtils.product(doubleArray3, (int) ' ', (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 21.0d + "'", double7 == 21.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 201.0d + "'", double9 == 201.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 4.641588833612779d + "'", double10 == 4.641588833612779d);
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        double double28 = org.apache.commons.math.stat.StatUtils.max(doubleArray25, 0, 0);
        double double29 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray25);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        double double36 = org.apache.commons.math.stat.StatUtils.max(doubleArray33, 0, 0);
        double double37 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray33);
        double double39 = org.apache.commons.math.stat.StatUtils.variance(doubleArray33, (double) 10);
        double double40 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray25, doubleArray33);
        double double42 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray25, 100.0d);
        double double43 = org.apache.commons.math.stat.StatUtils.min(doubleArray25);
        // The following exception was thrown during execution in test generation
        try {
            double double46 = org.apache.commons.math.stat.StatUtils.mean(doubleArray25, (int) (short) 10, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 101.0d + "'", double29 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 101.0d + "'", double37 == 101.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 37.0d + "'", double39 == 37.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 127.0d + "'", double42 == 127.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-1.0d) + "'", double43 == (-1.0d));
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double24 = org.apache.commons.math.stat.StatUtils.min(doubleArray18);
        double double25 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        // The following exception was thrown during execution in test generation
        try {
            double double28 = org.apache.commons.math.stat.StatUtils.max(doubleArray18, (int) (short) -1, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.641588833612779d + "'", double23 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4.641588833612779d + "'", double25 == 4.641588833612779d);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double24 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double[] doubleArray28 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double29 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        double double30 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray28);
        double double31 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray28);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray28);
        double double34 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28);
        double double37 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28, (int) (short) 1, 0);
        double double38 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray28);
        double double39 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray28);
        // The following exception was thrown during execution in test generation
        try {
            double double43 = org.apache.commons.math.stat.StatUtils.variance(doubleArray28, 9.0d, 100, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.641588833612779d + "'", double23 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 7.0d + "'", double24 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 7.0d + "'", double29 == 7.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 4.641588833612779d + "'", double30 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.605170185988092d + "'", double31 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.605170185988092d + "'", double34 == 4.605170185988092d);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 201.0d + "'", double39 == 201.0d);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, 7.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double12 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (int) ' ', (int) (short) 1, 100.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 21.0d + "'", double7 == 21.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (double) 100.0f);
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, 27.0d);
        double double24 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) (byte) 10);
        double double25 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, (double) (short) 1);
        double double28 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double31 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) ' ', 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 27.0d + "'", double22 == 27.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 27.0d + "'", double24 == 27.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 100.0d + "'", double28 == 100.0d);
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double11 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, (int) (byte) 10, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 4.641588833612779d + "'", double8 == 4.641588833612779d);
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        double double28 = org.apache.commons.math.stat.StatUtils.max(doubleArray25, 0, 0);
        double double29 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray25);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        double double36 = org.apache.commons.math.stat.StatUtils.max(doubleArray33, 0, 0);
        double double37 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray33);
        double double39 = org.apache.commons.math.stat.StatUtils.variance(doubleArray33, (double) 10);
        double double40 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray25, doubleArray33);
        double double42 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray25, 100.0d);
        double double45 = org.apache.commons.math.stat.StatUtils.variance(doubleArray25, 1, 0);
        java.lang.Class<?> wildcardClass46 = doubleArray25.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 101.0d + "'", double29 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 101.0d + "'", double37 == 101.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 37.0d + "'", double39 == 37.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 127.0d + "'", double42 == 127.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double[] doubleArray19 = new double[] { (-1L), 0, 10L };
        double double22 = org.apache.commons.math.stat.StatUtils.max(doubleArray19, 0, 0);
        double double23 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray19);
        double double25 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) 10);
        double double26 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11);
        double double29 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, 3.0d);
        double double30 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double31 = org.apache.commons.math.stat.StatUtils.product(doubleArray11);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.sum(doubleArray35);
        double double39 = org.apache.commons.math.stat.StatUtils.sum(doubleArray35);
        double double40 = org.apache.commons.math.stat.StatUtils.sum(doubleArray35);
        double double41 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray35);
        double double42 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray35);
        // The following exception was thrown during execution in test generation
        try {
            double double45 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (int) '#', (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 4.641588833612779d + "'", double7 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 101.0d + "'", double23 == 101.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 37.0d + "'", double25 == 37.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 37.0d + "'", double27 == 37.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 127.0d + "'", double29 == 127.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.0d) + "'", double31 == (-0.0d));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 21.0d + "'", double38 == 21.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 21.0d + "'", double39 == 21.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 21.0d + "'", double40 == 21.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 201.0d + "'", double41 == 201.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-12.0d) + "'", double42 == (-12.0d));
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double18 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray13);
        double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double20 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double23 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (int) '#', (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.641588833612779d + "'", double15 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.605170185988092d + "'", double16 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 27.0d + "'", double17 == 27.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-4.0d) + "'", double18 == (-4.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 9.0d + "'", double20 == 9.0d);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11, 1, (int) (byte) 1);
        double double17 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 4.641588833612779d + "'", double17 == 4.641588833612779d);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, 50.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3, 10, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1.0d) + "'", double8 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double[] doubleArray19 = new double[] { (-1L), 0, 10L };
        double double22 = org.apache.commons.math.stat.StatUtils.max(doubleArray19, 0, 0);
        double double23 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray19);
        double double25 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) 10);
        double double26 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11);
        double double29 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, 3.0d);
        double double30 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double32 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (double) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: invalid quantile value: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 4.641588833612779d + "'", double7 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 101.0d + "'", double23 == 101.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 37.0d + "'", double25 == 37.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 37.0d + "'", double27 == 37.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 127.0d + "'", double29 == 127.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double double10 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double13 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, (int) (short) 0, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 27.0d);
        double double16 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) (byte) 10);
        double double17 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double22 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11, (int) (byte) 10, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 27.0d + "'", double14 == 27.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 27.0d + "'", double16 == 27.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4.605170185988092d + "'", double18 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4.605170185988092d + "'", double19 == 4.605170185988092d);
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double28 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12, (int) (short) 1, (int) (short) 0);
        double double29 = org.apache.commons.math.stat.StatUtils.product(doubleArray12);
        double double30 = org.apache.commons.math.stat.StatUtils.max(doubleArray12);
        double double31 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray12);
        // The following exception was thrown during execution in test generation
        try {
            double double34 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, (int) (byte) 10, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 100.0d + "'", double8 == 100.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-0.0d) + "'", double29 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.0d + "'", double31 == 4.0d);
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double double11 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double12 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double13 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double16 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (-1), (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 21.0d + "'", double13 == 21.0d);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10);
        double double16 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        // The following exception was thrown during execution in test generation
        try {
            double double19 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10, (int) (short) 10, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 27.0d + "'", double15 == 27.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.641588833612779d + "'", double16 == 4.641588833612779d);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.sum(doubleArray31);
        double[] doubleArray38 = new double[] { (-1L), 0, 10L };
        double double41 = org.apache.commons.math.stat.StatUtils.max(doubleArray38, 0, 0);
        double double43 = org.apache.commons.math.stat.StatUtils.variance(doubleArray38, 21.0d);
        double double45 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray31, doubleArray38, 4.605170185988092d);
        double double46 = org.apache.commons.math.stat.StatUtils.mean(doubleArray38);
        double double47 = org.apache.commons.math.stat.StatUtils.max(doubleArray38);
        double double48 = org.apache.commons.math.stat.StatUtils.sum(doubleArray38);
        double[] doubleArray52 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double53 = org.apache.commons.math.stat.StatUtils.mean(doubleArray52);
        double double54 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray52);
        double double55 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray52);
        double double56 = org.apache.commons.math.stat.StatUtils.max(doubleArray52);
        double double59 = org.apache.commons.math.stat.StatUtils.sum(doubleArray52, (int) (short) 1, 0);
        double double62 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray52, (int) (short) 0, (int) (byte) 0);
        double double64 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray38, doubleArray52, (double) '#');
        double double65 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray52);
        double double66 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 21.0d + "'", double34 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 37.0d + "'", double43 == 37.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 127.00000000000001d + "'", double45 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 3.0d + "'", double46 == 3.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10.0d + "'", double47 == 10.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 9.0d + "'", double48 == 9.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 7.0d + "'", double53 == 7.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 4.641588833612779d + "'", double54 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 4.605170185988092d + "'", double55 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 10.0d + "'", double56 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 127.0d + "'", double64 == 127.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 100.0d + "'", double66 == 100.0d);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        double double28 = org.apache.commons.math.stat.StatUtils.max(doubleArray25, 0, 0);
        double double29 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray25);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        double double36 = org.apache.commons.math.stat.StatUtils.max(doubleArray33, 0, 0);
        double double37 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray33);
        double double39 = org.apache.commons.math.stat.StatUtils.variance(doubleArray33, (double) 10);
        double double40 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray25, doubleArray33);
        double double42 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray25, 100.0d);
        double double43 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double[] doubleArray47 = new double[] { (-1L), 0, 10L };
        double double50 = org.apache.commons.math.stat.StatUtils.max(doubleArray47, 0, 0);
        double double51 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray47);
        double[] doubleArray55 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double56 = org.apache.commons.math.stat.StatUtils.mean(doubleArray55);
        double double57 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray55);
        double double58 = org.apache.commons.math.stat.StatUtils.sum(doubleArray55);
        double double59 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray47, doubleArray55);
        double double60 = org.apache.commons.math.stat.StatUtils.sum(doubleArray47);
        double double63 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray47, (int) (short) 1, (int) (short) 0);
        double double64 = org.apache.commons.math.stat.StatUtils.product(doubleArray47);
        double double66 = org.apache.commons.math.stat.StatUtils.variance(doubleArray47, (double) (byte) 10);
        double double68 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray47, 0.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double72 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 201.0d, 10, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 101.0d + "'", double29 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 101.0d + "'", double37 == 101.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 37.0d + "'", double39 == 37.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 127.0d + "'", double42 == 127.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 27.0d + "'", double43 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 101.0d + "'", double51 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 7.0d + "'", double56 == 7.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 4.641588833612779d + "'", double57 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 21.0d + "'", double58 == 21.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-4.0d) + "'", double59 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 9.0d + "'", double60 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-0.0d) + "'", double64 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 37.0d + "'", double66 == 37.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 127.0d + "'", double68 == 127.0d);
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double11 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3, 1, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 7.0d + "'", double8 == 7.0d);
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11, (int) (byte) 1, (int) (byte) 0);
        double double19 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double double20 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double23 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, (-1), (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4.605170185988092d + "'", double19 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.605170185988092d + "'", double20 == 4.605170185988092d);
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        java.lang.Class<?> wildcardClass9 = doubleArray3.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 21.0d + "'", double7 == 21.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 21.0d + "'", double8 == 21.0d);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 0, 1, (int) (short) 1);
        double double10 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double13 = org.apache.commons.math.stat.StatUtils.product(doubleArray3, 100, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 27.0d + "'", double10 == 27.0d);
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            double double14 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 13.0799401015171d, 0, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double19 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, (int) (short) 1, (int) (short) 0);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3, (int) (byte) 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, 10, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 9.0d + "'", double16 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double9 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, (int) 'a', 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double17 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double20 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, (int) (byte) 100, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 3.0d + "'", double17 == 3.0d);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        double double28 = org.apache.commons.math.stat.StatUtils.max(doubleArray25, 0, 0);
        double double29 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray25);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        double double36 = org.apache.commons.math.stat.StatUtils.max(doubleArray33, 0, 0);
        double double37 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray33);
        double double39 = org.apache.commons.math.stat.StatUtils.variance(doubleArray33, (double) 10);
        double double40 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray25, doubleArray33);
        double double42 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray25, 100.0d);
        double double44 = org.apache.commons.math.stat.StatUtils.variance(doubleArray25, (double) 100.0f);
        // The following exception was thrown during execution in test generation
        try {
            double double47 = org.apache.commons.math.stat.StatUtils.mean(doubleArray25, (int) ' ', 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 101.0d + "'", double29 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 101.0d + "'", double37 == 101.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 37.0d + "'", double39 == 37.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 127.0d + "'", double42 == 127.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 37.0d + "'", double44 == 37.0d);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) 10);
        double double18 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double22 = org.apache.commons.math.stat.StatUtils.min(doubleArray11, 1, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 37.0d + "'", double17 == 37.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double3 = org.apache.commons.math.stat.StatUtils.max(doubleArray0, (int) (byte) 100, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 27.0d);
        double double16 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) (byte) 10);
        double double17 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double20 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (int) (short) 0, (int) (byte) 0);
        double double21 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double24 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, (int) '#', (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 27.0d + "'", double14 == 27.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 27.0d + "'", double16 == 27.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 100.0d + "'", double21 == 100.0d);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double19 = org.apache.commons.math.stat.StatUtils.max(doubleArray10);
        double[] doubleArray23 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double24 = org.apache.commons.math.stat.StatUtils.mean(doubleArray23);
        double double25 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray23);
        double double26 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray23);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray23);
        double double28 = org.apache.commons.math.stat.StatUtils.min(doubleArray23);
        double[] doubleArray32 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double33 = org.apache.commons.math.stat.StatUtils.mean(doubleArray32);
        double double35 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray32, (double) 100.0f);
        double[] doubleArray39 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double40 = org.apache.commons.math.stat.StatUtils.mean(doubleArray39);
        double double41 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray39);
        double double42 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray39);
        double double43 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray32, doubleArray39);
        double[] doubleArray47 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double48 = org.apache.commons.math.stat.StatUtils.mean(doubleArray47);
        double double49 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray47);
        double double50 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray32, doubleArray47);
        double double51 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray47);
        double double52 = org.apache.commons.math.stat.StatUtils.variance(doubleArray47);
        double double53 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray23, doubleArray47);
        double double54 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray23);
        double double56 = org.apache.commons.math.stat.StatUtils.variance(doubleArray23, 0.0d);
        double double57 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray10, doubleArray23);
        // The following exception was thrown during execution in test generation
        try {
            double double61 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray10, (int) (byte) 1, (-1), (double) (-1.0f));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 3.0d + "'", double18 == 3.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 7.0d + "'", double24 == 7.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4.641588833612779d + "'", double25 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 4.605170185988092d + "'", double26 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 27.0d + "'", double27 == 27.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 7.0d + "'", double33 == 7.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 10.0d + "'", double35 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 7.0d + "'", double40 == 7.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 4.641588833612779d + "'", double41 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 4.605170185988092d + "'", double42 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 7.0d + "'", double48 == 7.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4.641588833612779d + "'", double49 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4.641588833612779d + "'", double51 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 27.0d + "'", double52 == 27.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 201.0d + "'", double54 == 201.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 27.0d + "'", double56 == 27.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-12.0d) + "'", double57 == (-12.0d));
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double9 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, (int) (short) 10, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 27.0d + "'", double6 == 27.0d);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        double[] doubleArray0 = null;
        double[] doubleArray6 = new double[] { '#', 10.0f, 'a', 12.0d, 37.0d };
        double double7 = org.apache.commons.math.stat.StatUtils.sum(doubleArray6);
        double double8 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray6);
        // The following exception was thrown during execution in test generation
        try {
            double double9 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray0, doubleArray6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[35.0, 10.0, 97.0, 12.0, 37.0]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 191.0d + "'", double7 == 191.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 27.267451525600872d + "'", double8 == 27.267451525600872d);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        double double28 = org.apache.commons.math.stat.StatUtils.max(doubleArray25, 0, 0);
        double double29 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray25);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        double double36 = org.apache.commons.math.stat.StatUtils.max(doubleArray33, 0, 0);
        double double37 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray33);
        double double39 = org.apache.commons.math.stat.StatUtils.variance(doubleArray33, (double) 10);
        double double40 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray25, doubleArray33);
        double double42 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray25, 100.0d);
        double double43 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double46 = org.apache.commons.math.stat.StatUtils.product(doubleArray3, (int) (byte) -1, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 101.0d + "'", double29 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 101.0d + "'", double37 == 101.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 37.0d + "'", double39 == 37.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 127.0d + "'", double42 == 127.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 27.0d + "'", double43 == 27.0d);
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double12 = org.apache.commons.math.stat.StatUtils.min(doubleArray3, (-1), 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 21.0d + "'", double7 == 21.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 201.0d + "'", double9 == 201.0d);
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double17 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double18 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double21 = org.apache.commons.math.stat.StatUtils.product(doubleArray3, (int) (short) -1, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 3.0d + "'", double17 == 3.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double double11 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double12 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double13 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, (int) (short) 1, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 21.0d + "'", double13 == 21.0d);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        double double28 = org.apache.commons.math.stat.StatUtils.max(doubleArray25, 0, 0);
        double double29 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray25);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        double double36 = org.apache.commons.math.stat.StatUtils.max(doubleArray33, 0, 0);
        double double37 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray33);
        double double39 = org.apache.commons.math.stat.StatUtils.variance(doubleArray33, (double) 10);
        double double40 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray25, doubleArray33);
        double double42 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray25, 100.0d);
        double double43 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double double44 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double47 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, (-1), (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 101.0d + "'", double29 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 101.0d + "'", double37 == 101.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 37.0d + "'", double39 == 37.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 127.0d + "'", double42 == 127.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 100.0d + "'", double43 == 100.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 21.0d + "'", double44 == 21.0d);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        double double28 = org.apache.commons.math.stat.StatUtils.product(doubleArray12);
        double double31 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray12, (int) (byte) 0, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            double double34 = org.apache.commons.math.stat.StatUtils.product(doubleArray12, (int) (byte) 10, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-0.0d) + "'", double28 == (-0.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (double) 100.0f);
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, 27.0d);
        double double24 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) (byte) 10);
        double double25 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, (double) (short) 1);
        double double28 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double29 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double[] doubleArray33 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double34 = org.apache.commons.math.stat.StatUtils.mean(doubleArray33);
        double double36 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray33, (double) 100.0f);
        double double37 = org.apache.commons.math.stat.StatUtils.variance(doubleArray33);
        double double39 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray33, (double) 1);
        double double40 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray33);
        // The following exception was thrown during execution in test generation
        try {
            double double43 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11, (-1), (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 27.0d + "'", double22 == 27.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 27.0d + "'", double24 == 27.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 21.0d + "'", double28 == 21.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 21.0d + "'", double29 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 7.0d + "'", double34 == 7.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 10.0d + "'", double36 == 10.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 27.0d + "'", double37 == 27.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double[] doubleArray19 = new double[] { (-1L), 0, 10L };
        double double22 = org.apache.commons.math.stat.StatUtils.max(doubleArray19, 0, 0);
        double double23 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray19);
        double double25 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) 10);
        double double26 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11);
        double double29 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, 3.0d);
        double double30 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double31 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double34 = org.apache.commons.math.stat.StatUtils.min(doubleArray3, (int) (byte) 1, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 4.641588833612779d + "'", double7 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 101.0d + "'", double23 == 101.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 37.0d + "'", double25 == 37.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 37.0d + "'", double27 == 37.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 127.0d + "'", double29 == 127.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 4.605170185988092d + "'", double30 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 10.0d + "'", double31 == 10.0d);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray18);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 7.0d + "'", double22 == 7.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double19 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, (int) (short) 1, (int) (short) 0);
        double double20 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            double double25 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 10, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 9.0d + "'", double16 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.0d) + "'", double20 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 37.0d + "'", double22 == 37.0d);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        double double28 = org.apache.commons.math.stat.StatUtils.max(doubleArray25, 0, 0);
        double double29 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray25);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        double double36 = org.apache.commons.math.stat.StatUtils.max(doubleArray33, 0, 0);
        double double37 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray33);
        double double39 = org.apache.commons.math.stat.StatUtils.variance(doubleArray33, (double) 10);
        double double40 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray25, doubleArray33);
        double double42 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray25, 100.0d);
        double double43 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double45 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 3.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double48 = org.apache.commons.math.stat.StatUtils.min(doubleArray3, (int) (byte) 10, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 101.0d + "'", double29 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 101.0d + "'", double37 == 101.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 37.0d + "'", double39 == 37.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 127.0d + "'", double42 == 127.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.641588833612779d + "'", double43 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 27.0d + "'", double45 == 27.0d);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        double[] doubleArray5 = new double[] { '#', 10.0f, 'a', 12.0d, 37.0d };
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray5);
        double double7 = org.apache.commons.math.stat.StatUtils.min(doubleArray5);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray5, 1, 1);
        double[] doubleArray14 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray14);
        double double16 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray14);
        double double17 = org.apache.commons.math.stat.StatUtils.sum(doubleArray14);
        double[] doubleArray21 = new double[] { (-1L), 0, 10L };
        double double24 = org.apache.commons.math.stat.StatUtils.max(doubleArray21, 0, 0);
        double double26 = org.apache.commons.math.stat.StatUtils.variance(doubleArray21, 21.0d);
        double double28 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray14, doubleArray21, 4.605170185988092d);
        // The following exception was thrown during execution in test generation
        try {
            double double30 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray5, doubleArray21, 13.0799401015171d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Input array lengths must be equal and at least 2.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[35.0, 10.0, 97.0, 12.0, 37.0]");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 191.0d + "'", double6 == 191.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.641588833612779d + "'", double16 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 21.0d + "'", double17 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 37.0d + "'", double26 == 37.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 127.00000000000001d + "'", double28 == 127.00000000000001d);
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (double) 100.0f);
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, 27.0d);
        double double24 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) (byte) 10);
        double double25 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, (double) (short) 1);
        java.lang.Class<?> wildcardClass28 = doubleArray3.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 27.0d + "'", double22 == 27.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 27.0d + "'", double24 == 27.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double double11 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) (byte) 100);
        double double12 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double14 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, 101.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: invalid quantile value: 101.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1.0d) + "'", double12 == (-1.0d));
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (byte) 1, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 27.0d + "'", double6 == 27.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 4.605170185988092d + "'", double7 == 4.605170185988092d);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11, (int) (byte) 1, (int) (byte) 0);
        double double19 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double double20 = org.apache.commons.math.stat.StatUtils.min(doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11, (int) (short) 100, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4.605170185988092d + "'", double19 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double30 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, (int) (short) -1, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 1);
        double double10 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double13 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, 0, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double double15 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double double16 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double19 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, (int) (short) 10, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 100.0d + "'", double15 == 100.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.641588833612779d + "'", double16 == 4.641588833612779d);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double12 = org.apache.commons.math.stat.StatUtils.min(doubleArray3, 0, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 100.0d + "'", double8 == 100.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double19 = org.apache.commons.math.stat.StatUtils.max(doubleArray10);
        double[] doubleArray23 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double24 = org.apache.commons.math.stat.StatUtils.mean(doubleArray23);
        double double25 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray23);
        double double26 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray23);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray23);
        double double28 = org.apache.commons.math.stat.StatUtils.min(doubleArray23);
        double[] doubleArray32 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double33 = org.apache.commons.math.stat.StatUtils.mean(doubleArray32);
        double double35 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray32, (double) 100.0f);
        double[] doubleArray39 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double40 = org.apache.commons.math.stat.StatUtils.mean(doubleArray39);
        double double41 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray39);
        double double42 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray39);
        double double43 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray32, doubleArray39);
        double[] doubleArray47 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double48 = org.apache.commons.math.stat.StatUtils.mean(doubleArray47);
        double double49 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray47);
        double double50 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray32, doubleArray47);
        double double51 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray47);
        double double52 = org.apache.commons.math.stat.StatUtils.variance(doubleArray47);
        double double53 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray23, doubleArray47);
        double double54 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray23);
        double double56 = org.apache.commons.math.stat.StatUtils.variance(doubleArray23, 0.0d);
        double double57 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray10, doubleArray23);
        double double59 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray10, (double) 100.0f);
        // The following exception was thrown during execution in test generation
        try {
            double double62 = org.apache.commons.math.stat.StatUtils.sum(doubleArray10, 1, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 3.0d + "'", double18 == 3.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 7.0d + "'", double24 == 7.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4.641588833612779d + "'", double25 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 4.605170185988092d + "'", double26 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 27.0d + "'", double27 == 27.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 7.0d + "'", double33 == 7.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 10.0d + "'", double35 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 7.0d + "'", double40 == 7.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 4.641588833612779d + "'", double41 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 4.605170185988092d + "'", double42 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 7.0d + "'", double48 == 7.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4.641588833612779d + "'", double49 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4.641588833612779d + "'", double51 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 27.0d + "'", double52 == 27.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 201.0d + "'", double54 == 201.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 27.0d + "'", double56 == 27.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-12.0d) + "'", double57 == (-12.0d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 10.0d + "'", double59 == 10.0d);
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.variance(doubleArray18);
        double[] doubleArray27 = new double[] { (-1L), 0, 10L };
        double double30 = org.apache.commons.math.stat.StatUtils.max(doubleArray27, 0, 0);
        double double31 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray27);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.sum(doubleArray35);
        double double39 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray27, doubleArray35);
        double double40 = org.apache.commons.math.stat.StatUtils.max(doubleArray27);
        double double42 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray18, doubleArray27, 27.0d);
        double double43 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray27);
        double double44 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        // The following exception was thrown during execution in test generation
        try {
            double double47 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27, (int) ' ', (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 27.0d + "'", double23 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 101.0d + "'", double31 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 21.0d + "'", double38 == 21.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-4.0d) + "'", double39 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 10.0d + "'", double40 == 10.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 127.0d + "'", double42 == 127.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 3.0d + "'", double44 == 3.0d);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double double10 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double14 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 1, (int) (short) 100, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double3 = org.apache.commons.math.stat.StatUtils.min(doubleArray0, (int) (short) 1, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) 10);
        double double18 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double[] doubleArray22 = new double[] { (-1L), 0, 10L };
        double double25 = org.apache.commons.math.stat.StatUtils.max(doubleArray22, 0, 0);
        double double26 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray22);
        double[] doubleArray30 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double31 = org.apache.commons.math.stat.StatUtils.mean(doubleArray30);
        double double32 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray30);
        double double33 = org.apache.commons.math.stat.StatUtils.sum(doubleArray30);
        double double34 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray22, doubleArray30);
        double double35 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray22);
        // The following exception was thrown during execution in test generation
        try {
            double double38 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray22, 0, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 37.0d + "'", double17 == 37.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 101.0d + "'", double26 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 7.0d + "'", double31 == 7.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4.641588833612779d + "'", double32 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 21.0d + "'", double33 == 21.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-4.0d) + "'", double34 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.sum(doubleArray31);
        double[] doubleArray38 = new double[] { (-1L), 0, 10L };
        double double41 = org.apache.commons.math.stat.StatUtils.max(doubleArray38, 0, 0);
        double double43 = org.apache.commons.math.stat.StatUtils.variance(doubleArray38, 21.0d);
        double double45 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray31, doubleArray38, 4.605170185988092d);
        double double46 = org.apache.commons.math.stat.StatUtils.mean(doubleArray38);
        double double47 = org.apache.commons.math.stat.StatUtils.max(doubleArray38);
        double double48 = org.apache.commons.math.stat.StatUtils.sum(doubleArray38);
        double[] doubleArray52 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double53 = org.apache.commons.math.stat.StatUtils.mean(doubleArray52);
        double double54 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray52);
        double double55 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray52);
        double double56 = org.apache.commons.math.stat.StatUtils.max(doubleArray52);
        double double59 = org.apache.commons.math.stat.StatUtils.sum(doubleArray52, (int) (short) 1, 0);
        double double62 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray52, (int) (short) 0, (int) (byte) 0);
        double double64 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray38, doubleArray52, (double) '#');
        double double65 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray52);
        double double66 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double69 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 10, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 21.0d + "'", double34 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 37.0d + "'", double43 == 37.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 127.00000000000001d + "'", double45 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 3.0d + "'", double46 == 3.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10.0d + "'", double47 == 10.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 9.0d + "'", double48 == 9.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 7.0d + "'", double53 == 7.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 4.641588833612779d + "'", double54 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 4.605170185988092d + "'", double55 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 10.0d + "'", double56 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 127.0d + "'", double64 == 127.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 27.0d + "'", double66 == 27.0d);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double[] doubleArray14 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double15 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        double double29 = org.apache.commons.math.stat.StatUtils.variance(doubleArray12, (double) 1L);
        // The following exception was thrown during execution in test generation
        try {
            double double32 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 10, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 37.0d + "'", double29 == 37.0d);
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (double) 100.0f);
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, 27.0d);
        double double24 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) (byte) 10);
        double double25 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, (double) (short) 1);
        double double30 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11, 0, (int) (byte) 0);
        double double31 = org.apache.commons.math.stat.StatUtils.product(doubleArray11);
        double double32 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 27.0d + "'", double22 == 27.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 27.0d + "'", double24 == 27.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 100.0d + "'", double31 == 100.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 10.0d + "'", double32 == 10.0d);
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double24 = org.apache.commons.math.stat.StatUtils.min(doubleArray18);
        double double26 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray18, (double) 100L);
        // The following exception was thrown during execution in test generation
        try {
            double double30 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray18, (int) (byte) 1, 100, (double) 1.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.641588833612779d + "'", double23 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) 10);
        double double18 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double20 = org.apache.commons.math.stat.StatUtils.product(doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double23 = org.apache.commons.math.stat.StatUtils.min(doubleArray11, (int) (short) 1, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 37.0d + "'", double17 == 37.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 101.0d + "'", double19 == 101.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.0d) + "'", double20 == (-0.0d));
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.sum(doubleArray31);
        double[] doubleArray38 = new double[] { (-1L), 0, 10L };
        double double41 = org.apache.commons.math.stat.StatUtils.max(doubleArray38, 0, 0);
        double double43 = org.apache.commons.math.stat.StatUtils.variance(doubleArray38, 21.0d);
        double double45 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray31, doubleArray38, 4.605170185988092d);
        double double46 = org.apache.commons.math.stat.StatUtils.mean(doubleArray38);
        double double47 = org.apache.commons.math.stat.StatUtils.max(doubleArray38);
        double double48 = org.apache.commons.math.stat.StatUtils.sum(doubleArray38);
        double[] doubleArray52 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double53 = org.apache.commons.math.stat.StatUtils.mean(doubleArray52);
        double double54 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray52);
        double double55 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray52);
        double double56 = org.apache.commons.math.stat.StatUtils.max(doubleArray52);
        double double59 = org.apache.commons.math.stat.StatUtils.sum(doubleArray52, (int) (short) 1, 0);
        double double62 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray52, (int) (short) 0, (int) (byte) 0);
        double double64 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray38, doubleArray52, (double) '#');
        double double65 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray52);
        double[] doubleArray69 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double70 = org.apache.commons.math.stat.StatUtils.mean(doubleArray69);
        double double71 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray69);
        double double72 = org.apache.commons.math.stat.StatUtils.sum(doubleArray69);
        double double73 = org.apache.commons.math.stat.StatUtils.sum(doubleArray69);
        double double74 = org.apache.commons.math.stat.StatUtils.min(doubleArray69);
        double double75 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray69);
        double double76 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray69);
        // The following exception was thrown during execution in test generation
        try {
            double double79 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3, 10, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 21.0d + "'", double34 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 37.0d + "'", double43 == 37.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 127.00000000000001d + "'", double45 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 3.0d + "'", double46 == 3.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10.0d + "'", double47 == 10.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 9.0d + "'", double48 == 9.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 7.0d + "'", double53 == 7.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 4.641588833612779d + "'", double54 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 4.605170185988092d + "'", double55 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 10.0d + "'", double56 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 127.0d + "'", double64 == 127.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 7.0d + "'", double70 == 7.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 4.641588833612779d + "'", double71 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 21.0d + "'", double72 == 21.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 21.0d + "'", double73 == 21.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 201.0d + "'", double75 == 201.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (double) 100.0f);
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, 27.0d);
        double double24 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) (byte) 10);
        double double25 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, (double) (short) 1);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray31, (double) 100.0f);
        double double35 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double[] doubleArray39 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double40 = org.apache.commons.math.stat.StatUtils.mean(doubleArray39);
        double double42 = org.apache.commons.math.stat.StatUtils.variance(doubleArray39, 27.0d);
        double double44 = org.apache.commons.math.stat.StatUtils.variance(doubleArray39, (double) (byte) 10);
        double double45 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray31, doubleArray39);
        double double46 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray39);
        double double47 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray39);
        // The following exception was thrown during execution in test generation
        try {
            double double50 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, (int) 'a', (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 27.0d + "'", double22 == 27.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 27.0d + "'", double24 == 27.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 10.0d + "'", double34 == 10.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 7.0d + "'", double35 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 7.0d + "'", double40 == 7.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 27.0d + "'", double42 == 27.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 27.0d + "'", double44 == 27.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 4.605170185988092d + "'", double46 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double[] doubleArray13 = new double[] { (-1L), 0, 10L };
        double double16 = org.apache.commons.math.stat.StatUtils.max(doubleArray13, 0, 0);
        double double17 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray13);
        double double18 = org.apache.commons.math.stat.StatUtils.min(doubleArray13);
        double double19 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double20 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double22 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray13, (double) 100.0f);
        double double23 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray13);
        double double24 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray13);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray13);
        // The following exception was thrown during execution in test generation
        try {
            double double28 = org.apache.commons.math.stat.StatUtils.product(doubleArray13, (int) 'a', 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 101.0d + "'", double17 == 101.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 37.0d + "'", double19 == 37.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 37.0d + "'", double20 == 37.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 101.0d + "'", double24 == 101.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double3 = org.apache.commons.math.stat.StatUtils.product(doubleArray0, 100, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) 10);
        double double18 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        double double20 = org.apache.commons.math.stat.StatUtils.product(doubleArray11);
        double double21 = org.apache.commons.math.stat.StatUtils.min(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 37.0d + "'", double17 == 37.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.0d) + "'", double20 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1.0d) + "'", double21 == (-1.0d));
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double24 = org.apache.commons.math.stat.StatUtils.min(doubleArray18);
        double double25 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        // The following exception was thrown during execution in test generation
        try {
            double double28 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray18, (int) '4', (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.641588833612779d + "'", double23 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4.641588833612779d + "'", double25 == 4.641588833612779d);
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray27);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27);
        double double33 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray27);
        double double34 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double36 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) '#');
        double double38 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, 12.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double41 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4.641588833612779d + "'", double29 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 27.0d + "'", double36 == 27.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        double[] doubleArray5 = new double[] { '#', 10.0f, 'a', 12.0d, 37.0d };
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray5);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray5);
        // The following exception was thrown during execution in test generation
        try {
            double double10 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray5, 10, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[35.0, 10.0, 97.0, 12.0, 37.0]");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 191.0d + "'", double6 == 191.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1237.7d + "'", double7 == 1237.7d);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 0, 1, (int) (short) 1);
        double double10 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double13 = org.apache.commons.math.stat.StatUtils.min(doubleArray3, (int) (byte) 1, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 27.0d + "'", double10 == 27.0d);
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 3.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3, (int) ' ', (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 27.0d + "'", double9 == 27.0d);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double1 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double11 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, 1, 1);
        // The following exception was thrown during execution in test generation
        try {
            double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, (int) (short) 1, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 21.0d + "'", double7 == 21.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 21.0d + "'", double8 == 21.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double9 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, (int) (short) 100, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 27.0d + "'", double6 == 27.0d);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double24 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double[] doubleArray28 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double29 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        double double30 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray28);
        double double31 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray28);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray28);
        double double34 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28);
        double double37 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28, (int) (short) 1, 0);
        double double38 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray28);
        double double39 = org.apache.commons.math.stat.StatUtils.min(doubleArray28);
        double double40 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        // The following exception was thrown during execution in test generation
        try {
            double double43 = org.apache.commons.math.stat.StatUtils.product(doubleArray28, 10, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.641588833612779d + "'", double23 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 7.0d + "'", double24 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 7.0d + "'", double29 == 7.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 4.641588833612779d + "'", double30 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.605170185988092d + "'", double31 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.605170185988092d + "'", double34 == 4.605170185988092d);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 7.0d + "'", double40 == 7.0d);
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray27);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27);
        double double33 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray27);
        double double34 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27, (int) (byte) 0, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            double double40 = org.apache.commons.math.stat.StatUtils.min(doubleArray27, 10, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 21.0d + "'", double7 == 21.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4.641588833612779d + "'", double29 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.641588833612779d + "'", double34 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 10.000000000000002d + "'", double37 == 10.000000000000002d);
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double19 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, (int) (short) 1, (int) (short) 0);
        double[] doubleArray23 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double24 = org.apache.commons.math.stat.StatUtils.mean(doubleArray23);
        double double25 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray23);
        // The following exception was thrown during execution in test generation
        try {
            double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray23, (int) (byte) -1, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 9.0d + "'", double16 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 7.0d + "'", double24 == 7.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-4.0d) + "'", double25 == (-4.0d));
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 27.0d);
        double double16 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) (byte) 10);
        double double17 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double[] doubleArray22 = new double[] { (-1L), 0, 10L };
        double double25 = org.apache.commons.math.stat.StatUtils.max(doubleArray22, 0, 0);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray22, 21.0d);
        double double28 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray22);
        double double30 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (double) 10.0f);
        // The following exception was thrown during execution in test generation
        try {
            double double33 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11, 100, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 27.0d + "'", double14 == 27.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 27.0d + "'", double16 == 27.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4.605170185988092d + "'", double18 == 4.605170185988092d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 37.0d + "'", double27 == 37.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 12.0d + "'", double28 == 12.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        double double28 = org.apache.commons.math.stat.StatUtils.max(doubleArray25, 0, 0);
        double double29 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray25);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        double double36 = org.apache.commons.math.stat.StatUtils.max(doubleArray33, 0, 0);
        double double37 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray33);
        double double39 = org.apache.commons.math.stat.StatUtils.variance(doubleArray33, (double) 10);
        double double40 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray25, doubleArray33);
        double double42 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray25, 100.0d);
        double double44 = org.apache.commons.math.stat.StatUtils.variance(doubleArray25, (double) 100.0f);
        // The following exception was thrown during execution in test generation
        try {
            double double47 = org.apache.commons.math.stat.StatUtils.variance(doubleArray25, (int) (byte) -1, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 101.0d + "'", double29 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 101.0d + "'", double37 == 101.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 37.0d + "'", double39 == 37.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 127.0d + "'", double42 == 127.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 37.0d + "'", double44 == 37.0d);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double19 = org.apache.commons.math.stat.StatUtils.max(doubleArray10);
        // The following exception was thrown during execution in test generation
        try {
            double double22 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, (int) '#', (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 3.0d + "'", double18 == 3.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.sum(doubleArray31);
        double[] doubleArray38 = new double[] { (-1L), 0, 10L };
        double double41 = org.apache.commons.math.stat.StatUtils.max(doubleArray38, 0, 0);
        double double43 = org.apache.commons.math.stat.StatUtils.variance(doubleArray38, 21.0d);
        double double45 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray31, doubleArray38, 4.605170185988092d);
        double double46 = org.apache.commons.math.stat.StatUtils.mean(doubleArray38);
        double double47 = org.apache.commons.math.stat.StatUtils.max(doubleArray38);
        double double48 = org.apache.commons.math.stat.StatUtils.sum(doubleArray38);
        double[] doubleArray52 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double53 = org.apache.commons.math.stat.StatUtils.mean(doubleArray52);
        double double54 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray52);
        double double55 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray52);
        double double56 = org.apache.commons.math.stat.StatUtils.max(doubleArray52);
        double double59 = org.apache.commons.math.stat.StatUtils.sum(doubleArray52, (int) (short) 1, 0);
        double double62 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray52, (int) (short) 0, (int) (byte) 0);
        double double64 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray38, doubleArray52, (double) '#');
        double double65 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray52);
        double[] doubleArray69 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double70 = org.apache.commons.math.stat.StatUtils.mean(doubleArray69);
        double double72 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray69, (double) 100.0f);
        double[] doubleArray76 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double77 = org.apache.commons.math.stat.StatUtils.mean(doubleArray76);
        double double78 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray76);
        double double79 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray76);
        double double80 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray69, doubleArray76);
        double[] doubleArray84 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double85 = org.apache.commons.math.stat.StatUtils.mean(doubleArray84);
        double double86 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray84);
        double double87 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray69, doubleArray84);
        double double88 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray84);
        double double89 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray52, doubleArray84);
        java.lang.Class<?> wildcardClass90 = doubleArray52.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 21.0d + "'", double34 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 37.0d + "'", double43 == 37.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 127.00000000000001d + "'", double45 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 3.0d + "'", double46 == 3.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10.0d + "'", double47 == 10.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 9.0d + "'", double48 == 9.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 7.0d + "'", double53 == 7.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 4.641588833612779d + "'", double54 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 4.605170185988092d + "'", double55 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 10.0d + "'", double56 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 127.0d + "'", double64 == 127.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 7.0d + "'", double70 == 7.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 10.0d + "'", double72 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 7.0d + "'", double77 == 7.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 4.641588833612779d + "'", double78 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 4.605170185988092d + "'", double79 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 7.0d + "'", double85 == 7.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 4.641588833612779d + "'", double86 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 4.641588833612779d + "'", double88 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (double) 100.0f);
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, 27.0d);
        double double24 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) (byte) 10);
        double double25 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, (double) (short) 1);
        double double28 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double31 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, 0, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 27.0d + "'", double22 == 27.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 27.0d + "'", double24 == 27.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 27.0d + "'", double28 == 27.0d);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) (byte) 100);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double19 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray13, 37.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double22 = org.apache.commons.math.stat.StatUtils.product(doubleArray13, (int) (byte) 0, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.641588833612779d + "'", double15 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.605170185988092d + "'", double16 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 27.0d + "'", double17 == 27.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double15 = org.apache.commons.math.stat.StatUtils.product(doubleArray3, (int) (short) 1, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.sum(doubleArray31);
        double[] doubleArray38 = new double[] { (-1L), 0, 10L };
        double double41 = org.apache.commons.math.stat.StatUtils.max(doubleArray38, 0, 0);
        double double43 = org.apache.commons.math.stat.StatUtils.variance(doubleArray38, 21.0d);
        double double45 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray31, doubleArray38, 4.605170185988092d);
        double double46 = org.apache.commons.math.stat.StatUtils.mean(doubleArray38);
        double double47 = org.apache.commons.math.stat.StatUtils.max(doubleArray38);
        double double48 = org.apache.commons.math.stat.StatUtils.sum(doubleArray38);
        double[] doubleArray52 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double53 = org.apache.commons.math.stat.StatUtils.mean(doubleArray52);
        double double54 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray52);
        double double55 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray52);
        double double56 = org.apache.commons.math.stat.StatUtils.max(doubleArray52);
        double double59 = org.apache.commons.math.stat.StatUtils.sum(doubleArray52, (int) (short) 1, 0);
        double double62 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray52, (int) (short) 0, (int) (byte) 0);
        double double64 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray38, doubleArray52, (double) '#');
        double double65 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray52);
        double[] doubleArray69 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double70 = org.apache.commons.math.stat.StatUtils.mean(doubleArray69);
        double double72 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray69, (double) 100.0f);
        double[] doubleArray76 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double77 = org.apache.commons.math.stat.StatUtils.mean(doubleArray76);
        double double78 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray76);
        double double79 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray76);
        double double80 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray69, doubleArray76);
        double[] doubleArray84 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double85 = org.apache.commons.math.stat.StatUtils.mean(doubleArray84);
        double double86 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray84);
        double double87 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray69, doubleArray84);
        double double88 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray84);
        double double89 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray52, doubleArray84);
        double double90 = org.apache.commons.math.stat.StatUtils.max(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 21.0d + "'", double34 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 37.0d + "'", double43 == 37.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 127.00000000000001d + "'", double45 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 3.0d + "'", double46 == 3.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10.0d + "'", double47 == 10.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 9.0d + "'", double48 == 9.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 7.0d + "'", double53 == 7.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 4.641588833612779d + "'", double54 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 4.605170185988092d + "'", double55 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 10.0d + "'", double56 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 127.0d + "'", double64 == 127.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 7.0d + "'", double70 == 7.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 10.0d + "'", double72 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 7.0d + "'", double77 == 7.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 4.641588833612779d + "'", double78 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 4.605170185988092d + "'", double79 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 7.0d + "'", double85 == 7.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 4.641588833612779d + "'", double86 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 4.641588833612779d + "'", double88 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 10.0d + "'", double90 == 10.0d);
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double18 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray13);
        // The following exception was thrown during execution in test generation
        try {
            double double22 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray13, (int) (byte) 100, (int) (byte) 1, 4.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.641588833612779d + "'", double15 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.605170185988092d + "'", double16 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 27.0d + "'", double17 == 27.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-4.0d) + "'", double18 == (-4.0d));
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double8 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 21.0d);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double11 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3, (int) (short) 10, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 37.0d + "'", double8 == 37.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 101.0d + "'", double11 == 101.0d);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) 10);
        double double18 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, 0, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 37.0d + "'", double17 == 37.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 37.0d + "'", double19 == 37.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 3.0d + "'", double20 == 3.0d);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double[] doubleArray19 = new double[] { (-1L), 0, 10L };
        double double22 = org.apache.commons.math.stat.StatUtils.max(doubleArray19, 0, 0);
        double double23 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray19);
        double double25 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) 10);
        double double26 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11);
        double double29 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, 3.0d);
        double double30 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double33 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, (int) (short) 100, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 4.641588833612779d + "'", double7 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 101.0d + "'", double23 == 101.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 37.0d + "'", double25 == 37.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 37.0d + "'", double27 == 37.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 127.0d + "'", double29 == 127.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 4.605170185988092d + "'", double30 == 4.605170185988092d);
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        double double28 = org.apache.commons.math.stat.StatUtils.product(doubleArray12);
        double double31 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray12, (int) (byte) 0, (int) (short) 0);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray12);
        double double34 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, 27.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-0.0d) + "'", double28 == (-0.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 37.0d + "'", double32 == 37.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.9199999999999999d) + "'", double34 == (-0.9199999999999999d));
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 27.0d);
        double double16 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) (byte) 10);
        double double17 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double[] doubleArray22 = new double[] { (-1L), 0, 10L };
        double double25 = org.apache.commons.math.stat.StatUtils.max(doubleArray22, 0, 0);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray22, 21.0d);
        double double28 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray22);
        double double30 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (double) 10.0f);
        // The following exception was thrown during execution in test generation
        try {
            double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11, (int) (byte) 1, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 27.0d + "'", double14 == 27.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 27.0d + "'", double16 == 27.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4.605170185988092d + "'", double18 == 4.605170185988092d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 37.0d + "'", double27 == 37.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 12.0d + "'", double28 == 12.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double24 = org.apache.commons.math.stat.StatUtils.min(doubleArray18);
        // The following exception was thrown during execution in test generation
        try {
            double double28 = org.apache.commons.math.stat.StatUtils.variance(doubleArray18, (double) ' ', (int) '4', (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.641588833612779d + "'", double23 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double double15 = org.apache.commons.math.stat.StatUtils.min(doubleArray10);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sum(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray19);
        double double24 = org.apache.commons.math.stat.StatUtils.min(doubleArray19);
        double[] doubleArray28 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double29 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        double double31 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray28, (double) 100.0f);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray35);
        double double39 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray28, doubleArray35);
        double[] doubleArray43 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double44 = org.apache.commons.math.stat.StatUtils.mean(doubleArray43);
        double double45 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray43);
        double double46 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray28, doubleArray43);
        double double47 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray43);
        double double48 = org.apache.commons.math.stat.StatUtils.variance(doubleArray43);
        double double49 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray19, doubleArray43);
        double double50 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray43);
        double double51 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray43);
        double double53 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray10, doubleArray43, (double) 0.0f);
        double double54 = org.apache.commons.math.stat.StatUtils.max(doubleArray10);
        java.lang.Class<?> wildcardClass55 = doubleArray10.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 21.0d + "'", double22 == 21.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 7.0d + "'", double29 == 7.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 10.0d + "'", double31 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 4.605170185988092d + "'", double38 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 7.0d + "'", double44 == 7.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 4.641588833612779d + "'", double45 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 4.641588833612779d + "'", double47 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 27.0d + "'", double48 == 27.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4.641588833612779d + "'", double50 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4.605170185988092d + "'", double51 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 10.0d + "'", double54 == 10.0d);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) (byte) 100);
        java.lang.Class<?> wildcardClass7 = doubleArray3.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 27.0d + "'", double6 == 27.0d);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double4 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray0, 100, (int) (byte) 0, (-0.72d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double1 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray27);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27);
        double double33 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray27);
        double double34 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray38 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double39 = org.apache.commons.math.stat.StatUtils.mean(doubleArray38);
        double double40 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray38);
        double double41 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray38);
        double double42 = org.apache.commons.math.stat.StatUtils.variance(doubleArray38);
        double double43 = org.apache.commons.math.stat.StatUtils.min(doubleArray38);
        double[] doubleArray47 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double48 = org.apache.commons.math.stat.StatUtils.mean(doubleArray47);
        double double50 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray47, (double) 100.0f);
        double[] doubleArray54 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double55 = org.apache.commons.math.stat.StatUtils.mean(doubleArray54);
        double double56 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray54);
        double double57 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray54);
        double double58 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray47, doubleArray54);
        double[] doubleArray62 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double63 = org.apache.commons.math.stat.StatUtils.mean(doubleArray62);
        double double64 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray62);
        double double65 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray47, doubleArray62);
        double double66 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray62);
        double double67 = org.apache.commons.math.stat.StatUtils.variance(doubleArray62);
        double double68 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray38, doubleArray62);
        double double69 = org.apache.commons.math.stat.StatUtils.min(doubleArray38);
        double double71 = org.apache.commons.math.stat.StatUtils.variance(doubleArray38, (double) '#');
        double double72 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray38);
        // The following exception was thrown during execution in test generation
        try {
            double double75 = org.apache.commons.math.stat.StatUtils.min(doubleArray38, (-1), (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4.641588833612779d + "'", double29 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 7.0d + "'", double39 == 7.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 4.641588833612779d + "'", double40 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 4.605170185988092d + "'", double41 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 27.0d + "'", double42 == 27.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 7.0d + "'", double48 == 7.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 7.0d + "'", double55 == 7.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 4.641588833612779d + "'", double56 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 4.605170185988092d + "'", double57 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 7.0d + "'", double63 == 7.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 4.641588833612779d + "'", double64 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 4.641588833612779d + "'", double66 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 27.0d + "'", double67 == 27.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 27.0d + "'", double71 == 27.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double19 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, (int) (short) 100, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double11 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3, (int) (byte) 0, (int) (byte) 1);
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3, 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            double double18 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, (int) (short) -1, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 4.641588833612779d + "'", double8 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.000000000000002d + "'", double11 == 10.000000000000002d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 0, 1, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            double double12 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3, 0, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 27.0d);
        double double16 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) (byte) 10);
        double double17 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double double22 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11, (int) (byte) 1, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            double double25 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, (int) (byte) 10, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 27.0d + "'", double14 == 27.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 27.0d + "'", double16 == 27.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4.605170185988092d + "'", double18 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4.605170185988092d + "'", double19 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double9 = org.apache.commons.math.stat.StatUtils.min(doubleArray3, (int) (short) -1, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 27.0d + "'", double6 == 27.0d);
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double2 = org.apache.commons.math.stat.StatUtils.variance(doubleArray0, (-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double[] doubleArray27 = new double[] { (-1L), 0, 10L };
        double double30 = org.apache.commons.math.stat.StatUtils.max(doubleArray27, 0, 0);
        double double31 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray27);
        double[] doubleArray35 = new double[] { (-1L), 0, 10L };
        double double38 = org.apache.commons.math.stat.StatUtils.max(doubleArray35, 0, 0);
        double double39 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray35);
        double double41 = org.apache.commons.math.stat.StatUtils.variance(doubleArray35, (double) 10);
        double double42 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray27, doubleArray35);
        double double43 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray35);
        double double46 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35, 1, (int) (short) 0);
        double double48 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray18, doubleArray35, 101.0d);
        double double49 = org.apache.commons.math.stat.StatUtils.max(doubleArray18);
        // The following exception was thrown during execution in test generation
        try {
            double double52 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray18, 1, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.641588833612779d + "'", double23 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 101.0d + "'", double31 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 101.0d + "'", double39 == 101.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 37.0d + "'", double41 == 37.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 127.0d + "'", double48 == 127.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 10.0d + "'", double49 == 10.0d);
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray27);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27);
        double double33 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray27);
        double double34 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double37 = org.apache.commons.math.stat.StatUtils.product(doubleArray3, (int) ' ', (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4.641588833612779d + "'", double29 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 201.0d + "'", double34 == 201.0d);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double19 = org.apache.commons.math.stat.StatUtils.max(doubleArray10);
        double[] doubleArray23 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double24 = org.apache.commons.math.stat.StatUtils.mean(doubleArray23);
        double double26 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray23, (double) 100.0f);
        double double27 = org.apache.commons.math.stat.StatUtils.mean(doubleArray23);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.variance(doubleArray31, 27.0d);
        double double36 = org.apache.commons.math.stat.StatUtils.variance(doubleArray31, (double) (byte) 10);
        double double37 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray23, doubleArray31);
        double double40 = org.apache.commons.math.stat.StatUtils.variance(doubleArray23, (int) (short) 0, (int) (byte) 0);
        double double41 = org.apache.commons.math.stat.StatUtils.product(doubleArray23);
        double double43 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray10, doubleArray23, 127.0d);
        double double45 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray10, (double) ' ');
        // The following exception was thrown during execution in test generation
        try {
            double double48 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, (int) 'a', 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 3.0d + "'", double18 == 3.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 7.0d + "'", double24 == 7.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 7.0d + "'", double27 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 27.0d + "'", double34 == 27.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 27.0d + "'", double36 == 27.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 100.0d + "'", double41 == 100.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 127.0d + "'", double43 == 127.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.72d) + "'", double45 == (-0.72d));
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray27);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27);
        double double33 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray27);
        // The following exception was thrown during execution in test generation
        try {
            double double36 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray27, (int) (short) -1, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 21.0d + "'", double7 == 21.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4.641588833612779d + "'", double29 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double11 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 4.641588833612779d + "'", double8 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 4.605170185988092d + "'", double9 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        java.lang.Class<?> wildcardClass18 = doubleArray11.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double3 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray0, (int) (short) -1, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        // The following exception was thrown during execution in test generation
        try {
            double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10, (int) ' ', (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 3.0d + "'", double18 == 3.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double double15 = org.apache.commons.math.stat.StatUtils.min(doubleArray10);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sum(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray19);
        double double24 = org.apache.commons.math.stat.StatUtils.min(doubleArray19);
        double[] doubleArray28 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double29 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        double double31 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray28, (double) 100.0f);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray35);
        double double39 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray28, doubleArray35);
        double[] doubleArray43 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double44 = org.apache.commons.math.stat.StatUtils.mean(doubleArray43);
        double double45 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray43);
        double double46 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray28, doubleArray43);
        double double47 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray43);
        double double48 = org.apache.commons.math.stat.StatUtils.variance(doubleArray43);
        double double49 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray19, doubleArray43);
        double double50 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray43);
        double double51 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray43);
        double double53 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray10, doubleArray43, (double) 0.0f);
        double double54 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray10);
        double double55 = org.apache.commons.math.stat.StatUtils.sum(doubleArray10);
        // The following exception was thrown during execution in test generation
        try {
            double double58 = org.apache.commons.math.stat.StatUtils.min(doubleArray10, (int) (byte) 100, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 21.0d + "'", double22 == 21.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 7.0d + "'", double29 == 7.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 10.0d + "'", double31 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 4.605170185988092d + "'", double38 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 7.0d + "'", double44 == 7.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 4.641588833612779d + "'", double45 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 4.641588833612779d + "'", double47 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 27.0d + "'", double48 == 27.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4.641588833612779d + "'", double50 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4.605170185988092d + "'", double51 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 201.0d + "'", double54 == 201.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 21.0d + "'", double55 == 21.0d);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        double[] doubleArray21 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double22 = org.apache.commons.math.stat.StatUtils.mean(doubleArray21);
        double double24 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray21, (double) 100.0f);
        double double25 = org.apache.commons.math.stat.StatUtils.mean(doubleArray21);
        double[] doubleArray29 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double30 = org.apache.commons.math.stat.StatUtils.mean(doubleArray29);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray29, 27.0d);
        double double34 = org.apache.commons.math.stat.StatUtils.variance(doubleArray29, (double) (byte) 10);
        double double35 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray21, doubleArray29);
        double double36 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray29);
        // The following exception was thrown during execution in test generation
        try {
            double double39 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11, (int) '#', (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 7.0d + "'", double22 == 7.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 10.0d + "'", double24 == 10.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 7.0d + "'", double25 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 7.0d + "'", double30 == 7.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 27.0d + "'", double34 == 27.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray27);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27);
        double double33 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray27);
        double double34 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double36 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) '#');
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double38 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double40 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) (byte) 100);
        double double41 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double44 = org.apache.commons.math.stat.StatUtils.min(doubleArray3, (int) (short) 100, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4.641588833612779d + "'", double29 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 27.0d + "'", double36 == 27.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 21.0d + "'", double38 == 21.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 27.0d + "'", double40 == 27.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3, (int) (byte) 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            double double13 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (-0.9199999999999999d), 100, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        double double28 = org.apache.commons.math.stat.StatUtils.product(doubleArray12);
        // The following exception was thrown during execution in test generation
        try {
            double double31 = org.apache.commons.math.stat.StatUtils.min(doubleArray12, 0, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-0.0d) + "'", double28 == (-0.0d));
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        double double29 = org.apache.commons.math.stat.StatUtils.max(doubleArray26, 0, 0);
        double double30 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray26);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        double double37 = org.apache.commons.math.stat.StatUtils.max(doubleArray34, 0, 0);
        double double38 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double double40 = org.apache.commons.math.stat.StatUtils.variance(doubleArray34, (double) 10);
        double double41 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray26, doubleArray34);
        double double42 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double double43 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray34);
        double double44 = org.apache.commons.math.stat.StatUtils.sum(doubleArray18);
        double double45 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray18);
        // The following exception was thrown during execution in test generation
        try {
            double double48 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18, (int) (short) -1, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 7.0d + "'", double22 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 101.0d + "'", double30 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 101.0d + "'", double38 == 101.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 37.0d + "'", double40 == 37.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 101.0d + "'", double42 == 101.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.0d + "'", double43 == 4.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 21.0d + "'", double44 == 21.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 4.605170185988092d + "'", double45 == 4.605170185988092d);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double19 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 1, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double18 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray13);
        double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double[] doubleArray20 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double22 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray20, (double) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.641588833612779d + "'", double15 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.605170185988092d + "'", double16 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 27.0d + "'", double17 == 27.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-4.0d) + "'", double18 == (-4.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double20 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray10);
        // The following exception was thrown during execution in test generation
        try {
            double double23 = org.apache.commons.math.stat.StatUtils.min(doubleArray10, 0, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 3.0d + "'", double18 == 3.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 101.0d + "'", double20 == 101.0d);
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double8 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 4.605170185988092d);
        double double9 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double12 = org.apache.commons.math.stat.StatUtils.product(doubleArray3, (int) (byte) 0, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 27.000000000000004d + "'", double8 == 27.000000000000004d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 4.605170185988092d + "'", double9 == 4.605170185988092d);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double[] doubleArray14 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray14);
        double double16 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray14);
        double double17 = org.apache.commons.math.stat.StatUtils.sum(doubleArray14);
        double double18 = org.apache.commons.math.stat.StatUtils.max(doubleArray14);
        double double19 = org.apache.commons.math.stat.StatUtils.variance(doubleArray14);
        double double20 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray14);
        java.lang.Class<?> wildcardClass21 = doubleArray14.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.641588833612779d + "'", double16 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 21.0d + "'", double17 == 21.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 27.0d + "'", double19 == 27.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        // The following exception was thrown during execution in test generation
        try {
            double double24 = org.apache.commons.math.stat.StatUtils.min(doubleArray3, (int) (byte) 10, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double[] doubleArray19 = new double[] { (-1L), 0, 10L };
        double double22 = org.apache.commons.math.stat.StatUtils.max(doubleArray19, 0, 0);
        double double23 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray19);
        double double25 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) 10);
        double double26 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11);
        double double29 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, 3.0d);
        double double30 = org.apache.commons.math.stat.StatUtils.min(doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double33 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11, (int) ' ', (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 4.641588833612779d + "'", double7 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 101.0d + "'", double23 == 101.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 37.0d + "'", double25 == 37.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 37.0d + "'", double27 == 37.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 127.0d + "'", double29 == 127.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-1.0d) + "'", double30 == (-1.0d));
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray27);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27);
        double double33 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray27);
        double double34 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double36 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) '#');
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double40 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3, (int) (short) -1, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4.641588833612779d + "'", double29 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 27.0d + "'", double36 == 27.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11, (int) (byte) 1, (int) (byte) 0);
        double double19 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double double20 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double24 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11, (int) (short) 100, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4.605170185988092d + "'", double19 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.605170185988092d + "'", double20 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray31, (double) 100.0f);
        double double35 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double[] doubleArray39 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double40 = org.apache.commons.math.stat.StatUtils.mean(doubleArray39);
        double double42 = org.apache.commons.math.stat.StatUtils.variance(doubleArray39, 27.0d);
        double double44 = org.apache.commons.math.stat.StatUtils.variance(doubleArray39, (double) (byte) 10);
        double double45 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray31, doubleArray39);
        double double46 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray39);
        // The following exception was thrown during execution in test generation
        try {
            double double50 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray39, (int) (byte) -1, (-1), (double) (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 10.0d + "'", double34 == 10.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 7.0d + "'", double35 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 7.0d + "'", double40 == 7.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 27.0d + "'", double42 == 27.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 27.0d + "'", double44 == 27.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) (byte) 100);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double19 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray13, 37.0d);
        double double20 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        // The following exception was thrown during execution in test generation
        try {
            double double23 = org.apache.commons.math.stat.StatUtils.product(doubleArray13, (int) '4', (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.641588833612779d + "'", double15 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.605170185988092d + "'", double16 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 27.0d + "'", double17 == 27.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.605170185988092d + "'", double20 == 4.605170185988092d);
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11, (int) (byte) 1, (int) (byte) 0);
        double[] doubleArray22 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double23 = org.apache.commons.math.stat.StatUtils.mean(doubleArray22);
        double double25 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray22, (double) 100.0f);
        double[] doubleArray29 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double30 = org.apache.commons.math.stat.StatUtils.mean(doubleArray29);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray29);
        double double32 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray29);
        double double33 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray22, doubleArray29);
        double[] doubleArray37 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double38 = org.apache.commons.math.stat.StatUtils.mean(doubleArray37);
        double double39 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray37);
        double double40 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray22, doubleArray37);
        double double41 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray37);
        double double42 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray37);
        double[] doubleArray46 = new double[] { (-1L), 0, 10L };
        double double49 = org.apache.commons.math.stat.StatUtils.max(doubleArray46, 0, 0);
        double double50 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray46);
        double[] doubleArray54 = new double[] { (-1L), 0, 10L };
        double double57 = org.apache.commons.math.stat.StatUtils.max(doubleArray54, 0, 0);
        double double58 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray54);
        double double60 = org.apache.commons.math.stat.StatUtils.variance(doubleArray54, (double) 10);
        double double61 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray46, doubleArray54);
        double double62 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray54);
        double double65 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray54, 1, (int) (short) 0);
        double double67 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray37, doubleArray54, 101.0d);
        double double68 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray54);
        // The following exception was thrown during execution in test generation
        try {
            double double71 = org.apache.commons.math.stat.StatUtils.product(doubleArray11, (int) (byte) 0, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 7.0d + "'", double23 == 7.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 10.0d + "'", double25 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 7.0d + "'", double30 == 7.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4.605170185988092d + "'", double32 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 7.0d + "'", double38 == 7.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 4.641588833612779d + "'", double39 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 4.641588833612779d + "'", double41 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 4.641588833612779d + "'", double42 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 101.0d + "'", double50 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 101.0d + "'", double58 == 101.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 37.0d + "'", double60 == 37.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 127.0d + "'", double67 == 127.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 12.0d + "'", double68 == 12.0d);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        double double28 = org.apache.commons.math.stat.StatUtils.max(doubleArray25, 0, 0);
        double double29 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray25);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        double double36 = org.apache.commons.math.stat.StatUtils.max(doubleArray33, 0, 0);
        double double37 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray33);
        double double39 = org.apache.commons.math.stat.StatUtils.variance(doubleArray33, (double) 10);
        double double40 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray25, doubleArray33);
        double double42 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray25, 100.0d);
        double double43 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double44 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double45 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double48 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, (int) (byte) -1, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 101.0d + "'", double29 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 101.0d + "'", double37 == 101.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 37.0d + "'", double39 == 37.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 127.0d + "'", double42 == 127.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 27.0d + "'", double43 == 27.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 21.0d + "'", double44 == 21.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 27.0d + "'", double45 == 27.0d);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double12 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (int) '#', 0, 7.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.variance(doubleArray18);
        double[] doubleArray27 = new double[] { (-1L), 0, 10L };
        double double30 = org.apache.commons.math.stat.StatUtils.max(doubleArray27, 0, 0);
        double double31 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray27);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.sum(doubleArray35);
        double double39 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray27, doubleArray35);
        double double40 = org.apache.commons.math.stat.StatUtils.max(doubleArray27);
        double double42 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray18, doubleArray27, 27.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double46 = org.apache.commons.math.stat.StatUtils.variance(doubleArray18, 50.0d, (int) '#', (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 27.0d + "'", double23 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 101.0d + "'", double31 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 21.0d + "'", double38 == 21.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-4.0d) + "'", double39 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 10.0d + "'", double40 == 10.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 127.0d + "'", double42 == 127.0d);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 27.0d);
        double double16 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) (byte) 10);
        double double17 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double20 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (int) (short) 0, (int) (byte) 0);
        java.lang.Class<?> wildcardClass21 = doubleArray3.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 27.0d + "'", double14 == 27.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 27.0d + "'", double16 == 27.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double12 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, 10, 100, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 100.0d + "'", double8 == 100.0d);
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) (short) 1);
        double double11 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, (int) (byte) 1, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, 1, (-1), 127.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 27.0d + "'", double6 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 27.0d + "'", double8 == 27.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        // The following exception was thrown during execution in test generation
        try {
            double double21 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, (double) 10, (int) (byte) -1, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double30 = org.apache.commons.math.stat.StatUtils.product(doubleArray12, (int) (short) 100, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        double[] doubleArray2 = new double[] { (byte) 10, 0.0d };
        double double4 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray2, 100.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double8 = org.apache.commons.math.stat.StatUtils.variance(doubleArray2, 1.0d, 0, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 10.0d + "'", double4 == 10.0d);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double20 = org.apache.commons.math.stat.StatUtils.product(doubleArray11, (int) (byte) 1, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 21.0d + "'", double17 == 21.0d);
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        double double29 = org.apache.commons.math.stat.StatUtils.max(doubleArray26, 0, 0);
        double double30 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray26);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        double double37 = org.apache.commons.math.stat.StatUtils.max(doubleArray34, 0, 0);
        double double38 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double double40 = org.apache.commons.math.stat.StatUtils.variance(doubleArray34, (double) 10);
        double double41 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray26, doubleArray34);
        double double42 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double double43 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray34);
        double[] doubleArray47 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double48 = org.apache.commons.math.stat.StatUtils.mean(doubleArray47);
        double double50 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray47, (double) 100.0f);
        double double51 = org.apache.commons.math.stat.StatUtils.variance(doubleArray47);
        double double52 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray18, doubleArray47);
        double double53 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray47);
        double double55 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray47, (double) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            double double58 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray47, (int) (byte) 1, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 7.0d + "'", double22 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 101.0d + "'", double30 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 101.0d + "'", double38 == 101.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 37.0d + "'", double40 == 37.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 101.0d + "'", double42 == 101.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.0d + "'", double43 == 4.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 7.0d + "'", double48 == 7.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 27.0d + "'", double51 == 27.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 4.641588833612779d + "'", double53 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 10.0d + "'", double55 == 10.0d);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double[] doubleArray7 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double8 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) (short) 1);
        double double11 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, (int) (byte) 1, (int) (byte) 0);
        double double13 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, 37.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double16 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3, (int) ' ', 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 27.0d + "'", double6 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 27.0d + "'", double8 == 27.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 5.32d + "'", double13 == 5.32d);
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double11 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, (int) (short) 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, (int) (short) 1, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 7.0d + "'", double8 == 7.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double12 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 10.0d + "'", double12 == 10.0d);
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double7 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: invalid quantile value: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 27.0d);
        double double8 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) (byte) 10);
        double double9 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double11 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10L);
        double double14 = org.apache.commons.math.stat.StatUtils.product(doubleArray3, 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            double double18 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (int) '#', (int) (byte) 100, (double) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 27.0d + "'", double6 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 27.0d + "'", double8 == 27.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 4.641588833612779d + "'", double9 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 27.0d + "'", double11 == 27.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray27);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27);
        double double33 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray27);
        // The following exception was thrown during execution in test generation
        try {
            double double36 = org.apache.commons.math.stat.StatUtils.min(doubleArray3, 100, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4.641588833612779d + "'", double29 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3, (int) (byte) 0, 0);
        double double10 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3, 0, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double[] doubleArray19 = new double[] { (-1L), 0, 10L };
        double double22 = org.apache.commons.math.stat.StatUtils.max(doubleArray19, 0, 0);
        double double23 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray19);
        double double25 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) 10);
        double double26 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11);
        double double29 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, 3.0d);
        double double30 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double34 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (-0.0d), 10, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 4.641588833612779d + "'", double7 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 101.0d + "'", double23 == 101.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 37.0d + "'", double25 == 37.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 37.0d + "'", double27 == 37.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 127.0d + "'", double29 == 127.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double19 = org.apache.commons.math.stat.StatUtils.max(doubleArray10);
        double[] doubleArray23 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double24 = org.apache.commons.math.stat.StatUtils.mean(doubleArray23);
        double double26 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray23, (double) 100.0f);
        double double27 = org.apache.commons.math.stat.StatUtils.mean(doubleArray23);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.variance(doubleArray31, 27.0d);
        double double36 = org.apache.commons.math.stat.StatUtils.variance(doubleArray31, (double) (byte) 10);
        double double37 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray23, doubleArray31);
        double double40 = org.apache.commons.math.stat.StatUtils.variance(doubleArray23, (int) (short) 0, (int) (byte) 0);
        double double41 = org.apache.commons.math.stat.StatUtils.product(doubleArray23);
        double double43 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray10, doubleArray23, 127.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double45 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray10, (double) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: invalid quantile value: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 3.0d + "'", double18 == 3.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 7.0d + "'", double24 == 7.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 7.0d + "'", double27 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 27.0d + "'", double34 == 27.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 27.0d + "'", double36 == 27.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 100.0d + "'", double41 == 100.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 127.0d + "'", double43 == 127.0d);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray15 = new double[] { (-1L), 0, 10L };
        double double18 = org.apache.commons.math.stat.StatUtils.max(doubleArray15, 0, 0);
        double double19 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray15);
        double[] doubleArray23 = new double[] { (-1L), 0, 10L };
        double double26 = org.apache.commons.math.stat.StatUtils.max(doubleArray23, 0, 0);
        double double27 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray23);
        double double29 = org.apache.commons.math.stat.StatUtils.variance(doubleArray23, (double) 10);
        double double30 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray15, doubleArray23);
        double double31 = org.apache.commons.math.stat.StatUtils.variance(doubleArray15);
        double double32 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray15);
        double[] doubleArray36 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double37 = org.apache.commons.math.stat.StatUtils.mean(doubleArray36);
        double double38 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray36);
        double double39 = org.apache.commons.math.stat.StatUtils.sum(doubleArray36);
        double double40 = org.apache.commons.math.stat.StatUtils.max(doubleArray36);
        double[] doubleArray44 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double45 = org.apache.commons.math.stat.StatUtils.mean(doubleArray44);
        double double47 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray44, (double) 100.0f);
        double double48 = org.apache.commons.math.stat.StatUtils.mean(doubleArray44);
        double[] doubleArray52 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double53 = org.apache.commons.math.stat.StatUtils.mean(doubleArray52);
        double double55 = org.apache.commons.math.stat.StatUtils.variance(doubleArray52, 27.0d);
        double double57 = org.apache.commons.math.stat.StatUtils.variance(doubleArray52, (double) (byte) 10);
        double double58 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray44, doubleArray52);
        double double60 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray36, doubleArray44, (double) (short) 1);
        double double61 = org.apache.commons.math.stat.StatUtils.sum(doubleArray44);
        double double63 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray44, 0.0d);
        double[] doubleArray67 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double68 = org.apache.commons.math.stat.StatUtils.mean(doubleArray67);
        double double69 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray67);
        double double70 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray67);
        double double71 = org.apache.commons.math.stat.StatUtils.variance(doubleArray67);
        double[] doubleArray75 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double76 = org.apache.commons.math.stat.StatUtils.mean(doubleArray75);
        double double77 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray67, doubleArray75);
        double double78 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray75);
        // The following exception was thrown during execution in test generation
        try {
            double double82 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (int) (short) 0, (int) '4', (double) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 101.0d + "'", double19 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 101.0d + "'", double27 == 101.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 37.0d + "'", double29 == 37.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 37.0d + "'", double31 == 37.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4.0d + "'", double32 == 4.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 7.0d + "'", double37 == 7.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 4.641588833612779d + "'", double38 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 21.0d + "'", double39 == 21.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 10.0d + "'", double40 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 7.0d + "'", double45 == 7.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10.0d + "'", double47 == 10.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 7.0d + "'", double48 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 7.0d + "'", double53 == 7.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 27.0d + "'", double55 == 27.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 27.0d + "'", double57 == 27.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 21.0d + "'", double61 == 21.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 7.0d + "'", double68 == 7.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 4.641588833612779d + "'", double69 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 4.605170185988092d + "'", double70 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 27.0d + "'", double71 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 7.0d + "'", double76 == 7.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.sum(doubleArray31);
        double[] doubleArray38 = new double[] { (-1L), 0, 10L };
        double double41 = org.apache.commons.math.stat.StatUtils.max(doubleArray38, 0, 0);
        double double43 = org.apache.commons.math.stat.StatUtils.variance(doubleArray38, 21.0d);
        double double45 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray31, doubleArray38, 4.605170185988092d);
        double double46 = org.apache.commons.math.stat.StatUtils.mean(doubleArray38);
        double double47 = org.apache.commons.math.stat.StatUtils.max(doubleArray38);
        double double48 = org.apache.commons.math.stat.StatUtils.sum(doubleArray38);
        double[] doubleArray52 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double53 = org.apache.commons.math.stat.StatUtils.mean(doubleArray52);
        double double54 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray52);
        double double55 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray52);
        double double56 = org.apache.commons.math.stat.StatUtils.max(doubleArray52);
        double double59 = org.apache.commons.math.stat.StatUtils.sum(doubleArray52, (int) (short) 1, 0);
        double double62 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray52, (int) (short) 0, (int) (byte) 0);
        double double64 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray38, doubleArray52, (double) '#');
        double double65 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray52);
        double[] doubleArray69 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double70 = org.apache.commons.math.stat.StatUtils.mean(doubleArray69);
        double double71 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray69);
        double double72 = org.apache.commons.math.stat.StatUtils.sum(doubleArray69);
        double double73 = org.apache.commons.math.stat.StatUtils.sum(doubleArray69);
        double double74 = org.apache.commons.math.stat.StatUtils.min(doubleArray69);
        double double75 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray69);
        double double76 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray69);
        double double79 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3, 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            double double82 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3, 10, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 21.0d + "'", double34 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 37.0d + "'", double43 == 37.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 127.00000000000001d + "'", double45 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 3.0d + "'", double46 == 3.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10.0d + "'", double47 == 10.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 9.0d + "'", double48 == 9.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 7.0d + "'", double53 == 7.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 4.641588833612779d + "'", double54 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 4.605170185988092d + "'", double55 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 10.0d + "'", double56 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 127.0d + "'", double64 == 127.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 7.0d + "'", double70 == 7.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 4.641588833612779d + "'", double71 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 21.0d + "'", double72 == 21.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 21.0d + "'", double73 == 21.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 201.0d + "'", double75 == 201.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double79));
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        double double29 = org.apache.commons.math.stat.StatUtils.max(doubleArray26, 0, 0);
        double double30 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray26);
        double[] doubleArray34 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double35 = org.apache.commons.math.stat.StatUtils.mean(doubleArray34);
        double double36 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray34);
        double double37 = org.apache.commons.math.stat.StatUtils.sum(doubleArray34);
        double double38 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray26, doubleArray34);
        double double39 = org.apache.commons.math.stat.StatUtils.sum(doubleArray26);
        double double42 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray26, (int) (short) 1, (int) (short) 0);
        double double43 = org.apache.commons.math.stat.StatUtils.product(doubleArray26);
        double double44 = org.apache.commons.math.stat.StatUtils.max(doubleArray26);
        double double45 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray18, doubleArray26);
        // The following exception was thrown during execution in test generation
        try {
            double double47 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray18, (double) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: invalid quantile value: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 101.0d + "'", double30 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 7.0d + "'", double35 == 7.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 4.641588833612779d + "'", double36 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 21.0d + "'", double37 == 21.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-4.0d) + "'", double38 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 9.0d + "'", double39 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-0.0d) + "'", double43 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 10.0d + "'", double44 == 10.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 12.0d + "'", double45 == 12.0d);
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double3 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray0, (-1), (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        double double28 = org.apache.commons.math.stat.StatUtils.max(doubleArray25, 0, 0);
        double double29 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray25);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        double double36 = org.apache.commons.math.stat.StatUtils.max(doubleArray33, 0, 0);
        double double37 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray33);
        double double39 = org.apache.commons.math.stat.StatUtils.variance(doubleArray33, (double) 10);
        double double40 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray25, doubleArray33);
        double double42 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray25, 100.0d);
        double double44 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, 27.000000000000004d);
        double[] doubleArray48 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double49 = org.apache.commons.math.stat.StatUtils.mean(doubleArray48);
        double double50 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray48);
        double double51 = org.apache.commons.math.stat.StatUtils.sum(doubleArray48);
        double double52 = org.apache.commons.math.stat.StatUtils.max(doubleArray48);
        double[] doubleArray56 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double57 = org.apache.commons.math.stat.StatUtils.mean(doubleArray56);
        double double59 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray56, (double) 100.0f);
        double double60 = org.apache.commons.math.stat.StatUtils.mean(doubleArray56);
        double[] doubleArray64 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double65 = org.apache.commons.math.stat.StatUtils.mean(doubleArray64);
        double double67 = org.apache.commons.math.stat.StatUtils.variance(doubleArray64, 27.0d);
        double double69 = org.apache.commons.math.stat.StatUtils.variance(doubleArray64, (double) (byte) 10);
        double double70 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray56, doubleArray64);
        double double72 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray48, doubleArray56, (double) (short) 1);
        double[] doubleArray76 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double77 = org.apache.commons.math.stat.StatUtils.mean(doubleArray76);
        double double79 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray76, (double) 100.0f);
        double double80 = org.apache.commons.math.stat.StatUtils.mean(doubleArray76);
        double[] doubleArray84 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double85 = org.apache.commons.math.stat.StatUtils.mean(doubleArray84);
        double double87 = org.apache.commons.math.stat.StatUtils.variance(doubleArray84, 27.0d);
        double double89 = org.apache.commons.math.stat.StatUtils.variance(doubleArray84, (double) (byte) 10);
        double double90 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray76, doubleArray84);
        double double91 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray84);
        double double92 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray48, doubleArray84);
        double double93 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray48);
        double double96 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray48, (int) (short) 0, 1);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 101.0d + "'", double29 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 101.0d + "'", double37 == 101.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 37.0d + "'", double39 == 37.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 127.0d + "'", double42 == 127.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.7200000000000006d + "'", double44 == 1.7200000000000006d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 7.0d + "'", double49 == 7.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4.641588833612779d + "'", double50 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 21.0d + "'", double51 == 21.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 10.0d + "'", double52 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 7.0d + "'", double57 == 7.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 10.0d + "'", double59 == 10.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 7.0d + "'", double60 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 7.0d + "'", double65 == 7.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 27.0d + "'", double67 == 27.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 27.0d + "'", double69 == 27.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 7.0d + "'", double77 == 7.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 10.0d + "'", double79 == 10.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 7.0d + "'", double80 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 7.0d + "'", double85 == 7.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 27.0d + "'", double87 == 27.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 27.0d + "'", double89 == 27.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 4.605170185988092d + "'", double91 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 2.302585092994046d + "'", double96 == 2.302585092994046d);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray27);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27);
        double double33 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray27);
        double double34 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double36 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) '#');
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double38 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double41 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (int) (short) 0, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4.641588833612779d + "'", double29 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 27.0d + "'", double36 == 27.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 21.0d + "'", double38 == 21.0d);
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double[] doubleArray27 = new double[] { (-1L), 0, 10L };
        double double30 = org.apache.commons.math.stat.StatUtils.max(doubleArray27, 0, 0);
        double double31 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray27);
        double[] doubleArray35 = new double[] { (-1L), 0, 10L };
        double double38 = org.apache.commons.math.stat.StatUtils.max(doubleArray35, 0, 0);
        double double39 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray35);
        double double41 = org.apache.commons.math.stat.StatUtils.variance(doubleArray35, (double) 10);
        double double42 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray27, doubleArray35);
        double double43 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray35);
        double double46 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35, 1, (int) (short) 0);
        double double48 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray18, doubleArray35, 101.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double51 = org.apache.commons.math.stat.StatUtils.product(doubleArray18, (int) (short) 1, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.641588833612779d + "'", double23 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 101.0d + "'", double31 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 101.0d + "'", double39 == 101.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 37.0d + "'", double41 == 37.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 127.0d + "'", double48 == 127.0d);
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 3.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double12 = org.apache.commons.math.stat.StatUtils.product(doubleArray3, (int) '#', (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 27.0d + "'", double9 == 27.0d);
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double19 = org.apache.commons.math.stat.StatUtils.max(doubleArray10);
        double[] doubleArray23 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double24 = org.apache.commons.math.stat.StatUtils.mean(doubleArray23);
        double double26 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray23, (double) 100.0f);
        double double27 = org.apache.commons.math.stat.StatUtils.mean(doubleArray23);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.variance(doubleArray31, 27.0d);
        double double36 = org.apache.commons.math.stat.StatUtils.variance(doubleArray31, (double) (byte) 10);
        double double37 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray23, doubleArray31);
        double double40 = org.apache.commons.math.stat.StatUtils.variance(doubleArray23, (int) (short) 0, (int) (byte) 0);
        double double41 = org.apache.commons.math.stat.StatUtils.product(doubleArray23);
        double double43 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray10, doubleArray23, 127.0d);
        double double44 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray23);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 3.0d + "'", double18 == 3.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 7.0d + "'", double24 == 7.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 7.0d + "'", double27 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 27.0d + "'", double34 == 27.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 27.0d + "'", double36 == 27.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 100.0d + "'", double41 == 100.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 127.0d + "'", double43 == 127.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 201.0d + "'", double44 == 201.0d);
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        double double28 = org.apache.commons.math.stat.StatUtils.product(doubleArray12);
        double double31 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray12, (int) (byte) 0, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            double double34 = org.apache.commons.math.stat.StatUtils.min(doubleArray12, (int) 'a', (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-0.0d) + "'", double28 == (-0.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray20);
        double[] doubleArray29 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double30 = org.apache.commons.math.stat.StatUtils.mean(doubleArray29);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray29);
        double double32 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray29);
        double double33 = org.apache.commons.math.stat.StatUtils.variance(doubleArray29);
        double[] doubleArray37 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double38 = org.apache.commons.math.stat.StatUtils.mean(doubleArray37);
        double double39 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray29, doubleArray37);
        double double41 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray29, (double) 10.0f);
        // The following exception was thrown during execution in test generation
        try {
            double double44 = org.apache.commons.math.stat.StatUtils.max(doubleArray29, (int) (short) 0, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 21.0d + "'", double8 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 7.0d + "'", double30 == 7.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4.605170185988092d + "'", double32 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 27.0d + "'", double33 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 7.0d + "'", double38 == 7.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (double) 100.0f);
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, 27.0d);
        double double24 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) (byte) 10);
        double double25 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, (double) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            double double31 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) (-1L), (int) '4', (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 27.0d + "'", double22 == 27.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 27.0d + "'", double24 == 27.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double11 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (int) 'a', (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 21.0d + "'", double7 == 21.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (double) 100.0f);
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, 27.0d);
        double double24 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) (byte) 10);
        double double25 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, (double) (short) 1);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.sum(doubleArray31);
        double double35 = org.apache.commons.math.stat.StatUtils.max(doubleArray31);
        double double37 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray31, (double) (byte) 100);
        double[] doubleArray41 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double42 = org.apache.commons.math.stat.StatUtils.mean(doubleArray41);
        double double43 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray41);
        double double44 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray41);
        double double45 = org.apache.commons.math.stat.StatUtils.variance(doubleArray41);
        double double47 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray31, doubleArray41, 37.0d);
        double double48 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            double double51 = org.apache.commons.math.stat.StatUtils.min(doubleArray11, 0, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 27.0d + "'", double22 == 27.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 27.0d + "'", double24 == 27.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 21.0d + "'", double34 == 21.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 10.0d + "'", double35 == 10.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 10.0d + "'", double37 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 7.0d + "'", double42 == 7.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.641588833612779d + "'", double43 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 4.605170185988092d + "'", double44 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 27.0d + "'", double45 == 27.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double24 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3, 0, 0);
        double[] doubleArray28 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double29 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        double double30 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray28);
        double double31 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray28);
        double double33 = org.apache.commons.math.stat.StatUtils.min(doubleArray28);
        double[] doubleArray37 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double38 = org.apache.commons.math.stat.StatUtils.mean(doubleArray37);
        double double40 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray37, (double) 100.0f);
        double[] doubleArray44 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double45 = org.apache.commons.math.stat.StatUtils.mean(doubleArray44);
        double double46 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray44);
        double double47 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray44);
        double double48 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray37, doubleArray44);
        double[] doubleArray52 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double53 = org.apache.commons.math.stat.StatUtils.mean(doubleArray52);
        double double54 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray52);
        double double55 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray37, doubleArray52);
        double double56 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray52);
        double double57 = org.apache.commons.math.stat.StatUtils.variance(doubleArray52);
        double double58 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray28, doubleArray52);
        double double59 = org.apache.commons.math.stat.StatUtils.min(doubleArray28);
        double double61 = org.apache.commons.math.stat.StatUtils.variance(doubleArray28, (double) '#');
        double double62 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray28);
        // The following exception was thrown during execution in test generation
        try {
            double double65 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, (int) (byte) 10, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 7.0d + "'", double29 == 7.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 4.641588833612779d + "'", double30 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.605170185988092d + "'", double31 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 7.0d + "'", double38 == 7.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 10.0d + "'", double40 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 7.0d + "'", double45 == 7.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 4.641588833612779d + "'", double46 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 4.605170185988092d + "'", double47 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 7.0d + "'", double53 == 7.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 4.641588833612779d + "'", double54 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 4.641588833612779d + "'", double56 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 27.0d + "'", double57 == 27.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 27.0d + "'", double61 == 27.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double[] doubleArray13 = new double[] { (-1L), 0, 10L };
        double double16 = org.apache.commons.math.stat.StatUtils.max(doubleArray13, 0, 0);
        double double17 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray13);
        double double18 = org.apache.commons.math.stat.StatUtils.min(doubleArray13);
        double double19 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double20 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double22 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray13, (double) 100.0f);
        double double23 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray13);
        double double24 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray13);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray13);
        double double26 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        // The following exception was thrown during execution in test generation
        try {
            double double29 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13, (int) (short) 10, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 101.0d + "'", double17 == 101.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 37.0d + "'", double19 == 37.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 37.0d + "'", double20 == 37.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 101.0d + "'", double24 == 101.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 3.0d + "'", double26 == 3.0d);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        double double28 = org.apache.commons.math.stat.StatUtils.max(doubleArray25, 0, 0);
        double double29 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray25);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        double double36 = org.apache.commons.math.stat.StatUtils.max(doubleArray33, 0, 0);
        double double37 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray33);
        double double39 = org.apache.commons.math.stat.StatUtils.variance(doubleArray33, (double) 10);
        double double40 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray25, doubleArray33);
        double double42 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray25, 100.0d);
        double double43 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double double44 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray48 = new double[] { (-1L), 0, 10L };
        double double51 = org.apache.commons.math.stat.StatUtils.max(doubleArray48, 0, 0);
        double double52 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray48);
        double[] doubleArray56 = new double[] { (-1L), 0, 10L };
        double double59 = org.apache.commons.math.stat.StatUtils.max(doubleArray56, 0, 0);
        double double60 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray56);
        double double62 = org.apache.commons.math.stat.StatUtils.variance(doubleArray56, (double) 10);
        double double63 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray48, doubleArray56);
        double double64 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray56);
        double[] doubleArray68 = new double[] { (-1L), 0, 10L };
        double double71 = org.apache.commons.math.stat.StatUtils.max(doubleArray68, 0, 0);
        double double72 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray68);
        double double73 = org.apache.commons.math.stat.StatUtils.min(doubleArray68);
        double double74 = org.apache.commons.math.stat.StatUtils.variance(doubleArray68);
        double double75 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray56, doubleArray68);
        // The following exception was thrown during execution in test generation
        try {
            double double78 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray56, (int) (short) -1, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 101.0d + "'", double29 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 101.0d + "'", double37 == 101.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 37.0d + "'", double39 == 37.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 127.0d + "'", double42 == 127.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 100.0d + "'", double43 == 100.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 21.0d + "'", double44 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 101.0d + "'", double52 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 101.0d + "'", double60 == 101.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 37.0d + "'", double62 == 37.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 12.0d + "'", double64 == 12.0d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 101.0d + "'", double72 == 101.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-1.0d) + "'", double73 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 37.0d + "'", double74 == 37.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sum(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray11, doubleArray19);
        double double24 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double27 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11, (int) (short) 1, (int) (short) 0);
        double double28 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double29 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double32 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11, (int) '#', (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 21.0d + "'", double22 == 21.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-4.0d) + "'", double23 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 9.0d + "'", double24 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 12.0d + "'", double28 == 12.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 37.0d + "'", double29 == 37.0d);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        double double28 = org.apache.commons.math.stat.StatUtils.max(doubleArray25, 0, 0);
        double double29 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray25);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        double double36 = org.apache.commons.math.stat.StatUtils.max(doubleArray33, 0, 0);
        double double37 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray33);
        double double39 = org.apache.commons.math.stat.StatUtils.variance(doubleArray33, (double) 10);
        double double40 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray25, doubleArray33);
        double double42 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray25, 100.0d);
        double double45 = org.apache.commons.math.stat.StatUtils.variance(doubleArray25, 1, 0);
        double double46 = org.apache.commons.math.stat.StatUtils.mean(doubleArray25);
        double double47 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray25);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 101.0d + "'", double29 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 101.0d + "'", double37 == 101.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 37.0d + "'", double39 == 37.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 127.0d + "'", double42 == 127.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 3.0d + "'", double46 == 3.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        double double29 = org.apache.commons.math.stat.StatUtils.max(doubleArray26, 0, 0);
        double double30 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray26);
        double[] doubleArray34 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double35 = org.apache.commons.math.stat.StatUtils.mean(doubleArray34);
        double double36 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray34);
        double double37 = org.apache.commons.math.stat.StatUtils.sum(doubleArray34);
        double double38 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray26, doubleArray34);
        double double39 = org.apache.commons.math.stat.StatUtils.sum(doubleArray26);
        double double42 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray26, (int) (short) 1, (int) (short) 0);
        double double43 = org.apache.commons.math.stat.StatUtils.product(doubleArray26);
        double double44 = org.apache.commons.math.stat.StatUtils.max(doubleArray26);
        double double45 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray18, doubleArray26);
        double[] doubleArray49 = new double[] { (-1L), 0, 10L };
        double double52 = org.apache.commons.math.stat.StatUtils.max(doubleArray49, 0, 0);
        double double53 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray49);
        double[] doubleArray57 = new double[] { (-1L), 0, 10L };
        double double60 = org.apache.commons.math.stat.StatUtils.max(doubleArray57, 0, 0);
        double double61 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray57);
        double double63 = org.apache.commons.math.stat.StatUtils.variance(doubleArray57, (double) 10);
        double double64 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray49, doubleArray57);
        double double65 = org.apache.commons.math.stat.StatUtils.variance(doubleArray49);
        double double67 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray26, doubleArray49, Double.NaN);
        double double68 = org.apache.commons.math.stat.StatUtils.variance(doubleArray49);
        // The following exception was thrown during execution in test generation
        try {
            double double72 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray49, (int) (short) 100, (int) (byte) 0, (double) (-1.0f));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 101.0d + "'", double30 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 7.0d + "'", double35 == 7.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 4.641588833612779d + "'", double36 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 21.0d + "'", double37 == 21.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-4.0d) + "'", double38 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 9.0d + "'", double39 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-0.0d) + "'", double43 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 10.0d + "'", double44 == 10.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 12.0d + "'", double45 == 12.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 101.0d + "'", double53 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 101.0d + "'", double61 == 101.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 37.0d + "'", double63 == 37.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 37.0d + "'", double65 == 37.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 37.0d + "'", double68 == 37.0d);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        double double29 = org.apache.commons.math.stat.StatUtils.variance(doubleArray12, (double) 1L);
        double double30 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 37.0d + "'", double29 == 37.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 3.0d + "'", double30 == 3.0d);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double8 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, (-1), (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            double double12 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: invalid quantile value: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double24 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double[] doubleArray28 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double29 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        double double30 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray28);
        double double31 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray28);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray28);
        double double34 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28);
        double double37 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28, (int) (short) 1, 0);
        double double38 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray28);
        double[] doubleArray42 = new double[] { (-1L), 0, 10L };
        double double45 = org.apache.commons.math.stat.StatUtils.max(doubleArray42, 0, 0);
        double double46 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray42);
        double[] doubleArray50 = new double[] { (-1L), 0, 10L };
        double double53 = org.apache.commons.math.stat.StatUtils.max(doubleArray50, 0, 0);
        double double54 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray50);
        double double56 = org.apache.commons.math.stat.StatUtils.variance(doubleArray50, (double) 10);
        double double57 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray42, doubleArray50);
        double double58 = org.apache.commons.math.stat.StatUtils.max(doubleArray50);
        double double59 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray50);
        double[] doubleArray63 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double64 = org.apache.commons.math.stat.StatUtils.mean(doubleArray63);
        double double66 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray63, (double) 100.0f);
        double double67 = org.apache.commons.math.stat.StatUtils.mean(doubleArray63);
        double double68 = org.apache.commons.math.stat.StatUtils.mean(doubleArray63);
        double double70 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray50, doubleArray63, 101.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double73 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray50, (int) (byte) -1, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.641588833612779d + "'", double23 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 7.0d + "'", double24 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 7.0d + "'", double29 == 7.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 4.641588833612779d + "'", double30 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.605170185988092d + "'", double31 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.605170185988092d + "'", double34 == 4.605170185988092d);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 101.0d + "'", double46 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 101.0d + "'", double54 == 101.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 37.0d + "'", double56 == 37.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 10.0d + "'", double58 == 10.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4.0d + "'", double59 == 4.0d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 7.0d + "'", double64 == 7.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 10.0d + "'", double66 == 10.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 7.0d + "'", double67 == 7.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 7.0d + "'", double68 == 7.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 127.0d + "'", double70 == 127.0d);
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double17 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double21 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (int) (short) 0, (int) '4', 5.32d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double8 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 4.605170185988092d);
        double double9 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double12 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 27.267451525600872d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 27.000000000000004d + "'", double8 == 27.000000000000004d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 4.605170185988092d + "'", double9 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 27.0d + "'", double12 == 27.0d);
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double13 = org.apache.commons.math.stat.StatUtils.min(doubleArray3, 10, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 4.641588833612779d + "'", double8 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 7.0d + "'", double9 == 7.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 4.605170185988092d + "'", double10 == 4.605170185988092d);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.variance(doubleArray18);
        double[] doubleArray27 = new double[] { (-1L), 0, 10L };
        double double30 = org.apache.commons.math.stat.StatUtils.max(doubleArray27, 0, 0);
        double double31 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray27);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.sum(doubleArray35);
        double double39 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray27, doubleArray35);
        double double40 = org.apache.commons.math.stat.StatUtils.max(doubleArray27);
        double double42 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray18, doubleArray27, 27.0d);
        double double43 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray27);
        double double44 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double[] doubleArray48 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double49 = org.apache.commons.math.stat.StatUtils.mean(doubleArray48);
        double double51 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray48, (double) 100.0f);
        double[] doubleArray55 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double56 = org.apache.commons.math.stat.StatUtils.mean(doubleArray55);
        double double57 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray55);
        double double58 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray55);
        double double59 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray48, doubleArray55);
        double[] doubleArray63 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double64 = org.apache.commons.math.stat.StatUtils.mean(doubleArray63);
        double double65 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray63);
        double double66 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray48, doubleArray63);
        double[] doubleArray70 = new double[] { (-1L), 0, 10L };
        double double73 = org.apache.commons.math.stat.StatUtils.max(doubleArray70, 0, 0);
        double double74 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray70);
        double[] doubleArray78 = new double[] { (-1L), 0, 10L };
        double double81 = org.apache.commons.math.stat.StatUtils.max(doubleArray78, 0, 0);
        double double82 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray78);
        double double84 = org.apache.commons.math.stat.StatUtils.variance(doubleArray78, (double) 10);
        double double85 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray70, doubleArray78);
        double double87 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray48, doubleArray70, 100.0d);
        double double90 = org.apache.commons.math.stat.StatUtils.variance(doubleArray70, 1, 0);
        double double91 = org.apache.commons.math.stat.StatUtils.mean(doubleArray70);
        double double92 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray27, doubleArray70);
        // The following exception was thrown during execution in test generation
        try {
            double double95 = org.apache.commons.math.stat.StatUtils.variance(doubleArray70, (int) (short) -1, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 27.0d + "'", double23 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 101.0d + "'", double31 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 21.0d + "'", double38 == 21.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-4.0d) + "'", double39 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 10.0d + "'", double40 == 10.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 127.0d + "'", double42 == 127.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 3.0d + "'", double44 == 3.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 7.0d + "'", double49 == 7.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 10.0d + "'", double51 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 7.0d + "'", double56 == 7.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 4.641588833612779d + "'", double57 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 4.605170185988092d + "'", double58 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 7.0d + "'", double64 == 7.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 4.641588833612779d + "'", double65 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 101.0d + "'", double74 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 101.0d + "'", double82 == 101.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 37.0d + "'", double84 == 37.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 127.0d + "'", double87 == 127.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double90));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 3.0d + "'", double91 == 3.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray10);
        double double16 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, (double) '#');
        java.lang.Class<?> wildcardClass17 = doubleArray3.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray31, (double) 100.0f);
        double double35 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double[] doubleArray39 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double40 = org.apache.commons.math.stat.StatUtils.mean(doubleArray39);
        double double42 = org.apache.commons.math.stat.StatUtils.variance(doubleArray39, 27.0d);
        double double44 = org.apache.commons.math.stat.StatUtils.variance(doubleArray39, (double) (byte) 10);
        double double45 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray31, doubleArray39);
        double double46 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray39);
        double double49 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, (int) (byte) 1, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            double double52 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, (int) 'a', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 10.0d + "'", double34 == 10.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 7.0d + "'", double35 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 7.0d + "'", double40 == 7.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 27.0d + "'", double42 == 27.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 27.0d + "'", double44 == 27.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 10.0d + "'", double49 == 10.0d);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        double[] doubleArray0 = null;
        double[] doubleArray4 = new double[] { (-1L), 0, 10L };
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray4, 0, 0);
        double double8 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray4);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double double18 = org.apache.commons.math.stat.StatUtils.variance(doubleArray12, (double) 10);
        double double19 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray4, doubleArray12);
        double double20 = org.apache.commons.math.stat.StatUtils.max(doubleArray12);
        double double21 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double double22 = org.apache.commons.math.stat.StatUtils.min(doubleArray12);
        // The following exception was thrown during execution in test generation
        try {
            double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray0, doubleArray12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 101.0d + "'", double8 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 37.0d + "'", double18 == 37.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 10.0d + "'", double20 == 10.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 101.0d + "'", double21 == 101.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1.0d) + "'", double22 == (-1.0d));
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray20);
        // The following exception was thrown during execution in test generation
        try {
            double double28 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20, 1, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 21.0d + "'", double8 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        double double28 = org.apache.commons.math.stat.StatUtils.max(doubleArray25, 0, 0);
        double double29 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray25);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        double double36 = org.apache.commons.math.stat.StatUtils.max(doubleArray33, 0, 0);
        double double37 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray33);
        double double39 = org.apache.commons.math.stat.StatUtils.variance(doubleArray33, (double) 10);
        double double40 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray25, doubleArray33);
        double double42 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray25, 100.0d);
        double double45 = org.apache.commons.math.stat.StatUtils.variance(doubleArray25, 1, 0);
        double double46 = org.apache.commons.math.stat.StatUtils.mean(doubleArray25);
        // The following exception was thrown during execution in test generation
        try {
            double double49 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray25, (int) 'a', (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 101.0d + "'", double29 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 101.0d + "'", double37 == 101.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 37.0d + "'", double39 == 37.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 127.0d + "'", double42 == 127.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 3.0d + "'", double46 == 3.0d);
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double11 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (int) (short) 10, (int) '4', 10.000000000000002d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 4.641588833612779d + "'", double7 == 4.641588833612779d);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        double double29 = org.apache.commons.math.stat.StatUtils.max(doubleArray26, 0, 0);
        double double30 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray26);
        double[] doubleArray34 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double35 = org.apache.commons.math.stat.StatUtils.mean(doubleArray34);
        double double36 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray34);
        double double37 = org.apache.commons.math.stat.StatUtils.sum(doubleArray34);
        double double38 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray26, doubleArray34);
        double double39 = org.apache.commons.math.stat.StatUtils.sum(doubleArray26);
        double double42 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray26, (int) (short) 1, (int) (short) 0);
        double double43 = org.apache.commons.math.stat.StatUtils.product(doubleArray26);
        double double44 = org.apache.commons.math.stat.StatUtils.max(doubleArray26);
        double double45 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray18, doubleArray26);
        double[] doubleArray49 = new double[] { (-1L), 0, 10L };
        double double52 = org.apache.commons.math.stat.StatUtils.max(doubleArray49, 0, 0);
        double double53 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray49);
        double[] doubleArray57 = new double[] { (-1L), 0, 10L };
        double double60 = org.apache.commons.math.stat.StatUtils.max(doubleArray57, 0, 0);
        double double61 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray57);
        double double63 = org.apache.commons.math.stat.StatUtils.variance(doubleArray57, (double) 10);
        double double64 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray49, doubleArray57);
        double double65 = org.apache.commons.math.stat.StatUtils.variance(doubleArray49);
        double double67 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray26, doubleArray49, Double.NaN);
        double double68 = org.apache.commons.math.stat.StatUtils.mean(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 101.0d + "'", double30 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 7.0d + "'", double35 == 7.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 4.641588833612779d + "'", double36 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 21.0d + "'", double37 == 21.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-4.0d) + "'", double38 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 9.0d + "'", double39 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-0.0d) + "'", double43 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 10.0d + "'", double44 == 10.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 12.0d + "'", double45 == 12.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 101.0d + "'", double53 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 101.0d + "'", double61 == 101.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 37.0d + "'", double63 == 37.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 37.0d + "'", double65 == 37.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 3.0d + "'", double68 == 3.0d);
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11, (int) (byte) 1, (int) (byte) 0);
        double double19 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double double20 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double23 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, (int) (byte) -1, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4.605170185988092d + "'", double19 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 21.0d + "'", double20 == 21.0d);
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double12 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3, (int) (byte) -1, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 21.0d + "'", double7 == 21.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 21.0d + "'", double8 == 21.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 201.0d + "'", double9 == 201.0d);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 0, 1, (int) (short) 1);
        double double10 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3, (int) (byte) 1, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            double double16 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3, 0, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 4.641588833612779d + "'", double10 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 2.302585092994046d + "'", double13 == 2.302585092994046d);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        double double29 = org.apache.commons.math.stat.StatUtils.max(doubleArray26, 0, 0);
        double double30 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray26);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        double double37 = org.apache.commons.math.stat.StatUtils.max(doubleArray34, 0, 0);
        double double38 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double double40 = org.apache.commons.math.stat.StatUtils.variance(doubleArray34, (double) 10);
        double double41 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray26, doubleArray34);
        double double42 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double double43 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray34);
        double[] doubleArray47 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double48 = org.apache.commons.math.stat.StatUtils.mean(doubleArray47);
        double double50 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray47, (double) 100.0f);
        double double51 = org.apache.commons.math.stat.StatUtils.variance(doubleArray47);
        double double52 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray18, doubleArray47);
        double double53 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray47);
        double double55 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray47, (double) (byte) 100);
        double double56 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray47);
        // The following exception was thrown during execution in test generation
        try {
            double double59 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray47, 0, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 7.0d + "'", double22 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 101.0d + "'", double30 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 101.0d + "'", double38 == 101.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 37.0d + "'", double40 == 37.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 101.0d + "'", double42 == 101.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.0d + "'", double43 == 4.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 7.0d + "'", double48 == 7.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 27.0d + "'", double51 == 27.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 4.641588833612779d + "'", double53 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 10.0d + "'", double55 == 10.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 4.605170185988092d + "'", double56 == 4.605170185988092d);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double[] doubleArray13 = new double[] { (-1L), 0, 10L };
        double double16 = org.apache.commons.math.stat.StatUtils.max(doubleArray13, 0, 0);
        double double17 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray13);
        double double18 = org.apache.commons.math.stat.StatUtils.min(doubleArray13);
        double double19 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double20 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double22 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray13, (double) 100.0f);
        double double23 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray13);
        double double24 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray13);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray13);
        double double26 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        // The following exception was thrown during execution in test generation
        try {
            double double29 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13, (int) (byte) -1, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 101.0d + "'", double17 == 101.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 37.0d + "'", double19 == 37.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 37.0d + "'", double20 == 37.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 101.0d + "'", double24 == 101.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 3.0d + "'", double26 == 3.0d);
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double24 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double[] doubleArray28 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double29 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        double double30 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray28);
        double double31 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray28);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray28);
        double double34 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28);
        double double37 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28, (int) (short) 1, 0);
        double double38 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray28);
        double double39 = org.apache.commons.math.stat.StatUtils.min(doubleArray28);
        double double40 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        double[] doubleArray44 = new double[] { (-1L), 0, 10L };
        double double47 = org.apache.commons.math.stat.StatUtils.max(doubleArray44, 0, 0);
        double double48 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray44);
        double double50 = org.apache.commons.math.stat.StatUtils.variance(doubleArray44, (double) 10);
        double[] doubleArray54 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double55 = org.apache.commons.math.stat.StatUtils.mean(doubleArray54);
        double double56 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray54);
        double double57 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray54);
        double double58 = org.apache.commons.math.stat.StatUtils.variance(doubleArray54);
        double double59 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray44, doubleArray54);
        double[] doubleArray63 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double64 = org.apache.commons.math.stat.StatUtils.mean(doubleArray63);
        double double65 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray63);
        double double66 = org.apache.commons.math.stat.StatUtils.sum(doubleArray63);
        double double67 = org.apache.commons.math.stat.StatUtils.max(doubleArray63);
        double double69 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray63, (double) (byte) 100);
        double[] doubleArray73 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double74 = org.apache.commons.math.stat.StatUtils.mean(doubleArray73);
        double double75 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray73);
        double double76 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray73);
        double double77 = org.apache.commons.math.stat.StatUtils.variance(doubleArray73);
        double double79 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray63, doubleArray73, 37.0d);
        double double80 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray54, doubleArray73);
        double double82 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray28, doubleArray73, (double) 10.0f);
        java.lang.Class<?> wildcardClass83 = doubleArray73.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.641588833612779d + "'", double23 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 7.0d + "'", double24 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 7.0d + "'", double29 == 7.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 4.641588833612779d + "'", double30 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.605170185988092d + "'", double31 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.605170185988092d + "'", double34 == 4.605170185988092d);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 7.0d + "'", double40 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 101.0d + "'", double48 == 101.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 37.0d + "'", double50 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 7.0d + "'", double55 == 7.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 4.641588833612779d + "'", double56 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 4.605170185988092d + "'", double57 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 27.0d + "'", double58 == 27.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-4.0d) + "'", double59 == (-4.0d));
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 7.0d + "'", double64 == 7.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 4.641588833612779d + "'", double65 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 21.0d + "'", double66 == 21.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 10.0d + "'", double67 == 10.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 10.0d + "'", double69 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 7.0d + "'", double74 == 7.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 4.641588833612779d + "'", double75 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 4.605170185988092d + "'", double76 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 27.0d + "'", double77 == 27.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double9 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 27.0d + "'", double6 == 27.0d);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double17 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray21 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double22 = org.apache.commons.math.stat.StatUtils.mean(doubleArray21);
        double double24 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray21, (double) 100.0f);
        double double25 = org.apache.commons.math.stat.StatUtils.mean(doubleArray21);
        double[] doubleArray29 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double30 = org.apache.commons.math.stat.StatUtils.mean(doubleArray29);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray29, 27.0d);
        double double34 = org.apache.commons.math.stat.StatUtils.variance(doubleArray29, (double) (byte) 10);
        double double35 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray21, doubleArray29);
        double double36 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray29);
        double double37 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray29);
        double double38 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray29);
        // The following exception was thrown during execution in test generation
        try {
            double double41 = org.apache.commons.math.stat.StatUtils.max(doubleArray29, (int) (short) 100, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 3.0d + "'", double17 == 3.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 7.0d + "'", double22 == 7.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 10.0d + "'", double24 == 10.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 7.0d + "'", double25 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 7.0d + "'", double30 == 7.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 27.0d + "'", double34 == 27.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 4.605170185988092d + "'", double36 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.605170185988092d + "'", double37 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-4.0d) + "'", double38 == (-4.0d));
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        double double29 = org.apache.commons.math.stat.StatUtils.max(doubleArray26, 0, 0);
        double double30 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray26);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        double double37 = org.apache.commons.math.stat.StatUtils.max(doubleArray34, 0, 0);
        double double38 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double double40 = org.apache.commons.math.stat.StatUtils.variance(doubleArray34, (double) 10);
        double double41 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray26, doubleArray34);
        double double42 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double double43 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray34);
        double[] doubleArray47 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double48 = org.apache.commons.math.stat.StatUtils.mean(doubleArray47);
        double double50 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray47, (double) 100.0f);
        double double51 = org.apache.commons.math.stat.StatUtils.variance(doubleArray47);
        double double52 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray18, doubleArray47);
        double double53 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray47);
        // The following exception was thrown during execution in test generation
        try {
            double double56 = org.apache.commons.math.stat.StatUtils.sum(doubleArray47, (int) (byte) 1, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 7.0d + "'", double22 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 101.0d + "'", double30 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 101.0d + "'", double38 == 101.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 37.0d + "'", double40 == 37.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 101.0d + "'", double42 == 101.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.0d + "'", double43 == 4.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 7.0d + "'", double48 == 7.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 27.0d + "'", double51 == 27.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 4.605170185988092d + "'", double53 == 4.605170185988092d);
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        double double28 = org.apache.commons.math.stat.StatUtils.max(doubleArray25, 0, 0);
        double double29 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray25);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        double double36 = org.apache.commons.math.stat.StatUtils.max(doubleArray33, 0, 0);
        double double37 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray33);
        double double39 = org.apache.commons.math.stat.StatUtils.variance(doubleArray33, (double) 10);
        double double40 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray25, doubleArray33);
        double double42 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray25, 100.0d);
        double double43 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double46 = org.apache.commons.math.stat.StatUtils.product(doubleArray3, (int) ' ', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 101.0d + "'", double29 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 101.0d + "'", double37 == 101.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 37.0d + "'", double39 == 37.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 127.0d + "'", double42 == 127.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 100.0d + "'", double43 == 100.0d);
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) (short) 1);
        double double11 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, (int) (byte) 1, (int) (byte) 0);
        double double13 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, 37.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double16 = org.apache.commons.math.stat.StatUtils.product(doubleArray3, 0, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 27.0d + "'", double6 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 27.0d + "'", double8 == 27.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 5.32d + "'", double13 == 5.32d);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double19 = org.apache.commons.math.stat.StatUtils.max(doubleArray10);
        double double20 = org.apache.commons.math.stat.StatUtils.sum(doubleArray10);
        double[] doubleArray24 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double25 = org.apache.commons.math.stat.StatUtils.mean(doubleArray24);
        double double26 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray24);
        double double27 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray24);
        double double28 = org.apache.commons.math.stat.StatUtils.max(doubleArray24);
        double double31 = org.apache.commons.math.stat.StatUtils.sum(doubleArray24, (int) (short) 1, 0);
        double double34 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray24, (int) (short) 0, (int) (byte) 0);
        double double36 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray10, doubleArray24, (double) '#');
        double double37 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray10);
        double[] doubleArray41 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double42 = org.apache.commons.math.stat.StatUtils.mean(doubleArray41);
        double double44 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray41, (double) 100.0f);
        double[] doubleArray48 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double49 = org.apache.commons.math.stat.StatUtils.mean(doubleArray48);
        double double50 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray48);
        double double51 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray48);
        double double52 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray41, doubleArray48);
        double double53 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray10, doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            double double56 = org.apache.commons.math.stat.StatUtils.min(doubleArray10, (int) (byte) -1, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 3.0d + "'", double18 == 3.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 9.0d + "'", double20 == 9.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 7.0d + "'", double25 == 7.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 4.641588833612779d + "'", double26 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 4.605170185988092d + "'", double27 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 127.0d + "'", double36 == 127.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 101.0d + "'", double37 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 7.0d + "'", double42 == 7.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 10.0d + "'", double44 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 7.0d + "'", double49 == 7.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4.641588833612779d + "'", double50 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4.605170185988092d + "'", double51 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-12.0d) + "'", double53 == (-12.0d));
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double3 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray0, (int) (byte) 100, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        double double29 = org.apache.commons.math.stat.StatUtils.max(doubleArray26, 0, 0);
        double double30 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray26);
        double[] doubleArray34 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double35 = org.apache.commons.math.stat.StatUtils.mean(doubleArray34);
        double double36 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray34);
        double double37 = org.apache.commons.math.stat.StatUtils.sum(doubleArray34);
        double double38 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray26, doubleArray34);
        double double39 = org.apache.commons.math.stat.StatUtils.sum(doubleArray26);
        double double42 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray26, (int) (short) 1, (int) (short) 0);
        double double43 = org.apache.commons.math.stat.StatUtils.product(doubleArray26);
        double double44 = org.apache.commons.math.stat.StatUtils.max(doubleArray26);
        double double45 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray18, doubleArray26);
        // The following exception was thrown during execution in test generation
        try {
            double double49 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray18, (int) (short) 1, (int) (short) 0, (-4.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: invalid quantile value: -4.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 101.0d + "'", double30 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 7.0d + "'", double35 == 7.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 4.641588833612779d + "'", double36 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 21.0d + "'", double37 == 21.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-4.0d) + "'", double38 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 9.0d + "'", double39 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-0.0d) + "'", double43 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 10.0d + "'", double44 == 10.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 12.0d + "'", double45 == 12.0d);
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double24 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double[] doubleArray28 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double29 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        double double30 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray28);
        double double31 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray28);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray28);
        double double34 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28);
        double double37 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28, (int) (short) 1, 0);
        double double38 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray28);
        double[] doubleArray42 = new double[] { (-1L), 0, 10L };
        double double45 = org.apache.commons.math.stat.StatUtils.max(doubleArray42, 0, 0);
        double double46 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray42);
        double[] doubleArray50 = new double[] { (-1L), 0, 10L };
        double double53 = org.apache.commons.math.stat.StatUtils.max(doubleArray50, 0, 0);
        double double54 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray50);
        double double56 = org.apache.commons.math.stat.StatUtils.variance(doubleArray50, (double) 10);
        double double57 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray42, doubleArray50);
        double double58 = org.apache.commons.math.stat.StatUtils.max(doubleArray50);
        double double59 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray50);
        double[] doubleArray63 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double64 = org.apache.commons.math.stat.StatUtils.mean(doubleArray63);
        double double66 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray63, (double) 100.0f);
        double double67 = org.apache.commons.math.stat.StatUtils.mean(doubleArray63);
        double double68 = org.apache.commons.math.stat.StatUtils.mean(doubleArray63);
        double double70 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray50, doubleArray63, 101.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double73 = org.apache.commons.math.stat.StatUtils.variance(doubleArray50, (int) (short) -1, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.641588833612779d + "'", double23 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 7.0d + "'", double24 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 7.0d + "'", double29 == 7.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 4.641588833612779d + "'", double30 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.605170185988092d + "'", double31 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.605170185988092d + "'", double34 == 4.605170185988092d);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 101.0d + "'", double46 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 101.0d + "'", double54 == 101.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 37.0d + "'", double56 == 37.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 10.0d + "'", double58 == 10.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4.0d + "'", double59 == 4.0d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 7.0d + "'", double64 == 7.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 10.0d + "'", double66 == 10.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 7.0d + "'", double67 == 7.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 7.0d + "'", double68 == 7.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 127.0d + "'", double70 == 127.0d);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        java.lang.Class<?> wildcardClass8 = doubleArray3.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        double[] doubleArray0 = null;
        double[] doubleArray4 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double5 = org.apache.commons.math.stat.StatUtils.mean(doubleArray4);
        double double6 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray4);
        double double7 = org.apache.commons.math.stat.StatUtils.sum(doubleArray4);
        double double9 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray4, 7.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double10 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray0, doubleArray4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 7.0d + "'", double5 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.641588833612779d + "'", double6 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 21.0d + "'", double7 == 21.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double double11 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) (short) 100);
        double double14 = org.apache.commons.math.stat.StatUtils.product(doubleArray3, 1, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            double double17 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 100, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray16 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double17 = org.apache.commons.math.stat.StatUtils.mean(doubleArray16);
        double double18 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray16);
        double double19 = org.apache.commons.math.stat.StatUtils.sum(doubleArray16);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray16);
        double[] doubleArray24 = new double[] { (-1L), 0, 10L };
        double double27 = org.apache.commons.math.stat.StatUtils.max(doubleArray24, 0, 0);
        double double28 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray24);
        double[] doubleArray32 = new double[] { (-1L), 0, 10L };
        double double35 = org.apache.commons.math.stat.StatUtils.max(doubleArray32, 0, 0);
        double double36 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray32);
        double double38 = org.apache.commons.math.stat.StatUtils.variance(doubleArray32, (double) 10);
        double double39 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray24, doubleArray32);
        double double40 = org.apache.commons.math.stat.StatUtils.variance(doubleArray24);
        double double42 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray16, doubleArray24, 3.0d);
        double double43 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray24);
        double double44 = org.apache.commons.math.stat.StatUtils.product(doubleArray24);
        double[] doubleArray48 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double49 = org.apache.commons.math.stat.StatUtils.mean(doubleArray48);
        double double50 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray48);
        double double51 = org.apache.commons.math.stat.StatUtils.sum(doubleArray48);
        double double52 = org.apache.commons.math.stat.StatUtils.sum(doubleArray48);
        double double53 = org.apache.commons.math.stat.StatUtils.sum(doubleArray48);
        double double54 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray48);
        double double55 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray24, doubleArray48);
        double double56 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray48);
        java.lang.Class<?> wildcardClass57 = doubleArray3.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 7.0d + "'", double17 == 7.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4.641588833612779d + "'", double18 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 21.0d + "'", double19 == 21.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 101.0d + "'", double28 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 101.0d + "'", double36 == 101.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 37.0d + "'", double38 == 37.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 37.0d + "'", double40 == 37.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 127.0d + "'", double42 == 127.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-0.0d) + "'", double44 == (-0.0d));
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 7.0d + "'", double49 == 7.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4.641588833612779d + "'", double50 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 21.0d + "'", double51 == 21.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 21.0d + "'", double52 == 21.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 21.0d + "'", double53 == 21.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 201.0d + "'", double54 == 201.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-12.0d) + "'", double55 == (-12.0d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double double15 = org.apache.commons.math.stat.StatUtils.min(doubleArray10);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sum(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray19);
        double double24 = org.apache.commons.math.stat.StatUtils.min(doubleArray19);
        double[] doubleArray28 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double29 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        double double31 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray28, (double) 100.0f);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray35);
        double double39 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray28, doubleArray35);
        double[] doubleArray43 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double44 = org.apache.commons.math.stat.StatUtils.mean(doubleArray43);
        double double45 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray43);
        double double46 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray28, doubleArray43);
        double double47 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray43);
        double double48 = org.apache.commons.math.stat.StatUtils.variance(doubleArray43);
        double double49 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray19, doubleArray43);
        double double50 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray43);
        double double51 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray43);
        double double53 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray10, doubleArray43, (double) 0.0f);
        double[] doubleArray57 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double58 = org.apache.commons.math.stat.StatUtils.mean(doubleArray57);
        double double59 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray57);
        double double60 = org.apache.commons.math.stat.StatUtils.sum(doubleArray57);
        double double61 = org.apache.commons.math.stat.StatUtils.max(doubleArray57);
        double[] doubleArray65 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double66 = org.apache.commons.math.stat.StatUtils.mean(doubleArray65);
        double double68 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray65, (double) 100.0f);
        double double69 = org.apache.commons.math.stat.StatUtils.mean(doubleArray65);
        double[] doubleArray73 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double74 = org.apache.commons.math.stat.StatUtils.mean(doubleArray73);
        double double76 = org.apache.commons.math.stat.StatUtils.variance(doubleArray73, 27.0d);
        double double78 = org.apache.commons.math.stat.StatUtils.variance(doubleArray73, (double) (byte) 10);
        double double79 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray65, doubleArray73);
        double double81 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray57, doubleArray65, (double) (short) 1);
        double double82 = org.apache.commons.math.stat.StatUtils.sum(doubleArray65);
        double double84 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray43, doubleArray65, (double) 0L);
        java.lang.Class<?> wildcardClass85 = doubleArray43.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 21.0d + "'", double22 == 21.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 7.0d + "'", double29 == 7.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 10.0d + "'", double31 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 4.605170185988092d + "'", double38 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 7.0d + "'", double44 == 7.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 4.641588833612779d + "'", double45 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 4.641588833612779d + "'", double47 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 27.0d + "'", double48 == 27.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4.641588833612779d + "'", double50 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4.605170185988092d + "'", double51 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 7.0d + "'", double58 == 7.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4.641588833612779d + "'", double59 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 21.0d + "'", double60 == 21.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 10.0d + "'", double61 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 7.0d + "'", double66 == 7.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 10.0d + "'", double68 == 10.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 7.0d + "'", double69 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 7.0d + "'", double74 == 7.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 27.0d + "'", double76 == 27.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 27.0d + "'", double78 == 27.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 21.0d + "'", double82 == 21.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 27.0d);
        double double16 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) (byte) 10);
        double double17 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double23 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (int) ' ', (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 27.0d + "'", double14 == 27.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 27.0d + "'", double16 == 27.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4.605170185988092d + "'", double18 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4.605170185988092d + "'", double19 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray31, (double) 100.0f);
        double double35 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double[] doubleArray39 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double40 = org.apache.commons.math.stat.StatUtils.mean(doubleArray39);
        double double42 = org.apache.commons.math.stat.StatUtils.variance(doubleArray39, 27.0d);
        double double44 = org.apache.commons.math.stat.StatUtils.variance(doubleArray39, (double) (byte) 10);
        double double45 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray31, doubleArray39);
        double double46 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray39);
        double double49 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, (int) (byte) 1, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            double double52 = org.apache.commons.math.stat.StatUtils.min(doubleArray3, (int) (short) 10, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 10.0d + "'", double34 == 10.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 7.0d + "'", double35 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 7.0d + "'", double40 == 7.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 27.0d + "'", double42 == 27.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 27.0d + "'", double44 == 27.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 10.0d + "'", double49 == 10.0d);
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray27);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27);
        double double33 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray27);
        // The following exception was thrown during execution in test generation
        try {
            double double36 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) -1, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4.641588833612779d + "'", double29 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (double) 100.0f);
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, 27.0d);
        double double24 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) (byte) 10);
        double double25 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, (double) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            double double30 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (int) (short) 1, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 27.0d + "'", double22 == 27.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 27.0d + "'", double24 == 27.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray27);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27);
        double double33 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray27);
        double double36 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 0, (int) (byte) 1);
        double double38 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) ' ');
        // The following exception was thrown during execution in test generation
        try {
            double double41 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3, (int) '4', (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4.641588833612779d + "'", double29 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 10.0d + "'", double36 == 10.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.5200000000000005d + "'", double38 == 3.5200000000000005d);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) (byte) 100);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double19 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray13, 37.0d);
        double double20 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.641588833612779d + "'", double15 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.605170185988092d + "'", double16 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 27.0d + "'", double17 == 27.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 27.0d + "'", double20 == 27.0d);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 1);
        double double10 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double11 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 4.641588833612779d + "'", double11 == 4.641588833612779d);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 0, 1, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            double double12 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, 0, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        // The following exception was thrown during execution in test generation
        try {
            double double21 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 1237.7d, 0, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (double) 100.0f);
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, 27.0d);
        double double24 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) (byte) 10);
        double double25 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, (double) (short) 1);
        java.lang.Class<?> wildcardClass28 = doubleArray11.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 27.0d + "'", double22 == 27.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 27.0d + "'", double24 == 27.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (-1L), 0, 10L };
        double double21 = org.apache.commons.math.stat.StatUtils.max(doubleArray18, 0, 0);
        double double22 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray18);
        double[] doubleArray26 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double27 = org.apache.commons.math.stat.StatUtils.mean(doubleArray26);
        double double28 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray26);
        double double29 = org.apache.commons.math.stat.StatUtils.sum(doubleArray26);
        double double30 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray26);
        double double33 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray26, (int) (byte) 1, (int) (byte) 0);
        double double34 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray26);
        double double35 = org.apache.commons.math.stat.StatUtils.min(doubleArray26);
        double double37 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray10, doubleArray26, 1.7200000000000006d);
        // The following exception was thrown during execution in test generation
        try {
            double double40 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray26, (int) (short) 0, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 101.0d + "'", double22 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 7.0d + "'", double27 == 7.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 4.641588833612779d + "'", double28 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 21.0d + "'", double29 == 21.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-4.0d) + "'", double30 == (-4.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.605170185988092d + "'", double34 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double3 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray0, 0, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double double11 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            double double14 = org.apache.commons.math.stat.StatUtils.product(doubleArray3, 1, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (double) 100.0f);
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, 27.0d);
        double double24 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) (byte) 10);
        double double25 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, (double) (short) 1);
        double double28 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double31 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, (int) (byte) 1, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 27.0d + "'", double22 == 27.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 27.0d + "'", double24 == 27.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 21.0d + "'", double28 == 21.0d);
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double11 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3, (int) (byte) 1, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 4.641588833612779d + "'", double7 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 4.605170185988092d + "'", double8 == 4.605170185988092d);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double18 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray13);
        double[] doubleArray22 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double23 = org.apache.commons.math.stat.StatUtils.mean(doubleArray22);
        double double24 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray22);
        double[] doubleArray28 = new double[] { (-1L), 0, 10L };
        double double31 = org.apache.commons.math.stat.StatUtils.max(doubleArray28, 0, 0);
        double double32 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray28);
        double[] doubleArray36 = new double[] { (-1L), 0, 10L };
        double double39 = org.apache.commons.math.stat.StatUtils.max(doubleArray36, 0, 0);
        double double40 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray36);
        double double42 = org.apache.commons.math.stat.StatUtils.variance(doubleArray36, (double) 10);
        double double43 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray28, doubleArray36);
        double double44 = org.apache.commons.math.stat.StatUtils.max(doubleArray36);
        double double45 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray36);
        double double46 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray36);
        double[] doubleArray50 = new double[] { (-1L), 0, 10L };
        double double53 = org.apache.commons.math.stat.StatUtils.max(doubleArray50, 0, 0);
        double double54 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray50);
        double[] doubleArray58 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double59 = org.apache.commons.math.stat.StatUtils.mean(doubleArray58);
        double double60 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray58);
        double double61 = org.apache.commons.math.stat.StatUtils.sum(doubleArray58);
        double double62 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray50, doubleArray58);
        double double63 = org.apache.commons.math.stat.StatUtils.sum(doubleArray50);
        double double66 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray50, (int) (short) 1, (int) (short) 0);
        double double69 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray50, (int) (byte) 0, (int) (byte) 0);
        double double70 = org.apache.commons.math.stat.StatUtils.min(doubleArray50);
        double[] doubleArray74 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double75 = org.apache.commons.math.stat.StatUtils.mean(doubleArray74);
        double double76 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray74);
        double double77 = org.apache.commons.math.stat.StatUtils.sum(doubleArray74);
        double double78 = org.apache.commons.math.stat.StatUtils.sum(doubleArray74);
        double double79 = org.apache.commons.math.stat.StatUtils.max(doubleArray74);
        double double80 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray74);
        double double81 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray50, doubleArray74);
        double double83 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray36, doubleArray50, (double) (-1L));
        // The following exception was thrown during execution in test generation
        try {
            double double86 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray50, (int) (short) 0, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.641588833612779d + "'", double15 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.605170185988092d + "'", double16 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 27.0d + "'", double17 == 27.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-4.0d) + "'", double18 == (-4.0d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 7.0d + "'", double23 == 7.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-12.0d) + "'", double24 == (-12.0d));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 101.0d + "'", double32 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 101.0d + "'", double40 == 101.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 37.0d + "'", double42 == 37.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 10.0d + "'", double44 == 10.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 101.0d + "'", double45 == 101.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 101.0d + "'", double54 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 7.0d + "'", double59 == 7.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 4.641588833612779d + "'", double60 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 21.0d + "'", double61 == 21.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-4.0d) + "'", double62 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 9.0d + "'", double63 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-1.0d) + "'", double70 == (-1.0d));
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 7.0d + "'", double75 == 7.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 4.641588833612779d + "'", double76 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 21.0d + "'", double77 == 21.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 21.0d + "'", double78 == 21.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 10.0d + "'", double79 == 10.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 201.0d + "'", double80 == 201.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-4.0d) + "'", double81 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double18 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray13);
        double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 0, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.641588833612779d + "'", double15 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.605170185988092d + "'", double16 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 27.0d + "'", double17 == 27.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-4.0d) + "'", double18 == (-4.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double double15 = org.apache.commons.math.stat.StatUtils.min(doubleArray10);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sum(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray19);
        double double24 = org.apache.commons.math.stat.StatUtils.min(doubleArray19);
        double[] doubleArray28 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double29 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        double double31 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray28, (double) 100.0f);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray35);
        double double39 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray28, doubleArray35);
        double[] doubleArray43 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double44 = org.apache.commons.math.stat.StatUtils.mean(doubleArray43);
        double double45 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray43);
        double double46 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray28, doubleArray43);
        double double47 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray43);
        double double48 = org.apache.commons.math.stat.StatUtils.variance(doubleArray43);
        double double49 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray19, doubleArray43);
        double double50 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray43);
        double double51 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray43);
        double double53 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray10, doubleArray43, (double) 0.0f);
        double double54 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray10);
        double double55 = org.apache.commons.math.stat.StatUtils.sum(doubleArray10);
        double[] doubleArray56 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double57 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray10, doubleArray56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 21.0d + "'", double22 == 21.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 7.0d + "'", double29 == 7.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 10.0d + "'", double31 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 4.605170185988092d + "'", double38 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 7.0d + "'", double44 == 7.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 4.641588833612779d + "'", double45 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 4.641588833612779d + "'", double47 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 27.0d + "'", double48 == 27.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4.641588833612779d + "'", double50 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4.605170185988092d + "'", double51 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 201.0d + "'", double54 == 201.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 21.0d + "'", double55 == 21.0d);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) 10);
        double double18 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double23 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 101.0d, (int) (byte) 100, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 37.0d + "'", double17 == 37.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 101.0d + "'", double19 == 101.0d);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) 10);
        double double18 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double23 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double24 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double27 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 37.0d + "'", double17 == 37.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 37.0d + "'", double19 == 37.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 3.0d + "'", double20 == 3.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 101.0d + "'", double24 == 101.0d);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double double15 = org.apache.commons.math.stat.StatUtils.min(doubleArray10);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sum(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray19);
        double double24 = org.apache.commons.math.stat.StatUtils.min(doubleArray19);
        double[] doubleArray28 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double29 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        double double31 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray28, (double) 100.0f);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray35);
        double double39 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray28, doubleArray35);
        double[] doubleArray43 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double44 = org.apache.commons.math.stat.StatUtils.mean(doubleArray43);
        double double45 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray43);
        double double46 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray28, doubleArray43);
        double double47 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray43);
        double double48 = org.apache.commons.math.stat.StatUtils.variance(doubleArray43);
        double double49 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray19, doubleArray43);
        double double50 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray43);
        double double51 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray43);
        double double53 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray10, doubleArray43, (double) 0.0f);
        double[] doubleArray57 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double58 = org.apache.commons.math.stat.StatUtils.mean(doubleArray57);
        double double59 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray57);
        double double60 = org.apache.commons.math.stat.StatUtils.sum(doubleArray57);
        double[] doubleArray64 = new double[] { (-1L), 0, 10L };
        double double67 = org.apache.commons.math.stat.StatUtils.max(doubleArray64, 0, 0);
        double double69 = org.apache.commons.math.stat.StatUtils.variance(doubleArray64, 21.0d);
        double double71 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray57, doubleArray64, 4.605170185988092d);
        double double72 = org.apache.commons.math.stat.StatUtils.mean(doubleArray64);
        double double73 = org.apache.commons.math.stat.StatUtils.max(doubleArray64);
        double[] doubleArray77 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double78 = org.apache.commons.math.stat.StatUtils.mean(doubleArray77);
        double double80 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray77, (double) 100.0f);
        double double81 = org.apache.commons.math.stat.StatUtils.mean(doubleArray77);
        double[] doubleArray85 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double86 = org.apache.commons.math.stat.StatUtils.mean(doubleArray85);
        double double88 = org.apache.commons.math.stat.StatUtils.variance(doubleArray85, 27.0d);
        double double90 = org.apache.commons.math.stat.StatUtils.variance(doubleArray85, (double) (byte) 10);
        double double91 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray77, doubleArray85);
        double double94 = org.apache.commons.math.stat.StatUtils.variance(doubleArray77, (int) (short) 0, (int) (byte) 0);
        double double95 = org.apache.commons.math.stat.StatUtils.product(doubleArray77);
        double double97 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray64, doubleArray77, 127.0d);
        double double99 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray43, doubleArray64, 1.7200000000000006d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 21.0d + "'", double22 == 21.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 7.0d + "'", double29 == 7.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 10.0d + "'", double31 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 4.605170185988092d + "'", double38 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 7.0d + "'", double44 == 7.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 4.641588833612779d + "'", double45 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 4.641588833612779d + "'", double47 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 27.0d + "'", double48 == 27.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4.641588833612779d + "'", double50 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4.605170185988092d + "'", double51 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 7.0d + "'", double58 == 7.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4.641588833612779d + "'", double59 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 21.0d + "'", double60 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 37.0d + "'", double69 == 37.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 127.00000000000001d + "'", double71 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 3.0d + "'", double72 == 3.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 10.0d + "'", double73 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 7.0d + "'", double78 == 7.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 10.0d + "'", double80 == 10.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 7.0d + "'", double81 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 7.0d + "'", double86 == 7.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 27.0d + "'", double88 == 27.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 27.0d + "'", double90 == 27.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double94));
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 100.0d + "'", double95 == 100.0d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 127.0d + "'", double97 == 127.0d);
        org.junit.Assert.assertTrue("'" + double99 + "' != '" + 127.0d + "'", double99 == 127.0d);
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double double15 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double19 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (int) (byte) 0, (-1), 27.000000000000004d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 100.0d + "'", double15 == 100.0d);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double18 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray13);
        double[] doubleArray22 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double23 = org.apache.commons.math.stat.StatUtils.mean(doubleArray22);
        double double24 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray22);
        // The following exception was thrown during execution in test generation
        try {
            double double27 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3, (int) (short) 0, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.641588833612779d + "'", double15 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.605170185988092d + "'", double16 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 27.0d + "'", double17 == 27.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-4.0d) + "'", double18 == (-4.0d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 7.0d + "'", double23 == 7.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-12.0d) + "'", double24 == (-12.0d));
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (double) 100.0f);
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, 27.0d);
        double double24 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) (byte) 10);
        double double25 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, (double) (short) 1);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.sum(doubleArray31);
        double double35 = org.apache.commons.math.stat.StatUtils.max(doubleArray31);
        double double37 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray31, (double) (byte) 100);
        double[] doubleArray41 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double42 = org.apache.commons.math.stat.StatUtils.mean(doubleArray41);
        double double43 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray41);
        double double44 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray41);
        double double45 = org.apache.commons.math.stat.StatUtils.variance(doubleArray41);
        double double47 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray31, doubleArray41, 37.0d);
        double double48 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray41);
        double double49 = org.apache.commons.math.stat.StatUtils.mean(doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            double double52 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray41, (int) (short) 10, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 27.0d + "'", double22 == 27.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 27.0d + "'", double24 == 27.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 21.0d + "'", double34 == 21.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 10.0d + "'", double35 == 10.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 10.0d + "'", double37 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 7.0d + "'", double42 == 7.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.641588833612779d + "'", double43 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 4.605170185988092d + "'", double44 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 27.0d + "'", double45 == 27.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 7.0d + "'", double49 == 7.0d);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        double[] doubleArray2 = new double[] { (byte) 10, 0.0d };
        double double4 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray2, 100.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray2, (double) 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: invalid quantile value: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 10.0d + "'", double4 == 10.0d);
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) 10);
        double double18 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double[] doubleArray22 = new double[] { (-1L), 0, 10L };
        double double25 = org.apache.commons.math.stat.StatUtils.max(doubleArray22, 0, 0);
        double double26 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray22);
        double[] doubleArray30 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double31 = org.apache.commons.math.stat.StatUtils.mean(doubleArray30);
        double double32 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray30);
        double double33 = org.apache.commons.math.stat.StatUtils.sum(doubleArray30);
        double double34 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray22, doubleArray30);
        double double35 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray22);
        // The following exception was thrown during execution in test generation
        try {
            double double38 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, 100, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 37.0d + "'", double17 == 37.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 101.0d + "'", double26 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 7.0d + "'", double31 == 7.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4.641588833612779d + "'", double32 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 21.0d + "'", double33 == 21.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-4.0d) + "'", double34 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray10);
        double double16 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, (double) '#');
        double double17 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double double18 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 100.0d + "'", double17 == 100.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 0, 1, (int) (short) 1);
        double double10 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        java.lang.Class<?> wildcardClass11 = doubleArray3.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 4.641588833612779d + "'", double10 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double18 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray13);
        double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double20 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double23 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, 0, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.641588833612779d + "'", double15 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.605170185988092d + "'", double16 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 27.0d + "'", double17 == 27.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-4.0d) + "'", double18 == (-4.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 9.0d + "'", double20 == 9.0d);
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray27);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27);
        double double33 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray27);
        double double34 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray38 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double39 = org.apache.commons.math.stat.StatUtils.mean(doubleArray38);
        double double40 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray38);
        double double41 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray38);
        double double42 = org.apache.commons.math.stat.StatUtils.variance(doubleArray38);
        double double43 = org.apache.commons.math.stat.StatUtils.min(doubleArray38);
        double[] doubleArray47 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double48 = org.apache.commons.math.stat.StatUtils.mean(doubleArray47);
        double double50 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray47, (double) 100.0f);
        double[] doubleArray54 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double55 = org.apache.commons.math.stat.StatUtils.mean(doubleArray54);
        double double56 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray54);
        double double57 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray54);
        double double58 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray47, doubleArray54);
        double[] doubleArray62 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double63 = org.apache.commons.math.stat.StatUtils.mean(doubleArray62);
        double double64 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray62);
        double double65 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray47, doubleArray62);
        double double66 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray62);
        double double67 = org.apache.commons.math.stat.StatUtils.variance(doubleArray62);
        double double68 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray38, doubleArray62);
        double double69 = org.apache.commons.math.stat.StatUtils.min(doubleArray38);
        double double71 = org.apache.commons.math.stat.StatUtils.variance(doubleArray38, (double) '#');
        double double72 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray38);
        // The following exception was thrown during execution in test generation
        try {
            double double74 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray38, Double.NaN);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4.641588833612779d + "'", double29 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 7.0d + "'", double39 == 7.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 4.641588833612779d + "'", double40 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 4.605170185988092d + "'", double41 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 27.0d + "'", double42 == 27.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 7.0d + "'", double48 == 7.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 7.0d + "'", double55 == 7.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 4.641588833612779d + "'", double56 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 4.605170185988092d + "'", double57 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 7.0d + "'", double63 == 7.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 4.641588833612779d + "'", double64 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 4.641588833612779d + "'", double66 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 27.0d + "'", double67 == 27.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 27.0d + "'", double71 == 27.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray27);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27);
        double double33 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray27);
        double double34 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray38 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double39 = org.apache.commons.math.stat.StatUtils.mean(doubleArray38);
        double double40 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray38);
        double double41 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray38);
        double double42 = org.apache.commons.math.stat.StatUtils.variance(doubleArray38);
        double double43 = org.apache.commons.math.stat.StatUtils.min(doubleArray38);
        double[] doubleArray47 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double48 = org.apache.commons.math.stat.StatUtils.mean(doubleArray47);
        double double50 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray47, (double) 100.0f);
        double[] doubleArray54 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double55 = org.apache.commons.math.stat.StatUtils.mean(doubleArray54);
        double double56 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray54);
        double double57 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray54);
        double double58 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray47, doubleArray54);
        double[] doubleArray62 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double63 = org.apache.commons.math.stat.StatUtils.mean(doubleArray62);
        double double64 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray62);
        double double65 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray47, doubleArray62);
        double double66 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray62);
        double double67 = org.apache.commons.math.stat.StatUtils.variance(doubleArray62);
        double double68 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray38, doubleArray62);
        double double69 = org.apache.commons.math.stat.StatUtils.min(doubleArray38);
        double double71 = org.apache.commons.math.stat.StatUtils.variance(doubleArray38, (double) '#');
        double double72 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray38);
        double double73 = org.apache.commons.math.stat.StatUtils.sum(doubleArray38);
        // The following exception was thrown during execution in test generation
        try {
            double double76 = org.apache.commons.math.stat.StatUtils.sum(doubleArray38, 0, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4.641588833612779d + "'", double29 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 7.0d + "'", double39 == 7.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 4.641588833612779d + "'", double40 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 4.605170185988092d + "'", double41 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 27.0d + "'", double42 == 27.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 7.0d + "'", double48 == 7.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 7.0d + "'", double55 == 7.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 4.641588833612779d + "'", double56 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 4.605170185988092d + "'", double57 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 7.0d + "'", double63 == 7.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 4.641588833612779d + "'", double64 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 4.641588833612779d + "'", double66 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 27.0d + "'", double67 == 27.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 27.0d + "'", double71 == 27.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 21.0d + "'", double73 == 21.0d);
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11, (int) (byte) 1, (int) (byte) 0);
        double[] doubleArray22 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double23 = org.apache.commons.math.stat.StatUtils.mean(doubleArray22);
        double double25 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray22, (double) 100.0f);
        double[] doubleArray29 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double30 = org.apache.commons.math.stat.StatUtils.mean(doubleArray29);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray29);
        double double32 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray29);
        double double33 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray22, doubleArray29);
        double[] doubleArray37 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double38 = org.apache.commons.math.stat.StatUtils.mean(doubleArray37);
        double double39 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray37);
        double double40 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray22, doubleArray37);
        double double41 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray37);
        double double42 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray37);
        double[] doubleArray46 = new double[] { (-1L), 0, 10L };
        double double49 = org.apache.commons.math.stat.StatUtils.max(doubleArray46, 0, 0);
        double double50 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray46);
        double[] doubleArray54 = new double[] { (-1L), 0, 10L };
        double double57 = org.apache.commons.math.stat.StatUtils.max(doubleArray54, 0, 0);
        double double58 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray54);
        double double60 = org.apache.commons.math.stat.StatUtils.variance(doubleArray54, (double) 10);
        double double61 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray46, doubleArray54);
        double double62 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray54);
        double double65 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray54, 1, (int) (short) 0);
        double double67 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray37, doubleArray54, 101.0d);
        double double68 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray54);
        // The following exception was thrown during execution in test generation
        try {
            double double71 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11, 10, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 7.0d + "'", double23 == 7.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 10.0d + "'", double25 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 7.0d + "'", double30 == 7.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4.605170185988092d + "'", double32 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 7.0d + "'", double38 == 7.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 4.641588833612779d + "'", double39 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 4.641588833612779d + "'", double41 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 4.641588833612779d + "'", double42 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 101.0d + "'", double50 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 101.0d + "'", double58 == 101.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 37.0d + "'", double60 == 37.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 127.0d + "'", double67 == 127.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 12.0d + "'", double68 == 12.0d);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double18 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray13);
        double[] doubleArray22 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double23 = org.apache.commons.math.stat.StatUtils.mean(doubleArray22);
        double double24 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray22);
        java.lang.Class<?> wildcardClass25 = doubleArray3.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.641588833612779d + "'", double15 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.605170185988092d + "'", double16 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 27.0d + "'", double17 == 27.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-4.0d) + "'", double18 == (-4.0d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 7.0d + "'", double23 == 7.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-12.0d) + "'", double24 == (-12.0d));
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double24 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double[] doubleArray28 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double29 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        double double30 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray28);
        double double31 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray28);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray28);
        double double34 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28);
        double double37 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28, (int) (short) 1, 0);
        double double38 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray28);
        double[] doubleArray42 = new double[] { (-1L), 0, 10L };
        double double45 = org.apache.commons.math.stat.StatUtils.max(doubleArray42, 0, 0);
        double double46 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray42);
        double[] doubleArray50 = new double[] { (-1L), 0, 10L };
        double double53 = org.apache.commons.math.stat.StatUtils.max(doubleArray50, 0, 0);
        double double54 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray50);
        double double56 = org.apache.commons.math.stat.StatUtils.variance(doubleArray50, (double) 10);
        double double57 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray42, doubleArray50);
        double double58 = org.apache.commons.math.stat.StatUtils.max(doubleArray50);
        double double59 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray50);
        double double61 = org.apache.commons.math.stat.StatUtils.variance(doubleArray50, 0.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.641588833612779d + "'", double23 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 7.0d + "'", double24 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 7.0d + "'", double29 == 7.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 4.641588833612779d + "'", double30 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.605170185988092d + "'", double31 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.605170185988092d + "'", double34 == 4.605170185988092d);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 101.0d + "'", double46 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 101.0d + "'", double54 == 101.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 37.0d + "'", double56 == 37.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 10.0d + "'", double58 == 10.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4.0d + "'", double59 == 4.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 37.0d + "'", double61 == 37.0d);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) (byte) 100);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double19 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray13, 37.0d);
        double double20 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double21 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray13);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.641588833612779d + "'", double15 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.605170185988092d + "'", double16 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 27.0d + "'", double17 == 27.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.605170185988092d + "'", double20 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 201.0d + "'", double21 == 201.0d);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double2 = org.apache.commons.math.stat.StatUtils.variance(doubleArray0, 3.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double11 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, 10, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 27.0d + "'", double8 == 27.0d);
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double10 = org.apache.commons.math.stat.StatUtils.product(doubleArray3, (int) (byte) 1, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 4.605170185988092d + "'", double7 == 4.605170185988092d);
    }
}

