import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest4 {

    public static boolean debug = false;

    @Test
    public void test2001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2001");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        float[] floatArray18 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray21 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append(floatArray18, floatArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder12.append(true, true);
        byte[] byteArray29 = new byte[] { (byte) 100, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray33 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray34 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder30.append(shortArray33, shortArray34);
        byte[] byteArray36 = new byte[] {};
        byte[] byteArray41 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder30.append(byteArray36, byteArray41);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder25.append(byteArray29, byteArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder43.append((int) (short) 10, (int) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder46.append((long) ' ', (long) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder46.append((float) (short) -1, (float) (byte) -1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100, 10, 1]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(equalsBuilder52);
    }

    @Test
    public void test2002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2002");
        java.lang.Object obj0 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder4 = equalsBuilder1.append((short) (byte) 10, (short) 0);
        equalsBuilder1.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder6.append((short) (byte) 10, (short) 0);
        long[] longArray15 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray17 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder6.append(longArray15, longArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder19.append((short) (byte) 10, (short) 0);
        long[] longArray28 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray30 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder19.append(longArray28, longArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder1.append(longArray15, longArray30);
        java.lang.Boolean boolean33 = equalsBuilder32.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder32.append((double) (short) -1, (double) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder32.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder32.append('#', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder32.append(0, (int) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder32.append(' ', 'a');
        java.lang.Class<?> wildcardClass49 = equalsBuilder48.getClass();
        boolean boolean50 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj0, (java.lang.Object) wildcardClass49);
        org.junit.Assert.assertNotNull(equalsBuilder4);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray30), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertEquals("'" + boolean33 + "' != '" + false + "'", boolean33, false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test2003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2003");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray19 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray20 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder16.append(shortArray19, shortArray20);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder21, (java.lang.Object) '#', strArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder21.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray37 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray38 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder34.append(shortArray37, shortArray38);
        byte[] byteArray40 = new byte[] {};
        byte[] byteArray45 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder34.append(byteArray40, byteArray45);
        char[] charArray51 = new char[] { '#', ' ', '#', '#' };
        char[] charArray54 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder34.append(charArray51, charArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray59 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray60 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder56.append(shortArray59, shortArray60);
        byte[] byteArray62 = new byte[] {};
        byte[] byteArray67 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder56.append(byteArray62, byteArray67);
        char[] charArray73 = new char[] { '#', ' ', '#', '#' };
        char[] charArray76 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder56.append(charArray73, charArray76);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder21.append(charArray54, charArray73);
        java.lang.Object obj79 = null;
        boolean boolean80 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray54, obj79);
        java.lang.String[] strArray81 = new java.lang.String[] {};
        boolean boolean82 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder15, (java.lang.Object) charArray54, strArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder15.appendSuper(false);
        float[] floatArray85 = new float[] {};
        float[] floatArray87 = new float[] { (byte) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder15.append(floatArray85, floatArray87);
        boolean[] booleanArray89 = new boolean[] {};
        boolean[] booleanArray90 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder88.append(booleanArray89, booleanArray90);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder91.appendSuper(false);
        java.lang.Boolean boolean94 = equalsBuilder93.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder93.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder99 = equalsBuilder93.append(' ', '4');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(floatArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray85), "[]");
        org.junit.Assert.assertNotNull(floatArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray87), "[-1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(booleanArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray89), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertEquals("'" + boolean94 + "' != '" + false + "'", boolean94, false);
        org.junit.Assert.assertNotNull(equalsBuilder96);
        org.junit.Assert.assertNotNull(equalsBuilder99);
    }

    @Test
    public void test2004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2004");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        java.lang.Object obj7 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray18 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray19 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder15.append(shortArray18, shortArray19);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(byteArray21, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder8.append(byteArray14, byteArray26);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj7, (java.lang.Object) byteArray26, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray41 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray42 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder38.append(shortArray41, shortArray42);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder38.append(byteArray44, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder31.append(byteArray37, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(byteArray26, byteArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder52.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder52.appendSuper(false);
        boolean boolean58 = equalsBuilder57.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder57.append(0.0f, (float) (byte) 1);
        java.lang.Boolean boolean62 = equalsBuilder61.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder61.append((short) (byte) -1, (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder65.append((short) 1, (short) 1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertEquals("'" + boolean62 + "' != '" + false + "'", boolean62, false);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
    }

    @Test
    public void test2005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2005");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        double[] doubleArray80 = new double[] { (short) 0, 0.0d, (byte) 10, (byte) 0 };
        double[] doubleArray81 = new double[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder64.append(doubleArray80, doubleArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder82.append((short) 0, (short) 10);
        equalsBuilder82.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder82.append((byte) 100, (byte) 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0, 0.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder89);
    }

    @Test
    public void test2006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2006");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        float[] floatArray18 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray21 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append(floatArray18, floatArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder12.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder25.append('4', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder25.append((long) (-1), (long) ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append('a', 'a');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
    }

    @Test
    public void test2007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2007");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append(false, true);
        boolean boolean43 = equalsBuilder42.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder42.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder42.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder48.append((long) (byte) 100, (long) (-1));
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder51);
    }

    @Test
    public void test2008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2008");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder46.append(byteArray52, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder46.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder39.append((java.lang.Object) equalsBuilder45, (java.lang.Object) equalsBuilder46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder45.append((float) 100L, (float) 1);
        java.lang.Boolean boolean73 = equalsBuilder72.build();
        java.lang.Boolean boolean74 = equalsBuilder72.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertEquals("'" + boolean73 + "' != '" + false + "'", boolean73, false);
        org.junit.Assert.assertEquals("'" + boolean74 + "' != '" + false + "'", boolean74, false);
    }

    @Test
    public void test2009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2009");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        boolean boolean16 = equalsBuilder15.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray20 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray21 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder17.append(shortArray20, shortArray21);
        byte[] byteArray23 = new byte[] {};
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(byteArray23, byteArray28);
        byte[] byteArray30 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder15.append(byteArray28, byteArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) (byte) 1, (double) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((float) (byte) -1, (float) 0L);
        equalsBuilder34.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder34.append(100L, (long) ' ');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder41);
    }

    @Test
    public void test2010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2010");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        java.lang.Object obj7 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray18 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray19 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder15.append(shortArray18, shortArray19);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(byteArray21, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder8.append(byteArray14, byteArray26);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj7, (java.lang.Object) byteArray26, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray41 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray42 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder38.append(shortArray41, shortArray42);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder38.append(byteArray44, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder31.append(byteArray37, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(byteArray26, byteArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray69 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray70 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder66.append(shortArray69, shortArray70);
        byte[] byteArray72 = new byte[] {};
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder66.append(byteArray72, byteArray77);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder0.append(byteArray59, byteArray72);
        java.lang.Class<?> wildcardClass80 = byteArray59.getClass();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test2011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2011");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 'a', 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder5.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder5.append((long) '#', (long) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray27 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray28 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder24.append(shortArray27, shortArray28);
        byte[] byteArray30 = new byte[] {};
        byte[] byteArray35 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append(byteArray30, byteArray35);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder24.append((double) 100L, (double) 10L);
        boolean boolean40 = equalsBuilder24.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder24.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray47 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray48 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder44.append(shortArray47, shortArray48);
        byte[] byteArray50 = new byte[] {};
        byte[] byteArray55 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder44.append(byteArray50, byteArray55);
        java.lang.String[] strArray60 = new java.lang.String[] { "", "hi!", "" };
        boolean boolean61 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder43, (java.lang.Object) byteArray55, strArray60);
        java.lang.Object obj62 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray67 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray68 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder64.append(shortArray67, shortArray68);
        java.lang.String[] strArray77 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean78 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder69, (java.lang.Object) '#', strArray77);
        boolean boolean79 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj62, (java.lang.Object) (byte) 1, strArray77);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder5.append((java.lang.Object[]) strArray60, (java.lang.Object[]) strArray77);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray67), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(equalsBuilder80);
    }

    @Test
    public void test2012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2012");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        java.lang.Object obj7 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray18 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray19 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder15.append(shortArray18, shortArray19);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(byteArray21, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder8.append(byteArray14, byteArray26);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj7, (java.lang.Object) byteArray26, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray41 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray42 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder38.append(shortArray41, shortArray42);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder38.append(byteArray44, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder31.append(byteArray37, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(byteArray26, byteArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray69 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray70 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder66.append(shortArray69, shortArray70);
        byte[] byteArray72 = new byte[] {};
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder66.append(byteArray72, byteArray77);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder0.append(byteArray59, byteArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder0.append(0, (int) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder0.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder87.append((long) (byte) 1, (long) (byte) -1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
    }

    @Test
    public void test2013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2013");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray6 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray10 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray11 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder7.append(shortArray10, shortArray11);
        byte[] byteArray13 = new byte[] {};
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder7.append(byteArray13, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder0.append(byteArray6, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray24 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray25 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder21.append(shortArray24, shortArray25);
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean35 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder26, (java.lang.Object) '#', strArray34);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder26.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray42 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray43 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder39.append(shortArray42, shortArray43);
        byte[] byteArray45 = new byte[] {};
        byte[] byteArray50 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder39.append(byteArray45, byteArray50);
        char[] charArray56 = new char[] { '#', ' ', '#', '#' };
        char[] charArray59 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder39.append(charArray56, charArray59);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray64 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray65 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder61.append(shortArray64, shortArray65);
        byte[] byteArray67 = new byte[] {};
        byte[] byteArray72 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder61.append(byteArray67, byteArray72);
        char[] charArray78 = new char[] { '#', ' ', '#', '#' };
        char[] charArray81 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder61.append(charArray78, charArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder26.append(charArray59, charArray78);
        char[] charArray88 = new char[] { '#', '#', '4', '4' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder20.append(charArray78, charArray88);
        java.lang.Boolean boolean90 = equalsBuilder89.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder89.append((long) (byte) 0, 10L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray64), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[]");
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "##44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "##44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[#, #, 4, 4]");
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertEquals("'" + boolean90 + "' != '" + false + "'", boolean90, false);
        org.junit.Assert.assertNotNull(equalsBuilder93);
    }

    @Test
    public void test2014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2014");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder21.append((int) (byte) 1, (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((int) (byte) 1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder30.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder30.append((double) (-1.0f), (double) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder36.append((long) (byte) 0, (long) (short) 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(equalsBuilder39);
    }

    @Test
    public void test2015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2015");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 100.0f, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder5.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder19.append((double) 0L, (double) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder22.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append('4', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder24.append((double) 10.0f, (double) (short) 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
    }

    @Test
    public void test2016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2016");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((double) (short) -1, (double) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder31.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder38.append(1.0d, (double) 10.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder41.append((short) (byte) 1, (short) (byte) -1);
        byte[] byteArray45 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray49 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray50 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder46.append(shortArray49, shortArray50);
        byte[] byteArray52 = new byte[] {};
        byte[] byteArray57 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder46.append(byteArray52, byteArray57);
        float[] floatArray64 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray67 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder58.append(floatArray64, floatArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder58.append(true, true);
        byte[] byteArray75 = new byte[] { (byte) 100, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray79 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray80 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder76.append(shortArray79, shortArray80);
        byte[] byteArray82 = new byte[] {};
        byte[] byteArray87 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder76.append(byteArray82, byteArray87);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder71.append(byteArray75, byteArray82);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder44.append(byteArray45, byteArray82);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder90.append((-1.0f), (float) 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder93.append((long) (short) 10, 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder99 = equalsBuilder96.append((int) (short) -1, (int) '4');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(floatArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray64), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray67), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[100, 10, 1]");
        org.junit.Assert.assertNotNull(shortArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray79), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray80), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[]");
        org.junit.Assert.assertNotNull(byteArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray87), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
        org.junit.Assert.assertNotNull(equalsBuilder99);
    }

    @Test
    public void test2017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2017");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder46.append(byteArray52, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder46.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder39.append((java.lang.Object) equalsBuilder45, (java.lang.Object) equalsBuilder46);
        long[] longArray73 = new long[] { (byte) 100, ' ', (short) 10 };
        long[] longArray79 = new long[] { 'a', 0L, (short) 10, (byte) 0, (byte) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder46.append(longArray73, longArray79);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder83.append(0, (int) (short) 0);
        boolean boolean87 = equalsBuilder83.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder83.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder83.append((double) '#', 10.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder93.append(0.0f, (float) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder99 = equalsBuilder96.append((int) (byte) 1, 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[100, 32, 10]");
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[97, 0, 10, 0, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
        org.junit.Assert.assertNotNull(equalsBuilder99);
    }

    @Test
    public void test2018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2018");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((double) 100L, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((short) (byte) -1, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder81.append((byte) 10, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder87.append((long) (short) 1, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder87.append((int) '4', (int) '4');
        equalsBuilder93.reset();
        java.lang.Boolean boolean95 = equalsBuilder93.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertEquals("'" + boolean95 + "' != '" + true + "'", boolean95, true);
    }

    @Test
    public void test2019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2019");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray6 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray10 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray11 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder7.append(shortArray10, shortArray11);
        byte[] byteArray13 = new byte[] {};
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder7.append(byteArray13, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder0.append(byteArray6, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray24 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray25 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder21.append(shortArray24, shortArray25);
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean35 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder26, (java.lang.Object) '#', strArray34);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder26.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray42 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray43 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder39.append(shortArray42, shortArray43);
        byte[] byteArray45 = new byte[] {};
        byte[] byteArray50 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder39.append(byteArray45, byteArray50);
        char[] charArray56 = new char[] { '#', ' ', '#', '#' };
        char[] charArray59 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder39.append(charArray56, charArray59);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray64 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray65 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder61.append(shortArray64, shortArray65);
        byte[] byteArray67 = new byte[] {};
        byte[] byteArray72 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder61.append(byteArray67, byteArray72);
        char[] charArray78 = new char[] { '#', ' ', '#', '#' };
        char[] charArray81 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder61.append(charArray78, charArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder26.append(charArray59, charArray78);
        char[] charArray88 = new char[] { '#', '#', '4', '4' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder20.append(charArray78, charArray88);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder89.append(0.0f, (float) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder92.append('4', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder98 = equalsBuilder92.append(false, true);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray64), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[]");
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "##44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "##44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[#, #, 4, 4]");
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertNotNull(equalsBuilder98);
    }

    @Test
    public void test2020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2020");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        boolean boolean16 = equalsBuilder15.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray20 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray21 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder17.append(shortArray20, shortArray21);
        byte[] byteArray23 = new byte[] {};
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(byteArray23, byteArray28);
        byte[] byteArray30 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder15.append(byteArray28, byteArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) (byte) 1, (double) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder34.appendSuper(true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder36);
    }

    @Test
    public void test2021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2021");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray6 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray10 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray11 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder7.append(shortArray10, shortArray11);
        byte[] byteArray13 = new byte[] {};
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder7.append(byteArray13, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder0.append(byteArray6, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray24 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray25 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder21.append(shortArray24, shortArray25);
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean35 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder26, (java.lang.Object) '#', strArray34);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder26.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray42 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray43 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder39.append(shortArray42, shortArray43);
        byte[] byteArray45 = new byte[] {};
        byte[] byteArray50 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder39.append(byteArray45, byteArray50);
        char[] charArray56 = new char[] { '#', ' ', '#', '#' };
        char[] charArray59 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder39.append(charArray56, charArray59);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray64 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray65 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder61.append(shortArray64, shortArray65);
        byte[] byteArray67 = new byte[] {};
        byte[] byteArray72 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder61.append(byteArray67, byteArray72);
        char[] charArray78 = new char[] { '#', ' ', '#', '#' };
        char[] charArray81 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder61.append(charArray78, charArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder26.append(charArray59, charArray78);
        char[] charArray88 = new char[] { '#', '#', '4', '4' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder20.append(charArray78, charArray88);
        java.lang.Boolean boolean90 = equalsBuilder89.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder89.append(100.0d, (double) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder93.append((long) (short) 10, 10L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray64), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[]");
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "##44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "##44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[#, #, 4, 4]");
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertEquals("'" + boolean90 + "' != '" + false + "'", boolean90, false);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
    }

    @Test
    public void test2022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2022");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray19 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray20 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder16.append(shortArray19, shortArray20);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder21, (java.lang.Object) '#', strArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder21.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray37 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray38 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder34.append(shortArray37, shortArray38);
        byte[] byteArray40 = new byte[] {};
        byte[] byteArray45 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder34.append(byteArray40, byteArray45);
        char[] charArray51 = new char[] { '#', ' ', '#', '#' };
        char[] charArray54 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder34.append(charArray51, charArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray59 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray60 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder56.append(shortArray59, shortArray60);
        byte[] byteArray62 = new byte[] {};
        byte[] byteArray67 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder56.append(byteArray62, byteArray67);
        char[] charArray73 = new char[] { '#', ' ', '#', '#' };
        char[] charArray76 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder56.append(charArray73, charArray76);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder21.append(charArray54, charArray73);
        java.lang.Object obj79 = null;
        boolean boolean80 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray54, obj79);
        java.lang.String[] strArray81 = new java.lang.String[] {};
        boolean boolean82 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder15, (java.lang.Object) charArray54, strArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder15.appendSuper(false);
        float[] floatArray85 = new float[] {};
        float[] floatArray87 = new float[] { (byte) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder15.append(floatArray85, floatArray87);
        boolean[] booleanArray89 = new boolean[] {};
        boolean[] booleanArray90 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder88.append(booleanArray89, booleanArray90);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder91.append((long) 'a', (long) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder97 = equalsBuilder91.append((float) 100, (-1.0f));
        equalsBuilder91.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(floatArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray85), "[]");
        org.junit.Assert.assertNotNull(floatArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray87), "[-1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(booleanArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray89), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder94);
        org.junit.Assert.assertNotNull(equalsBuilder97);
    }

    @Test
    public void test2023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2023");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 100.0f, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder5.append((short) 0, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder20.append((byte) 10, (byte) 100);
        java.lang.Object obj24 = null;
        java.util.Collection<java.lang.String> strCollection25 = null;
        boolean boolean26 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder23, obj24, strCollection25);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder23.append(false, false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(equalsBuilder29);
    }

    @Test
    public void test2024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2024");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        float[] floatArray18 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray21 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append(floatArray18, floatArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder12.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder25.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder25.append((double) (short) 10, (double) 100.0f);
        equalsBuilder30.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
    }

    @Test
    public void test2025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2025");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append('#', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder0.appendSuper(true);
        java.lang.Boolean boolean9 = equalsBuilder0.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append((float) (byte) 10, 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray16 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray17 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder13.append(shortArray16, shortArray17);
        byte[] byteArray19 = new byte[] {};
        byte[] byteArray24 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder13.append(byteArray19, byteArray24);
        float[] floatArray31 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray34 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder25.append(floatArray31, floatArray34);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder25.append(true, true);
        byte[] byteArray42 = new byte[] { (byte) 100, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray46 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray47 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder43.append(shortArray46, shortArray47);
        byte[] byteArray49 = new byte[] {};
        byte[] byteArray54 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder43.append(byteArray49, byteArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder38.append(byteArray42, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder56.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder58.append((int) (short) 100, (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder58.append('#', '4');
        java.lang.Class<?> wildcardClass65 = equalsBuilder58.getClass();
        boolean boolean67 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) 10, (java.lang.Object) wildcardClass65, false);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertEquals("'" + boolean9 + "' != '" + false + "'", boolean9, false);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[100, 10, 1]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[]");
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test2026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2026");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray12 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray16 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray17 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder13.append(shortArray16, shortArray17);
        byte[] byteArray19 = new byte[] {};
        byte[] byteArray24 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder13.append(byteArray19, byteArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder6.append(byteArray12, byteArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray31 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray32 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder28.append(shortArray31, shortArray32);
        byte[] byteArray34 = new byte[] {};
        byte[] byteArray39 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder28.append(byteArray34, byteArray39);
        boolean boolean41 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder0.append(byteArray12, byteArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder0.append(100.0f, 100.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray49 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray50 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder46.append(shortArray49, shortArray50);
        byte[] byteArray52 = new byte[] {};
        byte[] byteArray57 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder46.append(byteArray52, byteArray57);
        boolean boolean60 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder45, (java.lang.Object) byteArray57, false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test2027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2027");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        long[] longArray9 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray11 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(longArray9, longArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder17.append((short) (byte) 10, (short) 0);
        long[] longArray26 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray28 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(longArray26, longArray28);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder30.append((short) (byte) 10, (short) 0);
        equalsBuilder30.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder35.append((short) (byte) 10, (short) 0);
        long[] longArray44 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray46 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder35.append(longArray44, longArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder48.append((short) (byte) 10, (short) 0);
        long[] longArray57 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray59 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder48.append(longArray57, longArray59);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder30.append(longArray44, longArray59);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder0.append(longArray28, longArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder62.append((byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder62.append((float) (-1L), (float) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder62.append((-1L), (long) 1);
        java.lang.Boolean boolean72 = equalsBuilder62.build();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertEquals("'" + boolean72 + "' != '" + false + "'", boolean72, false);
    }

    @Test
    public void test2028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2028");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        boolean boolean16 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(' ', '4');
        equalsBuilder19.reset();
        java.lang.Boolean boolean21 = equalsBuilder19.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertEquals("'" + boolean21 + "' != '" + true + "'", boolean21, true);
    }

    @Test
    public void test2029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2029");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder64.append((double) 10.0f, 100.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((int) ' ', (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder83.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder83.append((short) 0, (short) (byte) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
    }

    @Test
    public void test2030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2030");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray6 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray10 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray11 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder7.append(shortArray10, shortArray11);
        byte[] byteArray13 = new byte[] {};
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder7.append(byteArray13, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder0.append(byteArray6, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder22.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append(' ', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((long) (short) 10, (long) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder30.append((short) (byte) 10, (short) 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
    }

    @Test
    public void test2031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2031");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder62.append((float) 10, (float) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder65.append((float) 0, (float) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder68.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder68.append((byte) 100, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder68.append(' ', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder68.append((float) 10L, 0.0f);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(equalsBuilder79);
    }

    @Test
    public void test2032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2032");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder3.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder3.append(0.0d, (double) (byte) 100);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(equalsBuilder8);
    }

    @Test
    public void test2033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2033");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        boolean boolean16 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder19.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append((int) (short) -1, (int) (byte) 1);
        java.lang.Class<?> wildcardClass25 = equalsBuilder19.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test2034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2034");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 0, (byte) 1);
        java.lang.Class<?> wildcardClass8 = equalsBuilder3.getClass();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test2035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2035");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((double) (short) -1, (double) 10);
        java.lang.Boolean boolean36 = equalsBuilder35.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder35.append((int) (byte) 1, 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder35.append(0L, (long) (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder35.append((double) (byte) -1, (double) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder45.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder45.append((float) (short) 1, 100.0f);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertEquals("'" + boolean36 + "' != '" + false + "'", boolean36, false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder51);
    }

    @Test
    public void test2036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2036");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder9.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder9.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder15.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((float) (short) -1, 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder18.append((long) (byte) 1, 10L);
        boolean boolean25 = equalsBuilder18.isEquals();
        java.lang.Class<?> wildcardClass26 = equalsBuilder18.getClass();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test2037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2037");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder17.append((byte) 100, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder17.append((long) '#', 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append((float) 0L, (float) 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder24.append((int) (byte) 1, (int) (byte) 100);
        java.lang.Boolean boolean31 = equalsBuilder30.build();
        equalsBuilder30.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertEquals("'" + boolean31 + "' != '" + false + "'", boolean31, false);
    }

    @Test
    public void test2038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2038");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder62.append(100, (int) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder62.append((short) 10, (short) -1);
        equalsBuilder68.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder68.append((float) (byte) -1, (float) 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder68.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder68.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder78.append((double) 100L, (double) (byte) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
    }

    @Test
    public void test2039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2039");
        java.lang.Object obj0 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray4 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray5 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder1.append(shortArray4, shortArray5);
        byte[] byteArray7 = new byte[] {};
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder1.append(byteArray7, byteArray12);
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        boolean boolean18 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj0, (java.lang.Object) equalsBuilder13, (java.util.Collection<java.lang.String>) strList16);
        boolean boolean19 = equalsBuilder13.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder13.append((float) (byte) 1, (float) 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder13.appendSuper(false);
        double[] doubleArray29 = new double[] { 100.0f, 0.0f, 100, 100.0f };
        double[] doubleArray30 = new double[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder24.append(doubleArray29, doubleArray30);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 0.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder31);
    }

    @Test
    public void test2040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2040");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder3.append((float) 0L, (float) 'a');
        equalsBuilder10.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder10.append(0.0d, 10.0d);
        boolean boolean15 = equalsBuilder14.isEquals();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test2041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2041");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        java.lang.Object obj7 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray18 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray19 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder15.append(shortArray18, shortArray19);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(byteArray21, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder8.append(byteArray14, byteArray26);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj7, (java.lang.Object) byteArray26, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray41 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray42 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder38.append(shortArray41, shortArray42);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder38.append(byteArray44, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder31.append(byteArray37, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(byteArray26, byteArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder52.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder52.appendSuper(false);
        boolean boolean58 = equalsBuilder57.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder57.append(0.0f, (float) (byte) 1);
        java.lang.Boolean boolean62 = equalsBuilder61.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder61.append((short) (byte) -1, (short) 100);
        java.lang.Class<?> wildcardClass66 = equalsBuilder61.getClass();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertEquals("'" + boolean62 + "' != '" + false + "'", boolean62, false);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test2042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2042");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        float[] floatArray18 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray21 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append(floatArray18, floatArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder12.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder12.append((short) 0, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder28.append((double) (short) -1, (double) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((float) '4', (float) 0L);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
    }

    @Test
    public void test2043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2043");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        boolean boolean16 = equalsBuilder15.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray20 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray21 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder17.append(shortArray20, shortArray21);
        byte[] byteArray23 = new byte[] {};
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(byteArray23, byteArray28);
        byte[] byteArray30 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder15.append(byteArray28, byteArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder15.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder15.append('a', 'a');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
    }

    @Test
    public void test2044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2044");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder75.append((long) (short) -1, (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder75.append((float) (byte) 100, (float) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder81.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder81.append('#', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder81.append((short) (byte) 1, (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder81.append((byte) 0, (byte) 0);
        java.lang.Boolean boolean93 = equalsBuilder81.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertEquals("'" + boolean93 + "' != '" + false + "'", boolean93, false);
    }

    @Test
    public void test2045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2045");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((double) 100L, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder74.append((byte) 10, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder84.append((short) (byte) -1, (short) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder84.append((float) (-1L), (-1.0f));
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
    }

    @Test
    public void test2046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2046");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append((long) (byte) 100, 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder7.append((short) (byte) 10, (short) 0);
        equalsBuilder7.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((short) (byte) 10, (short) 0);
        long[] longArray21 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray23 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder12.append(longArray21, longArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder25.append((short) (byte) 10, (short) 0);
        long[] longArray34 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray36 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder25.append(longArray34, longArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder7.append(longArray21, longArray36);
        java.lang.Boolean boolean39 = equalsBuilder38.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder38.append((double) (short) -1, (double) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder42.appendSuper(false);
        boolean boolean45 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder3, (java.lang.Object) equalsBuilder44);
        java.lang.Boolean boolean46 = equalsBuilder44.build();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(longArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray21), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray36), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertEquals("'" + boolean39 + "' != '" + false + "'", boolean39, false);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + boolean46 + "' != '" + false + "'", boolean46, false);
    }

    @Test
    public void test2047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2047");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        long[] longArray9 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray11 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(longArray9, longArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray16 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray17 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder13.append(shortArray16, shortArray17);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean27 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder18, (java.lang.Object) '#', strArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append((int) (short) -1, (int) (short) 0);
        boolean boolean31 = equalsBuilder30.isEquals();
        boolean boolean32 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder12, (java.lang.Object) boolean31);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder12.append((short) 0, (short) 100);
        java.lang.String[] strArray39 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        boolean boolean42 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder12, (java.lang.Object) (short) 0, (java.util.Collection<java.lang.String>) strList40);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder12.append((long) (byte) 0, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder12.append((float) (byte) 100, (float) (short) 10);
        boolean boolean49 = equalsBuilder48.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder48.append((float) (-1L), (float) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder48.append((long) (short) 0, (long) (-1));
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder55);
    }

    @Test
    public void test2048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2048");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append(false, false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
    }

    @Test
    public void test2049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2049");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        long[] longArray9 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray11 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(longArray9, longArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((long) (byte) 1, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray19 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray20 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder16.append(shortArray19, shortArray20);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder21, (java.lang.Object) '#', strArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder21.append((int) (short) -1, (int) (short) 0);
        boolean boolean34 = equalsBuilder33.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray38 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray39 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder35.append(shortArray38, shortArray39);
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean49 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder40, (java.lang.Object) '#', strArray48);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append((int) (short) -1, (int) (short) 0);
        boolean boolean53 = equalsBuilder52.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder33.append((java.lang.Object) boolean53, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder33.append((short) 100, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray62 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray63 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder59.append(shortArray62, shortArray63);
        byte[] byteArray65 = new byte[] {};
        byte[] byteArray70 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder59.append(byteArray65, byteArray70);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder71.append((byte) 10, (byte) 0);
        equalsBuilder71.reset();
        boolean boolean76 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 100, (java.lang.Object) equalsBuilder71);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder71.append((int) (short) 10, 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder71.append((float) '4', (float) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder71.append(false, false);
        java.lang.Object obj86 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder15.append((java.lang.Object) false, obj86);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray62), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray63), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder87);
    }

    @Test
    public void test2050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2050");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray4 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray5 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder1.append(shortArray4, shortArray5);
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean15 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder6, (java.lang.Object) '#', strArray14);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder6.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        byte[] byteArray25 = new byte[] {};
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder19.append(byteArray25, byteArray30);
        char[] charArray36 = new char[] { '#', ' ', '#', '#' };
        char[] charArray39 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder19.append(charArray36, charArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray44 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray45 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder41.append(shortArray44, shortArray45);
        byte[] byteArray47 = new byte[] {};
        byte[] byteArray52 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder41.append(byteArray47, byteArray52);
        char[] charArray58 = new char[] { '#', ' ', '#', '#' };
        char[] charArray61 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder41.append(charArray58, charArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder6.append(charArray39, charArray58);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder63.append(100, (int) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder63.append((short) 10, (short) -1);
        boolean boolean70 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) 100.0d, (java.lang.Object) equalsBuilder63);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder63.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder72.append((double) (short) 10, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder76.append(false, false);
        java.lang.Boolean boolean80 = equalsBuilder79.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder79.append(10, (int) 'a');
        boolean boolean84 = equalsBuilder79.isEquals();
        boolean boolean86 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder75, (java.lang.Object) equalsBuilder79, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder79.append((double) 0, 1.0d);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertEquals("'" + boolean80 + "' != '" + true + "'", boolean80, true);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(equalsBuilder89);
    }

    @Test
    public void test2051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2051");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        double[] doubleArray80 = new double[] { (short) 0, 0.0d, (byte) 10, (byte) 0 };
        double[] doubleArray81 = new double[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder64.append(doubleArray80, doubleArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder82.append((short) 0, (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder82.append((byte) 10, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder82.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder82.append((double) (byte) 100, (double) 100L);
        java.lang.Boolean boolean94 = equalsBuilder82.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0, 0.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertEquals("'" + boolean94 + "' != '" + false + "'", boolean94, false);
    }

    @Test
    public void test2052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2052");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder0.append((double) 1, (double) (-1L));
        java.lang.Boolean boolean11 = equalsBuilder10.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray18 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        byte[] byteArray25 = new byte[] {};
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder19.append(byteArray25, byteArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder12.append(byteArray18, byteArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray37 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray38 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder34.append(shortArray37, shortArray38);
        byte[] byteArray40 = new byte[] {};
        byte[] byteArray45 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder34.append(byteArray40, byteArray45);
        boolean boolean47 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder10.append(byteArray18, byteArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder48.append((double) (short) -1, (double) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder51.append((short) 10, (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder51.appendSuper(true);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(equalsBuilder56);
    }

    @Test
    public void test2053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2053");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        double[] doubleArray80 = new double[] { (short) 0, 0.0d, (byte) 10, (byte) 0 };
        double[] doubleArray81 = new double[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder64.append(doubleArray80, doubleArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder82.append((short) 0, (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder82.append((byte) 10, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder82.appendSuper(true);
        java.lang.Boolean boolean91 = equalsBuilder90.build();
        java.lang.Class<?> wildcardClass92 = equalsBuilder90.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0, 0.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertEquals("'" + boolean91 + "' != '" + false + "'", boolean91, false);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2054");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((byte) 1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder35.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder37.append('a', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder40.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder42.append('a', ' ');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
    }

    @Test
    public void test2055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2055");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder3.append((float) 0L, (float) 'a');
        equalsBuilder10.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder10.append((long) (short) -1, (long) (-1));
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(equalsBuilder14);
    }

    @Test
    public void test2056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2056");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder6.append((-1L), 100L);
        equalsBuilder6.reset();
        java.lang.Boolean boolean11 = equalsBuilder6.build();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + true + "'", boolean11, true);
    }

    @Test
    public void test2057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2057");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 100.0f, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder5.append((short) 0, (short) -1);
        boolean boolean21 = equalsBuilder5.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder5.append((double) (byte) 100, (double) 100L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder5.append((double) '#', (double) 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder5.append(false, false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
    }

    @Test
    public void test2058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2058");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.appendSuper(false);
        boolean boolean78 = equalsBuilder64.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder64.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder64.append(' ', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder84.append('a', '4');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
    }

    @Test
    public void test2059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2059");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 100.0f, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder5.append((short) 0, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder20.append((long) (short) -1, (long) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder23.append((byte) 10, (byte) 100);
        java.lang.Class<?> wildcardClass27 = equalsBuilder26.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test2060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2060");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder0.append((float) (short) 0, (float) 100);
        java.lang.Boolean boolean19 = equalsBuilder18.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertEquals("'" + boolean19 + "' != '" + false + "'", boolean19, false);
    }

    @Test
    public void test2061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2061");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        float[] floatArray18 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray21 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append(floatArray18, floatArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder12.append((float) 0L, 10.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder25.append(100.0d, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder28.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) (short) 0, (double) 0.0f);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
    }

    @Test
    public void test2062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2062");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray6 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray10 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray11 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder7.append(shortArray10, shortArray11);
        byte[] byteArray13 = new byte[] {};
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder7.append(byteArray13, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder0.append(byteArray6, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.appendSuper(false);
        boolean boolean23 = equalsBuilder22.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder22.append((-1.0f), (float) (short) 1);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(equalsBuilder26);
    }

    @Test
    public void test2063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2063");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray6 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray10 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray11 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder7.append(shortArray10, shortArray11);
        byte[] byteArray13 = new byte[] {};
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder7.append(byteArray13, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder0.append(byteArray6, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder22.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append(' ', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((long) (short) 10, (long) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder27.append((int) (byte) 0, (int) (byte) 0);
        boolean boolean34 = equalsBuilder33.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder33.append((long) 10, 100L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(equalsBuilder37);
    }

    @Test
    public void test2064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2064");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        long[] longArray9 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray11 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(longArray9, longArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder0.append((-1), (int) (byte) 1);
        java.lang.Boolean boolean18 = equalsBuilder0.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append((int) '4', (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder0.append((short) 1, (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder0.append(false, false);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
    }

    @Test
    public void test2065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2065");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder62.append((short) 10, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder69.append((float) (short) 100, 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder69.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder69.append((long) (short) 100, (long) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder77.append((short) (byte) 100, (short) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder77.append((long) (byte) 0, (-1L));
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
    }

    @Test
    public void test2066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2066");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder77.append(10.0d, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder80.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder80.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder80.appendSuper(true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder86);
    }

    @Test
    public void test2067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2067");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder62.append(100, (int) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder62.append((short) 10, (short) -1);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder62.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder72.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder72.append((int) (byte) 100, (int) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder77.append((long) (byte) 100, (long) (byte) 100);
        equalsBuilder77.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
    }

    @Test
    public void test2068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2068");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder21.append((int) (byte) 1, (int) (byte) 0);
        short[] shortArray28 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray32 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray33 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder29.append(shortArray32, shortArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder27.append(shortArray28, shortArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder35.append((double) (-1), (double) 10.0f);
        java.lang.Boolean boolean39 = equalsBuilder38.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder38.append((float) (short) 0, (float) 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder38.append(0L, (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder38.append((long) 'a', (long) (short) 10);
        java.lang.Boolean boolean49 = equalsBuilder38.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray53 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray54 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder50.append(shortArray53, shortArray54);
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean64 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder55, (java.lang.Object) '#', strArray63);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder55.append((int) (short) -1, (int) (short) 0);
        boolean boolean68 = equalsBuilder67.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray72 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray73 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder69.append(shortArray72, shortArray73);
        java.lang.String[] strArray82 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean83 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder74, (java.lang.Object) '#', strArray82);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder74.append((int) (short) -1, (int) (short) 0);
        boolean boolean87 = equalsBuilder86.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder67.append((java.lang.Object) boolean87, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder67.append(false, true);
        boolean boolean93 = equalsBuilder92.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder92.append((int) ' ', 1);
        boolean boolean98 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder38, (java.lang.Object) equalsBuilder92, false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertEquals("'" + boolean39 + "' != '" + false + "'", boolean39, false);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertEquals("'" + boolean49 + "' != '" + false + "'", boolean49, false);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray72), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(equalsBuilder96);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test2069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2069");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder15.appendSuper(true);
        java.lang.Boolean boolean18 = equalsBuilder15.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder19.append((short) (byte) 10, (short) 0);
        equalsBuilder19.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append((short) (byte) 10, (short) 0);
        long[] longArray33 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray35 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append(longArray33, longArray35);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder37.append((short) (byte) 10, (short) 0);
        long[] longArray46 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray48 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder37.append(longArray46, longArray48);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder19.append(longArray33, longArray48);
        java.lang.Boolean boolean51 = equalsBuilder50.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder50.append((byte) 1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder54.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder56.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder56.append((float) 100, (float) 100L);
        boolean boolean64 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder15, (java.lang.Object) 100, false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray48), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertEquals("'" + boolean51 + "' != '" + false + "'", boolean51, false);
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test2070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2070");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder64.append((double) 10.0f, 100.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((short) (byte) 1, (short) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder80.append((byte) 0, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder86.append((byte) 10, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder89.append(0L, (long) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder92.appendSuper(true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder94);
    }

    @Test
    public void test2071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2071");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder62.append((short) 10, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder69.append((float) (short) 100, 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder72.append((double) (byte) 10, (double) 1.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder75.append((long) (byte) -1, 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder75.append((byte) 1, (byte) 100);
        java.lang.Class<?> wildcardClass82 = equalsBuilder75.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test2072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2072");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder17.append((float) (short) -1, (float) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append((short) (byte) 10, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder25.append((short) (byte) 10, (short) 0);
        equalsBuilder25.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder30.append((short) (byte) 10, (short) 0);
        long[] longArray39 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray41 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder30.append(longArray39, longArray41);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder43.append((short) (byte) 10, (short) 0);
        long[] longArray52 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray54 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder43.append(longArray52, longArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder25.append(longArray39, longArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder57.append((short) (byte) 10, (short) 0);
        long[] longArray66 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray68 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder57.append(longArray66, longArray68);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray73 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray74 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder70.append(shortArray73, shortArray74);
        java.lang.String[] strArray83 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean84 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder75, (java.lang.Object) '#', strArray83);
        boolean boolean85 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray68, (java.lang.Object) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder24.append(longArray39, longArray68);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder24.append((long) (short) 1, (long) '#');
        boolean boolean90 = equalsBuilder24.isEquals();
        equalsBuilder24.reset();
        boolean boolean92 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder17, (java.lang.Object) equalsBuilder24);
        equalsBuilder17.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(longArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray39), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(longArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray66), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray68), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray74), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test2073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2073");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        java.lang.Object obj7 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray18 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray19 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder15.append(shortArray18, shortArray19);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(byteArray21, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder8.append(byteArray14, byteArray26);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj7, (java.lang.Object) byteArray26, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray41 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray42 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder38.append(shortArray41, shortArray42);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder38.append(byteArray44, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder31.append(byteArray37, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(byteArray26, byteArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray69 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray70 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder66.append(shortArray69, shortArray70);
        byte[] byteArray72 = new byte[] {};
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder66.append(byteArray72, byteArray77);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder0.append(byteArray59, byteArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder0.append(0, (int) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder82.append((short) 100, (short) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder85.append((float) 10, (float) (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder88.append((short) (byte) 0, (short) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder91.appendSuper(false);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder93);
    }

    @Test
    public void test2074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2074");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((double) (short) -1, (double) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder35.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder37.append((double) 0, (double) 1.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder41.append((short) (byte) 10, (short) 0);
        long[] longArray50 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray52 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder41.append(longArray50, longArray52);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder53.append((long) (byte) 1, 0L);
        boolean boolean57 = equalsBuilder56.isEquals();
        equalsBuilder56.reset();
        boolean boolean59 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) 1.0f, (java.lang.Object) equalsBuilder56);
        boolean boolean60 = equalsBuilder56.isEquals();
        equalsBuilder56.reset();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test2075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2075");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 100, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder3.append((byte) 10, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder10.append((double) '4', (double) 1.0f);
        equalsBuilder13.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder13.append((long) ' ', 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder13.appendSuper(true);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder19);
    }

    @Test
    public void test2076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2076");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 100, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder3.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder3.append((short) 10, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder3.append((double) 1, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder16.append((short) (byte) 0, (short) (byte) 0);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(equalsBuilder19);
    }

    @Test
    public void test2077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2077");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder64.append((long) 'a', (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append(100.0d, (double) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder80.append((byte) -1, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder80.append((int) (byte) 0, (int) 'a');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
    }

    @Test
    public void test2078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2078");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 100.0f, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder5.append((short) 0, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder20.append((byte) 10, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder20.append((short) 100, (short) (byte) -1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(equalsBuilder26);
    }

    @Test
    public void test2079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2079");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        java.lang.Object obj7 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray18 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray19 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder15.append(shortArray18, shortArray19);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(byteArray21, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder8.append(byteArray14, byteArray26);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj7, (java.lang.Object) byteArray26, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray41 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray42 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder38.append(shortArray41, shortArray42);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder38.append(byteArray44, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder31.append(byteArray37, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(byteArray26, byteArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray69 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray70 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder66.append(shortArray69, shortArray70);
        byte[] byteArray72 = new byte[] {};
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder66.append(byteArray72, byteArray77);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder0.append(byteArray59, byteArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder0.append(0, (int) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder0.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder85.append(false, false);
        boolean boolean89 = equalsBuilder85.isEquals();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test2080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2080");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder4 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder4.append((short) (byte) 10, (short) 0);
        equalsBuilder4.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder9.append((short) (byte) 10, (short) 0);
        long[] longArray18 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray20 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder9.append(longArray18, longArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder22.append((short) (byte) 10, (short) 0);
        long[] longArray31 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray33 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder22.append(longArray31, longArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder4.append(longArray18, longArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder36.append((short) (byte) 10, (short) 0);
        long[] longArray45 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray47 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder36.append(longArray45, longArray47);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray52 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray53 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder49.append(shortArray52, shortArray53);
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean63 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder54, (java.lang.Object) '#', strArray62);
        boolean boolean64 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray47, (java.lang.Object) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder3.append(longArray18, longArray47);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder3.appendSuper(true);
        java.lang.Boolean boolean68 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder3.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder3.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder73.append((byte) 10, (byte) 100);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertEquals("'" + boolean68 + "' != '" + false + "'", boolean68, false);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
    }

    @Test
    public void test2081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2081");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((double) (short) -1, (double) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder31.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder31.append('#', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder31.append(0, (int) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder31.append((short) (byte) 1, (short) 0);
        java.lang.Boolean boolean48 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder31.append((short) 100, (short) (byte) 10);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertEquals("'" + boolean48 + "' != '" + false + "'", boolean48, false);
        org.junit.Assert.assertNotNull(equalsBuilder51);
    }

    @Test
    public void test2082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2082");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder64.append((long) 'a', (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append(100.0d, (double) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder83.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder83.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder87.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder87.append(true, false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
    }

    @Test
    public void test2083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2083");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder46.append(byteArray52, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder46.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder39.append((java.lang.Object) equalsBuilder45, (java.lang.Object) equalsBuilder46);
        long[] longArray73 = new long[] { (byte) 100, ' ', (short) 10 };
        long[] longArray79 = new long[] { 'a', 0L, (short) 10, (byte) 0, (byte) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder46.append(longArray73, longArray79);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((int) 'a', (int) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder83.append(true, false);
        java.lang.Boolean boolean87 = equalsBuilder83.build();
        boolean boolean88 = equalsBuilder83.isEquals();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[100, 32, 10]");
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[97, 0, 10, 0, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertEquals("'" + boolean87 + "' != '" + false + "'", boolean87, false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test2084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2084");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray12 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray16 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray17 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder13.append(shortArray16, shortArray17);
        byte[] byteArray19 = new byte[] {};
        byte[] byteArray24 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder13.append(byteArray19, byteArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder6.append(byteArray12, byteArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray31 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray32 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder28.append(shortArray31, shortArray32);
        byte[] byteArray34 = new byte[] {};
        byte[] byteArray39 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder28.append(byteArray34, byteArray39);
        boolean boolean41 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder0.append(byteArray12, byteArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder0.append(100.0f, 100.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder45.appendSuper(false);
        java.lang.Boolean boolean48 = equalsBuilder45.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder45.append('a', '#');
        equalsBuilder51.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder51.append((float) (short) 0, (float) 10L);
        java.lang.Boolean boolean56 = equalsBuilder55.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertEquals("'" + boolean48 + "' != '" + false + "'", boolean48, false);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertEquals("'" + boolean56 + "' != '" + false + "'", boolean56, false);
    }

    @Test
    public void test2085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2085");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder21.append((int) (byte) 1, (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((int) (byte) 1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder27.append((float) 'a', (float) (short) -1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
    }

    @Test
    public void test2086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2086");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 100.0f, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder5.append((short) 0, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder20.append(0.0d, (double) 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder23.append(10, (int) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder23.append('#', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder29.append(100, 100);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder32);
    }

    @Test
    public void test2087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2087");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray25 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray26 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder22.append(shortArray25, shortArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray34 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray38 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray39 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder35.append(shortArray38, shortArray39);
        byte[] byteArray41 = new byte[] {};
        byte[] byteArray46 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder35.append(byteArray41, byteArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder28.append(byteArray34, byteArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray53 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray54 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder50.append(shortArray53, shortArray54);
        byte[] byteArray56 = new byte[] {};
        byte[] byteArray61 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder50.append(byteArray56, byteArray61);
        boolean boolean63 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder22.append(byteArray34, byteArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder22.append(100.0f, 100.0f);
        boolean boolean69 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder0, (java.lang.Object) equalsBuilder67, true);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder0.append((byte) 100, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder73.append((long) 0, 100L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder76.append((double) 10.0f, (double) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder76.append((float) '#', 0.0f);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
    }

    @Test
    public void test2088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2088");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder62.append(100, (int) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder62.append((byte) 10, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder62.append(false, true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder71);
    }

    @Test
    public void test2089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2089");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append(1L, 0L);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
    }

    @Test
    public void test2090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2090");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        float[] floatArray18 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray21 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append(floatArray18, floatArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder12.append(true, true);
        byte[] byteArray29 = new byte[] { (byte) 100, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray33 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray34 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder30.append(shortArray33, shortArray34);
        byte[] byteArray36 = new byte[] {};
        byte[] byteArray41 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder30.append(byteArray36, byteArray41);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder25.append(byteArray29, byteArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder43.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder45.append((int) (short) 100, (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder45.append('#', '4');
        equalsBuilder51.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100, 10, 1]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder51);
    }

    @Test
    public void test2091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2091");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 'a', 0.0d);
        java.lang.Object obj18 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray25 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray29 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray30 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder26.append(shortArray29, shortArray30);
        byte[] byteArray32 = new byte[] {};
        byte[] byteArray37 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder26.append(byteArray32, byteArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder19.append(byteArray25, byteArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder19.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder41.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder44.append(' ', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder5.append(obj18, (java.lang.Object) ' ');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[]");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder48);
    }

    @Test
    public void test2092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2092");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((double) 100L, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((short) (byte) -1, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder81.append((double) 0.0f, (double) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder81.append((float) '#', (float) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder81.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder92.append((int) (byte) 1, (int) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder98 = equalsBuilder95.append((long) (short) 100, (long) 100);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertNotNull(equalsBuilder98);
    }

    @Test
    public void test2093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2093");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder78.append((byte) 0, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder78.append((byte) 1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder78.append((double) 100, (double) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder87.append((int) (short) 100, 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder87.append(false, false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
    }

    @Test
    public void test2094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2094");
        java.lang.Object obj0 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray4 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray5 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder1.append(shortArray4, shortArray5);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray10 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray11 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder7.append(shortArray10, shortArray11);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean21 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder12, (java.lang.Object) '#', strArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder12.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray28 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray29 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder25.append(shortArray28, shortArray29);
        byte[] byteArray31 = new byte[] {};
        byte[] byteArray36 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder25.append(byteArray31, byteArray36);
        char[] charArray42 = new char[] { '#', ' ', '#', '#' };
        char[] charArray45 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder25.append(charArray42, charArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray50 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray51 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder47.append(shortArray50, shortArray51);
        byte[] byteArray53 = new byte[] {};
        byte[] byteArray58 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder47.append(byteArray53, byteArray58);
        char[] charArray64 = new char[] { '#', ' ', '#', '#' };
        char[] charArray67 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder47.append(charArray64, charArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder12.append(charArray45, charArray64);
        java.lang.String[] strArray70 = null;
        boolean boolean71 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray5, (java.lang.Object) equalsBuilder12, strArray70);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder12.append((float) (byte) 10, (float) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder74.append((long) ' ', (long) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder77.append((long) (-1), 1L);
        java.lang.Boolean boolean81 = equalsBuilder80.build();
        boolean boolean83 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj0, (java.lang.Object) equalsBuilder80, true);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[]");
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertEquals("'" + boolean81 + "' != '" + false + "'", boolean81, false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test2095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2095");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 100, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder3.append((byte) 10, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder10.append((double) '4', (double) 1.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder10.append((double) 0, (double) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder16.append((double) (-1L), 0.0d);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(equalsBuilder19);
    }

    @Test
    public void test2096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2096");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append((long) (byte) 100, 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.append((double) 10, (double) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray13 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray14 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder10.append(shortArray13, shortArray14);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean24 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder15, (java.lang.Object) '#', strArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray31 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray32 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder28.append(shortArray31, shortArray32);
        byte[] byteArray34 = new byte[] {};
        byte[] byteArray39 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder28.append(byteArray34, byteArray39);
        char[] charArray45 = new char[] { '#', ' ', '#', '#' };
        char[] charArray48 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder28.append(charArray45, charArray48);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray53 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray54 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder50.append(shortArray53, shortArray54);
        byte[] byteArray56 = new byte[] {};
        byte[] byteArray61 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder50.append(byteArray56, byteArray61);
        char[] charArray67 = new char[] { '#', ' ', '#', '#' };
        char[] charArray70 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder50.append(charArray67, charArray70);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder15.append(charArray48, charArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder15.appendSuper(false);
        int[] intArray78 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray83 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder74.append(intArray78, intArray83);
        int[] intArray89 = new int[] { (byte) 0, (-1), 1, 100 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder3.append(intArray83, intArray89);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder90.append((long) ' ', (long) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder93.append((int) (byte) 100, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder98 = equalsBuilder96.appendSuper(true);
        java.lang.Boolean boolean99 = equalsBuilder96.build();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, -1, 1, 100]");
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
        org.junit.Assert.assertNotNull(equalsBuilder98);
        org.junit.Assert.assertEquals("'" + boolean99 + "' != '" + false + "'", boolean99, false);
    }

    @Test
    public void test2097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2097");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray4 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray5 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder1.append(shortArray4, shortArray5);
        byte[] byteArray7 = new byte[] {};
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder1.append(byteArray7, byteArray12);
        char[] charArray18 = new char[] { '#', ' ', '#', '#' };
        char[] charArray21 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder1.append(charArray18, charArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder22.append('a', '#');
        java.util.Collection<java.lang.String> strCollection26 = null;
        boolean boolean27 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) 0L, (java.lang.Object) equalsBuilder25, strCollection26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder25.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder25.append((double) (byte) 0, (double) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray36 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray37 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder33.append(shortArray36, shortArray37);
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean47 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder38, (java.lang.Object) '#', strArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder38.append((int) (short) -1, (int) (short) 0);
        boolean boolean51 = equalsBuilder50.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray55 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray56 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder52.append(shortArray55, shortArray56);
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean66 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder57, (java.lang.Object) '#', strArray65);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder57.append((int) (short) -1, (int) (short) 0);
        boolean boolean70 = equalsBuilder69.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder50.append((java.lang.Object) boolean70, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder50.append(false, true);
        boolean boolean76 = equalsBuilder75.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder75.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder75.append((byte) 100, (byte) -1);
        boolean boolean84 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder32, (java.lang.Object) equalsBuilder75, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder32.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder87.append((int) (byte) 0, (int) ' ');
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
    }

    @Test
    public void test2098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2098");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        boolean boolean16 = equalsBuilder15.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray20 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray21 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder17.append(shortArray20, shortArray21);
        byte[] byteArray23 = new byte[] {};
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(byteArray23, byteArray28);
        byte[] byteArray30 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder15.append(byteArray28, byteArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) (byte) 1, (double) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder31.append((byte) 100, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder37.append(10.0f, (float) (byte) 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
    }

    @Test
    public void test2099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2099");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray6 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray10 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray11 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder7.append(shortArray10, shortArray11);
        byte[] byteArray13 = new byte[] {};
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder7.append(byteArray13, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder0.append(byteArray6, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray29 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray33 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray34 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder30.append(shortArray33, shortArray34);
        byte[] byteArray36 = new byte[] {};
        byte[] byteArray41 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder30.append(byteArray36, byteArray41);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder23.append(byteArray29, byteArray41);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray50 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray54 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray55 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder51.append(shortArray54, shortArray55);
        byte[] byteArray57 = new byte[] {};
        byte[] byteArray62 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder51.append(byteArray57, byteArray62);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder44.append(byteArray50, byteArray62);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder0.append(byteArray41, byteArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder0.append((int) ' ', (int) (short) -1);
        java.lang.Boolean boolean69 = equalsBuilder68.build();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertEquals("'" + boolean69 + "' != '" + false + "'", boolean69, false);
    }

    @Test
    public void test2100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2100");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append((double) '4', (double) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder17.append((long) (-1), (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder17.append((short) (byte) 10, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder17.append((long) (byte) 1, (long) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder17.append((int) '4', (int) (byte) 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder54);
    }

    @Test
    public void test2101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2101");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 100.0f, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder5.append((short) 0, (short) -1);
        boolean boolean21 = equalsBuilder5.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder5.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder5.append((short) 0, (short) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder5.append((double) 10.0f, 1.0d);
        boolean boolean31 = equalsBuilder30.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder30.append((byte) 100, (byte) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(equalsBuilder34);
    }

    @Test
    public void test2102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2102");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder21.append((int) (byte) 1, (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((int) (byte) 1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder30.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder33.append((byte) 100, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder33.append((float) (byte) -1, (float) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder39.append((double) (byte) -1, (double) 0.0f);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
    }

    @Test
    public void test2103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2103");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder17.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder19.append((byte) 10, (byte) 0);
        boolean boolean23 = equalsBuilder22.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder22.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder22.append((byte) 0, (byte) 10);
        equalsBuilder22.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(equalsBuilder29);
    }

    @Test
    public void test2104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2104");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder9.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder9.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder15.append((short) 0, (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder15.append((short) (byte) -1, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder15.append((float) (byte) 1, (float) (short) 1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
    }

    @Test
    public void test2105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2105");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder4 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder4.append((short) (byte) 10, (short) 0);
        equalsBuilder4.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder9.append((short) (byte) 10, (short) 0);
        long[] longArray18 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray20 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder9.append(longArray18, longArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder22.append((short) (byte) 10, (short) 0);
        long[] longArray31 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray33 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder22.append(longArray31, longArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder4.append(longArray18, longArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder36.append((short) (byte) 10, (short) 0);
        long[] longArray45 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray47 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder36.append(longArray45, longArray47);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray52 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray53 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder49.append(shortArray52, shortArray53);
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean63 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder54, (java.lang.Object) '#', strArray62);
        boolean boolean64 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray47, (java.lang.Object) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder3.append(longArray18, longArray47);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder3.append((byte) 0, (byte) 10);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
    }

    @Test
    public void test2106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2106");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        float[] floatArray18 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray21 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append(floatArray18, floatArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder12.append(true, true);
        byte[] byteArray29 = new byte[] { (byte) 100, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray33 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray34 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder30.append(shortArray33, shortArray34);
        byte[] byteArray36 = new byte[] {};
        byte[] byteArray41 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder30.append(byteArray36, byteArray41);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder25.append(byteArray29, byteArray36);
        boolean boolean44 = equalsBuilder25.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder25.append((short) (byte) 1, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder47.append((float) (byte) -1, (float) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder47.append((short) (byte) 0, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder47.append((int) (byte) 10, 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100, 10, 1]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(equalsBuilder56);
    }

    @Test
    public void test2107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2107");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        float[] floatArray65 = null;
        float[] floatArray66 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder64.append(floatArray65, floatArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder64.append((double) 0.0f, 100.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder70.append('4', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder73.append((float) 10L, (float) 1L);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
    }

    @Test
    public void test2108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2108");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder6.append((-1L), 100L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder9.append((int) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder9.append((short) (byte) 0, (short) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder15.append((short) (byte) -1, (short) -1);
        equalsBuilder15.reset();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder18);
    }

    @Test
    public void test2109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2109");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((double) 100L, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((short) (byte) -1, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder84.append('#', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder84.append('4', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder84.append((byte) 0, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder84.append((short) 0, (short) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder99 = equalsBuilder84.append((short) 1, (short) 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
        org.junit.Assert.assertNotNull(equalsBuilder99);
    }

    @Test
    public void test2110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2110");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        long[] longArray9 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray11 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(longArray9, longArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder13.append((short) (byte) 10, (short) 0);
        long[] longArray22 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray24 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder13.append(longArray22, longArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray29 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray30 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder26.append(shortArray29, shortArray30);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean40 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder31, (java.lang.Object) '#', strArray39);
        boolean boolean41 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray24, (java.lang.Object) '#');
        boolean boolean43 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder0, (java.lang.Object) '#', false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder45.append((int) (short) 100, (int) (short) -1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
    }

    @Test
    public void test2111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2111");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        java.lang.Object obj7 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray18 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray19 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder15.append(shortArray18, shortArray19);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(byteArray21, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder8.append(byteArray14, byteArray26);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj7, (java.lang.Object) byteArray26, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray41 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray42 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder38.append(shortArray41, shortArray42);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder38.append(byteArray44, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder31.append(byteArray37, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(byteArray26, byteArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray69 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray70 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder66.append(shortArray69, shortArray70);
        byte[] byteArray72 = new byte[] {};
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder66.append(byteArray72, byteArray77);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder0.append(byteArray59, byteArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder0.appendSuper(true);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder81);
    }

    @Test
    public void test2112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2112");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append((double) '4', (double) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder17.append((long) (-1), (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder17.append((short) (byte) 10, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray52 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray53 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder49.append(shortArray52, shortArray53);
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean63 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder54, (java.lang.Object) '#', strArray62);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder64.append(false, false);
        java.lang.Boolean boolean68 = equalsBuilder67.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder67.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder67.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder67.append(false, false);
        boolean boolean78 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) strArray62, (java.lang.Object) false, true);
        java.lang.Object[] objArray79 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder17.append((java.lang.Object[]) strArray62, objArray79);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((long) 10, (long) '#');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertEquals("'" + boolean68 + "' != '" + true + "'", boolean68, true);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
    }

    @Test
    public void test2113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2113");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder62.append((float) 10, (float) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder65.append((float) 0, (float) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder68.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder68.append((byte) 100, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder68.append(' ', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder76.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder78.appendSuper(false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder80);
    }

    @Test
    public void test2114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2114");
        java.lang.Object obj0 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray4 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray5 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder1.append(shortArray4, shortArray5);
        byte[] byteArray7 = new byte[] {};
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder1.append(byteArray7, byteArray12);
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        boolean boolean18 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj0, (java.lang.Object) equalsBuilder13, (java.util.Collection<java.lang.String>) strList16);
        boolean boolean19 = equalsBuilder13.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder13.append((float) (byte) 1, (float) 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder13.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder25.append((short) (byte) 10, (short) 0);
        equalsBuilder25.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder25.append((double) 'a', (double) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder32.append((short) -1, (short) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder35.append((double) '#', 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder38.append('#', 'a');
        boolean boolean43 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) false, (java.lang.Object) equalsBuilder38, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder38.append((int) (short) 10, (int) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder38.append((short) (byte) 0, (short) (byte) 1);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder49);
    }

    @Test
    public void test2115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2115");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((byte) 1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder35.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder37.append('a', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder37.append((byte) 0, (byte) 0);
        java.lang.Boolean boolean44 = equalsBuilder43.build();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertEquals("'" + boolean44 + "' != '" + false + "'", boolean44, false);
    }

    @Test
    public void test2116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2116");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder0.append((double) 1, (double) (-1L));
        java.lang.Boolean boolean11 = equalsBuilder10.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray18 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        byte[] byteArray25 = new byte[] {};
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder19.append(byteArray25, byteArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder12.append(byteArray18, byteArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray37 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray38 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder34.append(shortArray37, shortArray38);
        byte[] byteArray40 = new byte[] {};
        byte[] byteArray45 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder34.append(byteArray40, byteArray45);
        boolean boolean47 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder10.append(byteArray18, byteArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder48.append((double) (short) -1, (double) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder48.append('4', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder48.append((float) (-1L), (float) '4');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(equalsBuilder57);
    }

    @Test
    public void test2117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2117");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((double) 100L, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((short) (byte) -1, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder84.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder84.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder89.append((byte) -1, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder89.append(' ', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder98 = equalsBuilder89.append(100, 1);
        java.lang.Class<?> wildcardClass99 = equalsBuilder89.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertNotNull(equalsBuilder98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2118");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder77.append(10.0d, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder77.append((float) (byte) 10, (float) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder77.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder77.append((float) 0L, (float) (short) 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
    }

    @Test
    public void test2119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2119");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((double) (short) -1, (double) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder31.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder38.append(1.0d, (double) 10.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder41.append((short) (byte) 1, (short) (byte) -1);
        byte[] byteArray45 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray49 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray50 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder46.append(shortArray49, shortArray50);
        byte[] byteArray52 = new byte[] {};
        byte[] byteArray57 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder46.append(byteArray52, byteArray57);
        float[] floatArray64 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray67 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder58.append(floatArray64, floatArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder58.append(true, true);
        byte[] byteArray75 = new byte[] { (byte) 100, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray79 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray80 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder76.append(shortArray79, shortArray80);
        byte[] byteArray82 = new byte[] {};
        byte[] byteArray87 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder76.append(byteArray82, byteArray87);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder71.append(byteArray75, byteArray82);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder44.append(byteArray45, byteArray82);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder90.append((-1.0f), (float) 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder93.append((long) (short) 10, 1L);
        equalsBuilder93.reset();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(floatArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray64), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray67), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[100, 10, 1]");
        org.junit.Assert.assertNotNull(shortArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray79), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray80), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[]");
        org.junit.Assert.assertNotNull(byteArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray87), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
    }

    @Test
    public void test2120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2120");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        float[] floatArray65 = null;
        float[] floatArray66 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder64.append(floatArray65, floatArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder64.append((double) 0.0f, 100.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder70.append('4', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder73.append((long) 'a', (long) ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder73.append((byte) 100, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder79.append(' ', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder82.appendSuper(false);
        java.lang.Boolean boolean85 = equalsBuilder84.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertEquals("'" + boolean85 + "' != '" + false + "'", boolean85, false);
    }

    @Test
    public void test2121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2121");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        boolean boolean16 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder19.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append((float) (-1L), 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder19.append((short) 0, (short) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder19.append((long) (byte) -1, (long) ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder30.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder32.append((byte) 100, (byte) 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertNotNull(equalsBuilder35);
    }

    @Test
    public void test2122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2122");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray6 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray10 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray11 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder7.append(shortArray10, shortArray11);
        byte[] byteArray13 = new byte[] {};
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder7.append(byteArray13, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder0.append(byteArray6, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder22.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append(' ', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((long) (short) 10, (long) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder27.append((int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder33.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder33.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray49 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray50 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder46.append(shortArray49, shortArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder39.append(shortArray43, shortArray50);
        java.lang.Object obj53 = null;
        boolean boolean54 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder39, obj53);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder39.append((double) (-1L), (double) (short) 1);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(equalsBuilder57);
    }

    @Test
    public void test2123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2123");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder21.append((int) (byte) 1, (int) (byte) 0);
        short[] shortArray28 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray32 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray33 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder29.append(shortArray32, shortArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder27.append(shortArray28, shortArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder35.append((double) (-1), (double) 10.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder35.append('4', '#');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(equalsBuilder41);
    }

    @Test
    public void test2124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2124");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((float) '#', 1.0f);
        java.lang.Object obj9 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray13 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray14 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder10.append(shortArray13, shortArray14);
        byte[] byteArray16 = new byte[] {};
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder10.append(byteArray16, byteArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder22.append((byte) 10, (byte) 0);
        boolean boolean26 = equalsBuilder25.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray30 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray31 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder27.append(shortArray30, shortArray31);
        byte[] byteArray33 = new byte[] {};
        byte[] byteArray38 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder27.append(byteArray33, byteArray38);
        byte[] byteArray40 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder25.append(byteArray38, byteArray40);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder25.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray48 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray49 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder45.append(shortArray48, shortArray49);
        byte[] byteArray51 = new byte[] {};
        byte[] byteArray56 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder45.append(byteArray51, byteArray56);
        char[] charArray62 = new char[] { '#', ' ', '#', '#' };
        char[] charArray65 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder45.append(charArray62, charArray65);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder66.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder69.append((long) (short) 10, (long) '#');
        equalsBuilder72.reset();
        java.lang.Object obj74 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray78 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray79 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder75.append(shortArray78, shortArray79);
        byte[] byteArray81 = new byte[] {};
        byte[] byteArray86 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder75.append(byteArray81, byteArray86);
        java.lang.String[] strArray89 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList90 = new java.util.ArrayList<java.lang.String>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList90, strArray89);
        boolean boolean92 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj74, (java.lang.Object) equalsBuilder87, (java.util.Collection<java.lang.String>) strList90);
        boolean boolean93 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder44, (java.lang.Object) equalsBuilder72, (java.util.Collection<java.lang.String>) strList90);
        boolean boolean94 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, obj9, (java.util.Collection<java.lang.String>) strList90);
        equalsBuilder5.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder97 = equalsBuilder5.appendSuper(false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(shortArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray78), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray79), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[]");
        org.junit.Assert.assertNotNull(byteArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray86), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(equalsBuilder97);
    }

    @Test
    public void test2125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2125");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray19 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray20 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder16.append(shortArray19, shortArray20);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder21, (java.lang.Object) '#', strArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder21.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray37 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray38 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder34.append(shortArray37, shortArray38);
        byte[] byteArray40 = new byte[] {};
        byte[] byteArray45 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder34.append(byteArray40, byteArray45);
        char[] charArray51 = new char[] { '#', ' ', '#', '#' };
        char[] charArray54 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder34.append(charArray51, charArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray59 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray60 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder56.append(shortArray59, shortArray60);
        byte[] byteArray62 = new byte[] {};
        byte[] byteArray67 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder56.append(byteArray62, byteArray67);
        char[] charArray73 = new char[] { '#', ' ', '#', '#' };
        char[] charArray76 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder56.append(charArray73, charArray76);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder21.append(charArray54, charArray73);
        java.lang.Object obj79 = null;
        boolean boolean80 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray54, obj79);
        java.lang.String[] strArray81 = new java.lang.String[] {};
        boolean boolean82 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder15, (java.lang.Object) charArray54, strArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder15.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder15.append('4', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder15.append((float) (-1L), 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder90.append(10.0f, (float) (short) 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
    }

    @Test
    public void test2126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2126");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append('a', '#');
        java.lang.Boolean boolean78 = equalsBuilder64.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertEquals("'" + boolean78 + "' != '" + false + "'", boolean78, false);
    }

    @Test
    public void test2127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2127");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((byte) 1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder35.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder35.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder39.append('a', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder39.append('4', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray49 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray50 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder46.append(shortArray49, shortArray50);
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean60 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder51, (java.lang.Object) '#', strArray59);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder51.append((double) 100.0f, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder51.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder65.append((double) 0L, (double) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder65.append('4', '4');
        long[] longArray72 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder73.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder73.append((-1), (int) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder79.append((-1L), 100L);
        long[] longArray89 = new long[] { (byte) 10, (short) 1, (short) -1, '4', (-1L), (short) 10 };
        long[] longArray90 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder82.append(longArray89, longArray90);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder71.append(longArray72, longArray89);
        boolean boolean93 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder39, (java.lang.Object) longArray89);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(longArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray89), "[10, 1, -1, 52, -1, 10]");
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test2128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2128");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder62.append((float) 10, (float) (short) 100);
        equalsBuilder62.reset();
        java.lang.Boolean boolean67 = equalsBuilder62.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertEquals("'" + boolean67 + "' != '" + true + "'", boolean67, true);
    }

    @Test
    public void test2129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2129");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        long[] longArray9 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray11 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(longArray9, longArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append('a', ' ');
        java.lang.Class<?> wildcardClass20 = equalsBuilder19.getClass();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test2130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2130");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        double[] doubleArray80 = new double[] { (short) 0, 0.0d, (byte) 10, (byte) 0 };
        double[] doubleArray81 = new double[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder64.append(doubleArray80, doubleArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder82.append((short) 0, (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder82.append((float) (short) 1, (float) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder88.append((short) 1, (short) 10);
        equalsBuilder91.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder91.appendSuper(true);
        java.lang.Class<?> wildcardClass95 = equalsBuilder91.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0, 0.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test2131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2131");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray9 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray10 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder6.append(shortArray9, shortArray10);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean20 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder11, (java.lang.Object) '#', strArray19);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder11.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray27 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray28 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder24.append(shortArray27, shortArray28);
        byte[] byteArray30 = new byte[] {};
        byte[] byteArray35 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append(byteArray30, byteArray35);
        char[] charArray41 = new char[] { '#', ' ', '#', '#' };
        char[] charArray44 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder24.append(charArray41, charArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray49 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray50 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder46.append(shortArray49, shortArray50);
        byte[] byteArray52 = new byte[] {};
        byte[] byteArray57 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder46.append(byteArray52, byteArray57);
        char[] charArray63 = new char[] { '#', ' ', '#', '#' };
        char[] charArray66 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder46.append(charArray63, charArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder11.append(charArray44, charArray63);
        java.lang.String[] strArray69 = null;
        boolean boolean70 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray4, (java.lang.Object) equalsBuilder11, strArray69);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder11.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder11.append((byte) 10, (byte) -1);
        equalsBuilder11.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder11.append((-1.0f), (float) (short) 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(equalsBuilder80);
    }

    @Test
    public void test2132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2132");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        boolean boolean16 = equalsBuilder15.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray20 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray21 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder17.append(shortArray20, shortArray21);
        byte[] byteArray23 = new byte[] {};
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(byteArray23, byteArray28);
        byte[] byteArray30 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder15.append(byteArray28, byteArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder15.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder15.append((short) (byte) 10, (short) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
    }

    @Test
    public void test2133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2133");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append((long) (byte) 100, 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.append((double) 10, (double) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray13 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray14 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder10.append(shortArray13, shortArray14);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean24 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder15, (java.lang.Object) '#', strArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray31 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray32 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder28.append(shortArray31, shortArray32);
        byte[] byteArray34 = new byte[] {};
        byte[] byteArray39 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder28.append(byteArray34, byteArray39);
        char[] charArray45 = new char[] { '#', ' ', '#', '#' };
        char[] charArray48 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder28.append(charArray45, charArray48);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray53 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray54 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder50.append(shortArray53, shortArray54);
        byte[] byteArray56 = new byte[] {};
        byte[] byteArray61 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder50.append(byteArray56, byteArray61);
        char[] charArray67 = new char[] { '#', ' ', '#', '#' };
        char[] charArray70 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder50.append(charArray67, charArray70);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder15.append(charArray48, charArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder15.appendSuper(false);
        int[] intArray78 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray83 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder74.append(intArray78, intArray83);
        int[] intArray89 = new int[] { (byte) 0, (-1), 1, 100 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder3.append(intArray83, intArray89);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder3.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder92.appendSuper(false);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, -1, 1, 100]");
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder94);
    }

    @Test
    public void test2134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2134");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.appendSuper(true);
        boolean boolean10 = equalsBuilder9.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray14 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray15 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder11.append(shortArray14, shortArray15);
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean25 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder16, (java.lang.Object) '#', strArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder16.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray32 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray33 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder29.append(shortArray32, shortArray33);
        byte[] byteArray35 = new byte[] {};
        byte[] byteArray40 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder29.append(byteArray35, byteArray40);
        char[] charArray46 = new char[] { '#', ' ', '#', '#' };
        char[] charArray49 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder29.append(charArray46, charArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray54 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray55 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder51.append(shortArray54, shortArray55);
        byte[] byteArray57 = new byte[] {};
        byte[] byteArray62 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder51.append(byteArray57, byteArray62);
        char[] charArray68 = new char[] { '#', ' ', '#', '#' };
        char[] charArray71 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder51.append(charArray68, charArray71);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder16.append(charArray49, charArray68);
        equalsBuilder73.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder73.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder73.append((short) 10, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((float) (short) 100, 0.0f);
        equalsBuilder83.reset();
        boolean boolean85 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder9, (java.lang.Object) equalsBuilder83);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder83.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder88.append((-1L), (long) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder88.append((double) 0, (double) (short) 100);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder94);
    }

    @Test
    public void test2135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2135");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder21.append((int) (byte) 1, (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((int) (byte) 1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder30.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder33.append((byte) 100, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder33.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder38.append((short) 100, (short) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder38.appendSuper(true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(equalsBuilder43);
    }

    @Test
    public void test2136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2136");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder6.append((-1L), 100L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder9.append((int) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder9.append((short) (byte) 0, (short) (byte) 100);
        equalsBuilder15.reset();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
    }

    @Test
    public void test2137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2137");
        java.lang.Object obj0 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray4 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray5 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder1.append(shortArray4, shortArray5);
        byte[] byteArray7 = new byte[] {};
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder1.append(byteArray7, byteArray12);
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        boolean boolean18 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj0, (java.lang.Object) equalsBuilder13, (java.util.Collection<java.lang.String>) strList16);
        boolean boolean19 = equalsBuilder13.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder13.append((float) (byte) 1, (float) 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder13.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append((int) 'a', (int) (short) 10);
        boolean boolean28 = equalsBuilder27.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder27.append((long) 100, (long) (short) 100);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(equalsBuilder31);
    }

    @Test
    public void test2138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2138");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 100, (byte) 100);
        equalsBuilder7.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder7.append(true, false);
        float[] floatArray12 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray16 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray17 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder13.append(shortArray16, shortArray17);
        byte[] byteArray19 = new byte[] {};
        byte[] byteArray24 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder13.append(byteArray19, byteArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder25.append((byte) 10, (byte) 0);
        equalsBuilder25.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder25.append((short) 0, (short) 0);
        float[] floatArray33 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray37 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray38 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder34.append(shortArray37, shortArray38);
        byte[] byteArray40 = new byte[] {};
        byte[] byteArray45 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder34.append(byteArray40, byteArray45);
        float[] floatArray52 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray55 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder46.append(floatArray52, floatArray55);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder32.append(floatArray33, floatArray52);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder11.append(floatArray12, floatArray52);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder11.append((int) '4', (int) ' ');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray52), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray55), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(equalsBuilder61);
    }

    @Test
    public void test2139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2139");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append((double) '4', (double) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder42.append((int) '4', (int) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder42.append((byte) 100, (byte) 1);
        boolean boolean49 = equalsBuilder42.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder42.appendSuper(false);
        equalsBuilder51.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(equalsBuilder51);
    }

    @Test
    public void test2140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2140");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        double[] doubleArray80 = new double[] { (short) 0, 0.0d, (byte) 10, (byte) 0 };
        double[] doubleArray81 = new double[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder64.append(doubleArray80, doubleArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder82.append((short) 0, (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder82.append((float) (short) 1, (float) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder88.append((short) 1, (short) 10);
        equalsBuilder91.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder91.append((double) 'a', (double) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder98 = equalsBuilder95.append((double) 100L, 1.0d);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0, 0.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertNotNull(equalsBuilder98);
    }

    @Test
    public void test2141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2141");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder62.append(100, (int) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder62.append((short) 10, (short) -1);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder62.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder62.append(0, (int) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder75.append(true, false);
        java.lang.Boolean boolean79 = equalsBuilder75.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertEquals("'" + boolean79 + "' != '" + false + "'", boolean79, false);
    }

    @Test
    public void test2142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2142");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 100.0f, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder5.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder19.append((double) 0L, (double) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder19.append('4', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder25.append((long) (byte) -1, (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder25.appendSuper(true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder30);
    }

    @Test
    public void test2143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2143");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 100.0f, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder5.append((short) 0, (short) -1);
        boolean boolean21 = equalsBuilder5.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder5.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder5.append((short) 0, (short) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder27.appendSuper(true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder29);
    }

    @Test
    public void test2144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2144");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        java.lang.Object obj7 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray18 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray19 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder15.append(shortArray18, shortArray19);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(byteArray21, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder8.append(byteArray14, byteArray26);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj7, (java.lang.Object) byteArray26, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray41 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray42 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder38.append(shortArray41, shortArray42);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder38.append(byteArray44, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder31.append(byteArray37, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(byteArray26, byteArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray69 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray70 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder66.append(shortArray69, shortArray70);
        byte[] byteArray72 = new byte[] {};
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder66.append(byteArray72, byteArray77);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder0.append(byteArray59, byteArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder0.append(0, (int) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder82.append((short) 100, (short) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder82.appendSuper(false);
        java.lang.Class<?> wildcardClass88 = equalsBuilder82.getClass();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test2145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2145");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray9 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray10 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder6.append(shortArray9, shortArray10);
        byte[] byteArray12 = new byte[] {};
        byte[] byteArray17 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder6.append(byteArray12, byteArray17);
        float[] floatArray24 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray27 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder18.append(floatArray24, floatArray27);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder18.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder32.append((short) (byte) 10, (short) 0);
        long[] longArray41 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray43 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder32.append(longArray41, longArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder0.append((java.lang.Object) true, (java.lang.Object) longArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder0.append((short) -1, (short) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder48.append((byte) -1, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder48.append(1, 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder48.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder48.append((long) (short) 10, (long) (short) 100);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(equalsBuilder59);
    }

    @Test
    public void test2146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2146");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append((long) (byte) 100, 1L);
        boolean boolean7 = equalsBuilder6.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder6.append((double) (byte) 100, (double) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder6.append((int) (short) 100, (int) (byte) 1);
        equalsBuilder6.reset();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(equalsBuilder13);
    }

    @Test
    public void test2147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2147");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        java.lang.Object obj7 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray18 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray19 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder15.append(shortArray18, shortArray19);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(byteArray21, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder8.append(byteArray14, byteArray26);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj7, (java.lang.Object) byteArray26, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray41 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray42 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder38.append(shortArray41, shortArray42);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder38.append(byteArray44, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder31.append(byteArray37, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(byteArray26, byteArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder52.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder52.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder52.append((float) (byte) 10, (float) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder60.append((short) 100, (short) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder60.append(10, (int) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder66.append(10L, (long) (byte) 100);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
    }

    @Test
    public void test2148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2148");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder75.append((long) (short) -1, (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder75.append((float) (byte) 100, (float) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder81.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder81.append('#', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder81.append((double) 0L, 0.0d);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
    }

    @Test
    public void test2149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2149");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append((long) (byte) 1, (long) 1);
        equalsBuilder24.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder24.append((long) '4', (long) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder24.append((byte) 10, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder32.append((short) (byte) 10, (short) 0);
        long[] longArray41 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray43 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder32.append(longArray41, longArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray48 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray49 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder45.append(shortArray48, shortArray49);
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean59 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder50, (java.lang.Object) '#', strArray58);
        boolean boolean60 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray43, (java.lang.Object) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder61.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder61.append((-1), (int) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder67.append((-1L), 100L);
        long[] longArray77 = new long[] { (byte) 10, (short) 1, (short) -1, '4', (-1L), (short) 10 };
        long[] longArray78 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder70.append(longArray77, longArray78);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder24.append(longArray43, longArray77);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append(1L, (long) ' ');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(longArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray77), "[10, 1, -1, 52, -1, 10]");
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
    }

    @Test
    public void test2150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2150");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.appendSuper(false);
        boolean boolean78 = equalsBuilder64.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder64.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((long) (-1), (long) '#');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
    }

    @Test
    public void test2151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2151");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder64.append((double) 10.0f, 100.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((short) (byte) 1, (short) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder83.append(10.0f, (float) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder83.appendSuper(false);
        java.lang.Object obj89 = null;
        boolean boolean90 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder83, obj89);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder83.append((long) (byte) 1, (long) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder93.append((byte) 0, (byte) 0);
        java.lang.Boolean boolean97 = equalsBuilder96.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
        org.junit.Assert.assertEquals("'" + boolean97 + "' != '" + false + "'", boolean97, false);
    }

    @Test
    public void test2152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2152");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder78.append((double) (byte) 0, (double) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder78.append(10L, (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder78.append((byte) 100, (byte) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
    }

    @Test
    public void test2153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2153");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder62.append((short) 10, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder69.append((float) (short) 100, 0.0f);
        equalsBuilder72.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder72.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder75.append((short) 0, (short) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
    }

    @Test
    public void test2154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2154");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder62.append((short) 10, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder69.append((float) (short) 100, 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder72.append((double) (byte) 10, (double) 1.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder75.append((long) (byte) -1, 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder75.append((byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder82.append((short) (byte) 10, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder85.appendSuper(true);
        equalsBuilder87.reset();
        boolean boolean89 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder75, (java.lang.Object) equalsBuilder87);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder75.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder91.append((byte) -1, (byte) 100);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder94);
    }

    @Test
    public void test2155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2155");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        java.lang.Object obj7 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray18 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray19 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder15.append(shortArray18, shortArray19);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(byteArray21, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder8.append(byteArray14, byteArray26);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj7, (java.lang.Object) byteArray26, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray41 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray42 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder38.append(shortArray41, shortArray42);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder38.append(byteArray44, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder31.append(byteArray37, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(byteArray26, byteArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder52.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder52.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder52.append((-1L), (long) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder52.append((byte) 100, (byte) 1);
        java.lang.Boolean boolean64 = equalsBuilder63.build();
        java.lang.Class<?> wildcardClass65 = equalsBuilder63.getClass();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertEquals("'" + boolean64 + "' != '" + false + "'", boolean64, false);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test2156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2156");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append((double) '4', (double) 0);
        equalsBuilder17.reset();
        equalsBuilder17.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder17.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder17.append((float) 'a', (float) (byte) 1);
        java.lang.Boolean boolean51 = equalsBuilder17.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder17.appendSuper(true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertEquals("'" + boolean51 + "' != '" + false + "'", boolean51, false);
        org.junit.Assert.assertNotNull(equalsBuilder53);
    }

    @Test
    public void test2157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2157");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        long[] longArray9 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray11 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(longArray9, longArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder17.append((short) (byte) 10, (short) 0);
        long[] longArray26 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray28 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(longArray26, longArray28);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder30.append((short) (byte) 10, (short) 0);
        equalsBuilder30.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder35.append((short) (byte) 10, (short) 0);
        long[] longArray44 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray46 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder35.append(longArray44, longArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder48.append((short) (byte) 10, (short) 0);
        long[] longArray57 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray59 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder48.append(longArray57, longArray59);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder30.append(longArray44, longArray59);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder0.append(longArray28, longArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder62.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder62.append((long) (byte) 100, (long) '#');
        equalsBuilder62.reset();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
    }

    @Test
    public void test2158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2158");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray12 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray16 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray17 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder13.append(shortArray16, shortArray17);
        byte[] byteArray19 = new byte[] {};
        byte[] byteArray24 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder13.append(byteArray19, byteArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder6.append(byteArray12, byteArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray31 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray32 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder28.append(shortArray31, shortArray32);
        byte[] byteArray34 = new byte[] {};
        byte[] byteArray39 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder28.append(byteArray34, byteArray39);
        boolean boolean41 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder0.append(byteArray12, byteArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder0.append(100.0f, 100.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder45.appendSuper(false);
        java.lang.Boolean boolean48 = equalsBuilder45.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder45.append('a', '#');
        equalsBuilder51.reset();
        java.lang.Class<?> wildcardClass53 = equalsBuilder51.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertEquals("'" + boolean48 + "' != '" + false + "'", boolean48, false);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test2159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2159");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder46.append(byteArray52, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder46.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder39.append((java.lang.Object) equalsBuilder45, (java.lang.Object) equalsBuilder46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder45.append((float) (short) 0, 100.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder45.append((float) 100L, (-1.0f));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder75.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder75.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder75.append(false, false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
    }

    @Test
    public void test2160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2160");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray4 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray5 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder1.append(shortArray4, shortArray5);
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean15 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder6, (java.lang.Object) '#', strArray14);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder6.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        byte[] byteArray25 = new byte[] {};
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder19.append(byteArray25, byteArray30);
        char[] charArray36 = new char[] { '#', ' ', '#', '#' };
        char[] charArray39 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder19.append(charArray36, charArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray44 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray45 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder41.append(shortArray44, shortArray45);
        byte[] byteArray47 = new byte[] {};
        byte[] byteArray52 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder41.append(byteArray47, byteArray52);
        char[] charArray58 = new char[] { '#', ' ', '#', '#' };
        char[] charArray61 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder41.append(charArray58, charArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder6.append(charArray39, charArray58);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder6.appendSuper(false);
        long[] longArray66 = null;
        long[] longArray73 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder65.append(longArray66, longArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder65.append(true, true);
        boolean boolean79 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) 1.0f, (java.lang.Object) equalsBuilder65, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder65.append((long) 10, (long) (short) 0);
        java.lang.Boolean boolean83 = equalsBuilder65.build();
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertEquals("'" + boolean83 + "' != '" + false + "'", boolean83, false);
    }

    @Test
    public void test2161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2161");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((double) 100L, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((short) (byte) -1, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder84.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder84.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder89.append((byte) -1, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder89.append(' ', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder98 = equalsBuilder89.append((short) (byte) 1, (short) (byte) 10);
        java.lang.Class<?> wildcardClass99 = equalsBuilder98.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertNotNull(equalsBuilder98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2162");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((byte) 1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder35.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder35.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder35.append(10, 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder35.append(true, true);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
    }

    @Test
    public void test2163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2163");
        java.lang.Object obj0 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray4 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray5 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder1.append(shortArray4, shortArray5);
        byte[] byteArray7 = new byte[] {};
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder1.append(byteArray7, byteArray12);
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        boolean boolean18 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj0, (java.lang.Object) equalsBuilder13, (java.util.Collection<java.lang.String>) strList16);
        boolean boolean19 = equalsBuilder13.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder13.append((float) (byte) 1, (float) 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder13.append(0.0d, (double) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder13.append(100, (int) (byte) 1);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder28);
    }

    @Test
    public void test2164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2164");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 100.0f, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder5.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder19.append((double) 0L, (double) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder22.append((short) (byte) 100, (short) (byte) 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
    }

    @Test
    public void test2165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2165");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 10, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder3.append(' ', 'a');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder10);
    }

    @Test
    public void test2166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2166");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder62.append(100, (int) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder65.append('#', '#');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
    }

    @Test
    public void test2167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2167");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        float[] floatArray18 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray21 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append(floatArray18, floatArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder12.append((short) (byte) 100, (short) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder25.append((long) (byte) -1, (long) 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder28);
    }

    @Test
    public void test2168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2168");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray4 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray5 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder1.append(shortArray4, shortArray5);
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean15 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder6, (java.lang.Object) '#', strArray14);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder6.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        byte[] byteArray25 = new byte[] {};
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder19.append(byteArray25, byteArray30);
        char[] charArray36 = new char[] { '#', ' ', '#', '#' };
        char[] charArray39 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder19.append(charArray36, charArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray44 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray45 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder41.append(shortArray44, shortArray45);
        byte[] byteArray47 = new byte[] {};
        byte[] byteArray52 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder41.append(byteArray47, byteArray52);
        char[] charArray58 = new char[] { '#', ' ', '#', '#' };
        char[] charArray61 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder41.append(charArray58, charArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder6.append(charArray39, charArray58);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder63.append(100, (int) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder63.append((short) 10, (short) -1);
        boolean boolean70 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) 100.0d, (java.lang.Object) equalsBuilder63);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder63.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder72.append((double) (short) 10, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder75.append((float) 0, (float) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder78.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder81.appendSuper(true);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder83);
    }

    @Test
    public void test2169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2169");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray6 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray10 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray11 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder7.append(shortArray10, shortArray11);
        byte[] byteArray13 = new byte[] {};
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder7.append(byteArray13, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder0.append(byteArray6, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder22.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append(' ', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((short) -1, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder30.append('4', ' ');
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
    }

    @Test
    public void test2170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2170");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray9 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray10 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder6.append(shortArray9, shortArray10);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean20 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder11, (java.lang.Object) '#', strArray19);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder11.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray27 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray28 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder24.append(shortArray27, shortArray28);
        byte[] byteArray30 = new byte[] {};
        byte[] byteArray35 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append(byteArray30, byteArray35);
        char[] charArray41 = new char[] { '#', ' ', '#', '#' };
        char[] charArray44 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder24.append(charArray41, charArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray49 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray50 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder46.append(shortArray49, shortArray50);
        byte[] byteArray52 = new byte[] {};
        byte[] byteArray57 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder46.append(byteArray52, byteArray57);
        char[] charArray63 = new char[] { '#', ' ', '#', '#' };
        char[] charArray66 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder46.append(charArray63, charArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder11.append(charArray44, charArray63);
        java.lang.String[] strArray69 = null;
        boolean boolean70 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray4, (java.lang.Object) equalsBuilder11, strArray69);
        java.lang.Class<?> wildcardClass71 = shortArray4.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test2171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2171");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        float[] floatArray18 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray21 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append(floatArray18, floatArray21);
        java.lang.Boolean boolean23 = equalsBuilder12.build();
        java.lang.Boolean boolean24 = equalsBuilder12.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertEquals("'" + boolean23 + "' != '" + false + "'", boolean23, false);
        org.junit.Assert.assertEquals("'" + boolean24 + "' != '" + false + "'", boolean24, false);
    }

    @Test
    public void test2172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2172");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append((long) (short) 10, (long) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((int) '4', (int) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((short) (byte) 10, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder34.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder40.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder40.append((double) (short) 100, (double) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder40.append((double) (byte) 1, (double) 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray53 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray54 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder50.append(shortArray53, shortArray54);
        byte[] byteArray56 = new byte[] {};
        byte[] byteArray61 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder50.append(byteArray56, byteArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder63.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder63.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder63.appendSuper(false);
        boolean boolean71 = equalsBuilder63.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder63.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder74.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder77.append((long) (byte) 100, 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder77.append((double) 10, (double) (byte) 1);
        java.lang.Object obj84 = new java.lang.Object();
        java.lang.String[] strArray87 = new java.lang.String[] { "", "" };
        java.util.ArrayList<java.lang.String> strList88 = new java.util.ArrayList<java.lang.String>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList88, strArray87);
        boolean boolean90 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder83, obj84, (java.util.Collection<java.lang.String>) strList88);
        boolean boolean91 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) byteArray61, (java.lang.Object) false, (java.util.Collection<java.lang.String>) strList88);
        boolean boolean92 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder27, (java.lang.Object) 0L, (java.util.Collection<java.lang.String>) strList88);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test2173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2173");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray6 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray10 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray11 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder7.append(shortArray10, shortArray11);
        byte[] byteArray13 = new byte[] {};
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder7.append(byteArray13, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder0.append(byteArray6, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder22.append(true, false);
        byte[] byteArray27 = new byte[] { (byte) 0 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray31 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray32 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder28.append(shortArray31, shortArray32);
        byte[] byteArray34 = new byte[] {};
        byte[] byteArray39 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder28.append(byteArray34, byteArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder40.append((byte) 10, (byte) 0);
        boolean boolean44 = equalsBuilder43.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray48 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray49 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder45.append(shortArray48, shortArray49);
        byte[] byteArray51 = new byte[] {};
        byte[] byteArray56 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder45.append(byteArray51, byteArray56);
        byte[] byteArray58 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder43.append(byteArray56, byteArray58);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder25.append(byteArray27, byteArray58);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder25.append(' ', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder25.append(' ', '#');
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0]");
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(equalsBuilder66);
    }

    @Test
    public void test2174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2174");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        boolean boolean16 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(' ', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder19.append((short) 1, (short) 100);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
    }

    @Test
    public void test2175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2175");
        java.lang.Object obj0 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray4 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray5 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder1.append(shortArray4, shortArray5);
        byte[] byteArray7 = new byte[] {};
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder1.append(byteArray7, byteArray12);
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        boolean boolean18 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj0, (java.lang.Object) equalsBuilder13, (java.util.Collection<java.lang.String>) strList16);
        boolean boolean19 = equalsBuilder13.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder13.append((float) (byte) 1, (float) 1L);
        boolean boolean23 = equalsBuilder13.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder13.append((-1), (int) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder27.append((float) 10L, (float) (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((short) (byte) 10, (short) 0);
        long[] longArray43 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray45 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder34.append(longArray43, longArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder47.append((short) (byte) 10, (short) 0);
        long[] longArray56 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray58 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder47.append(longArray56, longArray58);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder33.append(longArray43, longArray58);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder61.append((short) (byte) 10, (short) 0);
        long[] longArray70 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray72 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder61.append(longArray70, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder26.append(longArray43, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray78 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray79 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder75.append(shortArray78, shortArray79);
        byte[] byteArray81 = new byte[] {};
        byte[] byteArray86 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder75.append(byteArray81, byteArray86);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder87.append((byte) 10, (byte) 0);
        equalsBuilder87.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder87.append((double) ' ', (double) (short) 100);
        boolean boolean96 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray72, (java.lang.Object) equalsBuilder87, true);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(longArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray56), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray70), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(shortArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray78), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray79), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[]");
        org.junit.Assert.assertNotNull(byteArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray86), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder94);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test2176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2176");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder42.append((float) (byte) 1, 100.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder42.append((double) (byte) 0, (double) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder42.append((int) (byte) 100, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder51.append((double) '4', (double) (short) 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder54);
    }

    @Test
    public void test2177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2177");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 100.0f, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder5.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder5.appendSuper(true);
        equalsBuilder21.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder21.append((int) (short) 0, (int) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder26.append((short) (byte) 10, (short) 0);
        equalsBuilder26.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((short) (byte) 10, (short) 0);
        long[] longArray40 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray42 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder31.append(longArray40, longArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder44.append((short) (byte) 10, (short) 0);
        long[] longArray53 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray55 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder44.append(longArray53, longArray55);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder26.append(longArray40, longArray55);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder26.appendSuper(true);
        boolean boolean60 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) equalsBuilder59);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(longArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray53), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray55), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test2178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2178");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder4 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder4.append((short) (byte) 10, (short) 0);
        equalsBuilder4.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder9.append((short) (byte) 10, (short) 0);
        long[] longArray18 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray20 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder9.append(longArray18, longArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder22.append((short) (byte) 10, (short) 0);
        long[] longArray31 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray33 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder22.append(longArray31, longArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder4.append(longArray18, longArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder36.append((short) (byte) 10, (short) 0);
        long[] longArray45 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray47 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder36.append(longArray45, longArray47);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray52 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray53 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder49.append(shortArray52, shortArray53);
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean63 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder54, (java.lang.Object) '#', strArray62);
        boolean boolean64 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray47, (java.lang.Object) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder3.append(longArray18, longArray47);
        java.lang.Boolean boolean66 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder3.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder69.append((byte) 10, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder69.append(false, false);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertEquals("'" + boolean66 + "' != '" + false + "'", boolean66, false);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
    }

    @Test
    public void test2179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2179");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder46.append(byteArray52, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder46.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder39.append((java.lang.Object) equalsBuilder45, (java.lang.Object) equalsBuilder46);
        long[] longArray73 = new long[] { (byte) 100, ' ', (short) 10 };
        long[] longArray79 = new long[] { 'a', 0L, (short) 10, (byte) 0, (byte) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder46.append(longArray73, longArray79);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder83.append(0, (int) (short) 0);
        boolean boolean87 = equalsBuilder83.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder83.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder83.append((double) '#', 10.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder83.append((byte) 1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder99 = equalsBuilder83.append(0.0d, (double) (-1));
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[100, 32, 10]");
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[97, 0, 10, 0, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
        org.junit.Assert.assertNotNull(equalsBuilder99);
    }

    @Test
    public void test2180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2180");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder21.append((int) (byte) 1, (int) (byte) 0);
        short[] shortArray28 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray32 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray33 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder29.append(shortArray32, shortArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder27.append(shortArray28, shortArray33);
        java.lang.Boolean boolean36 = equalsBuilder35.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder35.append((byte) 10, (byte) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertEquals("'" + boolean36 + "' != '" + false + "'", boolean36, false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
    }

    @Test
    public void test2181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2181");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray4 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray5 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder1.append(shortArray4, shortArray5);
        byte[] byteArray7 = new byte[] {};
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder1.append(byteArray7, byteArray12);
        char[] charArray18 = new char[] { '#', ' ', '#', '#' };
        char[] charArray21 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder1.append(charArray18, charArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder22.append('a', '#');
        java.util.Collection<java.lang.String> strCollection26 = null;
        boolean boolean27 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) 0L, (java.lang.Object) equalsBuilder25, strCollection26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder25.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder25.append((long) (short) 0, 10L);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder32);
    }

    @Test
    public void test2182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2182");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        float[] floatArray18 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray21 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append(floatArray18, floatArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder12.append(true, true);
        byte[] byteArray29 = new byte[] { (byte) 100, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray33 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray34 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder30.append(shortArray33, shortArray34);
        byte[] byteArray36 = new byte[] {};
        byte[] byteArray41 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder30.append(byteArray36, byteArray41);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder25.append(byteArray29, byteArray36);
        boolean boolean44 = equalsBuilder25.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder25.append(1L, (long) (-1));
        float[] floatArray49 = new float[] { 1L };
        float[] floatArray50 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder47.append(floatArray49, floatArray50);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100, 10, 1]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
    }

    @Test
    public void test2183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2183");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((double) 100L, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((short) (byte) -1, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder84.append('#', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder87.append('a', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder87.append((long) ' ', (long) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder87.append(true, true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
    }

    @Test
    public void test2184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2184");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray25 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray26 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder22.append(shortArray25, shortArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray34 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray38 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray39 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder35.append(shortArray38, shortArray39);
        byte[] byteArray41 = new byte[] {};
        byte[] byteArray46 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder35.append(byteArray41, byteArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder28.append(byteArray34, byteArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray53 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray54 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder50.append(shortArray53, shortArray54);
        byte[] byteArray56 = new byte[] {};
        byte[] byteArray61 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder50.append(byteArray56, byteArray61);
        boolean boolean63 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder22.append(byteArray34, byteArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder22.append(100.0f, 100.0f);
        boolean boolean69 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder0, (java.lang.Object) equalsBuilder67, true);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder0.append((double) (byte) -1, (double) ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder0.appendSuper(false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder77);
    }

    @Test
    public void test2185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2185");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append((short) 100, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray46 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray47 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder43.append(shortArray46, shortArray47);
        byte[] byteArray49 = new byte[] {};
        byte[] byteArray54 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder43.append(byteArray49, byteArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder55.append((byte) 10, (byte) 0);
        equalsBuilder55.reset();
        boolean boolean60 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 100, (java.lang.Object) equalsBuilder55);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder55.append((int) (short) 10, 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder63.append((short) -1, (short) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder66.append(false, true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[]");
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
    }

    @Test
    public void test2186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2186");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder15.append((long) '#', (long) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((float) ' ', (-1.0f));
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(equalsBuilder21);
    }

    @Test
    public void test2187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2187");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray8 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray9 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder5.append(shortArray8, shortArray9);
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean19 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder10, (java.lang.Object) '#', strArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder10.append((int) (short) -1, (int) (short) 0);
        boolean boolean23 = equalsBuilder22.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray27 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray28 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder24.append(shortArray27, shortArray28);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean38 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder29, (java.lang.Object) '#', strArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder29.append((int) (short) -1, (int) (short) 0);
        boolean boolean42 = equalsBuilder41.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder22.append((java.lang.Object) boolean42, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder22.append(false, true);
        boolean boolean48 = equalsBuilder47.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder47.append((int) ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder51.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray58 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray59 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder55.append(shortArray58, shortArray59);
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean69 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder60, (java.lang.Object) '#', strArray68);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder70.append(false, false);
        java.lang.Boolean boolean74 = equalsBuilder73.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder73.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder73.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder73.append(false, false);
        boolean boolean84 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) strArray68, (java.lang.Object) false, true);
        boolean boolean85 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder0, (java.lang.Object) equalsBuilder51, strArray68);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder51.append(' ', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder51.append('4', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder51.append((short) 1, (short) 100);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray58), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertEquals("'" + boolean74 + "' != '" + true + "'", boolean74, true);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder94);
    }

    @Test
    public void test2188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2188");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray9 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray10 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder6.append(shortArray9, shortArray10);
        byte[] byteArray12 = new byte[] {};
        byte[] byteArray17 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder6.append(byteArray12, byteArray17);
        float[] floatArray24 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray27 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder18.append(floatArray24, floatArray27);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder18.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder32.append((short) (byte) 10, (short) 0);
        long[] longArray41 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray43 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder32.append(longArray41, longArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder0.append((java.lang.Object) true, (java.lang.Object) longArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder0.append(100, (int) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder48.append((double) 'a', (double) 100L);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder51);
    }

    @Test
    public void test2189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2189");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        float[] floatArray65 = null;
        float[] floatArray66 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder64.append(floatArray65, floatArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder64.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append((float) 100L, (float) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder74.append((short) (byte) 10, (short) 0);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((double) 'a', (double) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((short) -1, (short) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder84.append((double) '#', 0.0d);
        boolean boolean88 = equalsBuilder84.isEquals();
        boolean boolean89 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder64, (java.lang.Object) equalsBuilder84);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder84.appendSuper(false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(equalsBuilder91);
    }

    @Test
    public void test2190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2190");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder9.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder9.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder15.append((short) 0, (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder15.append((short) (byte) -1, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append((float) (short) 1, (float) (byte) 100);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
    }

    @Test
    public void test2191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2191");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 100, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder3.append((byte) 10, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder10.append((double) '4', (double) 1.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder10.append((byte) 100, (byte) -1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder16);
    }

    @Test
    public void test2192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2192");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder64.append((long) 'a', (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append(100.0d, (double) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder83.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder83.append(100L, (long) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder83.append(0L, 0L);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
    }

    @Test
    public void test2193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2193");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder21.append((int) (byte) 1, (int) (byte) 0);
        short[] shortArray28 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray32 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray33 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder29.append(shortArray32, shortArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder27.append(shortArray28, shortArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder27.append((short) (byte) 1, (short) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder27.append(true, false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(equalsBuilder41);
    }

    @Test
    public void test2194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2194");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder62.append(100, (int) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder62.append(0L, (long) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder68.append((short) (byte) 0, (short) (byte) 0);
        equalsBuilder71.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder71.append((double) (-1L), (double) 100L);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(equalsBuilder75);
    }

    @Test
    public void test2195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2195");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        long[] longArray9 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray11 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(longArray9, longArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append('a', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder19.append(true, false);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
    }

    @Test
    public void test2196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2196");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder9.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder9.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder15.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((float) (short) -1, 0.0f);
        equalsBuilder18.reset();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(equalsBuilder21);
    }

    @Test
    public void test2197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2197");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        float[] floatArray65 = null;
        float[] floatArray66 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder64.append(floatArray65, floatArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder67.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder67.append((short) -1, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder67.append((long) (-1), 100L);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
    }

    @Test
    public void test2198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2198");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        boolean boolean16 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder19.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append((int) (short) -1, (int) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append(10.0d, (double) 10.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray31 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray32 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder28.append(shortArray31, shortArray32);
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean42 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder33, (java.lang.Object) '#', strArray41);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder43.append(false, false);
        java.lang.Boolean boolean47 = equalsBuilder46.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder46.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder46.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder46.append(false, false);
        boolean boolean57 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) strArray41, (java.lang.Object) false, true);
        java.lang.Object[] objArray58 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder27.append((java.lang.Object[]) strArray41, objArray58);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder27.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder61.append((short) (byte) 1, (short) (byte) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertEquals("'" + boolean47 + "' != '" + true + "'", boolean47, true);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder64);
    }

    @Test
    public void test2199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2199");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray12 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray16 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray17 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder13.append(shortArray16, shortArray17);
        byte[] byteArray19 = new byte[] {};
        byte[] byteArray24 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder13.append(byteArray19, byteArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder6.append(byteArray12, byteArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray31 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray32 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder28.append(shortArray31, shortArray32);
        byte[] byteArray34 = new byte[] {};
        byte[] byteArray39 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder28.append(byteArray34, byteArray39);
        boolean boolean41 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder0.append(byteArray12, byteArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder0.append(100.0f, 100.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder45.append((float) (short) -1, 10.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray52 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray53 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder49.append(shortArray52, shortArray53);
        byte[] byteArray55 = new byte[] {};
        byte[] byteArray60 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder49.append(byteArray55, byteArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray66 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray67 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder63.append(shortArray66, shortArray67);
        byte[] byteArray69 = new byte[] {};
        byte[] byteArray74 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder63.append(byteArray69, byteArray74);
        boolean boolean76 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray74);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder45.append(byteArray55, byteArray74);
        boolean boolean78 = equalsBuilder77.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder77.append((double) '4', 1.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((short) (byte) 1, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder84.append((short) 0, (short) (byte) 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[]");
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray67), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[]");
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
    }

    @Test
    public void test2200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2200");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((double) 100L, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((short) (byte) -1, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder81.append((double) 0.0f, (double) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder81.append((float) '#', (float) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder81.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder92.append(1.0f, (float) (short) 0);
        boolean boolean96 = equalsBuilder92.isEquals();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test2201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2201");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder7.append((float) (byte) 1, (float) 100L);
        boolean boolean11 = equalsBuilder10.isEquals();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test2202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2202");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder46.append(byteArray52, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder46.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder39.append((java.lang.Object) equalsBuilder45, (java.lang.Object) equalsBuilder46);
        long[] longArray73 = new long[] { (byte) 100, ' ', (short) 10 };
        long[] longArray79 = new long[] { 'a', 0L, (short) 10, (byte) 0, (byte) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder46.append(longArray73, longArray79);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder80.append(' ', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder86.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder86.append((long) 1, (long) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder92.append((float) 100L, (float) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder98 = equalsBuilder95.append((float) (short) 100, (float) (short) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[100, 32, 10]");
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[97, 0, 10, 0, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertNotNull(equalsBuilder98);
    }

    @Test
    public void test2203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2203");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append((long) (byte) 1, (long) 1);
        equalsBuilder24.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder24.append((long) '4', (long) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder24.append((byte) 10, (byte) 0);
        boolean boolean32 = equalsBuilder31.isEquals();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test2204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2204");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        long[] longArray9 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray11 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(longArray9, longArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder14.append('4', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder14.append((long) 1, 0L);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
    }

    @Test
    public void test2205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2205");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        boolean boolean16 = equalsBuilder15.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray20 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray21 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder17.append(shortArray20, shortArray21);
        byte[] byteArray23 = new byte[] {};
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(byteArray23, byteArray28);
        byte[] byteArray30 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder15.append(byteArray28, byteArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder15.append(false, false);
        equalsBuilder34.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder34.append('#', 'a');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder38);
    }

    @Test
    public void test2206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2206");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder21.append((int) (byte) 1, (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder21.append((long) 1, (long) 0);
        equalsBuilder21.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
    }

    @Test
    public void test2207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2207");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        equalsBuilder12.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder12.append('#', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append((byte) 10, (byte) -1);
        java.lang.Boolean boolean23 = equalsBuilder22.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertEquals("'" + boolean23 + "' != '" + false + "'", boolean23, false);
    }

    @Test
    public void test2208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2208");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder64.append((long) 'a', (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append(100.0d, (double) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder83.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder83.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder87.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder89.append((long) (short) -1, (-1L));
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
    }

    @Test
    public void test2209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2209");
        java.lang.Object obj0 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray4 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray5 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder1.append(shortArray4, shortArray5);
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean15 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder6, (java.lang.Object) '#', strArray14);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder6.append((double) 100.0f, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder6.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder21.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder21.appendSuper(false);
        float[] floatArray29 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray33 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray34 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder30.append(shortArray33, shortArray34);
        byte[] byteArray36 = new byte[] {};
        byte[] byteArray41 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder30.append(byteArray36, byteArray41);
        float[] floatArray48 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray51 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder42.append(floatArray48, floatArray51);
        java.lang.Object obj54 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray59 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray60 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder56.append(shortArray59, shortArray60);
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean70 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder61, (java.lang.Object) '#', strArray69);
        boolean boolean71 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj54, (java.lang.Object) (byte) 1, strArray69);
        boolean boolean72 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) floatArray51, (java.lang.Object) (byte) 0, strArray69);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder21.append(floatArray29, floatArray51);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder73.append((double) '#', (double) (-1));
        java.lang.Object obj77 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder78.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((long) (byte) 100, 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder81.append((double) 10, (double) (byte) 1);
        java.lang.Object obj88 = new java.lang.Object();
        java.lang.String[] strArray91 = new java.lang.String[] { "", "" };
        java.util.ArrayList<java.lang.String> strList92 = new java.util.ArrayList<java.lang.String>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList92, strArray91);
        boolean boolean94 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder87, obj88, (java.util.Collection<java.lang.String>) strList92);
        boolean boolean95 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder76, obj77, (java.util.Collection<java.lang.String>) strList92);
        boolean boolean96 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj0, (java.lang.Object) equalsBuilder20, (java.util.Collection<java.lang.String>) strList92);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray48), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test2210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2210");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        float[] floatArray65 = null;
        float[] floatArray66 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder64.append(floatArray65, floatArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder67.append((double) 0, (double) (byte) 1);
        equalsBuilder70.reset();
        boolean boolean72 = equalsBuilder70.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder70.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder70.append((int) '4', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder70.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((short) (byte) 1, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder83.append((float) '4', (float) (short) 1);
        equalsBuilder86.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder86.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder89.append(10L, 0L);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
    }

    @Test
    public void test2211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2211");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder62.append((short) 10, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder69.append((float) (short) 100, 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder72.append((double) (byte) 10, (double) 1.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder72.append(false, false);
        equalsBuilder72.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
    }

    @Test
    public void test2212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2212");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder4 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder4.append((short) (byte) 10, (short) 0);
        equalsBuilder4.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder9.append((short) (byte) 10, (short) 0);
        long[] longArray18 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray20 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder9.append(longArray18, longArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder22.append((short) (byte) 10, (short) 0);
        long[] longArray31 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray33 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder22.append(longArray31, longArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder4.append(longArray18, longArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder36.append((short) (byte) 10, (short) 0);
        long[] longArray45 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray47 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder36.append(longArray45, longArray47);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray52 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray53 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder49.append(shortArray52, shortArray53);
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean63 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder54, (java.lang.Object) '#', strArray62);
        boolean boolean64 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray47, (java.lang.Object) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder3.append(longArray18, longArray47);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder3.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder67.append((long) 1, (long) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder70.append('#', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder70.append((int) '4', (int) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder76.append('a', '4');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(equalsBuilder79);
    }

    @Test
    public void test2213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2213");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.appendSuper(true);
        boolean boolean10 = equalsBuilder9.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder9.append((byte) 100, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder9.append((short) 0, (short) (byte) -1);
        java.lang.Class<?> wildcardClass17 = equalsBuilder16.getClass();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test2214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2214");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder0.append((short) (byte) 10, (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder0.append((-1), 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder11.append((short) (byte) 10, (short) 0);
        long[] longArray20 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray22 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder11.append(longArray20, longArray22);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder11.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder11.appendSuper(false);
        java.lang.Boolean boolean28 = equalsBuilder11.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder11.append((byte) 1, (byte) -1);
        boolean boolean32 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) 0, (java.lang.Object) equalsBuilder11);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertEquals("'" + boolean28 + "' != '" + false + "'", boolean28, false);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test2215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2215");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder77.append(10.0d, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder80.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder80.appendSuper(false);
        java.lang.Class<?> wildcardClass85 = equalsBuilder80.getClass();
        java.lang.Object obj86 = null;
        boolean boolean87 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) wildcardClass85, obj86);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test2216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2216");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder4 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray7 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray8 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder4.append(shortArray7, shortArray8);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean18 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder9, (java.lang.Object) '#', strArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder9.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray25 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray26 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder22.append(shortArray25, shortArray26);
        byte[] byteArray28 = new byte[] {};
        byte[] byteArray33 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder22.append(byteArray28, byteArray33);
        char[] charArray39 = new char[] { '#', ' ', '#', '#' };
        char[] charArray42 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder22.append(charArray39, charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray47 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray48 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder44.append(shortArray47, shortArray48);
        byte[] byteArray50 = new byte[] {};
        byte[] byteArray55 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder44.append(byteArray50, byteArray55);
        char[] charArray61 = new char[] { '#', ' ', '#', '#' };
        char[] charArray64 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder44.append(charArray61, charArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder9.append(charArray42, charArray61);
        java.lang.Object obj67 = null;
        boolean boolean68 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray42, obj67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray72 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray73 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder69.append(shortArray72, shortArray73);
        byte[] byteArray75 = new byte[] {};
        byte[] byteArray80 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder69.append(byteArray75, byteArray80);
        char[] charArray86 = new char[] { '#', ' ', '#', '#' };
        char[] charArray89 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder69.append(charArray86, charArray89);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder3.append(charArray42, charArray86);
        equalsBuilder91.reset();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray72), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[]");
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder91);
    }

    @Test
    public void test2217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2217");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((byte) 1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder35.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder35.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder39.append((int) (short) -1, (int) 'a');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
    }

    @Test
    public void test2218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2218");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        long[] longArray9 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray11 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(longArray9, longArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder17.append((short) (byte) 10, (short) 0);
        long[] longArray26 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray28 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(longArray26, longArray28);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder30.append((short) (byte) 10, (short) 0);
        equalsBuilder30.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder35.append((short) (byte) 10, (short) 0);
        long[] longArray44 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray46 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder35.append(longArray44, longArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder48.append((short) (byte) 10, (short) 0);
        long[] longArray57 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray59 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder48.append(longArray57, longArray59);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder30.append(longArray44, longArray59);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder0.append(longArray28, longArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder62.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder65.append((byte) 100, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder65.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder71.append(0, 0);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(equalsBuilder74);
    }

    @Test
    public void test2219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2219");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder64.append((long) 'a', (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder64.append((double) (-1.0f), (double) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder64.append((byte) 100, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder64.append((short) (byte) 0, (short) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder89.append('4', ' ');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
    }

    @Test
    public void test2220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2220");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((double) 100L, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((short) (byte) -1, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder84.append('#', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder84.append('4', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder84.append(' ', '#');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
    }

    @Test
    public void test2221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2221");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder62.append((short) 10, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder69.append((float) (short) 100, 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder72.append((double) (byte) 10, (double) 1.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder75.append((long) (byte) -1, 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder75.append((byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder82.append((short) (byte) 10, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder85.appendSuper(true);
        equalsBuilder87.reset();
        boolean boolean89 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder75, (java.lang.Object) equalsBuilder87);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder87.append(0, (int) ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder87.append((float) 100L, (float) 1L);
        equalsBuilder95.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder95);
    }

    @Test
    public void test2222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2222");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        int[] intArray6 = new int[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray10 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray11 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder7.append(shortArray10, shortArray11);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean21 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder12, (java.lang.Object) '#', strArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder12.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray28 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray29 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder25.append(shortArray28, shortArray29);
        byte[] byteArray31 = new byte[] {};
        byte[] byteArray36 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder25.append(byteArray31, byteArray36);
        char[] charArray42 = new char[] { '#', ' ', '#', '#' };
        char[] charArray45 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder25.append(charArray42, charArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray50 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray51 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder47.append(shortArray50, shortArray51);
        byte[] byteArray53 = new byte[] {};
        byte[] byteArray58 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder47.append(byteArray53, byteArray58);
        char[] charArray64 = new char[] { '#', ' ', '#', '#' };
        char[] charArray67 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder47.append(charArray64, charArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder12.append(charArray45, charArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder12.appendSuper(false);
        int[] intArray75 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray80 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder71.append(intArray75, intArray80);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder5.append(intArray6, intArray80);
        boolean boolean83 = equalsBuilder82.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder82.append(1L, (long) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder82.append((long) 'a', (long) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder82.append((int) (byte) 1, (int) (byte) -1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[]");
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
    }

    @Test
    public void test2223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2223");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((double) 100L, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((byte) 10, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder81.append(true, false);
        java.lang.Boolean boolean88 = equalsBuilder81.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder81.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder81.append((float) (-1L), 100.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder93.append((float) ' ', (-1.0f));
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertEquals("'" + boolean88 + "' != '" + false + "'", boolean88, false);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
    }

    @Test
    public void test2224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2224");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder64.append((long) 'a', (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append(100.0d, (double) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder80.append((long) '#', 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder80.append((short) 0, (short) 0);
        java.lang.Boolean boolean90 = equalsBuilder80.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertEquals("'" + boolean90 + "' != '" + false + "'", boolean90, false);
    }

    @Test
    public void test2225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2225");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder77.append(10.0d, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder77.append((float) (byte) 10, (float) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder77.append((byte) 0, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder77.append((double) (short) 100, (double) 0.0f);
        boolean boolean90 = equalsBuilder89.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder89.append(true, true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(equalsBuilder93);
    }

    @Test
    public void test2226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2226");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append((long) (byte) 100, 1L);
        boolean boolean7 = equalsBuilder6.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder6.append((double) (byte) 100, (double) 100);
        java.lang.Boolean boolean11 = equalsBuilder10.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder10.append(' ', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder14.append((float) 10L, (float) 0L);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(equalsBuilder17);
    }

    @Test
    public void test2227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2227");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder64.append((short) -1, (short) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder64.append((double) (-1), (double) (short) -1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
    }
}

