import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours0.multipliedBy((int) '4');
        org.joda.time.Period period13 = hours0.toPeriod();
        org.joda.time.PeriodType periodType14 = hours0.getPeriodType();
        org.joda.time.Hours hours15 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        int int19 = hours17.getValue((int) (short) 0);
        org.joda.time.Hours hours20 = hours16.minus(hours17);
        org.joda.time.Hours hours21 = hours15.minus(hours16);
        int int22 = hours15.size();
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours24 = org.joda.time.Hours.EIGHT;
        int int26 = hours24.getValue((int) (short) 0);
        org.joda.time.Hours hours27 = hours23.minus(hours24);
        boolean boolean29 = hours24.equals((java.lang.Object) (short) 10);
        int int30 = hours15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours24);
        org.joda.time.Period period31 = hours24.toPeriod();
        org.joda.time.Hours hours32 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours24);
        boolean boolean33 = hours0.equals((java.lang.Object) hours32);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8 + "'", int19 == 8);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 8 + "'", int26 == 8);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours9 = hours3.minus(hours5);
        org.joda.time.PeriodType periodType10 = hours5.getPeriodType();
        org.joda.time.Hours hours11 = org.joda.time.Hours.ZERO;
        org.joda.time.Duration duration12 = hours11.toStandardDuration();
        boolean boolean13 = hours5.isLessThan(hours11);
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod16 = hours15.toMutablePeriod();
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours18 = hours15.minus(hours17);
        int int19 = hours14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.Hours hours20 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours14);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = hours14.get(durationFieldType21);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = hours23.get(durationFieldType27);
        org.joda.time.Hours hours30 = hours23.minus((int) (short) 0);
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod32 = hours31.toMutablePeriod();
        org.joda.time.Hours hours33 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours34 = hours31.minus(hours33);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        boolean boolean36 = hours33.isSupported(durationFieldType35);
        org.joda.time.Hours hours37 = hours30.minus(hours33);
        org.joda.time.Period period38 = hours30.toPeriod();
        org.joda.time.Hours hours39 = hours14.plus(hours30);
        org.joda.time.Hours hours40 = hours5.minus(hours30);
        org.joda.time.Hours hours42 = hours40.plus((-7));
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours42);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours0.get(durationFieldType7);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours0.get(durationFieldType9);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType12 = hours0.getFieldType((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        int int9 = hours7.getValue((int) (short) 0);
        org.joda.time.Hours hours10 = hours6.minus(hours7);
        org.joda.time.Hours hours11 = hours5.minus(hours6);
        int int12 = hours5.size();
        org.joda.time.Duration duration13 = hours5.toStandardDuration();
        boolean boolean14 = hours1.isGreaterThan(hours5);
        org.joda.time.Duration duration15 = hours1.toStandardDuration();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(duration15);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = hours8.getFieldType();
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        org.joda.time.Duration duration17 = hours13.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod18 = hours13.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        int int21 = hours19.getValue((int) (short) 0);
        java.lang.String str22 = hours19.toString();
        boolean boolean23 = hours13.isGreaterThan(hours19);
        org.joda.time.Hours hours25 = hours19.minus(10);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.Hours hours32 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours26);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = hours26.get(durationFieldType33);
        boolean boolean35 = hours25.equals((java.lang.Object) hours26);
        org.joda.time.Hours hours37 = hours26.minus(100);
        org.joda.time.Hours hours38 = hours7.minus(hours26);
        org.joda.time.Hours hours40 = hours26.plus(8);
        org.joda.time.Hours hours42 = hours26.minus(26);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7 + "'", int12 == 7);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 8 + "'", int21 == 8);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT8H" + "'", str22, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours42);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        int int18 = hours13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours16);
        org.joda.time.Hours hours19 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours13);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours13.get(durationFieldType20);
        boolean boolean22 = hours12.equals((java.lang.Object) hours13);
        org.joda.time.Hours hours24 = hours13.minus(100);
        int int25 = hours13.getHours();
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.Hours hours32 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours26);
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod34 = hours33.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours36 = hours33.minus(hours35);
        org.joda.time.DurationFieldType durationFieldType37 = null;
        int int38 = hours33.get(durationFieldType37);
        org.joda.time.Hours hours40 = hours33.minus((int) (short) 0);
        org.joda.time.Hours hours41 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType42 = null;
        int int43 = hours41.get(durationFieldType42);
        org.joda.time.DurationFieldType durationFieldType44 = hours41.getFieldType();
        int int45 = hours40.get(durationFieldType44);
        org.joda.time.Hours hours46 = org.joda.time.Hours.ONE;
        int int47 = hours46.getHours();
        org.joda.time.Hours hours49 = hours46.plus(10);
        org.joda.time.Hours hours50 = hours40.minus(hours49);
        org.joda.time.Hours hours51 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours50);
        boolean boolean52 = hours26.isLessThan(hours51);
        boolean boolean53 = hours13.equals((java.lang.Object) hours26);
        org.joda.time.Hours hours54 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType55 = null;
        int int56 = hours54.get(durationFieldType55);
        org.joda.time.Hours hours58 = hours54.dividedBy(100);
        org.joda.time.Hours hours59 = hours54.negated();
        boolean boolean60 = hours26.equals((java.lang.Object) hours59);
        org.joda.time.Hours hours62 = hours59.plus(41297762);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 7 + "'", int25 == 7);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 7 + "'", int45 == 7);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(hours62);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours1 = hours0.negated();
        org.joda.time.DurationFieldType durationFieldType2 = hours0.getFieldType();
        java.lang.String str3 = hours0.toString();
        org.joda.time.Hours hours4 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.MutablePeriod mutablePeriod11 = hours5.toMutablePeriod();
        org.joda.time.Hours hours13 = hours5.minus(7);
        org.joda.time.Hours hours14 = hours4.minus(hours5);
        org.joda.time.Hours hours15 = hours0.minus(hours5);
        org.joda.time.Hours hours17 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Period period18 = hours17.toPeriod();
        org.joda.time.Hours hours20 = hours17.minus((int) (byte) -1);
        int int22 = hours17.getValue(0);
        org.joda.time.Hours hours23 = hours5.minus(hours17);
        org.joda.time.Duration duration24 = hours23.toStandardDuration();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT3H" + "'", str3, "PT3H");
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 16 + "'", int22 == 16);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(duration24);
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours0.minus((int) 'a');
        org.joda.time.Hours hours8 = org.joda.time.Hours.ZERO;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        boolean boolean10 = hours7.equals((java.lang.Object) hours8);
        org.joda.time.Hours hours12 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType13 = hours12.getFieldType();
        org.joda.time.Hours hours15 = hours12.plus(700);
        org.joda.time.Hours hours16 = null;
        org.joda.time.Hours hours17 = hours15.plus(hours16);
        boolean boolean18 = hours7.isGreaterThan(hours17);
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = hours19.get(durationFieldType23);
        org.joda.time.Hours hours26 = hours19.minus((int) (short) 0);
        org.joda.time.Hours hours27 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = hours27.get(durationFieldType28);
        org.joda.time.DurationFieldType durationFieldType30 = hours27.getFieldType();
        int int31 = hours26.get(durationFieldType30);
        org.joda.time.PeriodType periodType32 = hours26.getPeriodType();
        org.joda.time.Hours hours34 = hours26.multipliedBy(8);
        int int35 = hours17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours34);
        org.joda.time.Period period36 = hours34.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 7 + "'", int31 == 7);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(period36);
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(0);
        org.joda.time.Hours hours3 = hours1.multipliedBy((int) (short) 0);
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        int int9 = hours4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours7);
        org.joda.time.DurationFieldType durationFieldType10 = null;
        boolean boolean11 = hours4.isSupported(durationFieldType10);
        org.joda.time.Hours hours13 = hours4.minus((int) (short) -1);
        org.joda.time.PeriodType periodType14 = hours4.getPeriodType();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        int int17 = hours15.getValue((int) (short) 0);
        org.joda.time.Hours hours18 = hours4.minus(hours15);
        org.joda.time.Hours hours20 = hours4.plus(7);
        org.joda.time.Hours hours21 = hours4.negated();
        org.joda.time.Hours hours23 = hours21.multipliedBy(100);
        java.lang.Class<?> wildcardClass24 = hours21.getClass();
        boolean boolean25 = hours1.equals((java.lang.Object) hours21);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.MutablePeriod mutablePeriod6 = hours0.toMutablePeriod();
        org.joda.time.Hours hours8 = hours0.multipliedBy((int) (byte) 100);
        org.joda.time.DurationFieldType durationFieldType9 = hours8.getFieldType();
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        int int15 = hours10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours13);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        boolean boolean17 = hours10.isSupported(durationFieldType16);
        org.joda.time.Hours hours19 = hours10.minus((int) (short) -1);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours23 = hours20.minus(hours22);
        org.joda.time.Hours hours25 = hours22.plus(8);
        org.joda.time.Hours hours26 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = hours26.get(durationFieldType27);
        org.joda.time.DurationFieldType durationFieldType29 = hours26.getFieldType();
        boolean boolean30 = hours25.isSupported(durationFieldType29);
        int int31 = hours19.get(durationFieldType29);
        int int32 = hours8.get(durationFieldType29);
        org.joda.time.Hours hours34 = hours8.minus(16);
        org.joda.time.Hours hours36 = hours8.minus((-4));
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 8 + "'", int31 == 8);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 700 + "'", int32 == 700);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours36);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.Hours hours3 = hours0.plus(10);
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod5 = hours4.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours7 = hours4.minus(hours6);
        org.joda.time.Duration duration8 = hours4.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod9 = hours4.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        int int12 = hours10.getValue((int) (short) 0);
        java.lang.String str13 = hours10.toString();
        boolean boolean14 = hours4.isGreaterThan(hours10);
        org.joda.time.Hours hours16 = hours10.minus(10);
        org.joda.time.Hours hours17 = hours10.negated();
        org.joda.time.Hours hours19 = hours17.plus((int) (byte) 0);
        org.joda.time.DurationFieldType durationFieldType21 = hours17.getFieldType(0);
        boolean boolean22 = hours0.equals((java.lang.Object) durationFieldType21);
        org.joda.time.Hours hours23 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours28 = hours25.minus(hours27);
        int int29 = hours24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours27);
        org.joda.time.MutablePeriod mutablePeriod30 = hours24.toMutablePeriod();
        org.joda.time.Hours hours32 = hours24.minus(7);
        org.joda.time.Hours hours33 = hours23.minus(hours24);
        org.joda.time.Hours hours35 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod37 = hours36.toMutablePeriod();
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours39 = hours36.minus(hours38);
        org.joda.time.DurationFieldType durationFieldType40 = null;
        int int41 = hours36.get(durationFieldType40);
        org.joda.time.Hours hours43 = hours36.minus((int) (short) 0);
        org.joda.time.Hours hours44 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod45 = hours44.toMutablePeriod();
        org.joda.time.Hours hours46 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours47 = hours44.minus(hours46);
        org.joda.time.DurationFieldType durationFieldType48 = null;
        boolean boolean49 = hours46.isSupported(durationFieldType48);
        org.joda.time.Hours hours50 = hours43.minus(hours46);
        org.joda.time.Hours hours51 = hours35.plus(hours50);
        org.joda.time.Hours hours52 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours53 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod54 = hours53.toMutablePeriod();
        org.joda.time.Hours hours55 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours56 = hours53.minus(hours55);
        int int57 = hours52.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours55);
        org.joda.time.Hours hours58 = hours35.plus(hours55);
        org.joda.time.Hours hours59 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod60 = hours59.toMutablePeriod();
        org.joda.time.Hours hours61 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours62 = hours59.minus(hours61);
        org.joda.time.DurationFieldType durationFieldType63 = null;
        int int64 = hours59.get(durationFieldType63);
        org.joda.time.Hours hours66 = hours59.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval67 = null;
        org.joda.time.Hours hours68 = org.joda.time.Hours.hoursIn(readableInterval67);
        int int69 = hours66.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours68);
        boolean boolean70 = hours55.isGreaterThan(hours66);
        org.joda.time.Hours hours72 = hours55.multipliedBy(16);
        org.joda.time.Hours hours74 = hours55.multipliedBy((int) (short) 0);
        org.joda.time.Period period75 = hours74.toPeriod();
        org.joda.time.Hours hours76 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours77 = org.joda.time.Hours.EIGHT;
        int int79 = hours77.getValue((int) (short) 0);
        org.joda.time.Hours hours80 = hours76.minus(hours77);
        org.joda.time.Hours hours81 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType82 = null;
        int int83 = hours81.get(durationFieldType82);
        org.joda.time.DurationFieldType durationFieldType84 = hours81.getFieldType();
        int int85 = hours76.get(durationFieldType84);
        boolean boolean86 = hours74.isSupported(durationFieldType84);
        org.joda.time.Hours hours87 = hours24.minus(hours74);
        org.joda.time.Hours hours89 = hours74.plus(92);
        int int90 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours74);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 8 + "'", int12 == 8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PT8H" + "'", str13, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(mutablePeriod45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 8 + "'", int79 == 8);
        org.junit.Assert.assertNotNull(hours80);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(durationFieldType84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 7 + "'", int85 == 7);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(hours87);
        org.junit.Assert.assertNotNull(hours89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 1 + "'", int90 == 1);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        java.lang.String str13 = hours12.toString();
        org.joda.time.Hours hours15 = hours12.minus(7);
        org.joda.time.Hours hours17 = hours12.dividedBy(12);
        org.joda.time.Hours hours18 = hours17.negated();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PT-2H" + "'", str13, "PT-2H");
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        boolean boolean6 = hours1.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours7 = null;
        org.joda.time.Hours hours8 = hours1.minus(hours7);
        org.joda.time.Hours hours9 = hours8.negated();
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.Duration duration14 = hours10.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod15 = hours10.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        int int18 = hours16.getValue((int) (short) 0);
        java.lang.String str19 = hours16.toString();
        boolean boolean20 = hours10.isGreaterThan(hours16);
        org.joda.time.Hours hours22 = hours16.minus(10);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        int int28 = hours23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours26);
        org.joda.time.Hours hours29 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = hours23.get(durationFieldType30);
        boolean boolean32 = hours22.equals((java.lang.Object) hours23);
        java.lang.String str33 = hours22.toString();
        org.joda.time.DurationFieldType durationFieldType35 = hours22.getFieldType(0);
        boolean boolean36 = hours8.isGreaterThan(hours22);
        org.joda.time.Hours hours37 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        int int40 = hours38.getValue((int) (short) 0);
        org.joda.time.Hours hours41 = hours37.minus(hours38);
        boolean boolean43 = hours38.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours44 = null;
        org.joda.time.Hours hours45 = hours38.minus(hours44);
        org.joda.time.Hours hours46 = hours45.negated();
        org.joda.time.Hours hours47 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod48 = hours47.toMutablePeriod();
        org.joda.time.Hours hours49 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours50 = hours47.minus(hours49);
        org.joda.time.Duration duration51 = hours47.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod52 = hours47.toMutablePeriod();
        org.joda.time.Hours hours53 = org.joda.time.Hours.EIGHT;
        int int55 = hours53.getValue((int) (short) 0);
        java.lang.String str56 = hours53.toString();
        boolean boolean57 = hours47.isGreaterThan(hours53);
        org.joda.time.Hours hours59 = hours53.minus(10);
        org.joda.time.Hours hours60 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours61 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod62 = hours61.toMutablePeriod();
        org.joda.time.Hours hours63 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours64 = hours61.minus(hours63);
        int int65 = hours60.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours63);
        org.joda.time.Hours hours66 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours60);
        org.joda.time.DurationFieldType durationFieldType67 = null;
        int int68 = hours60.get(durationFieldType67);
        boolean boolean69 = hours59.equals((java.lang.Object) hours60);
        java.lang.String str70 = hours59.toString();
        org.joda.time.DurationFieldType durationFieldType72 = hours59.getFieldType(0);
        boolean boolean73 = hours45.isGreaterThan(hours59);
        org.joda.time.Hours hours74 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours59);
        org.joda.time.Hours hours75 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod76 = hours75.toMutablePeriod();
        org.joda.time.Hours hours77 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours78 = hours75.minus(hours77);
        org.joda.time.DurationFieldType durationFieldType79 = null;
        boolean boolean80 = hours77.isSupported(durationFieldType79);
        org.joda.time.Hours hours81 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours82 = org.joda.time.Hours.EIGHT;
        int int84 = hours82.getValue((int) (short) 0);
        org.joda.time.Hours hours85 = hours81.minus(hours82);
        boolean boolean86 = hours77.isLessThan(hours82);
        org.joda.time.Hours hours87 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType88 = null;
        int int89 = hours87.get(durationFieldType88);
        org.joda.time.DurationFieldType durationFieldType90 = hours87.getFieldType();
        boolean boolean91 = hours77.isSupported(durationFieldType90);
        int int92 = hours59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours77);
        org.joda.time.Hours hours93 = hours8.plus(hours59);
        org.joda.time.Hours hours94 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours96 = hours94.dividedBy((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType97 = hours96.getFieldType();
        boolean boolean98 = hours8.isSupported(durationFieldType97);
        int int99 = hours8.size();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT8H" + "'", str19, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "PT-2H" + "'", str33, "PT-2H");
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 8 + "'", int40 == 8);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(mutablePeriod52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 8 + "'", int55 == 8);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "PT8H" + "'", str56, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(mutablePeriod62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "PT-2H" + "'", str70, "PT-2H");
        org.junit.Assert.assertNotNull(durationFieldType72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertNotNull(hours75);
        org.junit.Assert.assertNotNull(mutablePeriod76);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertNotNull(hours78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertNotNull(hours82);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 8 + "'", int84 == 8);
        org.junit.Assert.assertNotNull(hours85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(hours87);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertNotNull(durationFieldType90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertNotNull(hours93);
        org.junit.Assert.assertNotNull(hours94);
        org.junit.Assert.assertNotNull(hours96);
        org.junit.Assert.assertNotNull(durationFieldType97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 1 + "'", int99 == 1);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.multipliedBy((int) (short) 10);
        org.joda.time.Period period10 = hours0.toPeriod();
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        int int16 = hours11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours14);
        org.joda.time.Hours hours17 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours11);
        org.joda.time.Hours hours19 = hours17.multipliedBy((int) (byte) 10);
        boolean boolean20 = hours0.isLessThan(hours19);
        org.joda.time.Period period21 = hours0.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(period21);
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.Hours hours3 = hours0.plus(10);
        int int4 = hours0.size();
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = hours11.get(durationFieldType15);
        org.joda.time.Hours hours18 = hours11.minus((int) (short) 0);
        org.joda.time.Hours hours19 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours19.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = hours19.getFieldType();
        int int23 = hours18.get(durationFieldType22);
        org.joda.time.Hours hours24 = hours18.negated();
        boolean boolean25 = hours8.isGreaterThan(hours24);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod27 = hours26.toMutablePeriod();
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours29 = hours26.minus(hours28);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = hours26.get(durationFieldType30);
        org.joda.time.Hours hours33 = hours26.multipliedBy(1);
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod35 = hours34.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours37 = hours34.minus(hours36);
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = hours34.get(durationFieldType38);
        org.joda.time.Hours hours41 = hours34.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval42 = null;
        org.joda.time.Hours hours43 = org.joda.time.Hours.hoursIn(readableInterval42);
        int int44 = hours41.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours43);
        org.joda.time.Hours hours45 = hours26.minus(hours41);
        org.joda.time.Hours hours46 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours47 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod48 = hours47.toMutablePeriod();
        org.joda.time.Hours hours49 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours50 = hours47.minus(hours49);
        int int51 = hours46.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours49);
        org.joda.time.DurationFieldType durationFieldType52 = null;
        boolean boolean53 = hours46.isSupported(durationFieldType52);
        org.joda.time.Hours hours55 = hours46.minus((int) (short) -1);
        boolean boolean56 = hours45.isLessThan(hours46);
        org.joda.time.Hours hours57 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours58 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod59 = hours58.toMutablePeriod();
        org.joda.time.Hours hours60 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours61 = hours58.minus(hours60);
        int int62 = hours57.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours60);
        org.joda.time.DurationFieldType durationFieldType63 = null;
        boolean boolean64 = hours57.isSupported(durationFieldType63);
        org.joda.time.Hours hours66 = hours57.minus((int) (short) -1);
        org.joda.time.PeriodType periodType67 = hours57.getPeriodType();
        org.joda.time.Hours hours68 = org.joda.time.Hours.EIGHT;
        int int70 = hours68.getValue((int) (short) 0);
        org.joda.time.Hours hours71 = hours57.minus(hours68);
        org.joda.time.Hours hours73 = hours57.plus(7);
        org.joda.time.Hours hours74 = hours57.negated();
        org.joda.time.Hours hours75 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod76 = hours75.toMutablePeriod();
        org.joda.time.Hours hours77 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours78 = hours75.minus(hours77);
        org.joda.time.DurationFieldType durationFieldType79 = null;
        int int80 = hours75.get(durationFieldType79);
        org.joda.time.Hours hours82 = hours75.minus((int) (short) 0);
        org.joda.time.Hours hours83 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType84 = null;
        int int85 = hours83.get(durationFieldType84);
        org.joda.time.DurationFieldType durationFieldType86 = hours83.getFieldType();
        int int87 = hours82.get(durationFieldType86);
        int int88 = hours57.get(durationFieldType86);
        boolean boolean89 = hours45.isSupported(durationFieldType86);
        int int90 = hours24.get(durationFieldType86);
        int int91 = hours0.get(durationFieldType86);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 7 + "'", int23 == 7);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(mutablePeriod59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 8 + "'", int70 == 8);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertNotNull(hours75);
        org.junit.Assert.assertNotNull(mutablePeriod76);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertNotNull(hours78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(hours82);
        org.junit.Assert.assertNotNull(hours83);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(durationFieldType86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 7 + "'", int87 == 7);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 7 + "'", int88 == 7);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-7) + "'", int90 == (-7));
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours16);
        int int24 = hours23.size();
        org.joda.time.Hours hours26 = hours23.plus((int) (short) 0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(hours26);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) (short) 1);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        int int7 = hours2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours5);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        boolean boolean9 = hours2.isSupported(durationFieldType8);
        org.joda.time.Hours hours11 = hours2.minus((int) (short) -1);
        org.joda.time.Hours hours12 = hours11.negated();
        org.joda.time.Hours hours14 = hours12.plus(16);
        int int15 = hours1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours12);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MIN_VALUE;
        org.joda.time.Hours hours1 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = hours1.get(durationFieldType2);
        org.joda.time.DurationFieldType durationFieldType4 = hours1.getFieldType();
        org.joda.time.DurationFieldType durationFieldType5 = hours1.getFieldType();
        int int6 = hours0.get(durationFieldType5);
        org.joda.time.Hours hours8 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod10 = hours9.toMutablePeriod();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours12 = hours9.minus(hours11);
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = hours9.get(durationFieldType13);
        org.joda.time.Hours hours16 = hours9.minus((int) (short) 0);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        boolean boolean22 = hours19.isSupported(durationFieldType21);
        org.joda.time.Hours hours23 = hours16.minus(hours19);
        org.joda.time.Hours hours24 = hours8.plus(hours23);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours28 = hours25.minus(hours27);
        boolean boolean29 = hours23.isGreaterThan(hours27);
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod31 = hours30.toMutablePeriod();
        org.joda.time.Hours hours32 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours33 = hours30.minus(hours32);
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = hours30.get(durationFieldType34);
        org.joda.time.Hours hours37 = hours30.minus((int) (short) 0);
        org.joda.time.Hours hours38 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours30);
        org.joda.time.Hours hours39 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours40 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod41 = hours40.toMutablePeriod();
        org.joda.time.Hours hours42 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours43 = hours40.minus(hours42);
        int int44 = hours39.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours42);
        org.joda.time.DurationFieldType durationFieldType45 = null;
        boolean boolean46 = hours39.isSupported(durationFieldType45);
        org.joda.time.Hours hours48 = hours39.minus((int) (short) -1);
        org.joda.time.Hours hours49 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod50 = hours49.toMutablePeriod();
        org.joda.time.Hours hours51 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours52 = hours49.minus(hours51);
        org.joda.time.Hours hours54 = hours51.plus(8);
        org.joda.time.Hours hours55 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType56 = null;
        int int57 = hours55.get(durationFieldType56);
        org.joda.time.DurationFieldType durationFieldType58 = hours55.getFieldType();
        boolean boolean59 = hours54.isSupported(durationFieldType58);
        int int60 = hours48.get(durationFieldType58);
        org.joda.time.Hours hours61 = hours30.plus(hours48);
        org.joda.time.Hours hours62 = hours27.plus(hours30);
        org.joda.time.Hours hours64 = hours62.dividedBy(100);
        org.joda.time.Hours hours65 = hours0.plus(hours64);
        org.joda.time.Hours hours67 = hours64.dividedBy((-2));
        org.joda.time.Hours hours68 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours67);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-2147483648) + "'", int6 == (-2147483648));
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(mutablePeriod50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 8 + "'", int60 == 8);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(hours68);
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.PeriodType periodType10 = hours0.getPeriodType();
        int int11 = hours0.getHours();
        org.joda.time.DurationFieldType durationFieldType13 = hours0.getFieldType((int) (short) 0);
        int int14 = hours0.size();
        org.joda.time.Period period15 = hours0.toPeriod();
        org.joda.time.Hours hours17 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.MutablePeriod mutablePeriod24 = hours18.toMutablePeriod();
        org.joda.time.Hours hours25 = hours17.minus(hours18);
        org.joda.time.Hours hours27 = hours18.multipliedBy((int) (short) 0);
        org.joda.time.PeriodType periodType28 = hours27.getPeriodType();
        org.joda.time.Hours hours29 = hours27.negated();
        boolean boolean30 = hours0.isGreaterThan(hours29);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 7 + "'", int11 == 7);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours1 = org.joda.time.Hours.MAX_VALUE;
        int int2 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours1);
        org.joda.time.Hours hours3 = hours1.negated();
        org.joda.time.Hours hours5 = hours1.multipliedBy(0);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((-2147483648));
        org.junit.Assert.assertNotNull(hours1);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours1 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = hours1.get(durationFieldType2);
        boolean boolean4 = hours0.equals((java.lang.Object) durationFieldType2);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.Hours hours12 = hours8.multipliedBy(0);
        org.joda.time.Hours hours13 = hours0.plus(hours12);
        org.joda.time.Hours hours15 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours16.get(durationFieldType20);
        org.joda.time.Hours hours23 = hours16.minus((int) (short) 0);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        boolean boolean29 = hours26.isSupported(durationFieldType28);
        org.joda.time.Hours hours30 = hours23.minus(hours26);
        org.joda.time.Hours hours31 = hours15.plus(hours30);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod33 = hours32.toMutablePeriod();
        org.joda.time.Hours hours34 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours35 = hours32.minus(hours34);
        boolean boolean36 = hours30.isGreaterThan(hours34);
        org.joda.time.Hours hours37 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours30);
        int int38 = hours12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours30);
        org.joda.time.Hours hours39 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod40 = hours39.toMutablePeriod();
        org.joda.time.Hours hours41 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours42 = hours39.minus(hours41);
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = hours39.get(durationFieldType43);
        org.joda.time.Hours hours46 = hours39.multipliedBy(1);
        int int47 = hours46.getHours();
        org.joda.time.DurationFieldType durationFieldType48 = hours46.getFieldType();
        org.joda.time.Hours hours49 = hours30.plus(hours46);
        org.joda.time.Hours hours51 = hours46.multipliedBy((int) (byte) 1);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 7 + "'", int47 == 7);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours51);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        int int7 = hours0.size();
        org.joda.time.PeriodType periodType8 = hours0.getPeriodType();
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        int int14 = hours9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours12);
        org.joda.time.MutablePeriod mutablePeriod15 = hours9.toMutablePeriod();
        org.joda.time.Hours hours17 = hours9.multipliedBy((int) (byte) 100);
        boolean boolean18 = hours0.isGreaterThan(hours9);
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        int int22 = hours20.getValue((int) (short) 0);
        org.joda.time.Hours hours23 = hours19.minus(hours20);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        org.joda.time.Hours hours29 = hours26.plus(8);
        org.joda.time.Hours hours30 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = hours30.get(durationFieldType31);
        org.joda.time.DurationFieldType durationFieldType33 = hours30.getFieldType();
        boolean boolean34 = hours29.isSupported(durationFieldType33);
        boolean boolean35 = hours19.isSupported(durationFieldType33);
        org.joda.time.Hours hours36 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType37 = null;
        int int38 = hours36.get(durationFieldType37);
        org.joda.time.DurationFieldType durationFieldType39 = hours36.getFieldType();
        org.joda.time.DurationFieldType durationFieldType40 = hours36.getFieldType();
        boolean boolean41 = hours19.isSupported(durationFieldType40);
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period43 = hours42.toPeriod();
        org.joda.time.Hours hours45 = hours42.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod46 = hours45.toMutablePeriod();
        org.joda.time.Hours hours47 = org.joda.time.Hours.THREE;
        org.joda.time.Period period48 = hours47.toPeriod();
        org.joda.time.Hours hours50 = hours47.plus((int) (byte) -1);
        org.joda.time.Hours hours51 = hours45.minus(hours47);
        org.joda.time.DurationFieldType durationFieldType52 = hours51.getFieldType();
        int int53 = hours19.get(durationFieldType52);
        boolean boolean54 = hours9.isLessThan(hours19);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 8 + "'", int22 == 8);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 7 + "'", int53 == 7);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        org.joda.time.Hours hours8 = hours1.multipliedBy((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        java.lang.String str10 = hours8.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT70H" + "'", str10, "PT70H");
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = hours8.getFieldType();
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        org.joda.time.Duration duration17 = hours13.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod18 = hours13.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        int int21 = hours19.getValue((int) (short) 0);
        java.lang.String str22 = hours19.toString();
        boolean boolean23 = hours13.isGreaterThan(hours19);
        org.joda.time.Hours hours25 = hours19.minus(10);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.Hours hours32 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours26);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = hours26.get(durationFieldType33);
        boolean boolean35 = hours25.equals((java.lang.Object) hours26);
        org.joda.time.Hours hours37 = hours26.minus(100);
        org.joda.time.Hours hours38 = hours7.minus(hours26);
        org.joda.time.Hours hours40 = hours7.dividedBy((int) '4');
        org.joda.time.Hours hours42 = hours7.minus(8);
        org.joda.time.Hours hours43 = hours7.negated();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7 + "'", int12 == 7);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 8 + "'", int21 == 8);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT8H" + "'", str22, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        java.lang.String str2 = hours0.toString();
        org.joda.time.Hours hours4 = hours0.multipliedBy((int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType6 = hours0.getFieldType(16);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 16");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PT7H" + "'", str2, "PT7H");
        org.junit.Assert.assertNotNull(hours4);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours25 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod27 = hours26.toMutablePeriod();
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours29 = hours26.minus(hours28);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = hours26.get(durationFieldType30);
        org.joda.time.Hours hours33 = hours26.minus((int) (short) 0);
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod35 = hours34.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours37 = hours34.minus(hours36);
        org.joda.time.DurationFieldType durationFieldType38 = null;
        boolean boolean39 = hours36.isSupported(durationFieldType38);
        org.joda.time.Hours hours40 = hours33.minus(hours36);
        org.joda.time.Hours hours41 = hours25.plus(hours40);
        int int42 = hours23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours40);
        org.joda.time.MutablePeriod mutablePeriod43 = hours40.toMutablePeriod();
        boolean boolean44 = hours16.isLessThan(hours40);
        int int45 = hours40.getHours();
        org.joda.time.DurationFieldType durationFieldType46 = hours40.getFieldType();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType46);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours1 = hours0.negated();
        org.joda.time.DurationFieldType durationFieldType2 = hours0.getFieldType();
        java.lang.String str3 = hours0.toString();
        org.joda.time.Hours hours4 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.MutablePeriod mutablePeriod11 = hours5.toMutablePeriod();
        org.joda.time.Hours hours13 = hours5.minus(7);
        org.joda.time.Hours hours14 = hours4.minus(hours5);
        org.joda.time.Hours hours15 = hours0.minus(hours5);
        org.joda.time.Hours hours17 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Period period18 = hours17.toPeriod();
        org.joda.time.Hours hours20 = hours17.minus((int) (byte) -1);
        int int22 = hours17.getValue(0);
        org.joda.time.Hours hours23 = hours5.minus(hours17);
        org.joda.time.Hours hours25 = hours17.minus((int) 'a');
        org.joda.time.PeriodType periodType26 = hours17.getPeriodType();
        org.joda.time.Hours hours28 = hours17.plus((int) (byte) 10);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT3H" + "'", str3, "PT3H");
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 16 + "'", int22 == 16);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(hours28);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours1 = hours0.negated();
        org.joda.time.DurationFieldType durationFieldType2 = hours0.getFieldType();
        java.lang.String str3 = hours0.toString();
        org.joda.time.Hours hours4 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.MutablePeriod mutablePeriod11 = hours5.toMutablePeriod();
        org.joda.time.Hours hours13 = hours5.minus(7);
        org.joda.time.Hours hours14 = hours4.minus(hours5);
        org.joda.time.Hours hours15 = hours0.minus(hours5);
        org.joda.time.Hours hours17 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Period period18 = hours17.toPeriod();
        org.joda.time.Hours hours20 = hours17.minus((int) (byte) -1);
        int int22 = hours17.getValue(0);
        org.joda.time.Hours hours23 = hours5.minus(hours17);
        org.joda.time.Hours hours25 = hours5.plus(0);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT3H" + "'", str3, "PT3H");
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 16 + "'", int22 == 16);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours25);
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours0.multipliedBy((int) '4');
        org.joda.time.ReadablePeriod readablePeriod13 = null;
        org.joda.time.Hours hours14 = org.joda.time.Hours.standardHoursIn(readablePeriod13);
        org.joda.time.DurationFieldType durationFieldType15 = hours14.getFieldType();
        boolean boolean16 = hours12.isSupported(durationFieldType15);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = hours17.get(durationFieldType21);
        org.joda.time.Hours hours24 = hours17.multipliedBy(1);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours28 = hours25.minus(hours27);
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = hours25.get(durationFieldType29);
        org.joda.time.Hours hours32 = hours25.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval33 = null;
        org.joda.time.Hours hours34 = org.joda.time.Hours.hoursIn(readableInterval33);
        int int35 = hours32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours34);
        org.joda.time.Hours hours36 = hours17.minus(hours32);
        org.joda.time.Hours hours37 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours38 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod39 = hours38.toMutablePeriod();
        org.joda.time.Hours hours40 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours41 = hours38.minus(hours40);
        int int42 = hours37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours40);
        org.joda.time.DurationFieldType durationFieldType43 = null;
        boolean boolean44 = hours37.isSupported(durationFieldType43);
        org.joda.time.Hours hours46 = hours37.minus((int) (short) -1);
        org.joda.time.PeriodType periodType47 = hours37.getPeriodType();
        org.joda.time.Hours hours48 = org.joda.time.Hours.EIGHT;
        int int50 = hours48.getValue((int) (short) 0);
        org.joda.time.Hours hours51 = hours37.minus(hours48);
        org.joda.time.Hours hours53 = hours37.plus(7);
        org.joda.time.Hours hours54 = hours37.negated();
        org.joda.time.Hours hours55 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod56 = hours55.toMutablePeriod();
        org.joda.time.Hours hours57 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours58 = hours55.minus(hours57);
        org.joda.time.DurationFieldType durationFieldType59 = null;
        int int60 = hours55.get(durationFieldType59);
        org.joda.time.Hours hours62 = hours55.minus((int) (short) 0);
        org.joda.time.Hours hours63 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType64 = null;
        int int65 = hours63.get(durationFieldType64);
        org.joda.time.DurationFieldType durationFieldType66 = hours63.getFieldType();
        int int67 = hours62.get(durationFieldType66);
        int int68 = hours37.get(durationFieldType66);
        org.joda.time.Hours hours69 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours70 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod71 = hours70.toMutablePeriod();
        org.joda.time.Hours hours72 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours73 = hours70.minus(hours72);
        int int74 = hours69.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours72);
        org.joda.time.Hours hours75 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours69);
        org.joda.time.DurationFieldType durationFieldType76 = null;
        int int77 = hours69.get(durationFieldType76);
        org.joda.time.DurationFieldType durationFieldType78 = null;
        int int79 = hours69.get(durationFieldType78);
        org.joda.time.Hours hours81 = hours69.minus(0);
        org.joda.time.DurationFieldType durationFieldType82 = hours81.getFieldType();
        boolean boolean83 = hours37.isSupported(durationFieldType82);
        boolean boolean84 = hours32.isSupported(durationFieldType82);
        int int85 = hours12.get(durationFieldType82);
        org.joda.time.Hours hours87 = hours12.plus(6);
        org.joda.time.Hours hours88 = hours12.negated();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 8 + "'", int50 == 8);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(durationFieldType66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 7 + "'", int67 == 7);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 7 + "'", int68 == 7);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(mutablePeriod71);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(hours75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertNotNull(durationFieldType82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 364 + "'", int85 == 364);
        org.junit.Assert.assertNotNull(hours87);
        org.junit.Assert.assertNotNull(hours88);
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        boolean boolean6 = hours1.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours7 = null;
        org.joda.time.Hours hours8 = hours1.minus(hours7);
        org.joda.time.Hours hours9 = hours8.negated();
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.Duration duration14 = hours10.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod15 = hours10.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        int int18 = hours16.getValue((int) (short) 0);
        java.lang.String str19 = hours16.toString();
        boolean boolean20 = hours10.isGreaterThan(hours16);
        org.joda.time.Hours hours22 = hours16.minus(10);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        int int28 = hours23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours26);
        org.joda.time.Hours hours29 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = hours23.get(durationFieldType30);
        boolean boolean32 = hours22.equals((java.lang.Object) hours23);
        java.lang.String str33 = hours22.toString();
        org.joda.time.DurationFieldType durationFieldType35 = hours22.getFieldType(0);
        boolean boolean36 = hours8.isGreaterThan(hours22);
        int int37 = hours8.getHours();
        org.joda.time.MutablePeriod mutablePeriod38 = hours8.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT8H" + "'", str19, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "PT-2H" + "'", str33, "PT-2H");
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 8 + "'", int37 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod38);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        org.joda.time.Hours hours0 = org.joda.time.Hours.EIGHT;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.Hours hours3 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours4 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = hours4.get(durationFieldType5);
        boolean boolean7 = hours3.equals((java.lang.Object) durationFieldType5);
        org.joda.time.Duration duration8 = hours3.toStandardDuration();
        boolean boolean9 = hours0.equals((java.lang.Object) duration8);
        int int10 = hours0.size();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        int int12 = hours11.size();
        org.joda.time.Hours hours14 = hours11.dividedBy(100);
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        int int18 = hours16.getValue((int) (short) 0);
        org.joda.time.Hours hours19 = hours15.minus(hours16);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        int int24 = hours22.getValue((int) (short) 0);
        org.joda.time.Hours hours25 = hours21.minus(hours22);
        org.joda.time.Hours hours26 = hours20.minus(hours21);
        int int27 = hours20.size();
        org.joda.time.Duration duration28 = hours20.toStandardDuration();
        boolean boolean29 = hours16.isGreaterThan(hours20);
        org.joda.time.MutablePeriod mutablePeriod30 = hours20.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType31 = hours20.getFieldType();
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period33 = hours32.toPeriod();
        org.joda.time.Hours hours35 = hours32.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod36 = hours35.toMutablePeriod();
        org.joda.time.Hours hours37 = org.joda.time.Hours.THREE;
        org.joda.time.Period period38 = hours37.toPeriod();
        org.joda.time.Hours hours40 = hours37.plus((int) (byte) -1);
        org.joda.time.Hours hours41 = hours35.minus(hours37);
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod43 = hours42.toMutablePeriod();
        org.joda.time.Hours hours44 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours45 = hours42.minus(hours44);
        org.joda.time.DurationFieldType durationFieldType46 = null;
        int int47 = hours42.get(durationFieldType46);
        org.joda.time.Hours hours49 = hours42.minus((int) (short) 0);
        org.joda.time.Hours hours50 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType51 = null;
        int int52 = hours50.get(durationFieldType51);
        org.joda.time.DurationFieldType durationFieldType53 = hours50.getFieldType();
        int int54 = hours49.get(durationFieldType53);
        int int55 = hours37.get(durationFieldType53);
        int int56 = hours20.get(durationFieldType53);
        boolean boolean57 = hours11.isLessThan(hours20);
        org.joda.time.Hours hours59 = hours20.minus((-2));
        int int60 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours20);
        org.joda.time.MutablePeriod mutablePeriod61 = hours20.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 8 + "'", int24 == 8);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 7 + "'", int54 == 7);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 3 + "'", int55 == 3);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 6 + "'", int56 == 6);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod61);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours2 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours3.get(durationFieldType7);
        org.joda.time.Hours hours10 = hours3.minus((int) (short) 0);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours13.isSupported(durationFieldType15);
        org.joda.time.Hours hours17 = hours10.minus(hours13);
        org.joda.time.Hours hours18 = hours2.plus(hours17);
        int int19 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.MutablePeriod mutablePeriod20 = hours17.toMutablePeriod();
        org.joda.time.Duration duration21 = hours17.toStandardDuration();
        org.joda.time.Hours hours22 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours17);
        org.joda.time.Period period23 = hours22.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(period23);
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours4 = hours2.negated();
        org.joda.time.DurationFieldType durationFieldType5 = hours4.getFieldType();
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        org.joda.time.Hours hours10 = hours8.negated();
        int int11 = hours10.getHours();
        int int12 = hours4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours10);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = hours13.get(durationFieldType17);
        org.joda.time.Hours hours20 = hours13.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Hours hours22 = org.joda.time.Hours.hoursIn(readableInterval21);
        int int23 = hours20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours22);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        int int27 = hours25.getValue((int) (short) 0);
        org.joda.time.Hours hours28 = hours24.minus(hours25);
        org.joda.time.Hours hours29 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = hours29.get(durationFieldType30);
        org.joda.time.DurationFieldType durationFieldType32 = hours29.getFieldType();
        int int33 = hours24.get(durationFieldType32);
        boolean boolean34 = hours22.isSupported(durationFieldType32);
        org.joda.time.PeriodType periodType35 = hours22.getPeriodType();
        int int36 = hours22.getHours();
        org.joda.time.Hours hours37 = hours4.minus(hours22);
        // The following exception was thrown during execution in test generation
        try {
            int int39 = hours37.getValue((-25));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -25");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-8) + "'", int11 == (-8));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 8 + "'", int27 == 8);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 7 + "'", int33 == 7);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(hours37);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        org.joda.time.Hours hours10 = hours7.plus(8);
        org.joda.time.Hours hours11 = hours1.minus(hours7);
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = hours12.get(durationFieldType16);
        int int18 = hours12.getHours();
        boolean boolean19 = hours1.isLessThan(hours12);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours23 = hours20.minus(hours22);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        int int27 = hours25.getValue((int) (short) 0);
        org.joda.time.Hours hours28 = hours24.minus(hours25);
        org.joda.time.Hours hours29 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = hours29.get(durationFieldType30);
        org.joda.time.DurationFieldType durationFieldType32 = hours29.getFieldType();
        int int33 = hours24.get(durationFieldType32);
        boolean boolean34 = hours23.isSupported(durationFieldType32);
        org.joda.time.Hours hours36 = hours23.dividedBy((-2147483648));
        boolean boolean37 = hours12.isGreaterThan(hours23);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 7 + "'", int18 == 7);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 8 + "'", int27 == 8);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 7 + "'", int33 == 7);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        org.joda.time.Hours hours10 = hours7.plus(8);
        org.joda.time.Hours hours11 = hours1.minus(hours7);
        int int12 = hours11.size();
        org.joda.time.Hours hours13 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours14 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = hours14.get(durationFieldType15);
        boolean boolean17 = hours13.equals((java.lang.Object) durationFieldType15);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours25 = hours21.multipliedBy(0);
        org.joda.time.Hours hours26 = hours13.plus(hours25);
        org.joda.time.Hours hours28 = hours26.minus((int) (byte) 100);
        int int29 = hours11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours26);
        java.lang.Class<?> wildcardClass30 = hours26.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.Hours hours4 = hours0.dividedBy(100);
        org.joda.time.Hours hours6 = hours4.minus(0);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours5 = hours2.plus(8);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours7 = hours5.dividedBy(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        int int9 = hours7.getValue((int) (short) 0);
        org.joda.time.Hours hours10 = hours6.minus(hours7);
        org.joda.time.Hours hours11 = hours5.minus(hours6);
        int int12 = hours5.size();
        org.joda.time.Duration duration13 = hours5.toStandardDuration();
        boolean boolean14 = hours1.isGreaterThan(hours5);
        org.joda.time.Hours hours16 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours18 = hours16.multipliedBy((int) (short) 1);
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours23 = hours20.minus(hours22);
        int int24 = hours19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours22);
        org.joda.time.DurationFieldType durationFieldType25 = null;
        boolean boolean26 = hours19.isSupported(durationFieldType25);
        org.joda.time.Hours hours28 = hours19.minus((int) (short) -1);
        org.joda.time.PeriodType periodType29 = hours19.getPeriodType();
        org.joda.time.Hours hours30 = org.joda.time.Hours.EIGHT;
        int int32 = hours30.getValue((int) (short) 0);
        org.joda.time.Hours hours33 = hours19.minus(hours30);
        org.joda.time.Hours hours35 = hours19.plus(7);
        int int36 = hours19.size();
        org.joda.time.Hours hours37 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours39 = hours37.plus(0);
        org.joda.time.Hours hours40 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours41 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod42 = hours41.toMutablePeriod();
        org.joda.time.Hours hours43 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours44 = hours41.minus(hours43);
        int int45 = hours40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours43);
        org.joda.time.DurationFieldType durationFieldType46 = null;
        boolean boolean47 = hours40.isSupported(durationFieldType46);
        org.joda.time.Hours hours49 = hours40.minus((int) (short) -1);
        org.joda.time.Hours hours50 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod51 = hours50.toMutablePeriod();
        org.joda.time.Hours hours52 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours53 = hours50.minus(hours52);
        org.joda.time.Hours hours55 = hours52.plus(8);
        org.joda.time.Hours hours56 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType57 = null;
        int int58 = hours56.get(durationFieldType57);
        org.joda.time.DurationFieldType durationFieldType59 = hours56.getFieldType();
        boolean boolean60 = hours55.isSupported(durationFieldType59);
        int int61 = hours49.get(durationFieldType59);
        org.joda.time.Hours hours62 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours63 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod64 = hours63.toMutablePeriod();
        org.joda.time.Hours hours65 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours66 = hours63.minus(hours65);
        int int67 = hours62.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours65);
        org.joda.time.DurationFieldType durationFieldType68 = null;
        boolean boolean69 = hours62.isSupported(durationFieldType68);
        org.joda.time.Hours hours71 = hours62.multipliedBy((int) (short) 10);
        org.joda.time.Hours hours72 = hours49.plus(hours62);
        org.joda.time.DurationFieldType durationFieldType73 = hours72.getFieldType();
        boolean boolean74 = hours39.isSupported(durationFieldType73);
        org.joda.time.Hours hours76 = org.joda.time.Hours.hours(0);
        org.joda.time.Hours hours77 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod78 = hours77.toMutablePeriod();
        org.joda.time.Hours hours79 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours80 = hours77.minus(hours79);
        org.joda.time.DurationFieldType durationFieldType81 = null;
        boolean boolean82 = hours79.isSupported(durationFieldType81);
        org.joda.time.Hours hours83 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours84 = org.joda.time.Hours.EIGHT;
        int int86 = hours84.getValue((int) (short) 0);
        org.joda.time.Hours hours87 = hours83.minus(hours84);
        boolean boolean88 = hours79.isLessThan(hours84);
        org.joda.time.Hours hours89 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType90 = null;
        int int91 = hours89.get(durationFieldType90);
        org.joda.time.DurationFieldType durationFieldType92 = hours89.getFieldType();
        boolean boolean93 = hours79.isSupported(durationFieldType92);
        int int94 = hours76.get(durationFieldType92);
        boolean boolean95 = hours39.isSupported(durationFieldType92);
        boolean boolean96 = hours19.isSupported(durationFieldType92);
        boolean boolean97 = hours16.isGreaterThan(hours19);
        org.joda.time.MutablePeriod mutablePeriod98 = hours19.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 8 + "'", int32 == 8);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 8 + "'", int61 == 8);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(mutablePeriod64);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertNotNull(durationFieldType73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertNotNull(mutablePeriod78);
        org.junit.Assert.assertNotNull(hours79);
        org.junit.Assert.assertNotNull(hours80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(hours83);
        org.junit.Assert.assertNotNull(hours84);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 8 + "'", int86 == 8);
        org.junit.Assert.assertNotNull(hours87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(hours89);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertNotNull(durationFieldType92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(mutablePeriod98);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Period period2 = hours1.toPeriod();
        org.joda.time.Hours hours4 = hours1.minus((int) (byte) -1);
        org.joda.time.Period period5 = hours1.toPeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours6.get(durationFieldType7);
        org.joda.time.DurationFieldType durationFieldType9 = hours6.getFieldType();
        org.joda.time.DurationFieldType durationFieldType10 = hours6.getFieldType();
        boolean boolean11 = hours1.isLessThan(hours6);
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        org.joda.time.Duration duration16 = hours12.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod17 = hours12.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        int int20 = hours18.getValue((int) (short) 0);
        java.lang.String str21 = hours18.toString();
        boolean boolean22 = hours12.isGreaterThan(hours18);
        org.joda.time.Hours hours24 = hours18.minus(10);
        org.joda.time.Hours hours25 = hours18.negated();
        org.joda.time.Duration duration26 = hours18.toStandardDuration();
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours28 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod29 = hours28.toMutablePeriod();
        org.joda.time.Hours hours30 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours31 = hours28.minus(hours30);
        int int32 = hours27.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours30);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        boolean boolean34 = hours27.isSupported(durationFieldType33);
        org.joda.time.Hours hours36 = hours27.minus((int) (short) -1);
        org.joda.time.Hours hours37 = hours36.negated();
        org.joda.time.Hours hours39 = hours37.plus(16);
        org.joda.time.DurationFieldType durationFieldType40 = hours37.getFieldType();
        boolean boolean41 = hours18.isSupported(durationFieldType40);
        boolean boolean42 = hours6.equals((java.lang.Object) hours18);
        org.joda.time.Hours hours43 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours44 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod45 = hours44.toMutablePeriod();
        org.joda.time.Hours hours46 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours47 = hours44.minus(hours46);
        int int48 = hours43.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours46);
        org.joda.time.Hours hours49 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours43);
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = hours43.get(durationFieldType50);
        org.joda.time.DurationFieldType durationFieldType52 = null;
        int int53 = hours43.get(durationFieldType52);
        int int54 = hours43.getHours();
        org.joda.time.Hours hours55 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod56 = hours55.toMutablePeriod();
        org.joda.time.Hours hours57 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours58 = hours55.minus(hours57);
        org.joda.time.DurationFieldType durationFieldType59 = null;
        boolean boolean60 = hours57.isSupported(durationFieldType59);
        org.joda.time.Hours hours61 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours62 = org.joda.time.Hours.EIGHT;
        int int64 = hours62.getValue((int) (short) 0);
        org.joda.time.Hours hours65 = hours61.minus(hours62);
        boolean boolean66 = hours57.isLessThan(hours62);
        org.joda.time.Hours hours67 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType68 = null;
        int int69 = hours67.get(durationFieldType68);
        org.joda.time.DurationFieldType durationFieldType70 = hours67.getFieldType();
        boolean boolean71 = hours57.isSupported(durationFieldType70);
        boolean boolean72 = hours43.isSupported(durationFieldType70);
        org.joda.time.Hours hours73 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod74 = hours73.toMutablePeriod();
        org.joda.time.Hours hours75 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours76 = hours73.minus(hours75);
        org.joda.time.DurationFieldType durationFieldType77 = null;
        int int78 = hours73.get(durationFieldType77);
        org.joda.time.Hours hours80 = hours73.multipliedBy(1);
        int int81 = hours80.getHours();
        org.joda.time.Hours hours83 = hours80.minus((int) ' ');
        boolean boolean84 = hours43.isLessThan(hours80);
        org.joda.time.Hours hours85 = hours18.plus(hours80);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 8 + "'", int20 == 8);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT8H" + "'", str21, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(mutablePeriod45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 7 + "'", int54 == 7);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 8 + "'", int64 == 8);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(durationFieldType70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertNotNull(mutablePeriod74);
        org.junit.Assert.assertNotNull(hours75);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(hours80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 7 + "'", int81 == 7);
        org.junit.Assert.assertNotNull(hours83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(hours85);
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours24 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours18);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours28 = hours25.minus(hours27);
        org.joda.time.Hours hours30 = hours27.plus(8);
        org.joda.time.Hours hours31 = hours18.minus(hours30);
        org.joda.time.Hours hours32 = hours31.negated();
        boolean boolean33 = hours16.isLessThan(hours31);
        org.joda.time.DurationFieldType durationFieldType34 = hours16.getFieldType();
        int int35 = hours16.getHours();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod8 = hours7.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours7.minus(hours9);
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours14 = hours7.minus((int) (short) 0);
        org.joda.time.Hours hours15 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = hours15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = hours15.getFieldType();
        int int19 = hours14.get(durationFieldType18);
        org.joda.time.Hours hours20 = org.joda.time.Hours.ONE;
        int int21 = hours20.getHours();
        org.joda.time.Hours hours23 = hours20.plus(10);
        org.joda.time.Hours hours24 = hours14.minus(hours23);
        org.joda.time.Hours hours25 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours24);
        boolean boolean26 = hours0.isLessThan(hours25);
        org.joda.time.Hours hours27 = hours25.negated();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 7 + "'", int19 == 7);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(hours27);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(100);
        org.joda.time.Period period2 = hours1.toPeriod();
        org.joda.time.Hours hours4 = hours1.minus(8);
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours10 = hours8.minus((int) (byte) 100);
        boolean boolean11 = hours1.equals((java.lang.Object) hours10);
        org.joda.time.Hours hours12 = hours1.negated();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(hours12);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(9);
        org.junit.Assert.assertNotNull(hours1);
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours1 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = hours1.get(durationFieldType2);
        boolean boolean4 = hours0.equals((java.lang.Object) durationFieldType2);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.Hours hours12 = hours8.multipliedBy(0);
        org.joda.time.Hours hours13 = hours0.plus(hours12);
        org.joda.time.Hours hours15 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours16.get(durationFieldType20);
        org.joda.time.Hours hours23 = hours16.minus((int) (short) 0);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        boolean boolean29 = hours26.isSupported(durationFieldType28);
        org.joda.time.Hours hours30 = hours23.minus(hours26);
        org.joda.time.Hours hours31 = hours15.plus(hours30);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod33 = hours32.toMutablePeriod();
        org.joda.time.Hours hours34 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours35 = hours32.minus(hours34);
        boolean boolean36 = hours30.isGreaterThan(hours34);
        org.joda.time.Hours hours37 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours30);
        int int38 = hours12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours30);
        org.joda.time.Hours hours39 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod40 = hours39.toMutablePeriod();
        org.joda.time.Hours hours41 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours42 = hours39.minus(hours41);
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = hours39.get(durationFieldType43);
        org.joda.time.Hours hours46 = hours39.multipliedBy(1);
        int int47 = hours46.getHours();
        org.joda.time.DurationFieldType durationFieldType48 = hours46.getFieldType();
        org.joda.time.Hours hours49 = hours30.plus(hours46);
        org.joda.time.Hours hours51 = hours46.dividedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType52 = hours46.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 7 + "'", int47 == 7);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(durationFieldType52);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        java.lang.String str23 = hours16.toString();
        org.joda.time.Hours hours25 = hours16.minus((-25));
        org.joda.time.Hours hours27 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours28 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod29 = hours28.toMutablePeriod();
        org.joda.time.Hours hours30 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours31 = hours28.minus(hours30);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = hours28.get(durationFieldType32);
        org.joda.time.Hours hours35 = hours28.minus((int) (short) 0);
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod37 = hours36.toMutablePeriod();
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours39 = hours36.minus(hours38);
        org.joda.time.DurationFieldType durationFieldType40 = null;
        boolean boolean41 = hours38.isSupported(durationFieldType40);
        org.joda.time.Hours hours42 = hours35.minus(hours38);
        org.joda.time.Hours hours43 = hours27.plus(hours42);
        org.joda.time.Hours hours44 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours43);
        org.joda.time.Hours hours45 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours46 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod47 = hours46.toMutablePeriod();
        org.joda.time.Hours hours48 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours49 = hours46.minus(hours48);
        int int50 = hours45.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours48);
        org.joda.time.Hours hours51 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours45);
        java.lang.String str52 = hours51.toString();
        int int53 = hours43.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours51);
        org.joda.time.Hours hours54 = hours16.minus(hours43);
        org.joda.time.Period period55 = hours43.toPeriod();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT-1H" + "'", str23, "PT-1H");
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(mutablePeriod47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "PT7H" + "'", str52, "PT7H");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(period55);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT-1H");
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.Duration duration6 = hours2.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod7 = hours2.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod8 = hours2.toMutablePeriod();
        int int9 = hours1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours2);
        org.joda.time.PeriodType periodType10 = hours1.getPeriodType();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(periodType10);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT7H");
        org.joda.time.PeriodType periodType2 = hours1.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            int int4 = hours1.getValue(12);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 12");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(periodType2);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) (short) 0);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.multipliedBy(1);
        org.joda.time.Hours hours10 = org.joda.time.Hours.ONE;
        int int11 = hours9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours10);
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        boolean boolean13 = hours9.equals((java.lang.Object) hours12);
        org.joda.time.Hours hours14 = hours1.minus(hours9);
        int int15 = hours14.size();
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        int int21 = hours16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours19);
        org.joda.time.Hours hours23 = hours16.minus((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod24 = hours16.toMutablePeriod();
        int int25 = hours16.getHours();
        org.joda.time.Hours hours26 = hours14.plus(hours16);
        org.joda.time.Hours hours27 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = hours27.get(durationFieldType28);
        org.joda.time.DurationFieldType durationFieldType30 = hours27.getFieldType();
        org.joda.time.DurationFieldType durationFieldType31 = hours27.getFieldType();
        org.joda.time.Period period32 = hours27.toPeriod();
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod34 = hours33.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours36 = hours33.minus(hours35);
        org.joda.time.DurationFieldType durationFieldType37 = null;
        int int38 = hours33.get(durationFieldType37);
        org.joda.time.Hours hours40 = hours33.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval41 = null;
        org.joda.time.Hours hours42 = org.joda.time.Hours.hoursIn(readableInterval41);
        int int43 = hours40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours42);
        org.joda.time.Hours hours44 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours45 = org.joda.time.Hours.EIGHT;
        int int47 = hours45.getValue((int) (short) 0);
        org.joda.time.Hours hours48 = hours44.minus(hours45);
        org.joda.time.Hours hours49 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = hours49.get(durationFieldType50);
        org.joda.time.DurationFieldType durationFieldType52 = hours49.getFieldType();
        int int53 = hours44.get(durationFieldType52);
        boolean boolean54 = hours42.isSupported(durationFieldType52);
        int int55 = hours27.get(durationFieldType52);
        boolean boolean56 = hours26.isGreaterThan(hours27);
        org.joda.time.Hours hours57 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod58 = hours57.toMutablePeriod();
        org.joda.time.Hours hours59 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours60 = hours57.minus(hours59);
        org.joda.time.Duration duration61 = hours57.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod62 = hours57.toMutablePeriod();
        org.joda.time.Hours hours63 = org.joda.time.Hours.EIGHT;
        int int65 = hours63.getValue((int) (short) 0);
        java.lang.String str66 = hours63.toString();
        boolean boolean67 = hours57.isGreaterThan(hours63);
        org.joda.time.Hours hours69 = hours63.minus(10);
        org.joda.time.Hours hours70 = hours63.negated();
        org.joda.time.Hours hours71 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod72 = hours71.toMutablePeriod();
        org.joda.time.Hours hours73 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours74 = hours71.minus(hours73);
        org.joda.time.DurationFieldType durationFieldType75 = null;
        int int76 = hours71.get(durationFieldType75);
        org.joda.time.Hours hours78 = hours71.multipliedBy(1);
        org.joda.time.Hours hours79 = org.joda.time.Hours.ONE;
        int int80 = hours78.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours79);
        int int81 = hours63.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours78);
        java.lang.String str82 = hours78.toString();
        org.joda.time.Period period83 = hours78.toPeriod();
        org.joda.time.Hours hours85 = hours78.dividedBy(5);
        org.joda.time.Hours hours86 = hours26.plus(hours78);
        // The following exception was thrown during execution in test generation
        try {
            int int88 = hours78.getValue((-2));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 7 + "'", int25 == 7);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 8 + "'", int47 == 8);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 7 + "'", int53 == 7);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(mutablePeriod58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertNotNull(mutablePeriod62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 8 + "'", int65 == 8);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "PT8H" + "'", str66, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertNotNull(mutablePeriod72);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(hours78);
        org.junit.Assert.assertNotNull(hours79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "PT7H" + "'", str82, "PT7H");
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertNotNull(hours85);
        org.junit.Assert.assertNotNull(hours86);
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours1 = hours0.negated();
        org.joda.time.DurationFieldType durationFieldType2 = hours0.getFieldType();
        java.lang.String str3 = hours0.toString();
        org.joda.time.Hours hours4 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.MutablePeriod mutablePeriod11 = hours5.toMutablePeriod();
        org.joda.time.Hours hours13 = hours5.minus(7);
        org.joda.time.Hours hours14 = hours4.minus(hours5);
        org.joda.time.Hours hours15 = hours0.minus(hours5);
        org.joda.time.Hours hours16 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        int int22 = hours17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours20);
        org.joda.time.DurationFieldType durationFieldType23 = null;
        boolean boolean24 = hours17.isSupported(durationFieldType23);
        org.joda.time.Hours hours26 = hours17.minus((int) (short) -1);
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        org.joda.time.Hours hours32 = hours29.plus(8);
        org.joda.time.Hours hours33 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = hours33.get(durationFieldType34);
        org.joda.time.DurationFieldType durationFieldType36 = hours33.getFieldType();
        boolean boolean37 = hours32.isSupported(durationFieldType36);
        int int38 = hours26.get(durationFieldType36);
        org.joda.time.Hours hours39 = hours0.minus(hours26);
        org.joda.time.Hours hours41 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours43 = hours41.minus(8);
        org.joda.time.DurationFieldType durationFieldType44 = hours43.getFieldType();
        boolean boolean45 = hours26.isLessThan(hours43);
        org.joda.time.Hours hours46 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours26);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT3H" + "'", str3, "PT3H");
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 8 + "'", int38 == 8);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(hours46);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        int int9 = hours8.getHours();
        org.joda.time.Hours hours11 = hours8.plus(10);
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = hours12.get(durationFieldType16);
        org.joda.time.Hours hours19 = hours12.multipliedBy(1);
        boolean boolean20 = hours8.isGreaterThan(hours12);
        org.joda.time.Hours hours21 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        int int25 = hours23.getValue((int) (short) 0);
        org.joda.time.Hours hours26 = hours22.minus(hours23);
        org.joda.time.Hours hours27 = hours21.minus(hours22);
        int int28 = hours21.size();
        org.joda.time.Hours hours29 = hours12.plus(hours21);
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod32 = hours31.toMutablePeriod();
        org.joda.time.Hours hours33 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours34 = hours31.minus(hours33);
        int int35 = hours30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours33);
        org.joda.time.Hours hours37 = hours33.multipliedBy(0);
        org.joda.time.Duration duration38 = hours33.toStandardDuration();
        org.joda.time.Hours hours40 = hours33.dividedBy((int) (short) -1);
        int int41 = hours40.size();
        boolean boolean42 = hours29.isLessThan(hours40);
        boolean boolean43 = hours0.isGreaterThan(hours40);
        org.joda.time.Hours hours45 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType46 = hours45.getFieldType();
        org.joda.time.PeriodType periodType47 = hours45.getPeriodType();
        org.joda.time.Hours hours48 = hours45.negated();
        org.joda.time.Hours hours49 = hours40.plus(hours45);
        org.joda.time.DurationFieldType durationFieldType50 = hours49.getFieldType();
        org.joda.time.Hours hours52 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours53 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod54 = hours53.toMutablePeriod();
        org.joda.time.Hours hours55 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours56 = hours53.minus(hours55);
        org.joda.time.DurationFieldType durationFieldType57 = null;
        int int58 = hours53.get(durationFieldType57);
        org.joda.time.Hours hours60 = hours53.minus((int) (short) 0);
        org.joda.time.Hours hours61 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod62 = hours61.toMutablePeriod();
        org.joda.time.Hours hours63 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours64 = hours61.minus(hours63);
        org.joda.time.DurationFieldType durationFieldType65 = null;
        boolean boolean66 = hours63.isSupported(durationFieldType65);
        org.joda.time.Hours hours67 = hours60.minus(hours63);
        org.joda.time.Hours hours68 = hours52.plus(hours67);
        org.joda.time.Hours hours69 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours70 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod71 = hours70.toMutablePeriod();
        org.joda.time.Hours hours72 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours73 = hours70.minus(hours72);
        int int74 = hours69.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours72);
        org.joda.time.Hours hours75 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours69);
        org.joda.time.Hours hours76 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod77 = hours76.toMutablePeriod();
        org.joda.time.Hours hours78 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours79 = hours76.minus(hours78);
        org.joda.time.Hours hours81 = hours78.plus(8);
        org.joda.time.Hours hours82 = hours69.minus(hours81);
        org.joda.time.Hours hours83 = hours82.negated();
        boolean boolean84 = hours67.isLessThan(hours82);
        org.joda.time.DurationFieldType durationFieldType85 = hours67.getFieldType();
        org.joda.time.Hours hours86 = hours49.plus(hours67);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 8 + "'", int25 == 8);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(mutablePeriod62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(mutablePeriod71);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(hours75);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(mutablePeriod77);
        org.junit.Assert.assertNotNull(hours78);
        org.junit.Assert.assertNotNull(hours79);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertNotNull(hours82);
        org.junit.Assert.assertNotNull(hours83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(durationFieldType85);
        org.junit.Assert.assertNotNull(hours86);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours8 = hours0.plus(0);
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours11 = hours8.dividedBy(100);
        int int12 = hours11.getHours();
        org.joda.time.base.BaseSingleFieldPeriod baseSingleFieldPeriod13 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int14 = hours11.compareTo(baseSingleFieldPeriod13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours9 = hours3.minus(hours5);
        org.joda.time.PeriodType periodType10 = hours5.getPeriodType();
        org.joda.time.Hours hours11 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours12 = hours11.negated();
        org.joda.time.DurationFieldType durationFieldType13 = hours11.getFieldType();
        boolean boolean14 = hours5.isSupported(durationFieldType13);
        org.joda.time.Hours hours15 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours5);
        org.joda.time.Hours hours17 = hours15.dividedBy((-2147483598));
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours5.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = hours5.getFieldType();
        int int9 = hours0.get(durationFieldType8);
        org.joda.time.Hours hours11 = hours0.multipliedBy(7);
        org.joda.time.Hours hours13 = hours11.minus((-2));
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        org.joda.time.Hours hours18 = hours16.negated();
        org.joda.time.DurationFieldType durationFieldType19 = hours18.getFieldType();
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours23 = hours20.minus(hours22);
        org.joda.time.Hours hours24 = hours22.negated();
        int int25 = hours24.getHours();
        int int26 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours24);
        org.joda.time.Hours hours27 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours18);
        org.joda.time.Hours hours28 = hours11.minus(hours18);
        org.joda.time.Hours hours30 = hours18.minus(0);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType32 = hours30.getFieldType(7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7 + "'", int9 == 7);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-8) + "'", int25 == (-8));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours30);
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.Hours hours3 = hours0.plus(10);
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod5 = hours4.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours7 = hours4.minus(hours6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = hours4.get(durationFieldType8);
        org.joda.time.Hours hours11 = hours4.multipliedBy(1);
        boolean boolean12 = hours0.isGreaterThan(hours4);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = hours13.get(durationFieldType17);
        org.joda.time.Hours hours20 = hours13.minus((int) (short) 0);
        org.joda.time.Hours hours21 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours13);
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        int int27 = hours22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours25);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        boolean boolean29 = hours22.isSupported(durationFieldType28);
        org.joda.time.Hours hours31 = hours22.minus((int) (short) -1);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod33 = hours32.toMutablePeriod();
        org.joda.time.Hours hours34 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours35 = hours32.minus(hours34);
        org.joda.time.Hours hours37 = hours34.plus(8);
        org.joda.time.Hours hours38 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType39 = null;
        int int40 = hours38.get(durationFieldType39);
        org.joda.time.DurationFieldType durationFieldType41 = hours38.getFieldType();
        boolean boolean42 = hours37.isSupported(durationFieldType41);
        int int43 = hours31.get(durationFieldType41);
        org.joda.time.Hours hours44 = hours13.plus(hours31);
        org.joda.time.Hours hours46 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours47 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod48 = hours47.toMutablePeriod();
        org.joda.time.Hours hours49 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours50 = hours47.minus(hours49);
        org.joda.time.DurationFieldType durationFieldType51 = null;
        int int52 = hours47.get(durationFieldType51);
        org.joda.time.Hours hours54 = hours47.minus((int) (short) 0);
        org.joda.time.Hours hours55 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod56 = hours55.toMutablePeriod();
        org.joda.time.Hours hours57 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours58 = hours55.minus(hours57);
        org.joda.time.DurationFieldType durationFieldType59 = null;
        boolean boolean60 = hours57.isSupported(durationFieldType59);
        org.joda.time.Hours hours61 = hours54.minus(hours57);
        org.joda.time.Hours hours62 = hours46.plus(hours61);
        org.joda.time.Hours hours63 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod64 = hours63.toMutablePeriod();
        org.joda.time.Hours hours65 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours66 = hours63.minus(hours65);
        boolean boolean67 = hours61.isGreaterThan(hours65);
        org.joda.time.DurationFieldType durationFieldType69 = hours61.getFieldType((int) (short) 0);
        boolean boolean70 = hours31.isSupported(durationFieldType69);
        int int71 = hours31.size();
        org.joda.time.Hours hours73 = hours31.multipliedBy((int) (byte) -1);
        boolean boolean74 = hours4.isGreaterThan(hours31);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 8 + "'", int43 == 8);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(mutablePeriod64);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(durationFieldType69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        int int27 = hours25.getValue((int) (short) 0);
        org.joda.time.Hours hours28 = hours24.minus(hours25);
        org.joda.time.Hours hours29 = hours23.minus(hours24);
        org.joda.time.Hours hours31 = hours24.dividedBy(1);
        org.joda.time.Duration duration32 = hours24.toStandardDuration();
        boolean boolean33 = hours20.isGreaterThan(hours24);
        org.joda.time.Hours hours35 = hours20.plus(7);
        // The following exception was thrown during execution in test generation
        try {
            int int37 = hours20.getValue(56);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 56");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 8 + "'", int27 == 8);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(hours35);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        org.joda.time.Hours hours0 = org.joda.time.Hours.EIGHT;
        int int1 = hours0.size();
        org.joda.time.Hours hours3 = hours0.dividedBy(100);
        org.joda.time.Hours hours4 = hours3.negated();
        org.joda.time.Hours hours6 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        int int12 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours10);
        org.joda.time.MutablePeriod mutablePeriod13 = hours7.toMutablePeriod();
        org.joda.time.Hours hours14 = hours6.minus(hours7);
        org.joda.time.Hours hours15 = hours3.plus(hours6);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        int int19 = hours17.getValue((int) (short) 0);
        org.joda.time.Hours hours20 = hours16.minus(hours17);
        boolean boolean22 = hours17.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours23 = null;
        org.joda.time.Hours hours24 = hours17.minus(hours23);
        org.joda.time.Hours hours25 = hours24.negated();
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod27 = hours26.toMutablePeriod();
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours29 = hours26.minus(hours28);
        org.joda.time.Duration duration30 = hours26.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod31 = hours26.toMutablePeriod();
        org.joda.time.Hours hours32 = org.joda.time.Hours.EIGHT;
        int int34 = hours32.getValue((int) (short) 0);
        java.lang.String str35 = hours32.toString();
        boolean boolean36 = hours26.isGreaterThan(hours32);
        org.joda.time.Hours hours38 = hours32.minus(10);
        org.joda.time.Hours hours39 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours40 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod41 = hours40.toMutablePeriod();
        org.joda.time.Hours hours42 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours43 = hours40.minus(hours42);
        int int44 = hours39.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours42);
        org.joda.time.Hours hours45 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours39);
        org.joda.time.DurationFieldType durationFieldType46 = null;
        int int47 = hours39.get(durationFieldType46);
        boolean boolean48 = hours38.equals((java.lang.Object) hours39);
        java.lang.String str49 = hours38.toString();
        org.joda.time.DurationFieldType durationFieldType51 = hours38.getFieldType(0);
        boolean boolean52 = hours24.isGreaterThan(hours38);
        org.joda.time.Hours hours53 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours38);
        org.joda.time.Hours hours54 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours53);
        org.joda.time.Hours hours55 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod56 = hours55.toMutablePeriod();
        org.joda.time.Hours hours57 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours58 = hours55.minus(hours57);
        org.joda.time.DurationFieldType durationFieldType59 = null;
        int int60 = hours55.get(durationFieldType59);
        org.joda.time.Hours hours62 = hours55.minus((int) (short) 0);
        org.joda.time.Hours hours63 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType64 = null;
        int int65 = hours63.get(durationFieldType64);
        org.joda.time.DurationFieldType durationFieldType66 = hours63.getFieldType();
        int int67 = hours62.get(durationFieldType66);
        org.joda.time.PeriodType periodType68 = hours62.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType69 = hours62.getFieldType();
        int int70 = hours53.get(durationFieldType69);
        org.joda.time.Hours hours72 = org.joda.time.Hours.hours(100);
        org.joda.time.Period period73 = hours72.toPeriod();
        org.joda.time.Hours hours75 = hours72.minus(8);
        org.joda.time.Hours hours76 = org.joda.time.Hours.THREE;
        org.joda.time.Period period77 = hours76.toPeriod();
        org.joda.time.Hours hours79 = hours76.plus((int) (byte) -1);
        org.joda.time.Hours hours81 = hours79.minus((int) (byte) 100);
        boolean boolean82 = hours72.equals((java.lang.Object) hours81);
        org.joda.time.MutablePeriod mutablePeriod83 = hours72.toMutablePeriod();
        org.joda.time.Hours hours85 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Hours hours86 = hours72.minus(hours85);
        org.joda.time.Hours hours87 = hours53.minus(hours72);
        org.joda.time.Hours hours88 = hours53.negated();
        boolean boolean89 = hours15.isLessThan(hours53);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8 + "'", int19 == 8);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 8 + "'", int34 == 8);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "PT8H" + "'", str35, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "PT-2H" + "'", str49, "PT-2H");
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(durationFieldType66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 7 + "'", int67 == 7);
        org.junit.Assert.assertNotNull(periodType68);
        org.junit.Assert.assertNotNull(durationFieldType69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-2) + "'", int70 == (-2));
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(hours75);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(hours79);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(mutablePeriod83);
        org.junit.Assert.assertNotNull(hours85);
        org.junit.Assert.assertNotNull(hours86);
        org.junit.Assert.assertNotNull(hours87);
        org.junit.Assert.assertNotNull(hours88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours1 = org.joda.time.Hours.MAX_VALUE;
        int int2 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours1);
        org.joda.time.Hours hours3 = hours1.negated();
        org.joda.time.Hours hours4 = hours3.negated();
        java.lang.String str5 = hours3.toString();
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = hours6.get(durationFieldType10);
        org.joda.time.Hours hours13 = hours6.multipliedBy(1);
        int int14 = hours13.getHours();
        org.joda.time.Hours hours16 = hours13.minus((int) ' ');
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        boolean boolean18 = hours3.equals((java.lang.Object) mutablePeriod17);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT-2147483647H" + "'", str5, "PT-2147483647H");
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 7 + "'", int14 == 7);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        int int7 = hours2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours5);
        org.joda.time.MutablePeriod mutablePeriod8 = hours2.toMutablePeriod();
        org.joda.time.Hours hours9 = hours1.minus(hours2);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        int int15 = hours10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours13);
        org.joda.time.Hours hours16 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours10);
        org.joda.time.Hours hours17 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours18 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = hours18.get(durationFieldType19);
        boolean boolean21 = hours17.equals((java.lang.Object) durationFieldType19);
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        int int27 = hours22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours25);
        org.joda.time.Hours hours29 = hours25.multipliedBy(0);
        org.joda.time.Hours hours30 = hours17.plus(hours29);
        boolean boolean31 = hours16.isGreaterThan(hours29);
        boolean boolean32 = hours9.isLessThan(hours29);
        org.joda.time.Hours hours34 = hours9.minus((int) (byte) -1);
        org.joda.time.Hours hours35 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period36 = hours35.toPeriod();
        org.joda.time.Hours hours38 = hours35.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod39 = hours38.toMutablePeriod();
        org.joda.time.Hours hours40 = org.joda.time.Hours.THREE;
        org.joda.time.Period period41 = hours40.toPeriod();
        org.joda.time.Hours hours43 = hours40.plus((int) (byte) -1);
        org.joda.time.Hours hours44 = hours38.minus(hours40);
        org.joda.time.PeriodType periodType45 = hours40.getPeriodType();
        org.joda.time.Hours hours46 = org.joda.time.Hours.ZERO;
        org.joda.time.Duration duration47 = hours46.toStandardDuration();
        boolean boolean48 = hours40.isLessThan(hours46);
        org.joda.time.Hours hours49 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours50 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod51 = hours50.toMutablePeriod();
        org.joda.time.Hours hours52 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours53 = hours50.minus(hours52);
        int int54 = hours49.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours52);
        org.joda.time.Hours hours55 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours49);
        org.joda.time.DurationFieldType durationFieldType56 = null;
        int int57 = hours49.get(durationFieldType56);
        org.joda.time.Hours hours58 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod59 = hours58.toMutablePeriod();
        org.joda.time.Hours hours60 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours61 = hours58.minus(hours60);
        org.joda.time.DurationFieldType durationFieldType62 = null;
        int int63 = hours58.get(durationFieldType62);
        org.joda.time.Hours hours65 = hours58.minus((int) (short) 0);
        org.joda.time.Hours hours66 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod67 = hours66.toMutablePeriod();
        org.joda.time.Hours hours68 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours69 = hours66.minus(hours68);
        org.joda.time.DurationFieldType durationFieldType70 = null;
        boolean boolean71 = hours68.isSupported(durationFieldType70);
        org.joda.time.Hours hours72 = hours65.minus(hours68);
        org.joda.time.Period period73 = hours65.toPeriod();
        org.joda.time.Hours hours74 = hours49.plus(hours65);
        org.joda.time.Hours hours75 = hours40.minus(hours65);
        boolean boolean76 = hours9.isLessThan(hours75);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(mutablePeriod59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(mutablePeriod67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertNotNull(hours75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = hours12.get(durationFieldType16);
        org.joda.time.Hours hours19 = hours12.minus((int) (short) 0);
        org.joda.time.Hours hours20 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours12);
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod23 = hours22.toMutablePeriod();
        org.joda.time.Hours hours24 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours25 = hours22.minus(hours24);
        int int26 = hours21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours24);
        org.joda.time.DurationFieldType durationFieldType27 = null;
        boolean boolean28 = hours21.isSupported(durationFieldType27);
        org.joda.time.Hours hours30 = hours21.minus((int) (short) -1);
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod32 = hours31.toMutablePeriod();
        org.joda.time.Hours hours33 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours34 = hours31.minus(hours33);
        org.joda.time.Hours hours36 = hours33.plus(8);
        org.joda.time.Hours hours37 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = hours37.get(durationFieldType38);
        org.joda.time.DurationFieldType durationFieldType40 = hours37.getFieldType();
        boolean boolean41 = hours36.isSupported(durationFieldType40);
        int int42 = hours30.get(durationFieldType40);
        org.joda.time.Hours hours43 = hours12.plus(hours30);
        org.joda.time.Hours hours44 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours45 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod46 = hours45.toMutablePeriod();
        org.joda.time.Hours hours47 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours48 = hours45.minus(hours47);
        int int49 = hours44.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours47);
        org.joda.time.DurationFieldType durationFieldType50 = null;
        boolean boolean51 = hours44.isSupported(durationFieldType50);
        org.joda.time.Hours hours53 = hours44.multipliedBy((int) (short) 10);
        org.joda.time.Hours hours54 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours55 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType56 = null;
        int int57 = hours55.get(durationFieldType56);
        boolean boolean58 = hours54.equals((java.lang.Object) durationFieldType56);
        org.joda.time.Hours hours59 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours60 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod61 = hours60.toMutablePeriod();
        org.joda.time.Hours hours62 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours63 = hours60.minus(hours62);
        int int64 = hours59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours62);
        org.joda.time.Hours hours66 = hours62.multipliedBy(0);
        org.joda.time.Hours hours67 = hours54.plus(hours66);
        org.joda.time.DurationFieldType durationFieldType68 = hours67.getFieldType();
        boolean boolean69 = hours44.equals((java.lang.Object) durationFieldType68);
        int int70 = hours30.get(durationFieldType68);
        boolean boolean71 = hours11.isSupported(durationFieldType68);
        boolean boolean72 = hours0.isSupported(durationFieldType68);
        org.joda.time.Hours hours74 = hours0.multipliedBy((int) (short) 0);
        org.joda.time.MutablePeriod mutablePeriod75 = hours0.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 8 + "'", int42 == 8);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(mutablePeriod61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(durationFieldType68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 8 + "'", int70 == 8);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertNotNull(mutablePeriod75);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        java.lang.String str7 = hours1.toString();
        org.joda.time.Hours hours9 = hours1.plus(8);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.Duration duration14 = hours10.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod15 = hours10.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        int int18 = hours16.getValue((int) (short) 0);
        java.lang.String str19 = hours16.toString();
        boolean boolean20 = hours10.isGreaterThan(hours16);
        org.joda.time.Hours hours22 = hours10.multipliedBy((int) '4');
        org.joda.time.Period period23 = hours10.toPeriod();
        org.joda.time.PeriodType periodType24 = hours10.getPeriodType();
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod27 = hours26.toMutablePeriod();
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours29 = hours26.minus(hours28);
        int int30 = hours25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours28);
        org.joda.time.DurationFieldType durationFieldType31 = null;
        boolean boolean32 = hours25.isSupported(durationFieldType31);
        org.joda.time.Hours hours34 = hours25.minus((int) (short) -1);
        org.joda.time.PeriodType periodType35 = hours25.getPeriodType();
        int int36 = hours25.getHours();
        org.joda.time.DurationFieldType durationFieldType38 = hours25.getFieldType((int) (short) 0);
        int int39 = hours25.size();
        int int40 = hours25.size();
        org.joda.time.DurationFieldType durationFieldType41 = hours25.getFieldType();
        boolean boolean42 = hours10.equals((java.lang.Object) hours25);
        org.joda.time.Hours hours43 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours44 = hours43.negated();
        org.joda.time.Hours hours45 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours46 = org.joda.time.Hours.EIGHT;
        int int48 = hours46.getValue((int) (short) 0);
        org.joda.time.Hours hours49 = hours45.minus(hours46);
        org.joda.time.Hours hours50 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType51 = null;
        int int52 = hours50.get(durationFieldType51);
        org.joda.time.DurationFieldType durationFieldType53 = hours50.getFieldType();
        int int54 = hours45.get(durationFieldType53);
        boolean boolean55 = hours43.isSupported(durationFieldType53);
        int int56 = hours43.getHours();
        org.joda.time.Hours hours58 = hours43.dividedBy((int) ' ');
        org.joda.time.Hours hours59 = hours10.minus(hours58);
        org.joda.time.Hours hours60 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours62 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours63 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod64 = hours63.toMutablePeriod();
        org.joda.time.Hours hours65 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours66 = hours63.minus(hours65);
        org.joda.time.DurationFieldType durationFieldType67 = null;
        int int68 = hours63.get(durationFieldType67);
        org.joda.time.Hours hours70 = hours63.minus((int) (short) 0);
        org.joda.time.Hours hours71 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod72 = hours71.toMutablePeriod();
        org.joda.time.Hours hours73 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours74 = hours71.minus(hours73);
        org.joda.time.DurationFieldType durationFieldType75 = null;
        boolean boolean76 = hours73.isSupported(durationFieldType75);
        org.joda.time.Hours hours77 = hours70.minus(hours73);
        org.joda.time.Hours hours78 = hours62.plus(hours77);
        int int79 = hours60.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours77);
        org.joda.time.MutablePeriod mutablePeriod80 = hours77.toMutablePeriod();
        org.joda.time.Duration duration81 = hours77.toStandardDuration();
        org.joda.time.Hours hours82 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period83 = hours82.toPeriod();
        org.joda.time.Hours hours85 = hours82.dividedBy(1);
        org.joda.time.Hours hours86 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType87 = null;
        int int88 = hours86.get(durationFieldType87);
        org.joda.time.DurationFieldType durationFieldType89 = hours86.getFieldType();
        org.joda.time.DurationFieldType durationFieldType90 = hours86.getFieldType();
        org.joda.time.DurationFieldType durationFieldType91 = hours86.getFieldType();
        int int92 = hours82.get(durationFieldType91);
        boolean boolean93 = hours77.isSupported(durationFieldType91);
        org.joda.time.Hours hours94 = hours59.minus(hours77);
        boolean boolean95 = hours9.equals((java.lang.Object) hours94);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT7H" + "'", str7, "PT7H");
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT8H" + "'", str19, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 7 + "'", int36 == 7);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 8 + "'", int48 == 8);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 7 + "'", int54 == 7);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 3 + "'", int56 == 3);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(mutablePeriod64);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertNotNull(mutablePeriod72);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertNotNull(hours78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod80);
        org.junit.Assert.assertNotNull(duration81);
        org.junit.Assert.assertNotNull(hours82);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertNotNull(hours85);
        org.junit.Assert.assertNotNull(hours86);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(durationFieldType89);
        org.junit.Assert.assertNotNull(durationFieldType90);
        org.junit.Assert.assertNotNull(durationFieldType91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 7 + "'", int92 == 7);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(hours94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.PeriodType periodType7 = hours0.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType9 = hours0.getFieldType(16);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 16");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(periodType7);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.Hours hours4 = hours0.dividedBy(100);
        org.joda.time.Hours hours6 = hours4.plus((int) (byte) 10);
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        int int12 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours10);
        org.joda.time.DurationFieldType durationFieldType13 = null;
        boolean boolean14 = hours7.isSupported(durationFieldType13);
        org.joda.time.Hours hours16 = hours7.minus((int) (short) -1);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        org.joda.time.Hours hours22 = hours19.plus(8);
        org.joda.time.Hours hours23 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = hours23.get(durationFieldType24);
        org.joda.time.DurationFieldType durationFieldType26 = hours23.getFieldType();
        boolean boolean27 = hours22.isSupported(durationFieldType26);
        int int28 = hours16.get(durationFieldType26);
        org.joda.time.Hours hours29 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod31 = hours30.toMutablePeriod();
        org.joda.time.Hours hours32 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours33 = hours30.minus(hours32);
        int int34 = hours29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours32);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        boolean boolean36 = hours29.isSupported(durationFieldType35);
        org.joda.time.Hours hours38 = hours29.multipliedBy((int) (short) 10);
        org.joda.time.Hours hours39 = hours16.plus(hours29);
        org.joda.time.DurationFieldType durationFieldType40 = hours39.getFieldType();
        boolean boolean41 = hours6.isGreaterThan(hours39);
        org.joda.time.DurationFieldType durationFieldType42 = hours6.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 8 + "'", int28 == 8);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(durationFieldType42);
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.Hours hours4 = hours0.dividedBy(100);
        org.joda.time.Hours hours6 = hours4.plus((int) (byte) 10);
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        int int12 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours10);
        org.joda.time.DurationFieldType durationFieldType13 = null;
        boolean boolean14 = hours7.isSupported(durationFieldType13);
        org.joda.time.Hours hours16 = hours7.minus((int) (short) -1);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        org.joda.time.Hours hours22 = hours19.plus(8);
        org.joda.time.Hours hours23 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = hours23.get(durationFieldType24);
        org.joda.time.DurationFieldType durationFieldType26 = hours23.getFieldType();
        boolean boolean27 = hours22.isSupported(durationFieldType26);
        int int28 = hours16.get(durationFieldType26);
        boolean boolean29 = hours6.isSupported(durationFieldType26);
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod31 = hours30.toMutablePeriod();
        org.joda.time.Hours hours32 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours33 = hours30.minus(hours32);
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = hours30.get(durationFieldType34);
        org.joda.time.Hours hours37 = hours30.minus((int) (short) 0);
        org.joda.time.Hours hours38 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours30);
        boolean boolean39 = hours6.equals((java.lang.Object) hours38);
        // The following exception was thrown during execution in test generation
        try {
            int int41 = hours6.getValue((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 8 + "'", int28 == 8);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.Hours hours10 = hours9.negated();
        org.joda.time.Duration duration11 = hours10.toStandardDuration();
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        int int17 = hours12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours15);
        org.joda.time.Hours hours18 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours12);
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        org.joda.time.Hours hours24 = hours21.plus(8);
        org.joda.time.Hours hours25 = hours12.minus(hours24);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        boolean boolean33 = hours26.isSupported(durationFieldType32);
        org.joda.time.Hours hours35 = hours26.minus((int) (short) -1);
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod37 = hours36.toMutablePeriod();
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours39 = hours36.minus(hours38);
        org.joda.time.Hours hours41 = hours38.plus(8);
        org.joda.time.Hours hours42 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = hours42.get(durationFieldType43);
        org.joda.time.DurationFieldType durationFieldType45 = hours42.getFieldType();
        boolean boolean46 = hours41.isSupported(durationFieldType45);
        int int47 = hours35.get(durationFieldType45);
        int int48 = hours24.get(durationFieldType45);
        int int49 = hours10.get(durationFieldType45);
        org.joda.time.DurationFieldType durationFieldType50 = hours10.getFieldType();
        org.joda.time.Hours hours51 = org.joda.time.Hours.ONE;
        int int52 = hours51.getHours();
        org.joda.time.Hours hours54 = hours51.plus(10);
        org.joda.time.Hours hours55 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod56 = hours55.toMutablePeriod();
        org.joda.time.Hours hours57 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours58 = hours55.minus(hours57);
        org.joda.time.Duration duration59 = hours55.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod60 = hours55.toMutablePeriod();
        org.joda.time.Hours hours61 = org.joda.time.Hours.EIGHT;
        int int63 = hours61.getValue((int) (short) 0);
        java.lang.String str64 = hours61.toString();
        boolean boolean65 = hours55.isGreaterThan(hours61);
        org.joda.time.Hours hours67 = hours61.minus(10);
        org.joda.time.Hours hours68 = hours61.negated();
        org.joda.time.Hours hours70 = hours68.plus((int) (byte) 0);
        org.joda.time.DurationFieldType durationFieldType72 = hours68.getFieldType(0);
        boolean boolean73 = hours51.equals((java.lang.Object) durationFieldType72);
        boolean boolean74 = hours10.isLessThan(hours51);
        org.joda.time.Hours hours76 = org.joda.time.Hours.hours(0);
        org.joda.time.Hours hours78 = hours76.minus((int) ' ');
        org.joda.time.Hours hours80 = hours78.dividedBy((int) (short) -1);
        org.joda.time.Hours hours81 = hours10.plus(hours80);
        org.joda.time.Hours hours82 = org.joda.time.Hours.EIGHT;
        int int83 = hours82.size();
        org.joda.time.MutablePeriod mutablePeriod84 = hours82.toMutablePeriod();
        boolean boolean85 = hours81.isGreaterThan(hours82);
        org.joda.time.MutablePeriod mutablePeriod86 = hours81.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 8 + "'", int47 == 8);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-8) + "'", int49 == (-8));
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 8 + "'", int63 == 8);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "PT8H" + "'", str64, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(durationFieldType72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(hours78);
        org.junit.Assert.assertNotNull(hours80);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertNotNull(hours82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(mutablePeriod86);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT8H");
        org.joda.time.Hours hours3 = hours1.dividedBy(3);
        org.joda.time.Period period4 = hours1.toPeriod();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(period4);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        org.joda.time.Hours hours10 = hours7.plus(8);
        org.joda.time.Hours hours11 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = hours11.get(durationFieldType12);
        org.joda.time.DurationFieldType durationFieldType14 = hours11.getFieldType();
        boolean boolean15 = hours10.isSupported(durationFieldType14);
        boolean boolean16 = hours0.isSupported(durationFieldType14);
        int int17 = hours0.size();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType19 = hours0.getFieldType((-91));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -91");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.PeriodType periodType6 = hours0.getPeriodType();
        org.joda.time.Hours hours8 = org.joda.time.Hours.parseHours("PT7H");
        boolean boolean9 = hours0.isLessThan(hours8);
        java.lang.String str10 = hours0.toString();
        org.joda.time.Hours hours12 = hours0.minus((-4));
        org.joda.time.Hours hours14 = org.joda.time.Hours.parseHours("PT-1H");
        org.joda.time.Hours hours16 = hours14.dividedBy(16);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        int int22 = hours17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours20);
        org.joda.time.DurationFieldType durationFieldType23 = null;
        boolean boolean24 = hours17.isSupported(durationFieldType23);
        org.joda.time.Hours hours26 = hours17.multipliedBy((int) (short) 10);
        org.joda.time.MutablePeriod mutablePeriod27 = hours17.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod31 = hours30.toMutablePeriod();
        org.joda.time.Hours hours32 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours33 = hours30.minus(hours32);
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = hours30.get(durationFieldType34);
        org.joda.time.Hours hours37 = hours30.minus((int) (short) 0);
        org.joda.time.Hours hours38 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod39 = hours38.toMutablePeriod();
        org.joda.time.Hours hours40 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours41 = hours38.minus(hours40);
        org.joda.time.DurationFieldType durationFieldType42 = null;
        boolean boolean43 = hours40.isSupported(durationFieldType42);
        org.joda.time.Hours hours44 = hours37.minus(hours40);
        org.joda.time.Hours hours45 = hours29.plus(hours44);
        boolean boolean46 = hours17.isLessThan(hours44);
        org.joda.time.Hours hours47 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod48 = hours47.toMutablePeriod();
        org.joda.time.Hours hours49 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours50 = hours47.minus(hours49);
        org.joda.time.DurationFieldType durationFieldType51 = null;
        boolean boolean52 = hours49.isSupported(durationFieldType51);
        org.joda.time.Hours hours53 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours54 = org.joda.time.Hours.EIGHT;
        int int56 = hours54.getValue((int) (short) 0);
        org.joda.time.Hours hours57 = hours53.minus(hours54);
        boolean boolean58 = hours49.isLessThan(hours54);
        org.joda.time.Hours hours59 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType60 = null;
        int int61 = hours59.get(durationFieldType60);
        org.joda.time.DurationFieldType durationFieldType62 = hours59.getFieldType();
        boolean boolean63 = hours49.isSupported(durationFieldType62);
        boolean boolean64 = hours44.isSupported(durationFieldType62);
        int int65 = hours14.get(durationFieldType62);
        boolean boolean66 = hours0.isSupported(durationFieldType62);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT7H" + "'", str10, "PT7H");
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 8 + "'", int56 == 8);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        java.lang.String str7 = hours1.toString();
        org.joda.time.Hours hours9 = hours1.plus(8);
        org.joda.time.MutablePeriod mutablePeriod10 = hours1.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT7H" + "'", str7, "PT7H");
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(100);
        org.joda.time.Period period2 = hours1.toPeriod();
        org.joda.time.Hours hours4 = hours1.minus(8);
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours10 = hours8.minus((int) (byte) 100);
        boolean boolean11 = hours1.equals((java.lang.Object) hours10);
        org.joda.time.Hours hours12 = null;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.Hours hours15 = hours10.multipliedBy((-2));
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.dividedBy(1);
        org.joda.time.PeriodType periodType4 = hours0.getPeriodType();
        org.joda.time.Hours hours6 = hours0.minus((int) 'a');
        org.joda.time.PeriodType periodType7 = hours6.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(periodType7);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod8 = hours7.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours7.minus(hours9);
        org.joda.time.Hours hours12 = hours9.plus(8);
        org.joda.time.Hours hours13 = hours0.minus(hours12);
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod16 = hours15.toMutablePeriod();
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours18 = hours15.minus(hours17);
        int int19 = hours14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        boolean boolean21 = hours14.isSupported(durationFieldType20);
        org.joda.time.Hours hours23 = hours14.minus((int) (short) -1);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        org.joda.time.Hours hours29 = hours26.plus(8);
        org.joda.time.Hours hours30 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = hours30.get(durationFieldType31);
        org.joda.time.DurationFieldType durationFieldType33 = hours30.getFieldType();
        boolean boolean34 = hours29.isSupported(durationFieldType33);
        int int35 = hours23.get(durationFieldType33);
        int int36 = hours12.get(durationFieldType33);
        org.joda.time.Hours hours37 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours38 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod39 = hours38.toMutablePeriod();
        org.joda.time.Hours hours40 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours41 = hours38.minus(hours40);
        int int42 = hours37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours40);
        org.joda.time.DurationFieldType durationFieldType43 = null;
        boolean boolean44 = hours37.isSupported(durationFieldType43);
        org.joda.time.Hours hours46 = hours37.minus((int) (short) -1);
        org.joda.time.PeriodType periodType47 = hours37.getPeriodType();
        org.joda.time.Hours hours48 = org.joda.time.Hours.EIGHT;
        int int50 = hours48.getValue((int) (short) 0);
        org.joda.time.Hours hours51 = hours37.minus(hours48);
        org.joda.time.Hours hours53 = hours37.plus(7);
        org.joda.time.Hours hours54 = hours37.negated();
        org.joda.time.Hours hours56 = hours54.multipliedBy(100);
        org.joda.time.Hours hours57 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours58 = org.joda.time.Hours.EIGHT;
        int int60 = hours58.getValue((int) (short) 0);
        org.joda.time.Hours hours61 = hours57.minus(hours58);
        boolean boolean63 = hours58.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours64 = null;
        org.joda.time.Hours hours65 = hours58.minus(hours64);
        org.joda.time.Hours hours66 = hours65.negated();
        org.joda.time.Hours hours67 = hours54.plus(hours65);
        org.joda.time.Hours hours69 = hours65.plus(1);
        org.joda.time.Hours hours70 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod71 = hours70.toMutablePeriod();
        org.joda.time.Hours hours72 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours73 = hours70.minus(hours72);
        org.joda.time.Duration duration74 = hours70.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod75 = hours70.toMutablePeriod();
        org.joda.time.Hours hours76 = org.joda.time.Hours.EIGHT;
        int int78 = hours76.getValue((int) (short) 0);
        java.lang.String str79 = hours76.toString();
        boolean boolean80 = hours70.isGreaterThan(hours76);
        org.joda.time.Hours hours82 = hours70.multipliedBy((int) '4');
        org.joda.time.ReadablePeriod readablePeriod83 = null;
        org.joda.time.Hours hours84 = org.joda.time.Hours.standardHoursIn(readablePeriod83);
        org.joda.time.DurationFieldType durationFieldType85 = hours84.getFieldType();
        boolean boolean86 = hours82.isSupported(durationFieldType85);
        int int87 = hours69.get(durationFieldType85);
        boolean boolean88 = hours12.isSupported(durationFieldType85);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 8 + "'", int35 == 8);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 16 + "'", int36 == 16);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 8 + "'", int50 == 8);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 8 + "'", int60 == 8);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(mutablePeriod71);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertNotNull(mutablePeriod75);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 8 + "'", int78 == 8);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "PT8H" + "'", str79, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(hours82);
        org.junit.Assert.assertNotNull(hours84);
        org.junit.Assert.assertNotNull(durationFieldType85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 9 + "'", int87 == 9);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours24 = hours1.plus(hours21);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours28 = hours25.minus(hours27);
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = hours25.get(durationFieldType29);
        org.joda.time.Hours hours32 = hours25.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval33 = null;
        org.joda.time.Hours hours34 = org.joda.time.Hours.hoursIn(readableInterval33);
        int int35 = hours32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours34);
        boolean boolean36 = hours21.isGreaterThan(hours32);
        org.joda.time.Hours hours38 = hours21.multipliedBy(16);
        org.joda.time.Hours hours40 = hours21.multipliedBy((int) (short) 0);
        org.joda.time.Period period41 = hours40.toPeriod();
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours43 = org.joda.time.Hours.EIGHT;
        int int45 = hours43.getValue((int) (short) 0);
        org.joda.time.Hours hours46 = hours42.minus(hours43);
        org.joda.time.Hours hours47 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType48 = null;
        int int49 = hours47.get(durationFieldType48);
        org.joda.time.DurationFieldType durationFieldType50 = hours47.getFieldType();
        int int51 = hours42.get(durationFieldType50);
        boolean boolean52 = hours40.isSupported(durationFieldType50);
        org.joda.time.Hours hours54 = hours40.plus((-6));
        org.joda.time.Hours hours56 = hours40.plus((int) '4');
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 8 + "'", int45 == 8);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 7 + "'", int51 == 7);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours56);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        boolean boolean6 = hours1.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours7 = null;
        org.joda.time.Hours hours8 = hours1.minus(hours7);
        org.joda.time.Hours hours9 = hours8.negated();
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.Duration duration14 = hours10.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod15 = hours10.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        int int18 = hours16.getValue((int) (short) 0);
        java.lang.String str19 = hours16.toString();
        boolean boolean20 = hours10.isGreaterThan(hours16);
        org.joda.time.Hours hours22 = hours16.minus(10);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        int int28 = hours23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours26);
        org.joda.time.Hours hours29 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = hours23.get(durationFieldType30);
        boolean boolean32 = hours22.equals((java.lang.Object) hours23);
        java.lang.String str33 = hours22.toString();
        org.joda.time.DurationFieldType durationFieldType35 = hours22.getFieldType(0);
        boolean boolean36 = hours8.isGreaterThan(hours22);
        org.joda.time.Hours hours37 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours22);
        org.joda.time.Hours hours38 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod39 = hours38.toMutablePeriod();
        org.joda.time.Hours hours40 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours41 = hours38.minus(hours40);
        org.joda.time.DurationFieldType durationFieldType42 = null;
        boolean boolean43 = hours40.isSupported(durationFieldType42);
        org.joda.time.Hours hours44 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours45 = org.joda.time.Hours.EIGHT;
        int int47 = hours45.getValue((int) (short) 0);
        org.joda.time.Hours hours48 = hours44.minus(hours45);
        boolean boolean49 = hours40.isLessThan(hours45);
        org.joda.time.Hours hours50 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType51 = null;
        int int52 = hours50.get(durationFieldType51);
        org.joda.time.DurationFieldType durationFieldType53 = hours50.getFieldType();
        boolean boolean54 = hours40.isSupported(durationFieldType53);
        int int55 = hours22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours40);
        org.joda.time.Hours hours57 = hours22.plus(700);
        org.joda.time.Hours hours58 = hours22.negated();
        org.joda.time.Hours hours60 = hours58.dividedBy((int) '#');
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT8H" + "'", str19, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "PT-2H" + "'", str33, "PT-2H");
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 8 + "'", int47 == 8);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours60);
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.PeriodType periodType10 = hours0.getPeriodType();
        int int11 = hours0.getHours();
        int int12 = hours0.size();
        org.joda.time.Hours hours14 = hours0.plus(5);
        int int15 = hours14.getHours();
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours16.get(durationFieldType20);
        org.joda.time.Hours hours23 = hours16.minus((int) (short) 0);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        org.joda.time.Hours hours28 = hours26.negated();
        org.joda.time.DurationFieldType durationFieldType29 = hours28.getFieldType();
        org.joda.time.Hours hours30 = hours23.minus(hours28);
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod32 = hours31.toMutablePeriod();
        org.joda.time.Hours hours33 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours34 = hours31.minus(hours33);
        org.joda.time.Duration duration35 = hours31.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod36 = hours31.toMutablePeriod();
        org.joda.time.Hours hours37 = org.joda.time.Hours.EIGHT;
        int int39 = hours37.getValue((int) (short) 0);
        java.lang.String str40 = hours37.toString();
        boolean boolean41 = hours31.isGreaterThan(hours37);
        org.joda.time.Hours hours43 = hours37.minus(10);
        org.joda.time.Hours hours44 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours45 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod46 = hours45.toMutablePeriod();
        org.joda.time.Hours hours47 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours48 = hours45.minus(hours47);
        int int49 = hours44.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours47);
        org.joda.time.Hours hours50 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours44);
        org.joda.time.DurationFieldType durationFieldType51 = null;
        int int52 = hours44.get(durationFieldType51);
        boolean boolean53 = hours43.equals((java.lang.Object) hours44);
        org.joda.time.Hours hours55 = hours44.minus(100);
        org.joda.time.Hours hours57 = hours55.plus(7);
        org.joda.time.DurationFieldType durationFieldType58 = hours55.getFieldType();
        int int59 = hours28.get(durationFieldType58);
        int int60 = hours14.get(durationFieldType58);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 7 + "'", int11 == 7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 12 + "'", int15 == 12);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 8 + "'", int39 == 8);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "PT8H" + "'", str40, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-8) + "'", int59 == (-8));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 12 + "'", int60 == 12);
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(36);
        org.junit.Assert.assertNotNull(hours1);
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours2 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours3.get(durationFieldType7);
        org.joda.time.Hours hours10 = hours3.minus((int) (short) 0);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours13.isSupported(durationFieldType15);
        org.joda.time.Hours hours17 = hours10.minus(hours13);
        org.joda.time.Hours hours18 = hours2.plus(hours17);
        int int19 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.Hours hours21 = hours17.plus((int) ' ');
        org.joda.time.PeriodType periodType22 = hours17.getPeriodType();
        org.joda.time.Hours hours24 = org.joda.time.Hours.hours((int) ' ');
        int int25 = hours17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours24);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.Hours hours33 = hours29.multipliedBy(0);
        org.joda.time.Hours hours35 = org.joda.time.Hours.hours(0);
        org.joda.time.Duration duration36 = hours35.toStandardDuration();
        org.joda.time.Hours hours38 = hours35.multipliedBy((int) (short) 1);
        java.lang.String str39 = hours35.toString();
        int int40 = hours29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours35);
        boolean boolean41 = hours17.equals((java.lang.Object) hours35);
        org.joda.time.Hours hours43 = org.joda.time.Hours.hours(0);
        int int44 = hours43.size();
        org.joda.time.Hours hours45 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours46 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod47 = hours46.toMutablePeriod();
        org.joda.time.Hours hours48 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours49 = hours46.minus(hours48);
        int int50 = hours45.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours48);
        org.joda.time.DurationFieldType durationFieldType51 = null;
        boolean boolean52 = hours45.isSupported(durationFieldType51);
        org.joda.time.Hours hours54 = hours45.minus((int) (short) -1);
        org.joda.time.PeriodType periodType55 = hours45.getPeriodType();
        int int56 = hours45.getHours();
        org.joda.time.DurationFieldType durationFieldType58 = hours45.getFieldType((int) (short) 0);
        int int59 = hours43.get(durationFieldType58);
        boolean boolean60 = hours17.isSupported(durationFieldType58);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType62 = hours17.getFieldType(36);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 36");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "PT0H" + "'", str39, "PT0H");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(mutablePeriod47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 7 + "'", int56 == 7);
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours1 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = hours1.get(durationFieldType2);
        boolean boolean4 = hours0.equals((java.lang.Object) durationFieldType2);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.Hours hours12 = hours8.multipliedBy(0);
        org.joda.time.Hours hours13 = hours0.plus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = hours13.getFieldType();
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod16 = hours15.toMutablePeriod();
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours18 = hours15.minus(hours17);
        org.joda.time.Duration duration19 = hours15.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod20 = hours15.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        int int23 = hours21.getValue((int) (short) 0);
        java.lang.String str24 = hours21.toString();
        boolean boolean25 = hours15.isGreaterThan(hours21);
        org.joda.time.Hours hours27 = hours21.minus(10);
        org.joda.time.Hours hours28 = hours21.negated();
        org.joda.time.Hours hours30 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod32 = hours31.toMutablePeriod();
        org.joda.time.Hours hours33 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours34 = hours31.minus(hours33);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = hours31.get(durationFieldType35);
        org.joda.time.Hours hours38 = hours31.minus((int) (short) 0);
        org.joda.time.Hours hours39 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod40 = hours39.toMutablePeriod();
        org.joda.time.Hours hours41 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours42 = hours39.minus(hours41);
        org.joda.time.DurationFieldType durationFieldType43 = null;
        boolean boolean44 = hours41.isSupported(durationFieldType43);
        org.joda.time.Hours hours45 = hours38.minus(hours41);
        org.joda.time.Hours hours46 = hours30.plus(hours45);
        org.joda.time.Hours hours47 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod48 = hours47.toMutablePeriod();
        org.joda.time.Hours hours49 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours50 = hours47.minus(hours49);
        boolean boolean51 = hours45.isGreaterThan(hours49);
        java.lang.String str52 = hours45.toString();
        org.joda.time.Hours hours53 = hours21.plus(hours45);
        boolean boolean54 = hours13.isGreaterThan(hours21);
        org.joda.time.Hours hours55 = hours13.negated();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 8 + "'", int23 == 8);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "PT8H" + "'", str24, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "PT-1H" + "'", str52, "PT-1H");
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(hours55);
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours1 = org.joda.time.Hours.MAX_VALUE;
        int int2 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours1);
        int int3 = hours1.size();
        org.joda.time.Hours hours4 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours6 = hours4.plus(1);
        boolean boolean7 = hours1.isGreaterThan(hours6);
        int int8 = hours6.getHours();
        org.joda.time.Hours hours10 = hours6.minus((-91));
        int int11 = hours10.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 93 + "'", int11 == 93);
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours2 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours3.get(durationFieldType7);
        org.joda.time.Hours hours10 = hours3.minus((int) (short) 0);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours13.isSupported(durationFieldType15);
        org.joda.time.Hours hours17 = hours10.minus(hours13);
        org.joda.time.Hours hours18 = hours2.plus(hours17);
        int int19 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.MutablePeriod mutablePeriod20 = hours17.toMutablePeriod();
        org.joda.time.Duration duration21 = hours17.toStandardDuration();
        org.joda.time.Hours hours22 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours17);
        // The following exception was thrown during execution in test generation
        try {
            int int24 = hours22.getValue((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(hours22);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours8 = hours0.negated();
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        int int14 = hours9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours12);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours9.isSupported(durationFieldType15);
        org.joda.time.Hours hours18 = hours9.multipliedBy((int) (short) 10);
        org.joda.time.MutablePeriod mutablePeriod19 = hours9.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod23 = hours22.toMutablePeriod();
        org.joda.time.Hours hours24 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours25 = hours22.minus(hours24);
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = hours22.get(durationFieldType26);
        org.joda.time.Hours hours29 = hours22.minus((int) (short) 0);
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod31 = hours30.toMutablePeriod();
        org.joda.time.Hours hours32 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours33 = hours30.minus(hours32);
        org.joda.time.DurationFieldType durationFieldType34 = null;
        boolean boolean35 = hours32.isSupported(durationFieldType34);
        org.joda.time.Hours hours36 = hours29.minus(hours32);
        org.joda.time.Hours hours37 = hours21.plus(hours36);
        boolean boolean38 = hours9.isLessThan(hours36);
        java.lang.Class<?> wildcardClass39 = hours36.getClass();
        boolean boolean40 = hours0.equals((java.lang.Object) wildcardClass39);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours4 = hours2.negated();
        org.joda.time.DurationFieldType durationFieldType5 = hours4.getFieldType();
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        org.joda.time.Hours hours10 = hours8.negated();
        int int11 = hours10.getHours();
        int int12 = hours4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours10);
        org.joda.time.Hours hours13 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours4);
        org.joda.time.MutablePeriod mutablePeriod14 = hours4.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.hours((-6));
        org.joda.time.Hours hours17 = hours4.minus(hours16);
        org.joda.time.DurationFieldType durationFieldType18 = hours17.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-8) + "'", int11 == (-8));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(durationFieldType18);
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours0.minus((int) 'a');
        org.joda.time.Hours hours8 = org.joda.time.Hours.ZERO;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        boolean boolean10 = hours7.equals((java.lang.Object) hours8);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType12 = hours8.getFieldType(92);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 92");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours1 = hours0.negated();
        org.joda.time.Hours hours2 = org.joda.time.Hours.MIN_VALUE;
        org.joda.time.Hours hours4 = hours2.plus(0);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.DurationFieldType durationFieldType11 = null;
        boolean boolean12 = hours5.isSupported(durationFieldType11);
        org.joda.time.Hours hours14 = hours5.minus((int) (short) -1);
        org.joda.time.PeriodType periodType15 = hours5.getPeriodType();
        int int16 = hours5.getHours();
        org.joda.time.DurationFieldType durationFieldType18 = hours5.getFieldType((int) (short) 0);
        boolean boolean19 = hours4.isSupported(durationFieldType18);
        boolean boolean20 = hours0.isSupported(durationFieldType18);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 7 + "'", int16 == 7);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.plus((int) (byte) -1);
        java.lang.String str4 = hours3.toString();
        org.joda.time.Hours hours6 = hours3.dividedBy((int) '#');
        org.joda.time.Hours hours7 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours6);
        org.joda.time.Hours hours9 = org.joda.time.Hours.hours(0);
        int int10 = hours9.size();
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        int int16 = hours11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours14);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        boolean boolean18 = hours11.isSupported(durationFieldType17);
        org.joda.time.Hours hours20 = hours11.minus((int) (short) -1);
        org.joda.time.PeriodType periodType21 = hours11.getPeriodType();
        int int22 = hours11.getHours();
        org.joda.time.DurationFieldType durationFieldType24 = hours11.getFieldType((int) (short) 0);
        int int25 = hours9.get(durationFieldType24);
        org.joda.time.PeriodType periodType26 = hours9.getPeriodType();
        boolean boolean27 = hours6.equals((java.lang.Object) periodType26);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT2H" + "'", str4, "PT2H");
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 7 + "'", int22 == 7);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.multipliedBy(1);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        int int9 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        int int10 = hours8.size();
        org.joda.time.MutablePeriod mutablePeriod11 = hours8.toMutablePeriod();
        org.joda.time.Duration duration12 = hours8.toStandardDuration();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(duration12);
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.Hours hours10 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours2 = hours0.plus(0);
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod5 = hours4.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours7 = hours4.minus(hours6);
        int int8 = hours3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours6);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        boolean boolean10 = hours3.isSupported(durationFieldType9);
        org.joda.time.Hours hours12 = hours3.minus((int) (short) -1);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        org.joda.time.Hours hours18 = hours15.plus(8);
        org.joda.time.Hours hours19 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours19.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = hours19.getFieldType();
        boolean boolean23 = hours18.isSupported(durationFieldType22);
        int int24 = hours12.get(durationFieldType22);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod27 = hours26.toMutablePeriod();
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours29 = hours26.minus(hours28);
        int int30 = hours25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours28);
        org.joda.time.DurationFieldType durationFieldType31 = null;
        boolean boolean32 = hours25.isSupported(durationFieldType31);
        org.joda.time.Hours hours34 = hours25.multipliedBy((int) (short) 10);
        org.joda.time.Hours hours35 = hours12.plus(hours25);
        org.joda.time.DurationFieldType durationFieldType36 = hours35.getFieldType();
        boolean boolean37 = hours2.isSupported(durationFieldType36);
        org.joda.time.Hours hours39 = org.joda.time.Hours.hours(0);
        org.joda.time.Hours hours40 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod41 = hours40.toMutablePeriod();
        org.joda.time.Hours hours42 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours43 = hours40.minus(hours42);
        org.joda.time.DurationFieldType durationFieldType44 = null;
        boolean boolean45 = hours42.isSupported(durationFieldType44);
        org.joda.time.Hours hours46 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours47 = org.joda.time.Hours.EIGHT;
        int int49 = hours47.getValue((int) (short) 0);
        org.joda.time.Hours hours50 = hours46.minus(hours47);
        boolean boolean51 = hours42.isLessThan(hours47);
        org.joda.time.Hours hours52 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType53 = null;
        int int54 = hours52.get(durationFieldType53);
        org.joda.time.DurationFieldType durationFieldType55 = hours52.getFieldType();
        boolean boolean56 = hours42.isSupported(durationFieldType55);
        int int57 = hours39.get(durationFieldType55);
        boolean boolean58 = hours2.isSupported(durationFieldType55);
        org.joda.time.Hours hours59 = hours2.negated();
        org.joda.time.Duration duration60 = hours2.toStandardDuration();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 8 + "'", int24 == 8);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 8 + "'", int49 == 8);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(duration60);
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours3.multipliedBy(0);
        org.joda.time.Duration duration8 = hours3.toStandardDuration();
        org.joda.time.Hours hours10 = hours3.dividedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType12 = hours3.getFieldType((int) (short) 0);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(durationFieldType12);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(0);
        int int2 = hours1.size();
        int int3 = hours1.getHours();
        org.joda.time.Hours hours5 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = hours6.get(durationFieldType10);
        org.joda.time.Hours hours13 = hours6.minus((int) (short) 0);
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        org.joda.time.DurationFieldType durationFieldType18 = null;
        boolean boolean19 = hours16.isSupported(durationFieldType18);
        org.joda.time.Hours hours20 = hours13.minus(hours16);
        org.joda.time.Hours hours21 = hours5.plus(hours20);
        org.joda.time.DurationFieldType durationFieldType22 = hours20.getFieldType();
        int int23 = hours1.get(durationFieldType22);
        int int24 = hours1.size();
        java.lang.String str25 = hours1.toString();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "PT0H" + "'", str25, "PT0H");
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        org.joda.time.Hours hours10 = hours7.plus(8);
        org.joda.time.Hours hours11 = hours1.minus(hours7);
        int int12 = hours11.size();
        org.joda.time.Hours hours13 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours14 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = hours14.get(durationFieldType15);
        boolean boolean17 = hours13.equals((java.lang.Object) durationFieldType15);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours25 = hours21.multipliedBy(0);
        org.joda.time.Hours hours26 = hours13.plus(hours25);
        org.joda.time.Hours hours28 = hours26.minus((int) (byte) 100);
        int int29 = hours11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours26);
        org.joda.time.Hours hours31 = hours26.multipliedBy((int) (short) 10);
        int int32 = hours26.size();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        int int7 = hours5.getValue((int) (short) 0);
        org.joda.time.Hours hours8 = hours4.minus(hours5);
        org.joda.time.Hours hours9 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = hours9.get(durationFieldType10);
        org.joda.time.DurationFieldType durationFieldType12 = hours9.getFieldType();
        int int13 = hours4.get(durationFieldType12);
        boolean boolean14 = hours3.isSupported(durationFieldType12);
        int int15 = hours3.size();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8 + "'", int7 == 8);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 7 + "'", int13 == 7);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours0.minus((int) 'a');
        org.joda.time.Hours hours8 = org.joda.time.Hours.ZERO;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        boolean boolean10 = hours7.equals((java.lang.Object) hours8);
        org.joda.time.Hours hours12 = hours8.multipliedBy((int) (short) 100);
        org.joda.time.PeriodType periodType13 = hours12.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.DurationFieldType durationFieldType16 = hours12.getFieldType();
        org.joda.time.DurationFieldType durationFieldType17 = hours12.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(durationFieldType17);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        org.joda.time.Hours hours10 = hours7.plus(8);
        org.joda.time.Hours hours11 = hours1.minus(hours7);
        int int12 = hours11.size();
        org.joda.time.Hours hours13 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours14 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = hours14.get(durationFieldType15);
        boolean boolean17 = hours13.equals((java.lang.Object) durationFieldType15);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours25 = hours21.multipliedBy(0);
        org.joda.time.Hours hours26 = hours13.plus(hours25);
        org.joda.time.Hours hours28 = hours26.minus((int) (byte) 100);
        int int29 = hours11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours26);
        org.joda.time.Hours hours31 = hours26.multipliedBy((int) (short) 10);
        org.joda.time.Hours hours33 = hours31.multipliedBy((-7));
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours33);
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        boolean boolean13 = hours10.isSupported(durationFieldType12);
        org.joda.time.Hours hours14 = hours7.minus(hours10);
        org.joda.time.DurationFieldType durationFieldType15 = hours14.getFieldType();
        int int16 = hours14.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.PeriodType periodType6 = hours0.getPeriodType();
        org.joda.time.Hours hours8 = org.joda.time.Hours.parseHours("PT7H");
        boolean boolean9 = hours0.isLessThan(hours8);
        org.joda.time.Hours hours10 = org.joda.time.Hours.ZERO;
        boolean boolean11 = hours8.isGreaterThan(hours10);
        org.joda.time.Hours hours12 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours13 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = hours13.get(durationFieldType14);
        boolean boolean16 = hours12.equals((java.lang.Object) durationFieldType14);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        int int22 = hours17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours20);
        org.joda.time.Hours hours24 = hours20.multipliedBy(0);
        org.joda.time.Hours hours25 = hours12.plus(hours24);
        org.joda.time.DurationFieldType durationFieldType26 = hours25.getFieldType();
        int int27 = hours8.get(durationFieldType26);
        int int28 = hours8.getHours();
        org.joda.time.Hours hours29 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod31 = hours30.toMutablePeriod();
        org.joda.time.Hours hours32 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours33 = hours30.minus(hours32);
        int int34 = hours29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours32);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        boolean boolean36 = hours29.isSupported(durationFieldType35);
        org.joda.time.Hours hours38 = hours29.minus((int) (short) -1);
        org.joda.time.Hours hours39 = hours38.negated();
        org.joda.time.Hours hours41 = hours39.plus(16);
        org.joda.time.DurationFieldType durationFieldType42 = hours39.getFieldType();
        boolean boolean43 = hours8.isSupported(durationFieldType42);
        java.lang.Class<?> wildcardClass44 = durationFieldType42.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 7 + "'", int27 == 7);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 7 + "'", int28 == 7);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.plus((int) (byte) -1);
        org.joda.time.Hours hours5 = hours3.minus((int) (byte) 100);
        org.joda.time.DurationFieldType durationFieldType6 = hours3.getFieldType();
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod8 = hours7.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours7.minus(hours9);
        org.joda.time.Duration duration11 = hours7.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod12 = hours7.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        int int15 = hours13.getValue((int) (short) 0);
        java.lang.String str16 = hours13.toString();
        boolean boolean17 = hours7.isGreaterThan(hours13);
        org.joda.time.Hours hours18 = hours3.minus(hours13);
        org.joda.time.Hours hours19 = hours3.negated();
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod22 = hours21.toMutablePeriod();
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours24 = hours21.minus(hours23);
        int int25 = hours20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours23);
        org.joda.time.DurationFieldType durationFieldType26 = null;
        boolean boolean27 = hours20.isSupported(durationFieldType26);
        org.joda.time.PeriodType periodType28 = hours20.getPeriodType();
        org.joda.time.Hours hours29 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours31 = org.joda.time.Hours.EIGHT;
        int int33 = hours31.getValue((int) (short) 0);
        org.joda.time.Hours hours34 = hours30.minus(hours31);
        org.joda.time.Hours hours35 = hours29.minus(hours30);
        int int36 = hours29.size();
        org.joda.time.Hours hours37 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        int int40 = hours38.getValue((int) (short) 0);
        org.joda.time.Hours hours41 = hours37.minus(hours38);
        boolean boolean43 = hours38.equals((java.lang.Object) (short) 10);
        int int44 = hours29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours38);
        org.joda.time.Hours hours45 = hours20.plus(hours29);
        org.joda.time.Hours hours46 = hours19.minus(hours20);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType48 = hours46.getFieldType((-6));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -6");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 8 + "'", int15 == 8);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT8H" + "'", str16, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 8 + "'", int33 == 8);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 8 + "'", int40 == 8);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours4 = hours2.negated();
        int int5 = hours4.getHours();
        org.joda.time.Hours hours7 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours9 = hours7.minus(8);
        org.joda.time.Hours hours10 = hours4.minus(hours7);
        // The following exception was thrown during execution in test generation
        try {
            int int12 = hours4.getValue((-6));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -6");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-8) + "'", int5 == (-8));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours0.multipliedBy((int) '4');
        java.lang.String str13 = hours0.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PT7H" + "'", str13, "PT7H");
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType2 = hours1.getFieldType();
        org.joda.time.Period period3 = hours1.toPeriod();
        org.joda.time.Period period4 = hours1.toPeriod();
        org.joda.time.Hours hours6 = hours1.plus(0);
        org.joda.time.Hours hours8 = hours6.plus(15);
        org.joda.time.Hours hours10 = hours8.minus(14);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Hours hours9 = org.joda.time.Hours.hoursIn(readableInterval8);
        int int10 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours9);
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours13 = hours7.negated();
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        int int17 = hours15.getValue((int) (short) 0);
        org.joda.time.Hours hours18 = hours14.minus(hours15);
        java.lang.String str19 = hours18.toString();
        int int20 = hours18.size();
        int int21 = hours18.getHours();
        boolean boolean22 = hours13.isGreaterThan(hours18);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT-1H" + "'", str19, "PT-1H");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(5);
        org.junit.Assert.assertNotNull(hours1);
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        boolean boolean6 = hours1.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours7 = null;
        org.joda.time.Hours hours8 = hours1.minus(hours7);
        org.joda.time.Hours hours9 = hours8.negated();
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.Duration duration14 = hours10.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod15 = hours10.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        int int18 = hours16.getValue((int) (short) 0);
        java.lang.String str19 = hours16.toString();
        boolean boolean20 = hours10.isGreaterThan(hours16);
        org.joda.time.Hours hours22 = hours16.minus(10);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        int int28 = hours23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours26);
        org.joda.time.Hours hours29 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = hours23.get(durationFieldType30);
        boolean boolean32 = hours22.equals((java.lang.Object) hours23);
        java.lang.String str33 = hours22.toString();
        org.joda.time.DurationFieldType durationFieldType35 = hours22.getFieldType(0);
        boolean boolean36 = hours8.isGreaterThan(hours22);
        org.joda.time.Hours hours37 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        int int40 = hours38.getValue((int) (short) 0);
        org.joda.time.Hours hours41 = hours37.minus(hours38);
        boolean boolean43 = hours38.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours44 = null;
        org.joda.time.Hours hours45 = hours38.minus(hours44);
        org.joda.time.Hours hours46 = hours45.negated();
        org.joda.time.Hours hours47 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod48 = hours47.toMutablePeriod();
        org.joda.time.Hours hours49 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours50 = hours47.minus(hours49);
        org.joda.time.Duration duration51 = hours47.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod52 = hours47.toMutablePeriod();
        org.joda.time.Hours hours53 = org.joda.time.Hours.EIGHT;
        int int55 = hours53.getValue((int) (short) 0);
        java.lang.String str56 = hours53.toString();
        boolean boolean57 = hours47.isGreaterThan(hours53);
        org.joda.time.Hours hours59 = hours53.minus(10);
        org.joda.time.Hours hours60 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours61 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod62 = hours61.toMutablePeriod();
        org.joda.time.Hours hours63 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours64 = hours61.minus(hours63);
        int int65 = hours60.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours63);
        org.joda.time.Hours hours66 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours60);
        org.joda.time.DurationFieldType durationFieldType67 = null;
        int int68 = hours60.get(durationFieldType67);
        boolean boolean69 = hours59.equals((java.lang.Object) hours60);
        java.lang.String str70 = hours59.toString();
        org.joda.time.DurationFieldType durationFieldType72 = hours59.getFieldType(0);
        boolean boolean73 = hours45.isGreaterThan(hours59);
        org.joda.time.Hours hours74 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours59);
        org.joda.time.Hours hours75 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod76 = hours75.toMutablePeriod();
        org.joda.time.Hours hours77 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours78 = hours75.minus(hours77);
        org.joda.time.DurationFieldType durationFieldType79 = null;
        boolean boolean80 = hours77.isSupported(durationFieldType79);
        org.joda.time.Hours hours81 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours82 = org.joda.time.Hours.EIGHT;
        int int84 = hours82.getValue((int) (short) 0);
        org.joda.time.Hours hours85 = hours81.minus(hours82);
        boolean boolean86 = hours77.isLessThan(hours82);
        org.joda.time.Hours hours87 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType88 = null;
        int int89 = hours87.get(durationFieldType88);
        org.joda.time.DurationFieldType durationFieldType90 = hours87.getFieldType();
        boolean boolean91 = hours77.isSupported(durationFieldType90);
        int int92 = hours59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours77);
        org.joda.time.Hours hours93 = hours8.plus(hours59);
        org.joda.time.Hours hours95 = hours59.dividedBy((-2147483598));
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType97 = hours95.getFieldType((-25));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -25");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT8H" + "'", str19, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "PT-2H" + "'", str33, "PT-2H");
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 8 + "'", int40 == 8);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(mutablePeriod52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 8 + "'", int55 == 8);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "PT8H" + "'", str56, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(mutablePeriod62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "PT-2H" + "'", str70, "PT-2H");
        org.junit.Assert.assertNotNull(durationFieldType72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertNotNull(hours75);
        org.junit.Assert.assertNotNull(mutablePeriod76);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertNotNull(hours78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertNotNull(hours82);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 8 + "'", int84 == 8);
        org.junit.Assert.assertNotNull(hours85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(hours87);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertNotNull(durationFieldType90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertNotNull(hours93);
        org.junit.Assert.assertNotNull(hours95);
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours24 = hours1.plus(hours21);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours28 = hours25.minus(hours27);
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = hours25.get(durationFieldType29);
        org.joda.time.Hours hours32 = hours25.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval33 = null;
        org.joda.time.Hours hours34 = org.joda.time.Hours.hoursIn(readableInterval33);
        int int35 = hours32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours34);
        boolean boolean36 = hours21.isGreaterThan(hours32);
        org.joda.time.Hours hours38 = hours21.multipliedBy(16);
        org.joda.time.Hours hours40 = hours21.multipliedBy((int) (short) 0);
        org.joda.time.Hours hours41 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod42 = hours41.toMutablePeriod();
        org.joda.time.Hours hours43 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours44 = hours41.minus(hours43);
        org.joda.time.Duration duration45 = hours41.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod46 = hours41.toMutablePeriod();
        org.joda.time.Hours hours47 = org.joda.time.Hours.EIGHT;
        int int49 = hours47.getValue((int) (short) 0);
        java.lang.String str50 = hours47.toString();
        boolean boolean51 = hours41.isGreaterThan(hours47);
        org.joda.time.Hours hours53 = hours47.minus(10);
        org.joda.time.Hours hours54 = hours47.negated();
        org.joda.time.Hours hours56 = hours54.plus((int) (byte) 0);
        org.joda.time.DurationFieldType durationFieldType58 = hours54.getFieldType(0);
        java.lang.Class<?> wildcardClass59 = hours54.getClass();
        boolean boolean60 = hours40.equals((java.lang.Object) wildcardClass59);
        org.joda.time.Hours hours62 = hours40.plus((int) (short) 10);
        org.joda.time.Hours hours63 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours64 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod65 = hours64.toMutablePeriod();
        org.joda.time.Hours hours66 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours67 = hours64.minus(hours66);
        int int68 = hours63.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours66);
        org.joda.time.DurationFieldType durationFieldType69 = null;
        boolean boolean70 = hours63.isSupported(durationFieldType69);
        org.joda.time.Hours hours72 = hours63.minus((int) (short) -1);
        org.joda.time.PeriodType periodType73 = hours63.getPeriodType();
        int int74 = hours63.getHours();
        int int75 = hours63.size();
        org.joda.time.Hours hours77 = hours63.plus(5);
        org.joda.time.Hours hours79 = hours63.minus(16);
        int int80 = hours40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours79);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 8 + "'", int49 == 8);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "PT8H" + "'", str50, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(mutablePeriod65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 7 + "'", int74 == 7);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertNotNull(hours79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours3.multipliedBy(0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod10 = hours9.toMutablePeriod();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours12 = hours9.minus(hours11);
        int int13 = hours8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours11);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours8.isSupported(durationFieldType14);
        org.joda.time.Hours hours17 = hours8.minus((int) (short) -1);
        org.joda.time.PeriodType periodType18 = hours8.getPeriodType();
        int int19 = hours8.getHours();
        boolean boolean20 = hours3.equals((java.lang.Object) int19);
        java.lang.String str21 = hours3.toString();
        org.joda.time.Hours hours23 = hours3.minus((int) (short) 10);
        org.joda.time.Duration duration24 = hours23.toStandardDuration();
        java.lang.Class<?> wildcardClass25 = duration24.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 7 + "'", int19 == 7);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT8H" + "'", str21, "PT8H");
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours3.multipliedBy(0);
        org.joda.time.Duration duration8 = hours3.toStandardDuration();
        org.joda.time.Hours hours10 = hours3.plus((-1));
        org.joda.time.Period period11 = hours3.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(period11);
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        int int7 = hours2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours5);
        org.joda.time.MutablePeriod mutablePeriod8 = hours2.toMutablePeriod();
        org.joda.time.Hours hours9 = hours1.minus(hours2);
        org.joda.time.Hours hours10 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours2);
        org.joda.time.Duration duration11 = hours10.toStandardDuration();
        java.lang.Class<?> wildcardClass12 = duration11.getClass();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(0);
        int int2 = hours1.size();
        org.joda.time.Hours hours4 = org.joda.time.Hours.hours((-1));
        int int5 = hours1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours4);
        org.joda.time.PeriodType periodType6 = hours1.getPeriodType();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(periodType6);
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = hours8.getFieldType();
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours14 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod16 = hours15.toMutablePeriod();
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours18 = hours15.minus(hours17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = hours15.get(durationFieldType19);
        org.joda.time.Hours hours22 = hours15.minus((int) (short) 0);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        org.joda.time.DurationFieldType durationFieldType27 = null;
        boolean boolean28 = hours25.isSupported(durationFieldType27);
        org.joda.time.Hours hours29 = hours22.minus(hours25);
        org.joda.time.Hours hours30 = hours14.plus(hours29);
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod32 = hours31.toMutablePeriod();
        org.joda.time.Hours hours33 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours34 = hours31.minus(hours33);
        boolean boolean35 = hours29.isGreaterThan(hours33);
        org.joda.time.Hours hours36 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours29);
        boolean boolean37 = hours7.equals((java.lang.Object) hours36);
        org.joda.time.Hours hours39 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Period period40 = hours39.toPeriod();
        org.joda.time.Hours hours42 = hours39.minus((int) (byte) -1);
        org.joda.time.Hours hours43 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours45 = hours43.dividedBy((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType47 = hours43.getFieldType(0);
        boolean boolean48 = hours39.isSupported(durationFieldType47);
        int int49 = hours7.get(durationFieldType47);
        org.joda.time.Hours hours50 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours51 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod52 = hours51.toMutablePeriod();
        org.joda.time.Hours hours53 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours54 = hours51.minus(hours53);
        int int55 = hours50.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours53);
        org.joda.time.DurationFieldType durationFieldType56 = null;
        boolean boolean57 = hours50.isSupported(durationFieldType56);
        org.joda.time.PeriodType periodType58 = hours50.getPeriodType();
        org.joda.time.Hours hours59 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours60 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours61 = org.joda.time.Hours.EIGHT;
        int int63 = hours61.getValue((int) (short) 0);
        org.joda.time.Hours hours64 = hours60.minus(hours61);
        org.joda.time.Hours hours65 = hours59.minus(hours60);
        int int66 = hours59.size();
        org.joda.time.Hours hours67 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours68 = org.joda.time.Hours.EIGHT;
        int int70 = hours68.getValue((int) (short) 0);
        org.joda.time.Hours hours71 = hours67.minus(hours68);
        boolean boolean73 = hours68.equals((java.lang.Object) (short) 10);
        int int74 = hours59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours68);
        org.joda.time.Hours hours75 = hours50.plus(hours59);
        org.joda.time.PeriodType periodType76 = hours75.getPeriodType();
        boolean boolean77 = hours7.equals((java.lang.Object) periodType76);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7 + "'", int12 == 7);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 7 + "'", int49 == 7);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(mutablePeriod52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 8 + "'", int63 == 8);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 8 + "'", int70 == 8);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(hours75);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.Hours hours3 = hours0.plus(10);
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod5 = hours4.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours7 = hours4.minus(hours6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = hours4.get(durationFieldType8);
        org.joda.time.Hours hours11 = hours4.multipliedBy(1);
        boolean boolean12 = hours0.isGreaterThan(hours4);
        int int13 = hours0.size();
        org.joda.time.Hours hours15 = hours0.plus((int) (short) 0);
        org.joda.time.Hours hours16 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours15);
        org.joda.time.DurationFieldType durationFieldType17 = hours15.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(durationFieldType17);
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.Hours hours12 = hours10.negated();
        org.joda.time.DurationFieldType durationFieldType13 = hours12.getFieldType();
        org.joda.time.Hours hours14 = hours7.minus(hours12);
        org.joda.time.Hours hours15 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours12);
        org.joda.time.Hours hours16 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours18 = hours16.plus(1);
        org.joda.time.Hours hours20 = hours16.dividedBy((int) (byte) -1);
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod22 = hours21.toMutablePeriod();
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours24 = hours21.minus(hours23);
        org.joda.time.Duration duration25 = hours21.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod26 = hours21.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        int int29 = hours27.getValue((int) (short) 0);
        java.lang.String str30 = hours27.toString();
        boolean boolean31 = hours21.isGreaterThan(hours27);
        org.joda.time.Hours hours33 = hours27.minus(10);
        org.joda.time.Hours hours34 = hours27.negated();
        org.joda.time.Hours hours35 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod36 = hours35.toMutablePeriod();
        org.joda.time.Hours hours37 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours38 = hours35.minus(hours37);
        org.joda.time.DurationFieldType durationFieldType39 = null;
        int int40 = hours35.get(durationFieldType39);
        org.joda.time.Hours hours42 = hours35.multipliedBy(1);
        org.joda.time.Hours hours43 = org.joda.time.Hours.ONE;
        int int44 = hours42.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours43);
        int int45 = hours27.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours42);
        java.lang.String str46 = hours42.toString();
        int int47 = hours16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours42);
        boolean boolean48 = hours15.isLessThan(hours42);
        int int49 = hours42.size();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 8 + "'", int29 == 8);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "PT8H" + "'", str30, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "PT7H" + "'", str46, "PT7H");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours1 = org.joda.time.Hours.MAX_VALUE;
        int int2 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours1);
        org.joda.time.Hours hours3 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = hours3.getFieldType();
        org.joda.time.DurationFieldType durationFieldType7 = hours3.getFieldType();
        boolean boolean8 = hours1.isSupported(durationFieldType7);
        org.joda.time.Hours hours9 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours1);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(hours9);
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours0.minus((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod8 = hours0.toMutablePeriod();
        org.joda.time.Hours hours9 = hours0.negated();
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        int int15 = hours10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours13);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        boolean boolean17 = hours10.isSupported(durationFieldType16);
        org.joda.time.Hours hours19 = hours10.multipliedBy((int) (short) 10);
        org.joda.time.Period period20 = hours10.toPeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod23 = hours22.toMutablePeriod();
        org.joda.time.Hours hours24 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours25 = hours22.minus(hours24);
        int int26 = hours21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours24);
        org.joda.time.Hours hours27 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours21);
        org.joda.time.Hours hours29 = hours27.multipliedBy((int) (byte) 10);
        boolean boolean30 = hours10.isLessThan(hours29);
        org.joda.time.Hours hours31 = hours0.minus(hours29);
        org.joda.time.DurationFieldType durationFieldType32 = hours29.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(durationFieldType32);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours4 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = hours4.get(durationFieldType5);
        org.joda.time.Hours hours8 = hours4.dividedBy(100);
        int int9 = hours4.size();
        org.joda.time.Period period10 = hours4.toPeriod();
        int int11 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours4);
        org.joda.time.PeriodType periodType12 = hours0.getPeriodType();
        org.joda.time.Hours hours14 = org.joda.time.Hours.hours(0);
        org.joda.time.Hours hours16 = hours14.multipliedBy((int) (short) 0);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        int int20 = hours18.getValue((int) (short) 0);
        org.joda.time.Hours hours21 = hours17.minus(hours18);
        boolean boolean23 = hours18.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours24 = null;
        org.joda.time.Hours hours25 = hours18.minus(hours24);
        org.joda.time.Hours hours26 = hours25.negated();
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        org.joda.time.Duration duration31 = hours27.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod32 = hours27.toMutablePeriod();
        org.joda.time.Hours hours33 = org.joda.time.Hours.EIGHT;
        int int35 = hours33.getValue((int) (short) 0);
        java.lang.String str36 = hours33.toString();
        boolean boolean37 = hours27.isGreaterThan(hours33);
        org.joda.time.Hours hours39 = hours33.minus(10);
        org.joda.time.Hours hours40 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours41 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod42 = hours41.toMutablePeriod();
        org.joda.time.Hours hours43 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours44 = hours41.minus(hours43);
        int int45 = hours40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours43);
        org.joda.time.Hours hours46 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours40);
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = hours40.get(durationFieldType47);
        boolean boolean49 = hours39.equals((java.lang.Object) hours40);
        java.lang.String str50 = hours39.toString();
        org.joda.time.DurationFieldType durationFieldType52 = hours39.getFieldType(0);
        boolean boolean53 = hours25.isGreaterThan(hours39);
        int int54 = hours25.getHours();
        org.joda.time.DurationFieldType durationFieldType55 = hours25.getFieldType();
        boolean boolean56 = hours16.isSupported(durationFieldType55);
        int int57 = hours0.get(durationFieldType55);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 8 + "'", int20 == 8);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 8 + "'", int35 == 8);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "PT8H" + "'", str36, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "PT-2H" + "'", str50, "PT-2H");
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 8 + "'", int54 == 8);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 7 + "'", int57 == 7);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours2 = hours0.plus(1);
        org.joda.time.Hours hours4 = hours2.minus((int) (byte) 10);
        org.joda.time.Hours hours5 = hours2.negated();
        org.joda.time.Hours hours7 = org.joda.time.Hours.parseHours("PT7H");
        org.joda.time.PeriodType periodType8 = hours7.getPeriodType();
        int int9 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours7);
        int int11 = hours7.getValue((int) (byte) 0);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 7 + "'", int11 == 7);
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        org.joda.time.Hours hours8 = hours1.multipliedBy((int) (byte) 10);
        org.joda.time.Hours hours10 = hours8.multipliedBy(700);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.Hours hours3 = hours0.plus(10);
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod5 = hours4.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours7 = hours4.minus(hours6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = hours4.get(durationFieldType8);
        org.joda.time.Hours hours11 = hours4.multipliedBy(1);
        boolean boolean12 = hours0.isGreaterThan(hours4);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        int int17 = hours15.getValue((int) (short) 0);
        org.joda.time.Hours hours18 = hours14.minus(hours15);
        org.joda.time.Hours hours19 = hours13.minus(hours14);
        int int20 = hours13.size();
        org.joda.time.Hours hours21 = hours4.plus(hours13);
        org.joda.time.Hours hours23 = org.joda.time.Hours.hours(0);
        int int24 = hours23.size();
        org.joda.time.Hours hours26 = org.joda.time.Hours.hours((-1));
        int int27 = hours23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours26);
        org.joda.time.Hours hours28 = hours4.minus(hours23);
        org.joda.time.Hours hours29 = hours4.negated();
        org.joda.time.Hours hours31 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Period period32 = hours31.toPeriod();
        org.joda.time.Hours hours34 = hours31.minus((int) (byte) -1);
        org.joda.time.Hours hours35 = hours31.negated();
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours37 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod38 = hours37.toMutablePeriod();
        org.joda.time.Hours hours39 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours40 = hours37.minus(hours39);
        int int41 = hours36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours39);
        org.joda.time.DurationFieldType durationFieldType42 = null;
        boolean boolean43 = hours36.isSupported(durationFieldType42);
        org.joda.time.Hours hours45 = hours36.minus((int) (short) -1);
        org.joda.time.PeriodType periodType46 = hours36.getPeriodType();
        org.joda.time.Hours hours47 = org.joda.time.Hours.EIGHT;
        int int49 = hours47.getValue((int) (short) 0);
        org.joda.time.Hours hours50 = hours36.minus(hours47);
        org.joda.time.Hours hours52 = hours36.plus(7);
        org.joda.time.Hours hours53 = hours36.negated();
        boolean boolean54 = hours35.isLessThan(hours53);
        boolean boolean55 = hours29.isGreaterThan(hours35);
        java.lang.Class<?> wildcardClass56 = hours35.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 8 + "'", int49 == 8);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        int int5 = hours4.getHours();
        org.joda.time.Hours hours6 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours7 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = hours7.get(durationFieldType8);
        boolean boolean10 = hours6.equals((java.lang.Object) durationFieldType8);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        int int16 = hours11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours14);
        org.joda.time.Hours hours18 = hours14.multipliedBy(0);
        org.joda.time.Hours hours19 = hours6.plus(hours18);
        org.joda.time.DurationFieldType durationFieldType20 = hours19.getFieldType();
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod23 = hours22.toMutablePeriod();
        org.joda.time.Hours hours24 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours25 = hours22.minus(hours24);
        int int26 = hours21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours24);
        org.joda.time.Hours hours27 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours21);
        org.joda.time.DurationFieldType durationFieldType28 = hours21.getFieldType();
        int int29 = hours19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours30 = hours4.minus(hours19);
        org.joda.time.PeriodType periodType31 = hours19.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(periodType31);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.PeriodType periodType10 = hours0.getPeriodType();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        int int13 = hours11.getValue((int) (short) 0);
        org.joda.time.Hours hours14 = hours0.minus(hours11);
        int int15 = hours0.size();
        org.joda.time.Hours hours17 = hours0.dividedBy(5);
        org.joda.time.Hours hours19 = hours17.multipliedBy(32);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8 + "'", int13 == 8);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours19);
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours2 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours3.get(durationFieldType7);
        org.joda.time.Hours hours10 = hours3.minus((int) (short) 0);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours13.isSupported(durationFieldType15);
        org.joda.time.Hours hours17 = hours10.minus(hours13);
        org.joda.time.Hours hours18 = hours2.plus(hours17);
        int int19 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.MutablePeriod mutablePeriod20 = hours17.toMutablePeriod();
        org.joda.time.Duration duration21 = hours17.toStandardDuration();
        org.joda.time.Hours hours23 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = hours24.get(durationFieldType28);
        org.joda.time.Hours hours31 = hours24.minus((int) (short) 0);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod33 = hours32.toMutablePeriod();
        org.joda.time.Hours hours34 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours35 = hours32.minus(hours34);
        org.joda.time.DurationFieldType durationFieldType36 = null;
        boolean boolean37 = hours34.isSupported(durationFieldType36);
        org.joda.time.Hours hours38 = hours31.minus(hours34);
        org.joda.time.Hours hours39 = hours23.plus(hours38);
        org.joda.time.Hours hours40 = hours17.plus(hours23);
        org.joda.time.Hours hours42 = org.joda.time.Hours.hours(1);
        org.joda.time.DurationFieldType durationFieldType43 = hours42.getFieldType();
        int int44 = hours17.get(durationFieldType43);
        org.joda.time.Hours hours45 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod46 = hours45.toMutablePeriod();
        org.joda.time.Hours hours47 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours48 = hours45.minus(hours47);
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = hours45.get(durationFieldType49);
        int int51 = hours45.getHours();
        boolean boolean52 = hours17.isLessThan(hours45);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 7 + "'", int51 == 7);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = hours8.getFieldType();
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        org.joda.time.Duration duration17 = hours13.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod18 = hours13.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        int int21 = hours19.getValue((int) (short) 0);
        java.lang.String str22 = hours19.toString();
        boolean boolean23 = hours13.isGreaterThan(hours19);
        org.joda.time.Hours hours25 = hours19.minus(10);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.Hours hours32 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours26);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = hours26.get(durationFieldType33);
        boolean boolean35 = hours25.equals((java.lang.Object) hours26);
        org.joda.time.Hours hours37 = hours26.minus(100);
        org.joda.time.Hours hours38 = hours7.minus(hours26);
        org.joda.time.Hours hours40 = hours7.dividedBy((int) '4');
        org.joda.time.Hours hours41 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours43 = org.joda.time.Hours.EIGHT;
        int int45 = hours43.getValue((int) (short) 0);
        org.joda.time.Hours hours46 = hours42.minus(hours43);
        org.joda.time.Hours hours47 = hours41.minus(hours42);
        org.joda.time.Hours hours48 = hours40.plus(hours47);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7 + "'", int12 == 7);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 8 + "'", int21 == 8);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT8H" + "'", str22, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 8 + "'", int45 == 8);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours3.multipliedBy(0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period9 = hours8.toPeriod();
        org.joda.time.Hours hours11 = hours8.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.THREE;
        org.joda.time.Period period14 = hours13.toPeriod();
        org.joda.time.Hours hours16 = hours13.plus((int) (byte) -1);
        org.joda.time.Hours hours17 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType18 = hours17.getFieldType();
        org.joda.time.Hours hours19 = hours7.plus(hours17);
        org.joda.time.PeriodType periodType20 = hours17.getPeriodType();
        int int21 = hours17.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 4 + "'", int21 == 4);
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod5 = hours4.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours7 = hours4.minus(hours6);
        int int8 = hours3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours6);
        org.joda.time.MutablePeriod mutablePeriod9 = hours3.toMutablePeriod();
        org.joda.time.Hours hours11 = hours3.multipliedBy((int) (byte) 100);
        java.lang.Object obj12 = new java.lang.Object();
        boolean boolean13 = hours3.equals(obj12);
        org.joda.time.Hours hours14 = hours2.minus(hours3);
        org.joda.time.Hours hours15 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = hours15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = hours15.getFieldType();
        boolean boolean19 = hours14.isSupported(durationFieldType18);
        org.joda.time.Duration duration20 = hours14.toStandardDuration();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(duration20);
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        org.joda.time.Hours hours10 = hours7.plus(8);
        org.joda.time.Hours hours11 = hours1.minus(hours7);
        org.joda.time.Hours hours12 = hours11.negated();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.multipliedBy(1);
        int int8 = hours7.getHours();
        org.joda.time.Hours hours9 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = hours9.get(durationFieldType10);
        org.joda.time.DurationFieldType durationFieldType12 = hours9.getFieldType();
        org.joda.time.DurationFieldType durationFieldType13 = hours9.getFieldType();
        org.joda.time.DurationFieldType durationFieldType14 = hours9.getFieldType();
        int int15 = hours7.get(durationFieldType14);
        org.joda.time.Hours hours17 = hours7.plus(5);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType19 = hours7.getFieldType(1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 7 + "'", int8 == 7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 7 + "'", int15 == 7);
        org.junit.Assert.assertNotNull(hours17);
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.Hours hours3 = hours0.plus(10);
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod5 = hours4.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours7 = hours4.minus(hours6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = hours4.get(durationFieldType8);
        org.joda.time.Hours hours11 = hours4.multipliedBy(1);
        boolean boolean12 = hours0.isGreaterThan(hours4);
        org.joda.time.Hours hours13 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = hours14.get(durationFieldType18);
        org.joda.time.Hours hours21 = hours14.minus((int) (short) 0);
        org.joda.time.Hours hours22 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = hours22.get(durationFieldType23);
        org.joda.time.DurationFieldType durationFieldType25 = hours22.getFieldType();
        int int26 = hours21.get(durationFieldType25);
        org.joda.time.Hours hours27 = hours21.negated();
        org.joda.time.Hours hours28 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours29 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours30 = org.joda.time.Hours.EIGHT;
        int int32 = hours30.getValue((int) (short) 0);
        org.joda.time.Hours hours33 = hours29.minus(hours30);
        org.joda.time.Hours hours34 = hours28.minus(hours29);
        org.joda.time.Hours hours35 = hours27.plus(hours29);
        org.joda.time.DurationFieldType durationFieldType36 = hours27.getFieldType();
        int int37 = hours0.get(durationFieldType36);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 7 + "'", int26 == 7);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 8 + "'", int32 == 8);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.DurationFieldType durationFieldType3 = hours0.getFieldType();
        org.joda.time.DurationFieldType durationFieldType4 = hours0.getFieldType();
        org.joda.time.Period period5 = hours0.toPeriod();
        org.joda.time.Duration duration6 = hours0.toStandardDuration();
        org.joda.time.Duration duration7 = hours0.toStandardDuration();
        org.joda.time.Hours hours9 = hours0.minus((int) '#');
        java.lang.Class<?> wildcardClass10 = hours0.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        org.joda.time.Hours hours10 = hours7.plus(8);
        org.joda.time.Hours hours11 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = hours11.get(durationFieldType12);
        org.joda.time.DurationFieldType durationFieldType14 = hours11.getFieldType();
        boolean boolean15 = hours10.isSupported(durationFieldType14);
        boolean boolean16 = hours0.isSupported(durationFieldType14);
        org.joda.time.MutablePeriod mutablePeriod17 = hours0.toMutablePeriod();
        org.joda.time.PeriodType periodType18 = hours0.getPeriodType();
        org.joda.time.Hours hours20 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod22 = hours21.toMutablePeriod();
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours24 = hours21.minus(hours23);
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = hours21.get(durationFieldType25);
        org.joda.time.Hours hours28 = hours21.minus((int) (short) 0);
        org.joda.time.Hours hours29 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod30 = hours29.toMutablePeriod();
        org.joda.time.Hours hours31 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours32 = hours29.minus(hours31);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        boolean boolean34 = hours31.isSupported(durationFieldType33);
        org.joda.time.Hours hours35 = hours28.minus(hours31);
        org.joda.time.Hours hours36 = hours20.plus(hours35);
        org.joda.time.Hours hours37 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod38 = hours37.toMutablePeriod();
        org.joda.time.Hours hours39 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours40 = hours37.minus(hours39);
        boolean boolean41 = hours35.isGreaterThan(hours39);
        org.joda.time.Hours hours42 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours43 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours44 = org.joda.time.Hours.EIGHT;
        int int46 = hours44.getValue((int) (short) 0);
        org.joda.time.Hours hours47 = hours43.minus(hours44);
        org.joda.time.Hours hours48 = hours42.minus(hours43);
        org.joda.time.Hours hours50 = hours43.dividedBy(1);
        org.joda.time.Duration duration51 = hours43.toStandardDuration();
        boolean boolean52 = hours39.isGreaterThan(hours43);
        org.joda.time.Hours hours53 = hours0.minus(hours39);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 8 + "'", int46 == 8);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(hours53);
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        org.joda.time.Hours hours0 = org.joda.time.Hours.FOUR;
        org.joda.time.Duration duration1 = hours0.toStandardDuration();
        org.joda.time.Hours hours3 = hours0.plus(0);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(hours3);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours9 = hours3.minus(hours5);
        org.joda.time.Hours hours11 = hours5.plus(10);
        org.joda.time.Hours hours12 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours13 = hours12.negated();
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        int int17 = hours15.getValue((int) (short) 0);
        org.joda.time.Hours hours18 = hours14.minus(hours15);
        org.joda.time.Hours hours19 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours19.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = hours19.getFieldType();
        int int23 = hours14.get(durationFieldType22);
        boolean boolean24 = hours12.isSupported(durationFieldType22);
        int int25 = hours5.get(durationFieldType22);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        boolean boolean33 = hours26.isSupported(durationFieldType32);
        org.joda.time.Hours hours35 = hours26.minus((int) (short) -1);
        org.joda.time.PeriodType periodType36 = hours26.getPeriodType();
        int int37 = hours26.getHours();
        int int38 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours26);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 7 + "'", int23 == 7);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 3 + "'", int25 == 3);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 7 + "'", int37 == 7);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        int int9 = hours7.getValue((int) (short) 0);
        org.joda.time.Hours hours10 = hours6.minus(hours7);
        org.joda.time.Hours hours11 = hours5.minus(hours6);
        int int12 = hours5.size();
        org.joda.time.Duration duration13 = hours5.toStandardDuration();
        boolean boolean14 = hours1.isGreaterThan(hours5);
        org.joda.time.Hours hours15 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        int int19 = hours17.getValue((int) (short) 0);
        org.joda.time.Hours hours20 = hours16.minus(hours17);
        org.joda.time.Hours hours21 = hours15.minus(hours16);
        boolean boolean22 = hours1.equals((java.lang.Object) hours16);
        org.joda.time.Hours hours24 = hours1.dividedBy(8);
        org.joda.time.Hours hours25 = hours1.negated();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8 + "'", int19 == 8);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        java.lang.String str5 = hours4.toString();
        int int7 = hours4.getValue(0);
        org.joda.time.Hours hours9 = hours4.minus((int) (short) -1);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT-1H" + "'", str5, "PT-1H");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(hours9);
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(100);
        org.joda.time.Period period2 = hours1.toPeriod();
        org.joda.time.Hours hours4 = hours1.minus(8);
        org.joda.time.Hours hours6 = hours4.minus((-1));
        org.joda.time.DurationFieldType durationFieldType7 = hours4.getFieldType();
        java.lang.String str8 = hours4.toString();
        org.joda.time.Hours hours9 = null;
        boolean boolean10 = hours4.isLessThan(hours9);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "PT92H" + "'", str8, "PT92H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Hours hours1 = org.joda.time.Hours.hoursIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = hours1.getFieldType();
        org.joda.time.Hours hours4 = hours1.dividedBy((int) (byte) 10);
        org.joda.time.Hours hours6 = hours1.plus((int) (byte) 1);
        org.joda.time.Hours hours8 = hours1.dividedBy(100);
        org.joda.time.Hours hours9 = hours8.negated();
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        int int15 = hours10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours13);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        boolean boolean17 = hours10.isSupported(durationFieldType16);
        org.joda.time.Hours hours19 = hours10.multipliedBy((int) (short) 10);
        org.joda.time.Period period20 = hours10.toPeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod23 = hours22.toMutablePeriod();
        org.joda.time.Hours hours24 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours25 = hours22.minus(hours24);
        int int26 = hours21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours24);
        org.joda.time.Hours hours27 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours21);
        org.joda.time.Hours hours29 = hours27.multipliedBy((int) (byte) 10);
        boolean boolean30 = hours10.isLessThan(hours29);
        org.joda.time.Hours hours31 = org.joda.time.Hours.ONE;
        int int32 = hours31.getHours();
        org.joda.time.Hours hours34 = hours31.plus(10);
        org.joda.time.Hours hours35 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours36 = hours35.negated();
        org.joda.time.DurationFieldType durationFieldType37 = hours35.getFieldType();
        boolean boolean38 = hours31.equals((java.lang.Object) hours35);
        org.joda.time.Hours hours40 = hours31.minus((int) '4');
        org.joda.time.Hours hours41 = hours10.minus(hours40);
        org.joda.time.Hours hours43 = hours10.plus(5);
        org.joda.time.Hours hours45 = org.joda.time.Hours.hours(0);
        int int46 = hours45.size();
        org.joda.time.Hours hours47 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours48 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod49 = hours48.toMutablePeriod();
        org.joda.time.Hours hours50 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours51 = hours48.minus(hours50);
        int int52 = hours47.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours50);
        org.joda.time.DurationFieldType durationFieldType53 = null;
        boolean boolean54 = hours47.isSupported(durationFieldType53);
        org.joda.time.Hours hours56 = hours47.minus((int) (short) -1);
        org.joda.time.PeriodType periodType57 = hours47.getPeriodType();
        int int58 = hours47.getHours();
        org.joda.time.DurationFieldType durationFieldType60 = hours47.getFieldType((int) (short) 0);
        int int61 = hours45.get(durationFieldType60);
        org.joda.time.Hours hours62 = hours43.minus(hours45);
        boolean boolean63 = hours9.isGreaterThan(hours45);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(mutablePeriod49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 7 + "'", int58 == 7);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        boolean boolean13 = hours10.isSupported(durationFieldType12);
        org.joda.time.Hours hours14 = hours7.minus(hours10);
        java.lang.String str15 = hours14.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PT-1H" + "'", str15, "PT-1H");
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        int int7 = hours2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours5);
        org.joda.time.MutablePeriod mutablePeriod8 = hours2.toMutablePeriod();
        org.joda.time.Hours hours9 = hours1.minus(hours2);
        org.joda.time.Hours hours10 = hours9.negated();
        org.joda.time.DurationFieldType durationFieldType11 = hours9.getFieldType();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(durationFieldType11);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        int int7 = hours2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours5);
        org.joda.time.MutablePeriod mutablePeriod8 = hours2.toMutablePeriod();
        org.joda.time.Hours hours9 = hours1.minus(hours2);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.Duration duration14 = hours10.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod15 = hours10.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        int int18 = hours16.getValue((int) (short) 0);
        java.lang.String str19 = hours16.toString();
        boolean boolean20 = hours10.isGreaterThan(hours16);
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod23 = hours22.toMutablePeriod();
        org.joda.time.Hours hours24 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours25 = hours22.minus(hours24);
        int int26 = hours21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours24);
        org.joda.time.Hours hours28 = hours24.multipliedBy(0);
        int int29 = hours16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours28);
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod32 = hours31.toMutablePeriod();
        org.joda.time.Hours hours33 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours34 = hours31.minus(hours33);
        int int35 = hours30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours33);
        org.joda.time.Hours hours36 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours30);
        org.joda.time.DurationFieldType durationFieldType37 = null;
        int int38 = hours30.get(durationFieldType37);
        org.joda.time.DurationFieldType durationFieldType39 = null;
        int int40 = hours30.get(durationFieldType39);
        org.joda.time.Hours hours42 = hours30.minus(0);
        boolean boolean43 = hours16.equals((java.lang.Object) 0);
        int int44 = hours2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours16);
        org.joda.time.Hours hours45 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours46 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod47 = hours46.toMutablePeriod();
        org.joda.time.Hours hours48 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours49 = hours46.minus(hours48);
        int int50 = hours45.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours48);
        org.joda.time.DurationFieldType durationFieldType51 = null;
        boolean boolean52 = hours45.isSupported(durationFieldType51);
        org.joda.time.Hours hours54 = hours45.minus((int) (short) -1);
        org.joda.time.PeriodType periodType55 = hours45.getPeriodType();
        org.joda.time.Hours hours56 = org.joda.time.Hours.EIGHT;
        int int58 = hours56.getValue((int) (short) 0);
        org.joda.time.Hours hours59 = hours45.minus(hours56);
        org.joda.time.Hours hours61 = hours59.minus((-1));
        boolean boolean62 = hours16.isLessThan(hours59);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT8H" + "'", str19, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(mutablePeriod47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 8 + "'", int58 == 8);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = hours1.multipliedBy((int) (byte) 100);
        org.joda.time.Hours hours4 = hours1.negated();
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.Hours hours11 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours5);
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        org.joda.time.Hours hours17 = hours14.plus(8);
        org.joda.time.Hours hours18 = hours5.minus(hours17);
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        int int22 = hours20.getValue((int) (short) 0);
        org.joda.time.Hours hours23 = hours19.minus(hours20);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        org.joda.time.Hours hours29 = hours26.plus(8);
        org.joda.time.Hours hours30 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = hours30.get(durationFieldType31);
        org.joda.time.DurationFieldType durationFieldType33 = hours30.getFieldType();
        boolean boolean34 = hours29.isSupported(durationFieldType33);
        boolean boolean35 = hours19.isSupported(durationFieldType33);
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period37 = hours36.toPeriod();
        org.joda.time.Hours hours39 = hours36.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod40 = hours39.toMutablePeriod();
        org.joda.time.Hours hours41 = org.joda.time.Hours.THREE;
        org.joda.time.Period period42 = hours41.toPeriod();
        org.joda.time.Hours hours44 = hours41.plus((int) (byte) -1);
        org.joda.time.Hours hours45 = hours39.minus(hours41);
        org.joda.time.Hours hours46 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod47 = hours46.toMutablePeriod();
        org.joda.time.Hours hours48 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours49 = hours46.minus(hours48);
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = hours46.get(durationFieldType50);
        org.joda.time.Hours hours53 = hours46.minus((int) (short) 0);
        org.joda.time.Hours hours54 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType55 = null;
        int int56 = hours54.get(durationFieldType55);
        org.joda.time.DurationFieldType durationFieldType57 = hours54.getFieldType();
        int int58 = hours53.get(durationFieldType57);
        int int59 = hours41.get(durationFieldType57);
        boolean boolean60 = hours19.equals((java.lang.Object) hours41);
        boolean boolean61 = hours17.equals((java.lang.Object) hours41);
        org.joda.time.Duration duration62 = hours17.toStandardDuration();
        org.joda.time.Hours hours63 = hours1.minus(hours17);
        org.joda.time.PeriodType periodType64 = hours63.getPeriodType();
        org.joda.time.Hours hours65 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours66 = org.joda.time.Hours.EIGHT;
        int int68 = hours66.getValue((int) (short) 0);
        org.joda.time.Hours hours69 = hours65.minus(hours66);
        org.joda.time.Period period70 = hours69.toPeriod();
        boolean boolean71 = hours63.equals((java.lang.Object) hours69);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 8 + "'", int22 == 8);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(mutablePeriod47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 7 + "'", int58 == 7);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 3 + "'", int59 == 3);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 8 + "'", int68 == 8);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours2 = hours0.plus(0);
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        org.joda.time.Duration duration7 = hours3.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod8 = hours3.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        int int11 = hours9.getValue((int) (short) 0);
        java.lang.String str12 = hours9.toString();
        boolean boolean13 = hours3.isGreaterThan(hours9);
        org.joda.time.Hours hours15 = hours9.minus(10);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        int int21 = hours16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours19);
        org.joda.time.Hours hours22 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours16);
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = hours16.get(durationFieldType23);
        boolean boolean25 = hours15.equals((java.lang.Object) hours16);
        java.lang.String str26 = hours15.toString();
        org.joda.time.DurationFieldType durationFieldType28 = hours15.getFieldType(0);
        boolean boolean29 = hours0.isGreaterThan(hours15);
        java.lang.String str30 = hours0.toString();
        int int31 = hours0.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8 + "'", int11 == 8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PT8H" + "'", str12, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "PT-2H" + "'", str26, "PT-2H");
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "PT2H" + "'", str30, "PT2H");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        int int7 = hours2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours5);
        org.joda.time.MutablePeriod mutablePeriod8 = hours2.toMutablePeriod();
        org.joda.time.Hours hours9 = hours1.minus(hours2);
        org.joda.time.Hours hours11 = hours2.multipliedBy((int) (short) 0);
        org.joda.time.PeriodType periodType12 = hours11.getPeriodType();
        org.joda.time.Hours hours13 = hours11.negated();
        org.joda.time.Period period14 = hours13.toPeriod();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(period14);
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        boolean boolean6 = hours1.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours7 = null;
        org.joda.time.Hours hours8 = hours1.minus(hours7);
        org.joda.time.Hours hours9 = hours8.negated();
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.Duration duration14 = hours10.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod15 = hours10.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        int int18 = hours16.getValue((int) (short) 0);
        java.lang.String str19 = hours16.toString();
        boolean boolean20 = hours10.isGreaterThan(hours16);
        org.joda.time.Hours hours22 = hours16.minus(10);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        int int28 = hours23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours26);
        org.joda.time.Hours hours29 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = hours23.get(durationFieldType30);
        boolean boolean32 = hours22.equals((java.lang.Object) hours23);
        java.lang.String str33 = hours22.toString();
        org.joda.time.DurationFieldType durationFieldType35 = hours22.getFieldType(0);
        boolean boolean36 = hours8.isGreaterThan(hours22);
        org.joda.time.Hours hours37 = org.joda.time.Hours.MAX_VALUE;
        int int38 = hours8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours37);
        org.joda.time.Hours hours39 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours40 = org.joda.time.Hours.EIGHT;
        int int42 = hours40.getValue((int) (short) 0);
        org.joda.time.Hours hours43 = hours39.minus(hours40);
        org.joda.time.Hours hours44 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod45 = hours44.toMutablePeriod();
        org.joda.time.Hours hours46 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours47 = hours44.minus(hours46);
        org.joda.time.Hours hours49 = hours46.plus(8);
        org.joda.time.Hours hours50 = hours40.minus(hours46);
        int int51 = hours8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours46);
        org.joda.time.PeriodType periodType52 = hours46.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT8H" + "'", str19, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "PT-2H" + "'", str33, "PT-2H");
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 8 + "'", int42 == 8);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(mutablePeriod45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(periodType52);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod8 = hours7.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours7.minus(hours9);
        org.joda.time.Hours hours12 = hours9.plus(8);
        org.joda.time.Hours hours13 = hours0.minus(hours12);
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        int int17 = hours15.getValue((int) (short) 0);
        org.joda.time.Hours hours18 = hours14.minus(hours15);
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        org.joda.time.Hours hours24 = hours21.plus(8);
        org.joda.time.Hours hours25 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = hours25.get(durationFieldType26);
        org.joda.time.DurationFieldType durationFieldType28 = hours25.getFieldType();
        boolean boolean29 = hours24.isSupported(durationFieldType28);
        boolean boolean30 = hours14.isSupported(durationFieldType28);
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period32 = hours31.toPeriod();
        org.joda.time.Hours hours34 = hours31.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod35 = hours34.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.THREE;
        org.joda.time.Period period37 = hours36.toPeriod();
        org.joda.time.Hours hours39 = hours36.plus((int) (byte) -1);
        org.joda.time.Hours hours40 = hours34.minus(hours36);
        org.joda.time.Hours hours41 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod42 = hours41.toMutablePeriod();
        org.joda.time.Hours hours43 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours44 = hours41.minus(hours43);
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = hours41.get(durationFieldType45);
        org.joda.time.Hours hours48 = hours41.minus((int) (short) 0);
        org.joda.time.Hours hours49 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = hours49.get(durationFieldType50);
        org.joda.time.DurationFieldType durationFieldType52 = hours49.getFieldType();
        int int53 = hours48.get(durationFieldType52);
        int int54 = hours36.get(durationFieldType52);
        boolean boolean55 = hours14.equals((java.lang.Object) hours36);
        boolean boolean56 = hours12.equals((java.lang.Object) hours36);
        org.joda.time.Hours hours58 = hours36.plus(16);
        org.joda.time.Hours hours60 = org.joda.time.Hours.parseHours("PT8H");
        org.joda.time.Duration duration61 = hours60.toStandardDuration();
        org.joda.time.Hours hours62 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours63 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod64 = hours63.toMutablePeriod();
        org.joda.time.Hours hours65 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours66 = hours63.minus(hours65);
        int int67 = hours62.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours65);
        org.joda.time.DurationFieldType durationFieldType68 = null;
        boolean boolean69 = hours62.isSupported(durationFieldType68);
        org.joda.time.Hours hours70 = hours60.minus(hours62);
        org.joda.time.Hours hours71 = hours58.minus(hours60);
        org.joda.time.Hours hours72 = null;
        org.joda.time.Hours hours73 = hours71.minus(hours72);
        org.joda.time.Hours hours75 = org.joda.time.Hours.parseHours("PT8H");
        org.joda.time.Hours hours77 = hours75.dividedBy(3);
        int int78 = hours71.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours75);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 7 + "'", int53 == 7);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 3 + "'", int54 == 3);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(mutablePeriod64);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertNotNull(hours75);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = hours6.negated();
        org.joda.time.Hours hours15 = hours13.plus((int) (byte) 0);
        org.joda.time.Hours hours17 = hours15.minus(0);
        org.joda.time.DurationFieldType durationFieldType18 = hours17.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(durationFieldType18);
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT8H");
        org.joda.time.Hours hours3 = hours1.dividedBy(3);
        org.joda.time.Hours hours5 = hours3.dividedBy((-6));
        org.joda.time.Hours hours7 = hours5.multipliedBy((int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType9 = hours5.getFieldType((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours7);
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours20);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours28 = hours25.minus(hours27);
        int int29 = hours24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours27);
        org.joda.time.MutablePeriod mutablePeriod30 = hours24.toMutablePeriod();
        org.joda.time.Hours hours32 = hours24.minus(7);
        boolean boolean33 = hours20.isLessThan(hours32);
        org.joda.time.MutablePeriod mutablePeriod34 = hours32.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod37 = hours36.toMutablePeriod();
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours39 = hours36.minus(hours38);
        int int40 = hours35.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours38);
        org.joda.time.Hours hours41 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours35);
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod43 = hours42.toMutablePeriod();
        org.joda.time.Hours hours44 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours45 = hours42.minus(hours44);
        org.joda.time.Hours hours47 = hours44.plus(8);
        org.joda.time.Hours hours48 = hours35.minus(hours47);
        org.joda.time.Hours hours49 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours50 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod51 = hours50.toMutablePeriod();
        org.joda.time.Hours hours52 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours53 = hours50.minus(hours52);
        int int54 = hours49.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours52);
        org.joda.time.DurationFieldType durationFieldType55 = null;
        boolean boolean56 = hours49.isSupported(durationFieldType55);
        org.joda.time.Hours hours58 = hours49.minus((int) (short) -1);
        org.joda.time.Hours hours59 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod60 = hours59.toMutablePeriod();
        org.joda.time.Hours hours61 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours62 = hours59.minus(hours61);
        org.joda.time.Hours hours64 = hours61.plus(8);
        org.joda.time.Hours hours65 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType66 = null;
        int int67 = hours65.get(durationFieldType66);
        org.joda.time.DurationFieldType durationFieldType68 = hours65.getFieldType();
        boolean boolean69 = hours64.isSupported(durationFieldType68);
        int int70 = hours58.get(durationFieldType68);
        int int71 = hours47.get(durationFieldType68);
        boolean boolean72 = hours32.isSupported(durationFieldType68);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(durationFieldType68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 8 + "'", int70 == 8);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 16 + "'", int71 == 16);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = hours6.negated();
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = hours14.get(durationFieldType18);
        org.joda.time.Hours hours21 = hours14.multipliedBy(1);
        org.joda.time.Hours hours22 = org.joda.time.Hours.ONE;
        int int23 = hours21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours22);
        int int24 = hours6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        java.lang.String str25 = hours21.toString();
        org.joda.time.Period period26 = hours21.toPeriod();
        org.joda.time.Period period27 = hours21.toPeriod();
        org.joda.time.Hours hours28 = hours21.negated();
        // The following exception was thrown during execution in test generation
        try {
            int int30 = hours21.getValue(364);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 364");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "PT7H" + "'", str25, "PT7H");
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(hours28);
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.Hours hours15 = hours12.plus(8);
        org.joda.time.Hours hours16 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = hours16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = hours16.getFieldType();
        boolean boolean20 = hours15.isSupported(durationFieldType19);
        int int21 = hours9.get(durationFieldType19);
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        int int27 = hours22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours25);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        boolean boolean29 = hours22.isSupported(durationFieldType28);
        org.joda.time.Hours hours31 = hours22.multipliedBy((int) (short) 10);
        org.joda.time.Hours hours32 = hours9.plus(hours22);
        org.joda.time.Hours hours34 = hours9.plus(0);
        org.joda.time.Hours hours35 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod37 = hours36.toMutablePeriod();
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours39 = hours36.minus(hours38);
        int int40 = hours35.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours38);
        org.joda.time.DurationFieldType durationFieldType41 = null;
        boolean boolean42 = hours35.isSupported(durationFieldType41);
        org.joda.time.Hours hours44 = hours35.minus((int) (short) -1);
        org.joda.time.PeriodType periodType45 = hours35.getPeriodType();
        int int46 = hours35.getHours();
        org.joda.time.DurationFieldType durationFieldType48 = hours35.getFieldType((int) (short) 0);
        int int49 = hours35.size();
        int int50 = hours35.size();
        org.joda.time.Period period51 = hours35.toPeriod();
        org.joda.time.Hours hours52 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod53 = hours52.toMutablePeriod();
        org.joda.time.Hours hours54 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours55 = hours52.minus(hours54);
        boolean boolean56 = hours35.isGreaterThan(hours54);
        boolean boolean57 = hours9.isGreaterThan(hours35);
        org.joda.time.Hours hours59 = hours35.plus(3);
        int int60 = hours35.size();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 8 + "'", int21 == 8);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 7 + "'", int46 == 7);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(mutablePeriod53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Hours hours1 = org.joda.time.Hours.hoursIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = hours1.getFieldType();
        org.joda.time.Hours hours4 = hours1.dividedBy((int) (byte) 10);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.DurationFieldType durationFieldType11 = null;
        boolean boolean12 = hours5.isSupported(durationFieldType11);
        org.joda.time.PeriodType periodType13 = hours5.getPeriodType();
        org.joda.time.Hours hours14 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        int int18 = hours16.getValue((int) (short) 0);
        org.joda.time.Hours hours19 = hours15.minus(hours16);
        org.joda.time.Hours hours20 = hours14.minus(hours15);
        int int21 = hours14.size();
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        int int25 = hours23.getValue((int) (short) 0);
        org.joda.time.Hours hours26 = hours22.minus(hours23);
        boolean boolean28 = hours23.equals((java.lang.Object) (short) 10);
        int int29 = hours14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours23);
        org.joda.time.Hours hours30 = hours5.plus(hours14);
        int int31 = hours14.getHours();
        boolean boolean32 = hours4.equals((java.lang.Object) hours14);
        // The following exception was thrown during execution in test generation
        try {
            int int34 = hours4.getValue(92);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 92");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 8 + "'", int25 == 8);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 6 + "'", int31 == 6);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = hours6.negated();
        org.joda.time.Duration duration14 = hours6.toStandardDuration();
        org.joda.time.Hours hours15 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours6);
        org.joda.time.Hours hours17 = hours15.multipliedBy(12);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT-1H");
        org.joda.time.Hours hours3 = hours1.dividedBy(16);
        org.joda.time.Hours hours4 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours1);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) (byte) 10);
        org.joda.time.Minutes minutes2 = hours1.toStandardMinutes();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(minutes2);
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        int int9 = hours7.getValue((int) (short) 0);
        org.joda.time.Hours hours10 = hours6.minus(hours7);
        org.joda.time.Hours hours11 = hours5.minus(hours6);
        int int12 = hours5.size();
        org.joda.time.Duration duration13 = hours5.toStandardDuration();
        boolean boolean14 = hours1.isGreaterThan(hours5);
        org.joda.time.Hours hours15 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        int int19 = hours17.getValue((int) (short) 0);
        org.joda.time.Hours hours20 = hours16.minus(hours17);
        org.joda.time.Hours hours21 = hours15.minus(hours16);
        boolean boolean22 = hours1.equals((java.lang.Object) hours16);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = hours23.get(durationFieldType27);
        org.joda.time.Hours hours30 = hours23.minus((int) (short) 0);
        org.joda.time.Hours hours31 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = hours31.get(durationFieldType32);
        org.joda.time.DurationFieldType durationFieldType34 = hours31.getFieldType();
        int int35 = hours30.get(durationFieldType34);
        org.joda.time.Hours hours36 = hours30.negated();
        boolean boolean37 = hours1.isGreaterThan(hours30);
        org.joda.time.Hours hours38 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod39 = hours38.toMutablePeriod();
        org.joda.time.Hours hours40 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours41 = hours38.minus(hours40);
        org.joda.time.Duration duration42 = hours38.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod43 = hours38.toMutablePeriod();
        org.joda.time.Hours hours44 = org.joda.time.Hours.EIGHT;
        int int46 = hours44.getValue((int) (short) 0);
        java.lang.String str47 = hours44.toString();
        boolean boolean48 = hours38.isGreaterThan(hours44);
        org.joda.time.Hours hours50 = hours44.minus(10);
        org.joda.time.Hours hours51 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours52 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod53 = hours52.toMutablePeriod();
        org.joda.time.Hours hours54 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours55 = hours52.minus(hours54);
        int int56 = hours51.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours54);
        org.joda.time.Hours hours57 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours51);
        org.joda.time.DurationFieldType durationFieldType58 = null;
        int int59 = hours51.get(durationFieldType58);
        boolean boolean60 = hours50.equals((java.lang.Object) hours51);
        org.joda.time.Hours hours62 = hours51.minus(100);
        org.joda.time.Hours hours64 = hours51.dividedBy(12);
        int int65 = hours1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours64);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8 + "'", int19 == 8);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 7 + "'", int35 == 7);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 8 + "'", int46 == 8);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "PT8H" + "'", str47, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(mutablePeriod53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = hours1.minus(8);
        org.joda.time.Hours hours4 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours6 = hours4.plus(1);
        org.joda.time.Hours hours8 = hours6.minus((int) (byte) 10);
        org.joda.time.Hours hours9 = hours6.negated();
        boolean boolean10 = hours1.isLessThan(hours6);
        org.joda.time.Hours hours11 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours6);
        org.joda.time.Hours hours13 = hours6.plus(15);
        int int14 = hours13.getHours();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 17 + "'", int14 == 17);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) '#');
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        int int7 = hours2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours5);
        org.joda.time.Hours hours9 = hours5.multipliedBy(0);
        org.joda.time.Duration duration10 = hours5.toStandardDuration();
        org.joda.time.Hours hours12 = hours5.dividedBy((int) (short) -1);
        org.joda.time.Hours hours13 = hours1.minus(hours12);
        org.joda.time.Hours hours14 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours12);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours5.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = hours5.getFieldType();
        int int9 = hours0.get(durationFieldType8);
        org.joda.time.Hours hours11 = hours0.multipliedBy(7);
        org.joda.time.Hours hours13 = hours11.minus((-2));
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = hours14.get(durationFieldType18);
        org.joda.time.Hours hours21 = hours14.minus((int) (short) 0);
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod23 = hours22.toMutablePeriod();
        org.joda.time.Hours hours24 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours25 = hours22.minus(hours24);
        org.joda.time.DurationFieldType durationFieldType26 = null;
        boolean boolean27 = hours24.isSupported(durationFieldType26);
        org.joda.time.Hours hours28 = hours21.minus(hours24);
        org.joda.time.Hours hours29 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod31 = hours30.toMutablePeriod();
        org.joda.time.Hours hours32 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours33 = hours30.minus(hours32);
        int int34 = hours29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours32);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        boolean boolean36 = hours29.isSupported(durationFieldType35);
        org.joda.time.Hours hours38 = hours29.minus((int) (short) -1);
        org.joda.time.PeriodType periodType39 = hours29.getPeriodType();
        org.joda.time.Hours hours40 = org.joda.time.Hours.EIGHT;
        int int42 = hours40.getValue((int) (short) 0);
        org.joda.time.Hours hours43 = hours29.minus(hours40);
        org.joda.time.Hours hours45 = hours29.plus(7);
        org.joda.time.Hours hours46 = hours28.minus(hours45);
        org.joda.time.Hours hours48 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType49 = hours48.getFieldType();
        org.joda.time.Period period50 = hours48.toPeriod();
        org.joda.time.Period period51 = hours48.toPeriod();
        org.joda.time.Hours hours52 = hours46.plus(hours48);
        boolean boolean53 = hours13.isLessThan(hours46);
        org.joda.time.Hours hours54 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period55 = hours54.toPeriod();
        org.joda.time.Hours hours57 = hours54.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod58 = hours57.toMutablePeriod();
        org.joda.time.Hours hours59 = org.joda.time.Hours.THREE;
        org.joda.time.Period period60 = hours59.toPeriod();
        org.joda.time.Hours hours62 = hours59.plus((int) (byte) -1);
        org.joda.time.Hours hours63 = hours57.minus(hours59);
        org.joda.time.Hours hours64 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod65 = hours64.toMutablePeriod();
        org.joda.time.Hours hours66 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours67 = hours64.minus(hours66);
        org.joda.time.DurationFieldType durationFieldType68 = null;
        int int69 = hours64.get(durationFieldType68);
        org.joda.time.Hours hours71 = hours64.minus((int) (short) 0);
        org.joda.time.Hours hours72 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType73 = null;
        int int74 = hours72.get(durationFieldType73);
        org.joda.time.DurationFieldType durationFieldType75 = hours72.getFieldType();
        int int76 = hours71.get(durationFieldType75);
        int int77 = hours59.get(durationFieldType75);
        org.joda.time.Hours hours79 = hours59.minus((int) ' ');
        boolean boolean80 = hours13.isGreaterThan(hours59);
        org.joda.time.Duration duration81 = hours13.toStandardDuration();
        java.lang.Class<?> wildcardClass82 = duration81.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7 + "'", int9 == 7);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 8 + "'", int42 == 8);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(mutablePeriod58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(mutablePeriod65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(durationFieldType75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 7 + "'", int76 == 7);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 3 + "'", int77 == 3);
        org.junit.Assert.assertNotNull(hours79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(duration81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        org.joda.time.Hours hours10 = hours7.plus(8);
        org.joda.time.Hours hours11 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = hours11.get(durationFieldType12);
        org.joda.time.DurationFieldType durationFieldType14 = hours11.getFieldType();
        boolean boolean15 = hours10.isSupported(durationFieldType14);
        boolean boolean16 = hours0.isSupported(durationFieldType14);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period18 = hours17.toPeriod();
        org.joda.time.Hours hours20 = hours17.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.THREE;
        org.joda.time.Period period23 = hours22.toPeriod();
        org.joda.time.Hours hours25 = hours22.plus((int) (byte) -1);
        org.joda.time.Hours hours26 = hours20.minus(hours22);
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = hours27.get(durationFieldType31);
        org.joda.time.Hours hours34 = hours27.minus((int) (short) 0);
        org.joda.time.Hours hours35 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType36 = null;
        int int37 = hours35.get(durationFieldType36);
        org.joda.time.DurationFieldType durationFieldType38 = hours35.getFieldType();
        int int39 = hours34.get(durationFieldType38);
        int int40 = hours22.get(durationFieldType38);
        boolean boolean41 = hours0.equals((java.lang.Object) hours22);
        java.lang.String str42 = hours22.toString();
        org.joda.time.MutablePeriod mutablePeriod43 = hours22.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 7 + "'", int39 == 7);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 3 + "'", int40 == 3);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT3H" + "'", str42, "PT3H");
        org.junit.Assert.assertNotNull(mutablePeriod43);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.plus((int) (byte) -1);
        java.lang.Class<?> wildcardClass4 = hours0.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        boolean boolean13 = hours10.isSupported(durationFieldType12);
        org.joda.time.Hours hours14 = hours7.minus(hours10);
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        int int20 = hours15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours18);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        boolean boolean22 = hours15.isSupported(durationFieldType21);
        org.joda.time.Hours hours24 = hours15.minus((int) (short) -1);
        org.joda.time.PeriodType periodType25 = hours15.getPeriodType();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        int int28 = hours26.getValue((int) (short) 0);
        org.joda.time.Hours hours29 = hours15.minus(hours26);
        org.joda.time.Hours hours31 = hours15.plus(7);
        org.joda.time.Hours hours32 = hours14.minus(hours31);
        org.joda.time.Hours hours34 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType35 = hours34.getFieldType();
        org.joda.time.Period period36 = hours34.toPeriod();
        org.joda.time.Period period37 = hours34.toPeriod();
        org.joda.time.Hours hours38 = hours32.plus(hours34);
        org.joda.time.PeriodType periodType39 = hours32.getPeriodType();
        int int40 = hours32.getHours();
        org.joda.time.Hours hours41 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod43 = hours42.toMutablePeriod();
        org.joda.time.Hours hours44 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours45 = hours42.minus(hours44);
        int int46 = hours41.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours44);
        org.joda.time.DurationFieldType durationFieldType47 = null;
        boolean boolean48 = hours41.isSupported(durationFieldType47);
        org.joda.time.Hours hours50 = hours41.minus((int) (short) -1);
        org.joda.time.PeriodType periodType51 = hours41.getPeriodType();
        org.joda.time.Hours hours52 = org.joda.time.Hours.EIGHT;
        int int54 = hours52.getValue((int) (short) 0);
        org.joda.time.Hours hours55 = hours41.minus(hours52);
        org.joda.time.Hours hours57 = hours41.plus(7);
        org.joda.time.Hours hours58 = hours41.negated();
        org.joda.time.MutablePeriod mutablePeriod59 = hours58.toMutablePeriod();
        boolean boolean60 = hours32.isGreaterThan(hours58);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 8 + "'", int28 == 8);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-15) + "'", int40 == (-15));
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 8 + "'", int54 == 8);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(mutablePeriod59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        int int7 = hours5.getValue((int) (short) 0);
        org.joda.time.Hours hours8 = hours4.minus(hours5);
        org.joda.time.Hours hours9 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = hours9.get(durationFieldType10);
        org.joda.time.DurationFieldType durationFieldType12 = hours9.getFieldType();
        int int13 = hours4.get(durationFieldType12);
        boolean boolean14 = hours3.isSupported(durationFieldType12);
        org.joda.time.Hours hours15 = hours3.negated();
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period17 = hours16.toPeriod();
        int int18 = hours3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours16);
        org.joda.time.Duration duration19 = hours3.toStandardDuration();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8 + "'", int7 == 8);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 7 + "'", int13 == 7);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(duration19);
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.PeriodType periodType6 = hours0.getPeriodType();
        org.joda.time.Hours hours8 = org.joda.time.Hours.parseHours("PT7H");
        boolean boolean9 = hours0.isLessThan(hours8);
        org.joda.time.Hours hours10 = org.joda.time.Hours.ZERO;
        boolean boolean11 = hours8.isGreaterThan(hours10);
        org.joda.time.Hours hours12 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours13 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = hours13.get(durationFieldType14);
        boolean boolean16 = hours12.equals((java.lang.Object) durationFieldType14);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        int int22 = hours17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours20);
        org.joda.time.Hours hours24 = hours20.multipliedBy(0);
        org.joda.time.Hours hours25 = hours12.plus(hours24);
        org.joda.time.DurationFieldType durationFieldType26 = hours25.getFieldType();
        int int27 = hours8.get(durationFieldType26);
        int int28 = hours8.getHours();
        org.joda.time.Hours hours30 = hours8.plus(5);
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod33 = hours32.toMutablePeriod();
        org.joda.time.Hours hours34 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours35 = hours32.minus(hours34);
        int int36 = hours31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours34);
        org.joda.time.DurationFieldType durationFieldType37 = null;
        boolean boolean38 = hours31.isSupported(durationFieldType37);
        org.joda.time.Hours hours40 = hours31.minus((int) (short) -1);
        org.joda.time.Hours hours41 = hours40.negated();
        org.joda.time.Period period42 = hours40.toPeriod();
        org.joda.time.Hours hours43 = org.joda.time.Hours.ONE;
        int int44 = hours43.getHours();
        org.joda.time.Hours hours46 = hours43.plus(10);
        org.joda.time.Hours hours47 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod48 = hours47.toMutablePeriod();
        org.joda.time.Hours hours49 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours50 = hours47.minus(hours49);
        org.joda.time.DurationFieldType durationFieldType51 = null;
        int int52 = hours47.get(durationFieldType51);
        org.joda.time.Hours hours54 = hours47.multipliedBy(1);
        boolean boolean55 = hours43.isGreaterThan(hours47);
        int int56 = hours43.size();
        org.joda.time.Hours hours58 = hours43.plus((int) (short) 0);
        org.joda.time.Hours hours59 = hours40.plus(hours58);
        org.joda.time.Hours hours61 = hours58.multipliedBy((-8));
        int int62 = hours58.getHours();
        org.joda.time.Hours hours64 = hours58.plus((int) '#');
        org.joda.time.Hours hours65 = hours30.minus(hours58);
        org.joda.time.Hours hours67 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Hours hours68 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours69 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod70 = hours69.toMutablePeriod();
        org.joda.time.Hours hours71 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours72 = hours69.minus(hours71);
        int int73 = hours68.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours71);
        org.joda.time.MutablePeriod mutablePeriod74 = hours68.toMutablePeriod();
        org.joda.time.Hours hours75 = hours67.minus(hours68);
        org.joda.time.Hours hours76 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours68);
        boolean boolean77 = hours58.isLessThan(hours68);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 7 + "'", int27 == 7);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 7 + "'", int28 == 7);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertNotNull(mutablePeriod70);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod74);
        org.junit.Assert.assertNotNull(hours75);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        int int9 = hours8.getHours();
        org.joda.time.Hours hours11 = hours8.plus(10);
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = hours12.get(durationFieldType16);
        org.joda.time.Hours hours19 = hours12.multipliedBy(1);
        boolean boolean20 = hours8.isGreaterThan(hours12);
        org.joda.time.Hours hours21 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        int int25 = hours23.getValue((int) (short) 0);
        org.joda.time.Hours hours26 = hours22.minus(hours23);
        org.joda.time.Hours hours27 = hours21.minus(hours22);
        int int28 = hours21.size();
        org.joda.time.Hours hours29 = hours12.plus(hours21);
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod32 = hours31.toMutablePeriod();
        org.joda.time.Hours hours33 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours34 = hours31.minus(hours33);
        int int35 = hours30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours33);
        org.joda.time.Hours hours37 = hours33.multipliedBy(0);
        org.joda.time.Duration duration38 = hours33.toStandardDuration();
        org.joda.time.Hours hours40 = hours33.dividedBy((int) (short) -1);
        int int41 = hours40.size();
        boolean boolean42 = hours29.isLessThan(hours40);
        boolean boolean43 = hours0.isGreaterThan(hours40);
        org.joda.time.Hours hours45 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType46 = hours45.getFieldType();
        org.joda.time.PeriodType periodType47 = hours45.getPeriodType();
        org.joda.time.Hours hours48 = hours45.negated();
        org.joda.time.Hours hours49 = hours40.plus(hours45);
        org.joda.time.Hours hours51 = hours49.multipliedBy(5);
        org.joda.time.Hours hours52 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod53 = hours52.toMutablePeriod();
        org.joda.time.Hours hours54 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours55 = hours52.minus(hours54);
        org.joda.time.Hours hours56 = hours54.negated();
        org.joda.time.DurationFieldType durationFieldType57 = hours56.getFieldType();
        boolean boolean58 = hours49.isLessThan(hours56);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 8 + "'", int25 == 8);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(mutablePeriod53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(100);
        org.joda.time.Period period2 = hours1.toPeriod();
        org.joda.time.Hours hours4 = hours1.minus(8);
        org.joda.time.Hours hours6 = hours4.minus((-1));
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod8 = hours7.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours7.minus(hours9);
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours14 = hours7.minus((int) (short) 0);
        org.joda.time.Hours hours15 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours7);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        int int21 = hours16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours19);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = hours16.isSupported(durationFieldType22);
        org.joda.time.Hours hours25 = hours16.minus((int) (short) -1);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod27 = hours26.toMutablePeriod();
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours29 = hours26.minus(hours28);
        org.joda.time.Hours hours31 = hours28.plus(8);
        org.joda.time.Hours hours32 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = hours32.get(durationFieldType33);
        org.joda.time.DurationFieldType durationFieldType35 = hours32.getFieldType();
        boolean boolean36 = hours31.isSupported(durationFieldType35);
        int int37 = hours25.get(durationFieldType35);
        org.joda.time.Hours hours38 = hours7.plus(hours25);
        org.joda.time.Hours hours39 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours40 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod41 = hours40.toMutablePeriod();
        org.joda.time.Hours hours42 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours43 = hours40.minus(hours42);
        int int44 = hours39.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours42);
        org.joda.time.DurationFieldType durationFieldType45 = null;
        boolean boolean46 = hours39.isSupported(durationFieldType45);
        org.joda.time.Hours hours48 = hours39.multipliedBy((int) (short) 10);
        org.joda.time.Hours hours49 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours50 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType51 = null;
        int int52 = hours50.get(durationFieldType51);
        boolean boolean53 = hours49.equals((java.lang.Object) durationFieldType51);
        org.joda.time.Hours hours54 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours55 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod56 = hours55.toMutablePeriod();
        org.joda.time.Hours hours57 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours58 = hours55.minus(hours57);
        int int59 = hours54.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours57);
        org.joda.time.Hours hours61 = hours57.multipliedBy(0);
        org.joda.time.Hours hours62 = hours49.plus(hours61);
        org.joda.time.DurationFieldType durationFieldType63 = hours62.getFieldType();
        boolean boolean64 = hours39.equals((java.lang.Object) durationFieldType63);
        int int65 = hours25.get(durationFieldType63);
        int int66 = hours4.get(durationFieldType63);
        org.joda.time.Hours hours68 = hours4.plus((-25));
        org.joda.time.Hours hours70 = hours68.plus(26);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 8 + "'", int37 == 8);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 8 + "'", int65 == 8);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 92 + "'", int66 == 92);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours70);
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        boolean boolean6 = hours1.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours7 = null;
        org.joda.time.Hours hours8 = hours1.minus(hours7);
        org.joda.time.Hours hours9 = hours8.negated();
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.Duration duration14 = hours10.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod15 = hours10.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        int int18 = hours16.getValue((int) (short) 0);
        java.lang.String str19 = hours16.toString();
        boolean boolean20 = hours10.isGreaterThan(hours16);
        org.joda.time.Hours hours22 = hours16.minus(10);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        int int28 = hours23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours26);
        org.joda.time.Hours hours29 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = hours23.get(durationFieldType30);
        boolean boolean32 = hours22.equals((java.lang.Object) hours23);
        java.lang.String str33 = hours22.toString();
        org.joda.time.DurationFieldType durationFieldType35 = hours22.getFieldType(0);
        boolean boolean36 = hours8.isGreaterThan(hours22);
        org.joda.time.Hours hours37 = org.joda.time.Hours.MAX_VALUE;
        int int38 = hours8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours37);
        org.joda.time.DurationFieldType durationFieldType39 = hours8.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT8H" + "'", str19, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "PT-2H" + "'", str33, "PT-2H");
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType39);
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours24 = hours1.plus(hours21);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period26 = hours25.toPeriod();
        org.joda.time.Hours hours28 = hours25.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod29 = hours28.toMutablePeriod();
        org.joda.time.Hours hours30 = org.joda.time.Hours.THREE;
        org.joda.time.Period period31 = hours30.toPeriod();
        org.joda.time.Hours hours33 = hours30.plus((int) (byte) -1);
        org.joda.time.Hours hours34 = hours28.minus(hours30);
        org.joda.time.DurationFieldType durationFieldType35 = hours34.getFieldType();
        org.joda.time.Hours hours36 = hours24.plus(hours34);
        org.joda.time.Duration duration37 = hours34.toStandardDuration();
        java.lang.Class<?> wildcardClass38 = duration37.getClass();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.Hours hours4 = hours0.dividedBy(100);
        org.joda.time.Hours hours6 = hours4.multipliedBy(0);
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        int int12 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours10);
        org.joda.time.Hours hours14 = hours10.multipliedBy(0);
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period16 = hours15.toPeriod();
        org.joda.time.Hours hours18 = hours15.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.THREE;
        org.joda.time.Period period21 = hours20.toPeriod();
        org.joda.time.Hours hours23 = hours20.plus((int) (byte) -1);
        org.joda.time.Hours hours24 = hours18.minus(hours20);
        org.joda.time.DurationFieldType durationFieldType25 = hours24.getFieldType();
        org.joda.time.Hours hours26 = hours14.plus(hours24);
        org.joda.time.DurationFieldType durationFieldType27 = hours26.getFieldType();
        int int28 = hours6.get(durationFieldType27);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType30 = hours6.getFieldType(32);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours5.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = hours5.getFieldType();
        int int9 = hours0.get(durationFieldType8);
        org.joda.time.Hours hours11 = hours0.multipliedBy(7);
        org.joda.time.ReadablePeriod readablePeriod12 = null;
        org.joda.time.Hours hours13 = org.joda.time.Hours.standardHoursIn(readablePeriod12);
        org.joda.time.DurationFieldType durationFieldType14 = hours13.getFieldType();
        boolean boolean15 = hours11.equals((java.lang.Object) durationFieldType14);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7 + "'", int9 == 7);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours1 = hours0.negated();
        org.joda.time.DurationFieldType durationFieldType2 = hours0.getFieldType();
        java.lang.String str3 = hours0.toString();
        org.joda.time.Hours hours4 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.MutablePeriod mutablePeriod11 = hours5.toMutablePeriod();
        org.joda.time.Hours hours13 = hours5.minus(7);
        org.joda.time.Hours hours14 = hours4.minus(hours5);
        org.joda.time.Hours hours15 = hours0.minus(hours5);
        org.joda.time.Hours hours17 = hours5.multipliedBy(3);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT3H" + "'", str3, "PT3H");
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        int int7 = hours0.size();
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        int int11 = hours9.getValue((int) (short) 0);
        org.joda.time.Hours hours12 = hours8.minus(hours9);
        boolean boolean14 = hours9.equals((java.lang.Object) (short) 10);
        int int15 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours9);
        org.joda.time.Period period16 = hours9.toPeriod();
        int int17 = hours9.getHours();
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = hours24.get(durationFieldType28);
        org.joda.time.Hours hours31 = hours24.minus((int) (short) 0);
        org.joda.time.Hours hours32 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = hours32.get(durationFieldType33);
        org.joda.time.DurationFieldType durationFieldType35 = hours32.getFieldType();
        int int36 = hours31.get(durationFieldType35);
        org.joda.time.Hours hours37 = hours31.negated();
        boolean boolean38 = hours21.isGreaterThan(hours37);
        boolean boolean39 = hours9.equals((java.lang.Object) hours21);
        org.joda.time.Hours hours41 = org.joda.time.Hours.hours(0);
        int int42 = hours41.size();
        org.joda.time.Hours hours44 = org.joda.time.Hours.hours((-1));
        int int45 = hours41.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours44);
        org.joda.time.Hours hours47 = hours41.plus(7);
        org.joda.time.Hours hours49 = hours41.dividedBy(9);
        int int50 = hours9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours41);
        java.lang.String str51 = hours41.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8 + "'", int11 == 8);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 7 + "'", int36 == 7);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "PT0H" + "'", str51, "PT0H");
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        int int9 = hours7.getValue((int) (short) 0);
        org.joda.time.Hours hours10 = hours6.minus(hours7);
        org.joda.time.Hours hours11 = hours5.minus(hours6);
        int int12 = hours5.size();
        org.joda.time.Duration duration13 = hours5.toStandardDuration();
        boolean boolean14 = hours1.isGreaterThan(hours5);
        org.joda.time.Hours hours15 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        int int19 = hours17.getValue((int) (short) 0);
        org.joda.time.Hours hours20 = hours16.minus(hours17);
        org.joda.time.Hours hours21 = hours15.minus(hours16);
        boolean boolean22 = hours1.equals((java.lang.Object) hours16);
        int int23 = hours16.getHours();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType25 = hours16.getFieldType((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8 + "'", int19 == 8);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 7 + "'", int23 == 7);
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Hours hours9 = org.joda.time.Hours.hoursIn(readableInterval8);
        int int10 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours9);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        int int14 = hours12.getValue((int) (short) 0);
        org.joda.time.Hours hours15 = hours11.minus(hours12);
        org.joda.time.Hours hours16 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = hours16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = hours16.getFieldType();
        int int20 = hours11.get(durationFieldType19);
        boolean boolean21 = hours9.isSupported(durationFieldType19);
        org.joda.time.PeriodType periodType22 = hours9.getPeriodType();
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        int int28 = hours23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours26);
        org.joda.time.Hours hours29 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = hours23.get(durationFieldType30);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = hours23.get(durationFieldType32);
        int int34 = hours23.getHours();
        boolean boolean35 = hours9.isLessThan(hours23);
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod37 = hours36.toMutablePeriod();
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours39 = hours36.minus(hours38);
        org.joda.time.Duration duration40 = hours36.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod41 = hours36.toMutablePeriod();
        org.joda.time.Period period42 = hours36.toPeriod();
        boolean boolean43 = hours9.equals((java.lang.Object) period42);
        org.joda.time.Hours hours45 = hours9.minus((int) (short) 0);
        org.joda.time.Hours hours46 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod47 = hours46.toMutablePeriod();
        org.joda.time.Hours hours48 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours49 = hours46.minus(hours48);
        org.joda.time.Hours hours50 = hours48.negated();
        org.joda.time.DurationFieldType durationFieldType51 = hours50.getFieldType();
        org.joda.time.Hours hours52 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod53 = hours52.toMutablePeriod();
        org.joda.time.Hours hours54 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours55 = hours52.minus(hours54);
        org.joda.time.Hours hours56 = hours54.negated();
        int int57 = hours56.getHours();
        int int58 = hours50.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours56);
        org.joda.time.Hours hours59 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod60 = hours59.toMutablePeriod();
        org.joda.time.Hours hours61 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours62 = hours59.minus(hours61);
        org.joda.time.DurationFieldType durationFieldType63 = null;
        int int64 = hours59.get(durationFieldType63);
        org.joda.time.Hours hours66 = hours59.minus((int) (short) 0);
        org.joda.time.Hours hours67 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType68 = null;
        int int69 = hours67.get(durationFieldType68);
        org.joda.time.DurationFieldType durationFieldType70 = hours67.getFieldType();
        int int71 = hours66.get(durationFieldType70);
        org.joda.time.PeriodType periodType72 = hours66.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType73 = hours66.getFieldType();
        boolean boolean74 = hours50.isSupported(durationFieldType73);
        int int75 = hours9.get(durationFieldType73);
        int int76 = hours9.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8 + "'", int14 == 8);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 7 + "'", int20 == 7);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 7 + "'", int34 == 7);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(mutablePeriod47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(mutablePeriod53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-8) + "'", int57 == (-8));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(durationFieldType70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 7 + "'", int71 == 7);
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertNotNull(durationFieldType73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((-1));
        org.joda.time.Hours hours2 = hours1.negated();
        org.joda.time.MutablePeriod mutablePeriod3 = hours1.toMutablePeriod();
        org.joda.time.Hours hours5 = hours1.plus(3);
        java.lang.String str6 = hours5.toString();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT2H" + "'", str6, "PT2H");
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours24 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours18);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours28 = hours25.minus(hours27);
        org.joda.time.Hours hours30 = hours27.plus(8);
        org.joda.time.Hours hours31 = hours18.minus(hours30);
        org.joda.time.Hours hours32 = hours31.negated();
        boolean boolean33 = hours16.isLessThan(hours31);
        org.joda.time.Hours hours35 = hours16.multipliedBy((-2));
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(hours35);
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Duration duration13 = hours6.toStandardDuration();
        org.joda.time.Hours hours15 = hours6.multipliedBy(14);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(hours15);
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours0.multipliedBy((int) '4');
        org.joda.time.Hours hours13 = hours0.negated();
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        int int17 = hours15.getValue((int) (short) 0);
        org.joda.time.Hours hours18 = hours14.minus(hours15);
        int int19 = hours18.getHours();
        org.joda.time.Hours hours20 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours21 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = hours21.get(durationFieldType22);
        boolean boolean24 = hours20.equals((java.lang.Object) durationFieldType22);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod27 = hours26.toMutablePeriod();
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours29 = hours26.minus(hours28);
        int int30 = hours25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours28);
        org.joda.time.Hours hours32 = hours28.multipliedBy(0);
        org.joda.time.Hours hours33 = hours20.plus(hours32);
        org.joda.time.DurationFieldType durationFieldType34 = hours33.getFieldType();
        org.joda.time.Hours hours35 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod37 = hours36.toMutablePeriod();
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours39 = hours36.minus(hours38);
        int int40 = hours35.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours38);
        org.joda.time.Hours hours41 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours35);
        org.joda.time.DurationFieldType durationFieldType42 = hours35.getFieldType();
        int int43 = hours33.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours35);
        org.joda.time.Hours hours44 = hours18.minus(hours33);
        org.joda.time.Hours hours45 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod46 = hours45.toMutablePeriod();
        org.joda.time.Hours hours47 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours48 = hours45.minus(hours47);
        org.joda.time.Duration duration49 = hours45.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod50 = hours45.toMutablePeriod();
        org.joda.time.Hours hours51 = org.joda.time.Hours.EIGHT;
        int int53 = hours51.getValue((int) (short) 0);
        java.lang.String str54 = hours51.toString();
        boolean boolean55 = hours45.isGreaterThan(hours51);
        org.joda.time.Hours hours57 = hours51.minus(10);
        org.joda.time.Hours hours58 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours59 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod60 = hours59.toMutablePeriod();
        org.joda.time.Hours hours61 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours62 = hours59.minus(hours61);
        int int63 = hours58.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours61);
        org.joda.time.Hours hours64 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours58);
        org.joda.time.DurationFieldType durationFieldType65 = null;
        int int66 = hours58.get(durationFieldType65);
        boolean boolean67 = hours57.equals((java.lang.Object) hours58);
        java.lang.String str68 = hours57.toString();
        org.joda.time.DurationFieldType durationFieldType70 = hours57.getFieldType(0);
        int int71 = hours44.get(durationFieldType70);
        int int72 = hours0.get(durationFieldType70);
        int int73 = hours0.size();
        int int74 = hours0.size();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertNotNull(mutablePeriod50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 8 + "'", int53 == 8);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "PT8H" + "'", str54, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "PT-2H" + "'", str68, "PT-2H");
        org.junit.Assert.assertNotNull(durationFieldType70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-4) + "'", int71 == (-4));
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 7 + "'", int72 == 7);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        int int16 = hours11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours14);
        org.joda.time.Hours hours18 = hours14.multipliedBy(0);
        int int19 = hours6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours18);
        org.joda.time.Duration duration20 = hours6.toStandardDuration();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(duration20);
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.Hours hours4 = hours0.dividedBy(100);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.DurationFieldType durationFieldType11 = null;
        boolean boolean12 = hours5.isSupported(durationFieldType11);
        org.joda.time.Hours hours14 = hours5.minus((int) (short) -1);
        org.joda.time.PeriodType periodType15 = hours5.getPeriodType();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        int int18 = hours16.getValue((int) (short) 0);
        org.joda.time.Hours hours19 = hours5.minus(hours16);
        org.joda.time.Hours hours21 = hours5.plus(7);
        org.joda.time.Hours hours22 = hours5.negated();
        org.joda.time.MutablePeriod mutablePeriod23 = hours5.toMutablePeriod();
        org.joda.time.Hours hours24 = hours4.plus(hours5);
        org.joda.time.Hours hours26 = hours5.plus((-2147483648));
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours26);
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        int int18 = hours13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours16);
        org.joda.time.Hours hours19 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours13);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours13.get(durationFieldType20);
        boolean boolean22 = hours12.equals((java.lang.Object) hours13);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period24 = hours23.toPeriod();
        org.joda.time.Hours hours26 = hours23.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod27 = hours26.toMutablePeriod();
        org.joda.time.Hours hours28 = org.joda.time.Hours.THREE;
        org.joda.time.Period period29 = hours28.toPeriod();
        org.joda.time.Hours hours31 = hours28.plus((int) (byte) -1);
        org.joda.time.Hours hours32 = hours26.minus(hours28);
        org.joda.time.DurationFieldType durationFieldType33 = hours32.getFieldType();
        boolean boolean34 = hours13.isGreaterThan(hours32);
        org.joda.time.Hours hours35 = hours32.negated();
        org.joda.time.Hours hours37 = hours35.minus((int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            int int39 = hours35.getValue(93);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 93");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours37);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(100);
        org.joda.time.Period period2 = hours1.toPeriod();
        org.joda.time.Hours hours4 = hours1.minus(8);
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours10 = hours8.minus((int) (byte) 100);
        boolean boolean11 = hours1.equals((java.lang.Object) hours10);
        org.joda.time.Hours hours12 = null;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.Duration duration14 = hours10.toStandardDuration();
        int int15 = hours10.getHours();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-98) + "'", int15 == (-98));
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Period period2 = hours1.toPeriod();
        org.joda.time.Hours hours4 = hours1.minus(7);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        org.joda.time.Hours hours9 = hours7.negated();
        int int10 = hours9.getHours();
        org.joda.time.Hours hours12 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours14 = hours12.minus(8);
        org.joda.time.Hours hours15 = hours9.minus(hours12);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours16.get(durationFieldType20);
        org.joda.time.Hours hours23 = hours16.minus((int) (short) 0);
        org.joda.time.Hours hours24 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours16);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod27 = hours26.toMutablePeriod();
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours29 = hours26.minus(hours28);
        int int30 = hours25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours28);
        org.joda.time.DurationFieldType durationFieldType31 = null;
        boolean boolean32 = hours25.isSupported(durationFieldType31);
        org.joda.time.Hours hours34 = hours25.minus((int) (short) -1);
        org.joda.time.Hours hours35 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod36 = hours35.toMutablePeriod();
        org.joda.time.Hours hours37 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours38 = hours35.minus(hours37);
        org.joda.time.Hours hours40 = hours37.plus(8);
        org.joda.time.Hours hours41 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType42 = null;
        int int43 = hours41.get(durationFieldType42);
        org.joda.time.DurationFieldType durationFieldType44 = hours41.getFieldType();
        boolean boolean45 = hours40.isSupported(durationFieldType44);
        int int46 = hours34.get(durationFieldType44);
        org.joda.time.Hours hours47 = hours16.plus(hours34);
        org.joda.time.Hours hours49 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours50 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod51 = hours50.toMutablePeriod();
        org.joda.time.Hours hours52 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours53 = hours50.minus(hours52);
        org.joda.time.DurationFieldType durationFieldType54 = null;
        int int55 = hours50.get(durationFieldType54);
        org.joda.time.Hours hours57 = hours50.minus((int) (short) 0);
        org.joda.time.Hours hours58 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod59 = hours58.toMutablePeriod();
        org.joda.time.Hours hours60 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours61 = hours58.minus(hours60);
        org.joda.time.DurationFieldType durationFieldType62 = null;
        boolean boolean63 = hours60.isSupported(durationFieldType62);
        org.joda.time.Hours hours64 = hours57.minus(hours60);
        org.joda.time.Hours hours65 = hours49.plus(hours64);
        org.joda.time.Hours hours66 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod67 = hours66.toMutablePeriod();
        org.joda.time.Hours hours68 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours69 = hours66.minus(hours68);
        boolean boolean70 = hours64.isGreaterThan(hours68);
        org.joda.time.DurationFieldType durationFieldType72 = hours64.getFieldType((int) (short) 0);
        boolean boolean73 = hours34.isSupported(durationFieldType72);
        boolean boolean74 = hours12.isSupported(durationFieldType72);
        org.joda.time.Hours hours76 = org.joda.time.Hours.hours((int) (byte) 100);
        org.joda.time.MutablePeriod mutablePeriod77 = hours76.toMutablePeriod();
        boolean boolean78 = hours12.isGreaterThan(hours76);
        org.joda.time.Hours hours79 = hours1.minus(hours12);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-8) + "'", int10 == (-8));
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 8 + "'", int46 == 8);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(mutablePeriod59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(mutablePeriod67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(durationFieldType72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(mutablePeriod77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(hours79);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        int int18 = hours13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours16);
        org.joda.time.Hours hours19 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours13);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours13.get(durationFieldType20);
        boolean boolean22 = hours12.equals((java.lang.Object) hours13);
        java.lang.String str23 = hours12.toString();
        int int25 = hours12.getValue((int) (short) 0);
        org.joda.time.DurationFieldType durationFieldType26 = hours12.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT-2H" + "'", str23, "PT-2H");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-2) + "'", int25 == (-2));
        org.junit.Assert.assertNotNull(durationFieldType26);
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours1 = org.joda.time.Hours.MAX_VALUE;
        int int2 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours1);
        int int3 = hours1.size();
        org.joda.time.Hours hours5 = hours1.plus((int) (short) 0);
        org.joda.time.PeriodType periodType6 = hours5.getPeriodType();
        org.joda.time.Hours hours8 = hours5.dividedBy((int) '4');
        int int9 = hours8.getHours();
        int int10 = hours8.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 41297762 + "'", int9 == 41297762);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 41297762 + "'", int10 == 41297762);
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        org.joda.time.Hours hours10 = hours7.plus(8);
        org.joda.time.Hours hours11 = hours1.minus(hours7);
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = hours12.get(durationFieldType16);
        int int18 = hours12.getHours();
        boolean boolean19 = hours1.isLessThan(hours12);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType21 = hours12.getFieldType(364);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 364");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 7 + "'", int18 == 7);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours1 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = hours1.get(durationFieldType2);
        boolean boolean4 = hours0.equals((java.lang.Object) durationFieldType2);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.Hours hours12 = hours8.multipliedBy(0);
        org.joda.time.Hours hours13 = hours0.plus(hours12);
        org.joda.time.Hours hours15 = hours13.minus((int) (byte) 100);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        int int21 = hours16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours19);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = hours16.isSupported(durationFieldType22);
        org.joda.time.Hours hours25 = hours16.minus((int) (short) -1);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod27 = hours26.toMutablePeriod();
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours29 = hours26.minus(hours28);
        org.joda.time.Hours hours31 = hours28.plus(8);
        org.joda.time.Hours hours32 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = hours32.get(durationFieldType33);
        org.joda.time.DurationFieldType durationFieldType35 = hours32.getFieldType();
        boolean boolean36 = hours31.isSupported(durationFieldType35);
        int int37 = hours25.get(durationFieldType35);
        java.lang.String str38 = hours25.toString();
        org.joda.time.Hours hours40 = hours25.dividedBy((-8));
        boolean boolean41 = hours15.isGreaterThan(hours40);
        org.joda.time.Hours hours43 = hours15.plus((int) (byte) 0);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 8 + "'", int37 == 8);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "PT8H" + "'", str38, "PT8H");
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(hours43);
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours9 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = hours9.get(durationFieldType10);
        org.joda.time.Hours hours13 = hours9.dividedBy(100);
        int int14 = hours9.size();
        org.joda.time.Period period15 = hours9.toPeriod();
        boolean boolean16 = hours0.equals((java.lang.Object) period15);
        org.joda.time.MutablePeriod mutablePeriod17 = hours0.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(mutablePeriod17);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours0.minus((int) 'a');
        org.joda.time.Hours hours8 = org.joda.time.Hours.ZERO;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        boolean boolean10 = hours7.equals((java.lang.Object) hours8);
        org.joda.time.Hours hours12 = hours8.multipliedBy((int) (short) 100);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        org.joda.time.Duration duration17 = hours13.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod18 = hours13.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        int int21 = hours19.getValue((int) (short) 0);
        java.lang.String str22 = hours19.toString();
        boolean boolean23 = hours13.isGreaterThan(hours19);
        org.joda.time.Hours hours25 = hours19.minus(10);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.Hours hours32 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours26);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = hours26.get(durationFieldType33);
        boolean boolean35 = hours25.equals((java.lang.Object) hours26);
        java.lang.String str36 = hours25.toString();
        org.joda.time.ReadableInterval readableInterval37 = null;
        org.joda.time.Hours hours38 = org.joda.time.Hours.hoursIn(readableInterval37);
        org.joda.time.DurationFieldType durationFieldType39 = hours38.getFieldType();
        org.joda.time.Hours hours41 = hours38.dividedBy((int) (byte) 10);
        org.joda.time.Hours hours43 = hours38.plus((int) (byte) 1);
        org.joda.time.Hours hours45 = hours38.dividedBy(100);
        int int46 = hours25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours45);
        boolean boolean47 = hours8.isLessThan(hours25);
        org.joda.time.MutablePeriod mutablePeriod48 = hours8.toMutablePeriod();
        org.joda.time.Hours hours49 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = hours49.get(durationFieldType50);
        org.joda.time.Hours hours53 = hours49.dividedBy(100);
        org.joda.time.Hours hours55 = hours53.plus((int) (byte) 10);
        org.joda.time.Hours hours56 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours57 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod58 = hours57.toMutablePeriod();
        org.joda.time.Hours hours59 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours60 = hours57.minus(hours59);
        int int61 = hours56.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours59);
        org.joda.time.DurationFieldType durationFieldType62 = null;
        boolean boolean63 = hours56.isSupported(durationFieldType62);
        org.joda.time.Hours hours65 = hours56.minus((int) (short) -1);
        org.joda.time.Hours hours66 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod67 = hours66.toMutablePeriod();
        org.joda.time.Hours hours68 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours69 = hours66.minus(hours68);
        org.joda.time.Hours hours71 = hours68.plus(8);
        org.joda.time.Hours hours72 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType73 = null;
        int int74 = hours72.get(durationFieldType73);
        org.joda.time.DurationFieldType durationFieldType75 = hours72.getFieldType();
        boolean boolean76 = hours71.isSupported(durationFieldType75);
        int int77 = hours65.get(durationFieldType75);
        org.joda.time.Hours hours78 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours79 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod80 = hours79.toMutablePeriod();
        org.joda.time.Hours hours81 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours82 = hours79.minus(hours81);
        int int83 = hours78.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours81);
        org.joda.time.DurationFieldType durationFieldType84 = null;
        boolean boolean85 = hours78.isSupported(durationFieldType84);
        org.joda.time.Hours hours87 = hours78.multipliedBy((int) (short) 10);
        org.joda.time.Hours hours88 = hours65.plus(hours78);
        org.joda.time.DurationFieldType durationFieldType89 = hours88.getFieldType();
        boolean boolean90 = hours55.isGreaterThan(hours88);
        org.joda.time.Hours hours91 = hours8.minus(hours55);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 8 + "'", int21 == 8);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT8H" + "'", str22, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "PT-2H" + "'", str36, "PT-2H");
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(mutablePeriod58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(mutablePeriod67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(durationFieldType75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 8 + "'", int77 == 8);
        org.junit.Assert.assertNotNull(hours78);
        org.junit.Assert.assertNotNull(hours79);
        org.junit.Assert.assertNotNull(mutablePeriod80);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertNotNull(hours82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(hours87);
        org.junit.Assert.assertNotNull(hours88);
        org.junit.Assert.assertNotNull(durationFieldType89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(hours91);
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours9 = hours3.minus(hours5);
        org.joda.time.PeriodType periodType10 = hours5.getPeriodType();
        org.joda.time.Hours hours11 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours12 = hours11.negated();
        org.joda.time.DurationFieldType durationFieldType13 = hours11.getFieldType();
        boolean boolean14 = hours5.isSupported(durationFieldType13);
        org.joda.time.Hours hours15 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours5);
        org.joda.time.Duration duration16 = hours5.toStandardDuration();
        org.joda.time.Hours hours18 = hours5.plus(2);
        int int19 = hours5.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours3.multipliedBy(0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours7);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        int int12 = hours10.getValue((int) (short) 0);
        org.joda.time.Hours hours13 = hours9.minus(hours10);
        boolean boolean15 = hours10.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours16 = null;
        org.joda.time.Hours hours17 = hours10.minus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        int int21 = hours19.getValue((int) (short) 0);
        org.joda.time.Hours hours22 = hours18.minus(hours19);
        org.joda.time.Hours hours23 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = hours23.get(durationFieldType24);
        org.joda.time.DurationFieldType durationFieldType26 = hours23.getFieldType();
        int int27 = hours18.get(durationFieldType26);
        int int28 = hours17.get(durationFieldType26);
        boolean boolean29 = hours7.isGreaterThan(hours17);
        org.joda.time.Hours hours30 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod33 = hours32.toMutablePeriod();
        org.joda.time.Hours hours34 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours35 = hours32.minus(hours34);
        int int36 = hours31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours34);
        org.joda.time.MutablePeriod mutablePeriod37 = hours31.toMutablePeriod();
        org.joda.time.Hours hours39 = hours31.minus(7);
        org.joda.time.Hours hours40 = hours30.minus(hours31);
        org.joda.time.Hours hours42 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours43 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod44 = hours43.toMutablePeriod();
        org.joda.time.Hours hours45 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours46 = hours43.minus(hours45);
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = hours43.get(durationFieldType47);
        org.joda.time.Hours hours50 = hours43.minus((int) (short) 0);
        org.joda.time.Hours hours51 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod52 = hours51.toMutablePeriod();
        org.joda.time.Hours hours53 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours54 = hours51.minus(hours53);
        org.joda.time.DurationFieldType durationFieldType55 = null;
        boolean boolean56 = hours53.isSupported(durationFieldType55);
        org.joda.time.Hours hours57 = hours50.minus(hours53);
        org.joda.time.Hours hours58 = hours42.plus(hours57);
        org.joda.time.Hours hours59 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours60 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod61 = hours60.toMutablePeriod();
        org.joda.time.Hours hours62 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours63 = hours60.minus(hours62);
        int int64 = hours59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours62);
        org.joda.time.Hours hours65 = hours42.plus(hours62);
        org.joda.time.Hours hours66 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod67 = hours66.toMutablePeriod();
        org.joda.time.Hours hours68 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours69 = hours66.minus(hours68);
        org.joda.time.DurationFieldType durationFieldType70 = null;
        int int71 = hours66.get(durationFieldType70);
        org.joda.time.Hours hours73 = hours66.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval74 = null;
        org.joda.time.Hours hours75 = org.joda.time.Hours.hoursIn(readableInterval74);
        int int76 = hours73.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours75);
        boolean boolean77 = hours62.isGreaterThan(hours73);
        org.joda.time.Hours hours79 = hours62.multipliedBy(16);
        org.joda.time.Hours hours81 = hours62.multipliedBy((int) (short) 0);
        org.joda.time.Period period82 = hours81.toPeriod();
        org.joda.time.Hours hours83 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours84 = org.joda.time.Hours.EIGHT;
        int int86 = hours84.getValue((int) (short) 0);
        org.joda.time.Hours hours87 = hours83.minus(hours84);
        org.joda.time.Hours hours88 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType89 = null;
        int int90 = hours88.get(durationFieldType89);
        org.joda.time.DurationFieldType durationFieldType91 = hours88.getFieldType();
        int int92 = hours83.get(durationFieldType91);
        boolean boolean93 = hours81.isSupported(durationFieldType91);
        org.joda.time.Hours hours94 = hours31.minus(hours81);
        org.joda.time.Hours hours96 = hours81.plus(92);
        org.joda.time.Hours hours97 = hours7.plus(hours96);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 8 + "'", int12 == 8);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 8 + "'", int21 == 8);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 7 + "'", int27 == 7);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 8 + "'", int28 == 8);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(mutablePeriod44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(mutablePeriod52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(mutablePeriod61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(mutablePeriod67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertNotNull(hours75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(hours79);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertNotNull(hours83);
        org.junit.Assert.assertNotNull(hours84);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 8 + "'", int86 == 8);
        org.junit.Assert.assertNotNull(hours87);
        org.junit.Assert.assertNotNull(hours88);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertNotNull(durationFieldType91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 7 + "'", int92 == 7);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(hours94);
        org.junit.Assert.assertNotNull(hours96);
        org.junit.Assert.assertNotNull(hours97);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours1 = org.joda.time.Hours.MAX_VALUE;
        int int2 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours1);
        int int3 = hours1.size();
        org.joda.time.Hours hours5 = hours1.plus((int) (short) 0);
        org.joda.time.PeriodType periodType6 = hours5.getPeriodType();
        org.joda.time.Hours hours8 = hours5.dividedBy((int) '4');
        org.joda.time.PeriodType periodType9 = hours5.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(periodType9);
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.Hours hours12 = hours10.negated();
        org.joda.time.DurationFieldType durationFieldType13 = hours12.getFieldType();
        org.joda.time.Hours hours14 = hours7.minus(hours12);
        org.joda.time.Hours hours15 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours12);
        org.joda.time.Hours hours16 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours18 = hours16.plus(1);
        org.joda.time.Hours hours20 = hours16.dividedBy((int) (byte) -1);
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod22 = hours21.toMutablePeriod();
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours24 = hours21.minus(hours23);
        org.joda.time.Duration duration25 = hours21.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod26 = hours21.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        int int29 = hours27.getValue((int) (short) 0);
        java.lang.String str30 = hours27.toString();
        boolean boolean31 = hours21.isGreaterThan(hours27);
        org.joda.time.Hours hours33 = hours27.minus(10);
        org.joda.time.Hours hours34 = hours27.negated();
        org.joda.time.Hours hours35 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod36 = hours35.toMutablePeriod();
        org.joda.time.Hours hours37 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours38 = hours35.minus(hours37);
        org.joda.time.DurationFieldType durationFieldType39 = null;
        int int40 = hours35.get(durationFieldType39);
        org.joda.time.Hours hours42 = hours35.multipliedBy(1);
        org.joda.time.Hours hours43 = org.joda.time.Hours.ONE;
        int int44 = hours42.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours43);
        int int45 = hours27.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours42);
        java.lang.String str46 = hours42.toString();
        int int47 = hours16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours42);
        boolean boolean48 = hours15.isLessThan(hours42);
        org.joda.time.PeriodType periodType49 = hours15.getPeriodType();
        org.joda.time.PeriodType periodType50 = hours15.getPeriodType();
        java.lang.Class<?> wildcardClass51 = hours15.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 8 + "'", int29 == 8);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "PT8H" + "'", str30, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "PT7H" + "'", str46, "PT7H");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        int int9 = hours8.getHours();
        org.joda.time.Hours hours11 = hours8.plus(10);
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = hours12.get(durationFieldType16);
        org.joda.time.Hours hours19 = hours12.multipliedBy(1);
        boolean boolean20 = hours8.isGreaterThan(hours12);
        org.joda.time.Hours hours21 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        int int25 = hours23.getValue((int) (short) 0);
        org.joda.time.Hours hours26 = hours22.minus(hours23);
        org.joda.time.Hours hours27 = hours21.minus(hours22);
        int int28 = hours21.size();
        org.joda.time.Hours hours29 = hours12.plus(hours21);
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod32 = hours31.toMutablePeriod();
        org.joda.time.Hours hours33 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours34 = hours31.minus(hours33);
        int int35 = hours30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours33);
        org.joda.time.Hours hours37 = hours33.multipliedBy(0);
        org.joda.time.Duration duration38 = hours33.toStandardDuration();
        org.joda.time.Hours hours40 = hours33.dividedBy((int) (short) -1);
        int int41 = hours40.size();
        boolean boolean42 = hours29.isLessThan(hours40);
        boolean boolean43 = hours0.isGreaterThan(hours40);
        org.joda.time.PeriodType periodType44 = hours0.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 8 + "'", int25 == 8);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(periodType44);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        org.joda.time.Hours hours8 = hours6.plus((int) ' ');
        org.joda.time.DurationFieldType durationFieldType9 = hours8.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(durationFieldType9);
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) (short) 0);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.multipliedBy(1);
        org.joda.time.Hours hours10 = org.joda.time.Hours.ONE;
        int int11 = hours9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours10);
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        boolean boolean13 = hours9.equals((java.lang.Object) hours12);
        org.joda.time.Hours hours14 = hours1.minus(hours9);
        int int15 = hours14.size();
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        int int21 = hours16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours19);
        org.joda.time.Hours hours23 = hours16.minus((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod24 = hours16.toMutablePeriod();
        int int25 = hours16.getHours();
        org.joda.time.Hours hours26 = hours14.plus(hours16);
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours28 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod29 = hours28.toMutablePeriod();
        org.joda.time.Hours hours30 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours31 = hours28.minus(hours30);
        int int32 = hours27.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours30);
        org.joda.time.Hours hours34 = hours27.minus((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod35 = hours27.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours37 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod38 = hours37.toMutablePeriod();
        org.joda.time.Hours hours39 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours40 = hours37.minus(hours39);
        int int41 = hours36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours39);
        org.joda.time.DurationFieldType durationFieldType42 = null;
        boolean boolean43 = hours36.isSupported(durationFieldType42);
        org.joda.time.Hours hours45 = hours36.minus((int) (short) -1);
        org.joda.time.Hours hours46 = hours45.negated();
        org.joda.time.Period period47 = hours45.toPeriod();
        boolean boolean48 = hours27.equals((java.lang.Object) hours45);
        org.joda.time.Hours hours49 = hours14.plus(hours27);
        org.joda.time.Hours hours51 = hours27.dividedBy((int) (byte) 100);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 7 + "'", int25 == 7);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours51);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod8 = hours7.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours7.minus(hours9);
        org.joda.time.Hours hours12 = hours9.plus(8);
        org.joda.time.Hours hours13 = hours0.minus(hours12);
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        int int17 = hours15.getValue((int) (short) 0);
        org.joda.time.Hours hours18 = hours14.minus(hours15);
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        org.joda.time.Hours hours24 = hours21.plus(8);
        org.joda.time.Hours hours25 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = hours25.get(durationFieldType26);
        org.joda.time.DurationFieldType durationFieldType28 = hours25.getFieldType();
        boolean boolean29 = hours24.isSupported(durationFieldType28);
        boolean boolean30 = hours14.isSupported(durationFieldType28);
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period32 = hours31.toPeriod();
        org.joda.time.Hours hours34 = hours31.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod35 = hours34.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.THREE;
        org.joda.time.Period period37 = hours36.toPeriod();
        org.joda.time.Hours hours39 = hours36.plus((int) (byte) -1);
        org.joda.time.Hours hours40 = hours34.minus(hours36);
        org.joda.time.Hours hours41 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod42 = hours41.toMutablePeriod();
        org.joda.time.Hours hours43 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours44 = hours41.minus(hours43);
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = hours41.get(durationFieldType45);
        org.joda.time.Hours hours48 = hours41.minus((int) (short) 0);
        org.joda.time.Hours hours49 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = hours49.get(durationFieldType50);
        org.joda.time.DurationFieldType durationFieldType52 = hours49.getFieldType();
        int int53 = hours48.get(durationFieldType52);
        int int54 = hours36.get(durationFieldType52);
        boolean boolean55 = hours14.equals((java.lang.Object) hours36);
        boolean boolean56 = hours12.equals((java.lang.Object) hours36);
        org.joda.time.Hours hours58 = hours36.plus(16);
        org.joda.time.Period period59 = hours58.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 7 + "'", int53 == 7);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 3 + "'", int54 == 3);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(period59);
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        int int18 = hours1.size();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours9 = hours3.minus(hours5);
        org.joda.time.Hours hours11 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType12 = hours11.getFieldType();
        org.joda.time.Hours hours14 = hours11.plus(700);
        boolean boolean15 = hours9.isGreaterThan(hours14);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period17 = hours16.toPeriod();
        org.joda.time.Hours hours19 = hours16.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.THREE;
        org.joda.time.Period period22 = hours21.toPeriod();
        org.joda.time.Hours hours24 = hours21.plus((int) (byte) -1);
        org.joda.time.Hours hours25 = hours19.minus(hours21);
        org.joda.time.Hours hours27 = hours21.plus(10);
        org.joda.time.Hours hours28 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours29 = hours28.negated();
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours31 = org.joda.time.Hours.EIGHT;
        int int33 = hours31.getValue((int) (short) 0);
        org.joda.time.Hours hours34 = hours30.minus(hours31);
        org.joda.time.Hours hours35 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType36 = null;
        int int37 = hours35.get(durationFieldType36);
        org.joda.time.DurationFieldType durationFieldType38 = hours35.getFieldType();
        int int39 = hours30.get(durationFieldType38);
        boolean boolean40 = hours28.isSupported(durationFieldType38);
        int int41 = hours21.get(durationFieldType38);
        boolean boolean42 = hours9.isGreaterThan(hours21);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 8 + "'", int33 == 8);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 7 + "'", int39 == 7);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 3 + "'", int41 == 3);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours5 = hours2.plus(8);
        org.joda.time.Hours hours6 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours6.get(durationFieldType7);
        org.joda.time.DurationFieldType durationFieldType9 = hours6.getFieldType();
        boolean boolean10 = hours5.isSupported(durationFieldType9);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        int int16 = hours11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours14);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        boolean boolean18 = hours11.isSupported(durationFieldType17);
        org.joda.time.Hours hours20 = hours11.minus((int) (short) -1);
        org.joda.time.PeriodType periodType21 = hours11.getPeriodType();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        int int24 = hours22.getValue((int) (short) 0);
        org.joda.time.Hours hours25 = hours11.minus(hours22);
        org.joda.time.Hours hours26 = hours5.minus(hours25);
        org.joda.time.Hours hours28 = org.joda.time.Hours.parseHours("PT8H");
        boolean boolean29 = hours26.isLessThan(hours28);
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod32 = hours31.toMutablePeriod();
        org.joda.time.Hours hours33 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours34 = hours31.minus(hours33);
        int int35 = hours30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours33);
        org.joda.time.Hours hours37 = hours30.minus((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod38 = hours30.toMutablePeriod();
        org.joda.time.Hours hours39 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours40 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod41 = hours40.toMutablePeriod();
        org.joda.time.Hours hours42 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours43 = hours40.minus(hours42);
        int int44 = hours39.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours42);
        org.joda.time.DurationFieldType durationFieldType45 = null;
        boolean boolean46 = hours39.isSupported(durationFieldType45);
        org.joda.time.Hours hours48 = hours39.minus((int) (short) -1);
        org.joda.time.Hours hours49 = hours48.negated();
        org.joda.time.Period period50 = hours48.toPeriod();
        boolean boolean51 = hours30.equals((java.lang.Object) hours48);
        boolean boolean52 = hours26.equals((java.lang.Object) boolean51);
        org.joda.time.Hours hours53 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours54 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours55 = org.joda.time.Hours.EIGHT;
        int int57 = hours55.getValue((int) (short) 0);
        org.joda.time.Hours hours58 = hours54.minus(hours55);
        org.joda.time.Hours hours59 = hours53.minus(hours54);
        org.joda.time.Hours hours61 = hours54.dividedBy(1);
        org.joda.time.Duration duration62 = hours54.toStandardDuration();
        boolean boolean63 = hours26.equals((java.lang.Object) hours54);
        org.joda.time.Hours hours64 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours26);
        org.joda.time.PeriodType periodType65 = hours26.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 8 + "'", int24 == 8);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 8 + "'", int57 == 8);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(periodType65);
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.Hours hours4 = hours0.dividedBy(100);
        org.joda.time.Hours hours6 = hours4.multipliedBy(0);
        org.joda.time.Hours hours8 = hours4.multipliedBy(16);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) (short) -1);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        int int7 = hours2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours5);
        org.joda.time.Hours hours8 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours2);
        org.joda.time.PeriodType periodType9 = hours2.getPeriodType();
        org.joda.time.Hours hours10 = hours1.plus(hours2);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        int int14 = hours12.getValue((int) (short) 0);
        org.joda.time.Hours hours15 = hours11.minus(hours12);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        org.joda.time.Hours hours21 = hours18.plus(8);
        org.joda.time.Hours hours22 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = hours22.get(durationFieldType23);
        org.joda.time.DurationFieldType durationFieldType25 = hours22.getFieldType();
        boolean boolean26 = hours21.isSupported(durationFieldType25);
        boolean boolean27 = hours11.isSupported(durationFieldType25);
        org.joda.time.Hours hours28 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = hours28.get(durationFieldType29);
        org.joda.time.DurationFieldType durationFieldType31 = hours28.getFieldType();
        org.joda.time.DurationFieldType durationFieldType32 = hours28.getFieldType();
        boolean boolean33 = hours11.isSupported(durationFieldType32);
        boolean boolean34 = hours2.isLessThan(hours11);
        org.joda.time.Hours hours36 = hours11.plus(9);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8 + "'", int14 == 8);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(hours36);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours2 = hours0.dividedBy((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType3 = hours2.getFieldType();
        org.joda.time.Hours hours5 = hours2.multipliedBy(364);
        java.lang.String str6 = hours5.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT-364H" + "'", str6, "PT-364H");
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours5 = hours2.plus(8);
        org.joda.time.Hours hours6 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours6.get(durationFieldType7);
        org.joda.time.DurationFieldType durationFieldType9 = hours6.getFieldType();
        boolean boolean10 = hours5.isSupported(durationFieldType9);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        int int16 = hours11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours14);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        boolean boolean18 = hours11.isSupported(durationFieldType17);
        org.joda.time.Hours hours20 = hours11.minus((int) (short) -1);
        org.joda.time.PeriodType periodType21 = hours11.getPeriodType();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        int int24 = hours22.getValue((int) (short) 0);
        org.joda.time.Hours hours25 = hours11.minus(hours22);
        org.joda.time.Hours hours26 = hours5.minus(hours25);
        org.joda.time.Hours hours27 = org.joda.time.Hours.THREE;
        org.joda.time.Period period28 = hours27.toPeriod();
        org.joda.time.Hours hours30 = hours27.plus((int) (byte) -1);
        java.lang.String str31 = hours30.toString();
        org.joda.time.Hours hours32 = hours26.plus(hours30);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 8 + "'", int24 == 8);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "PT2H" + "'", str31, "PT2H");
        org.junit.Assert.assertNotNull(hours32);
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours5.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = hours5.getFieldType();
        int int9 = hours0.get(durationFieldType8);
        org.joda.time.Hours hours11 = hours0.multipliedBy(7);
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        org.joda.time.Duration duration16 = hours12.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod17 = hours12.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        int int20 = hours18.getValue((int) (short) 0);
        java.lang.String str21 = hours18.toString();
        boolean boolean22 = hours12.isGreaterThan(hours18);
        org.joda.time.Hours hours24 = hours12.multipliedBy((int) '4');
        int int25 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours24);
        org.joda.time.Hours hours26 = hours24.negated();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7 + "'", int9 == 7);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 8 + "'", int20 == 8);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT8H" + "'", str21, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(hours26);
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours24 = hours1.plus(hours21);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period26 = hours25.toPeriod();
        org.joda.time.Hours hours28 = hours25.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod29 = hours28.toMutablePeriod();
        org.joda.time.Hours hours30 = org.joda.time.Hours.THREE;
        org.joda.time.Period period31 = hours30.toPeriod();
        org.joda.time.Hours hours33 = hours30.plus((int) (byte) -1);
        org.joda.time.Hours hours34 = hours28.minus(hours30);
        org.joda.time.DurationFieldType durationFieldType35 = hours34.getFieldType();
        org.joda.time.Hours hours36 = hours24.plus(hours34);
        org.joda.time.Hours hours38 = hours36.multipliedBy((int) (byte) -1);
        org.joda.time.Hours hours39 = hours38.negated();
        org.joda.time.Hours hours40 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod41 = hours40.toMutablePeriod();
        org.joda.time.Hours hours42 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours43 = hours40.minus(hours42);
        org.joda.time.Duration duration44 = hours40.toStandardDuration();
        java.lang.String str45 = hours40.toString();
        org.joda.time.Hours hours47 = hours40.minus((-6));
        org.joda.time.Hours hours49 = hours40.multipliedBy(7);
        org.joda.time.Hours hours51 = hours49.minus(2147483647);
        org.joda.time.Hours hours52 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours53 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod54 = hours53.toMutablePeriod();
        org.joda.time.Hours hours55 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours56 = hours53.minus(hours55);
        int int57 = hours52.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours55);
        org.joda.time.DurationFieldType durationFieldType58 = null;
        boolean boolean59 = hours52.isSupported(durationFieldType58);
        org.joda.time.Hours hours61 = hours52.minus((int) (short) -1);
        org.joda.time.PeriodType periodType62 = hours52.getPeriodType();
        int int63 = hours52.getHours();
        org.joda.time.DurationFieldType durationFieldType65 = hours52.getFieldType((int) (short) 0);
        int int66 = hours51.get(durationFieldType65);
        int int67 = hours39.get(durationFieldType65);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "PT7H" + "'", str45, "PT7H");
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 7 + "'", int63 == 7);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-2147483598) + "'", int66 == (-2147483598));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 20 + "'", int67 == 20);
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(100);
        org.joda.time.Period period2 = hours1.toPeriod();
        org.joda.time.Hours hours4 = hours1.minus(8);
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours10 = hours8.minus((int) (byte) 100);
        boolean boolean11 = hours1.equals((java.lang.Object) hours10);
        org.joda.time.MutablePeriod mutablePeriod12 = hours1.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Hours hours15 = hours1.minus(hours14);
        org.joda.time.Hours hours16 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours14);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Hours hours9 = org.joda.time.Hours.hoursIn(readableInterval8);
        int int10 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours9);
        org.joda.time.Period period11 = hours9.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(period11);
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.PeriodType periodType10 = hours0.getPeriodType();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        int int13 = hours11.getValue((int) (short) 0);
        org.joda.time.Hours hours14 = hours0.minus(hours11);
        org.joda.time.Hours hours16 = hours0.plus(7);
        org.joda.time.Hours hours17 = hours0.negated();
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours23 = hours20.minus(hours22);
        int int24 = hours19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours22);
        org.joda.time.Hours hours25 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours19);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod27 = hours26.toMutablePeriod();
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours29 = hours26.minus(hours28);
        org.joda.time.Hours hours31 = hours28.plus(8);
        org.joda.time.Hours hours32 = hours19.minus(hours31);
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours34 = org.joda.time.Hours.EIGHT;
        int int36 = hours34.getValue((int) (short) 0);
        org.joda.time.Hours hours37 = hours33.minus(hours34);
        org.joda.time.Hours hours38 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod39 = hours38.toMutablePeriod();
        org.joda.time.Hours hours40 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours41 = hours38.minus(hours40);
        org.joda.time.Hours hours43 = hours40.plus(8);
        org.joda.time.Hours hours44 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = hours44.get(durationFieldType45);
        org.joda.time.DurationFieldType durationFieldType47 = hours44.getFieldType();
        boolean boolean48 = hours43.isSupported(durationFieldType47);
        boolean boolean49 = hours33.isSupported(durationFieldType47);
        org.joda.time.Hours hours50 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period51 = hours50.toPeriod();
        org.joda.time.Hours hours53 = hours50.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod54 = hours53.toMutablePeriod();
        org.joda.time.Hours hours55 = org.joda.time.Hours.THREE;
        org.joda.time.Period period56 = hours55.toPeriod();
        org.joda.time.Hours hours58 = hours55.plus((int) (byte) -1);
        org.joda.time.Hours hours59 = hours53.minus(hours55);
        org.joda.time.Hours hours60 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod61 = hours60.toMutablePeriod();
        org.joda.time.Hours hours62 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours63 = hours60.minus(hours62);
        org.joda.time.DurationFieldType durationFieldType64 = null;
        int int65 = hours60.get(durationFieldType64);
        org.joda.time.Hours hours67 = hours60.minus((int) (short) 0);
        org.joda.time.Hours hours68 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType69 = null;
        int int70 = hours68.get(durationFieldType69);
        org.joda.time.DurationFieldType durationFieldType71 = hours68.getFieldType();
        int int72 = hours67.get(durationFieldType71);
        int int73 = hours55.get(durationFieldType71);
        boolean boolean74 = hours33.equals((java.lang.Object) hours55);
        boolean boolean75 = hours31.equals((java.lang.Object) hours55);
        org.joda.time.Hours hours77 = org.joda.time.Hours.parseHours("PT8H");
        org.joda.time.Hours hours79 = hours77.dividedBy(3);
        org.joda.time.Hours hours81 = hours79.dividedBy((-6));
        org.joda.time.Hours hours83 = hours81.multipliedBy((int) ' ');
        boolean boolean84 = hours55.isLessThan(hours81);
        org.joda.time.Hours hours85 = hours17.minus(hours81);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8 + "'", int13 == 8);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 8 + "'", int36 == 8);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(mutablePeriod61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(durationFieldType71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 7 + "'", int72 == 7);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 3 + "'", int73 == 3);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertNotNull(hours79);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertNotNull(hours83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(hours85);
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.Hours hours10 = hours9.negated();
        org.joda.time.Duration duration11 = hours10.toStandardDuration();
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        int int17 = hours12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours15);
        org.joda.time.Hours hours18 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours12);
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        org.joda.time.Hours hours24 = hours21.plus(8);
        org.joda.time.Hours hours25 = hours12.minus(hours24);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        boolean boolean33 = hours26.isSupported(durationFieldType32);
        org.joda.time.Hours hours35 = hours26.minus((int) (short) -1);
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod37 = hours36.toMutablePeriod();
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours39 = hours36.minus(hours38);
        org.joda.time.Hours hours41 = hours38.plus(8);
        org.joda.time.Hours hours42 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = hours42.get(durationFieldType43);
        org.joda.time.DurationFieldType durationFieldType45 = hours42.getFieldType();
        boolean boolean46 = hours41.isSupported(durationFieldType45);
        int int47 = hours35.get(durationFieldType45);
        int int48 = hours24.get(durationFieldType45);
        int int49 = hours10.get(durationFieldType45);
        org.joda.time.DurationFieldType durationFieldType50 = hours10.getFieldType();
        org.joda.time.Hours hours51 = org.joda.time.Hours.ONE;
        int int52 = hours51.getHours();
        org.joda.time.Hours hours54 = hours51.plus(10);
        org.joda.time.Hours hours55 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod56 = hours55.toMutablePeriod();
        org.joda.time.Hours hours57 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours58 = hours55.minus(hours57);
        org.joda.time.Duration duration59 = hours55.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod60 = hours55.toMutablePeriod();
        org.joda.time.Hours hours61 = org.joda.time.Hours.EIGHT;
        int int63 = hours61.getValue((int) (short) 0);
        java.lang.String str64 = hours61.toString();
        boolean boolean65 = hours55.isGreaterThan(hours61);
        org.joda.time.Hours hours67 = hours61.minus(10);
        org.joda.time.Hours hours68 = hours61.negated();
        org.joda.time.Hours hours70 = hours68.plus((int) (byte) 0);
        org.joda.time.DurationFieldType durationFieldType72 = hours68.getFieldType(0);
        boolean boolean73 = hours51.equals((java.lang.Object) durationFieldType72);
        boolean boolean74 = hours10.isLessThan(hours51);
        org.joda.time.Hours hours76 = org.joda.time.Hours.hours(0);
        org.joda.time.Hours hours78 = hours76.minus((int) ' ');
        org.joda.time.Hours hours80 = hours78.dividedBy((int) (short) -1);
        org.joda.time.Hours hours81 = hours10.plus(hours80);
        org.joda.time.Period period82 = hours80.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 8 + "'", int47 == 8);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-8) + "'", int49 == (-8));
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 8 + "'", int63 == 8);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "PT8H" + "'", str64, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(durationFieldType72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(hours78);
        org.junit.Assert.assertNotNull(hours80);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertNotNull(period82);
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((-1));
        org.joda.time.Hours hours2 = hours1.negated();
        int int3 = hours2.getHours();
        org.joda.time.MutablePeriod mutablePeriod4 = hours2.toMutablePeriod();
        java.lang.Class<?> wildcardClass5 = mutablePeriod4.getClass();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours5 = hours2.plus(8);
        org.joda.time.PeriodType periodType6 = hours5.getPeriodType();
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod8 = hours7.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours7.minus(hours9);
        org.joda.time.Duration duration11 = hours7.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod12 = hours7.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        int int15 = hours13.getValue((int) (short) 0);
        java.lang.String str16 = hours13.toString();
        boolean boolean17 = hours7.isGreaterThan(hours13);
        org.joda.time.Hours hours19 = hours13.minus(10);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod22 = hours21.toMutablePeriod();
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours24 = hours21.minus(hours23);
        int int25 = hours20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours23);
        org.joda.time.Hours hours26 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours20);
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = hours20.get(durationFieldType27);
        boolean boolean29 = hours19.equals((java.lang.Object) hours20);
        org.joda.time.Hours hours31 = hours20.minus(100);
        int int32 = hours20.getHours();
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod35 = hours34.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours37 = hours34.minus(hours36);
        int int38 = hours33.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours36);
        org.joda.time.Hours hours39 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours33);
        org.joda.time.Hours hours40 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod41 = hours40.toMutablePeriod();
        org.joda.time.Hours hours42 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours43 = hours40.minus(hours42);
        org.joda.time.DurationFieldType durationFieldType44 = null;
        int int45 = hours40.get(durationFieldType44);
        org.joda.time.Hours hours47 = hours40.minus((int) (short) 0);
        org.joda.time.Hours hours48 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = hours48.get(durationFieldType49);
        org.joda.time.DurationFieldType durationFieldType51 = hours48.getFieldType();
        int int52 = hours47.get(durationFieldType51);
        org.joda.time.Hours hours53 = org.joda.time.Hours.ONE;
        int int54 = hours53.getHours();
        org.joda.time.Hours hours56 = hours53.plus(10);
        org.joda.time.Hours hours57 = hours47.minus(hours56);
        org.joda.time.Hours hours58 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours57);
        boolean boolean59 = hours33.isLessThan(hours58);
        boolean boolean60 = hours20.equals((java.lang.Object) hours33);
        org.joda.time.Hours hours61 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType62 = null;
        int int63 = hours61.get(durationFieldType62);
        org.joda.time.Hours hours65 = hours61.dividedBy(100);
        org.joda.time.Hours hours66 = hours61.negated();
        boolean boolean67 = hours33.equals((java.lang.Object) hours66);
        org.joda.time.Hours hours68 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod69 = hours68.toMutablePeriod();
        org.joda.time.Hours hours70 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours71 = hours68.minus(hours70);
        org.joda.time.DurationFieldType durationFieldType72 = hours68.getFieldType();
        boolean boolean73 = hours33.isSupported(durationFieldType72);
        boolean boolean74 = hours5.isSupported(durationFieldType72);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 8 + "'", int15 == 8);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT8H" + "'", str16, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 7 + "'", int32 == 7);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 7 + "'", int52 == 7);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(mutablePeriod69);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertNotNull(durationFieldType72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Period period2 = hours1.toPeriod();
        org.joda.time.Hours hours4 = hours1.minus((int) (byte) -1);
        org.joda.time.Period period5 = hours1.toPeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours6.get(durationFieldType7);
        org.joda.time.DurationFieldType durationFieldType9 = hours6.getFieldType();
        org.joda.time.DurationFieldType durationFieldType10 = hours6.getFieldType();
        boolean boolean11 = hours1.isLessThan(hours6);
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        org.joda.time.Duration duration16 = hours12.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod17 = hours12.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        int int20 = hours18.getValue((int) (short) 0);
        java.lang.String str21 = hours18.toString();
        boolean boolean22 = hours12.isGreaterThan(hours18);
        org.joda.time.Hours hours24 = hours18.minus(10);
        org.joda.time.Hours hours25 = hours18.negated();
        org.joda.time.Duration duration26 = hours18.toStandardDuration();
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours28 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod29 = hours28.toMutablePeriod();
        org.joda.time.Hours hours30 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours31 = hours28.minus(hours30);
        int int32 = hours27.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours30);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        boolean boolean34 = hours27.isSupported(durationFieldType33);
        org.joda.time.Hours hours36 = hours27.minus((int) (short) -1);
        org.joda.time.Hours hours37 = hours36.negated();
        org.joda.time.Hours hours39 = hours37.plus(16);
        org.joda.time.DurationFieldType durationFieldType40 = hours37.getFieldType();
        boolean boolean41 = hours18.isSupported(durationFieldType40);
        boolean boolean42 = hours6.equals((java.lang.Object) hours18);
        org.joda.time.Hours hours43 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours44 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod45 = hours44.toMutablePeriod();
        org.joda.time.Hours hours46 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours47 = hours44.minus(hours46);
        int int48 = hours43.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours46);
        org.joda.time.DurationFieldType durationFieldType49 = null;
        boolean boolean50 = hours43.isSupported(durationFieldType49);
        org.joda.time.Hours hours51 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod52 = hours51.toMutablePeriod();
        org.joda.time.Hours hours53 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours54 = hours51.minus(hours53);
        org.joda.time.Duration duration55 = hours51.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod56 = hours51.toMutablePeriod();
        org.joda.time.Hours hours57 = org.joda.time.Hours.EIGHT;
        int int59 = hours57.getValue((int) (short) 0);
        java.lang.String str60 = hours57.toString();
        boolean boolean61 = hours51.isGreaterThan(hours57);
        org.joda.time.Hours hours63 = hours57.minus(10);
        org.joda.time.Hours hours64 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours65 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod66 = hours65.toMutablePeriod();
        org.joda.time.Hours hours67 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours68 = hours65.minus(hours67);
        int int69 = hours64.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours67);
        org.joda.time.Hours hours70 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours64);
        org.joda.time.DurationFieldType durationFieldType71 = null;
        int int72 = hours64.get(durationFieldType71);
        boolean boolean73 = hours63.equals((java.lang.Object) hours64);
        java.lang.String str74 = hours63.toString();
        org.joda.time.ReadableInterval readableInterval75 = null;
        org.joda.time.Hours hours76 = org.joda.time.Hours.hoursIn(readableInterval75);
        org.joda.time.DurationFieldType durationFieldType77 = hours76.getFieldType();
        org.joda.time.Hours hours79 = hours76.dividedBy((int) (byte) 10);
        org.joda.time.Hours hours81 = hours76.plus((int) (byte) 1);
        org.joda.time.Hours hours83 = hours76.dividedBy(100);
        int int84 = hours63.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours83);
        boolean boolean85 = hours43.isGreaterThan(hours63);
        boolean boolean86 = hours6.isLessThan(hours43);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 8 + "'", int20 == 8);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT8H" + "'", str21, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(mutablePeriod45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(mutablePeriod52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 8 + "'", int59 == 8);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "PT8H" + "'", str60, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(mutablePeriod66);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "PT-2H" + "'", str74, "PT-2H");
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(durationFieldType77);
        org.junit.Assert.assertNotNull(hours79);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertNotNull(hours83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        int int4 = hours2.size();
        org.joda.time.Hours hours5 = org.joda.time.Hours.ONE;
        int int6 = hours5.getHours();
        org.joda.time.Hours hours8 = hours5.plus(10);
        org.joda.time.Period period9 = hours8.toPeriod();
        boolean boolean10 = hours2.isLessThan(hours8);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        int int16 = hours11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours14);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        boolean boolean18 = hours11.isSupported(durationFieldType17);
        org.joda.time.Hours hours20 = hours11.minus((int) (short) -1);
        org.joda.time.PeriodType periodType21 = hours11.getPeriodType();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        int int24 = hours22.getValue((int) (short) 0);
        org.joda.time.Hours hours25 = hours11.minus(hours22);
        org.joda.time.Hours hours27 = hours11.plus(7);
        org.joda.time.Hours hours28 = hours11.negated();
        org.joda.time.Hours hours30 = hours28.multipliedBy(100);
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours32 = org.joda.time.Hours.EIGHT;
        int int34 = hours32.getValue((int) (short) 0);
        org.joda.time.Hours hours35 = hours31.minus(hours32);
        boolean boolean37 = hours32.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours38 = null;
        org.joda.time.Hours hours39 = hours32.minus(hours38);
        org.joda.time.Hours hours40 = hours39.negated();
        org.joda.time.Hours hours41 = hours28.plus(hours39);
        boolean boolean42 = hours2.equals((java.lang.Object) hours41);
        org.joda.time.Hours hours43 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours44 = hours43.negated();
        org.joda.time.DurationFieldType durationFieldType45 = hours43.getFieldType();
        java.lang.String str46 = hours43.toString();
        org.joda.time.Hours hours47 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours48 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours49 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod50 = hours49.toMutablePeriod();
        org.joda.time.Hours hours51 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours52 = hours49.minus(hours51);
        int int53 = hours48.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours51);
        org.joda.time.MutablePeriod mutablePeriod54 = hours48.toMutablePeriod();
        org.joda.time.Hours hours56 = hours48.minus(7);
        org.joda.time.Hours hours57 = hours47.minus(hours48);
        org.joda.time.Hours hours58 = hours43.minus(hours48);
        org.joda.time.Hours hours59 = hours2.minus(hours58);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 8 + "'", int24 == 8);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 8 + "'", int34 == 8);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "PT3H" + "'", str46, "PT3H");
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(mutablePeriod50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        int int9 = hours8.getHours();
        org.joda.time.Hours hours11 = hours8.plus(10);
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = hours12.get(durationFieldType16);
        org.joda.time.Hours hours19 = hours12.multipliedBy(1);
        boolean boolean20 = hours8.isGreaterThan(hours12);
        org.joda.time.Hours hours21 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        int int25 = hours23.getValue((int) (short) 0);
        org.joda.time.Hours hours26 = hours22.minus(hours23);
        org.joda.time.Hours hours27 = hours21.minus(hours22);
        int int28 = hours21.size();
        org.joda.time.Hours hours29 = hours12.plus(hours21);
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod32 = hours31.toMutablePeriod();
        org.joda.time.Hours hours33 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours34 = hours31.minus(hours33);
        int int35 = hours30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours33);
        org.joda.time.Hours hours37 = hours33.multipliedBy(0);
        org.joda.time.Duration duration38 = hours33.toStandardDuration();
        org.joda.time.Hours hours40 = hours33.dividedBy((int) (short) -1);
        int int41 = hours40.size();
        boolean boolean42 = hours29.isLessThan(hours40);
        boolean boolean43 = hours0.isGreaterThan(hours40);
        org.joda.time.Hours hours44 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod45 = hours44.toMutablePeriod();
        org.joda.time.Hours hours46 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours47 = hours44.minus(hours46);
        org.joda.time.DurationFieldType durationFieldType48 = null;
        int int49 = hours44.get(durationFieldType48);
        org.joda.time.Hours hours51 = hours44.minus((int) (short) 0);
        org.joda.time.Hours hours52 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod53 = hours52.toMutablePeriod();
        org.joda.time.Hours hours54 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours55 = hours52.minus(hours54);
        org.joda.time.DurationFieldType durationFieldType56 = null;
        boolean boolean57 = hours54.isSupported(durationFieldType56);
        org.joda.time.Hours hours58 = hours51.minus(hours54);
        org.joda.time.PeriodType periodType59 = hours51.getPeriodType();
        org.joda.time.Hours hours61 = hours51.multipliedBy((int) (byte) 1);
        boolean boolean62 = hours0.isGreaterThan(hours61);
        java.lang.String str63 = hours0.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 8 + "'", int25 == 8);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(mutablePeriod45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(mutablePeriod53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "PT7H" + "'", str63, "PT7H");
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(0);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        int int6 = hours4.getValue((int) (short) 0);
        org.joda.time.Hours hours7 = hours3.minus(hours4);
        org.joda.time.Hours hours8 = hours2.minus(hours3);
        org.joda.time.PeriodType periodType9 = hours8.getPeriodType();
        boolean boolean10 = hours1.isGreaterThan(hours8);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType12 = hours1.getFieldType(41297762);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 41297762");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 8 + "'", int6 == 8);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours2 = hours0.plus(1);
        org.joda.time.Period period3 = hours0.toPeriod();
        org.joda.time.Hours hours5 = hours0.dividedBy((-1));
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType7 = hours0.getFieldType(8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 8");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(hours5);
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.PeriodType periodType10 = hours0.getPeriodType();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        int int13 = hours11.getValue((int) (short) 0);
        org.joda.time.Hours hours14 = hours0.minus(hours11);
        org.joda.time.Hours hours16 = hours0.plus(7);
        org.joda.time.Hours hours17 = hours0.negated();
        org.joda.time.Hours hours19 = hours17.multipliedBy(100);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        int int23 = hours21.getValue((int) (short) 0);
        org.joda.time.Hours hours24 = hours20.minus(hours21);
        boolean boolean26 = hours21.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours27 = null;
        org.joda.time.Hours hours28 = hours21.minus(hours27);
        org.joda.time.Hours hours29 = hours28.negated();
        org.joda.time.Hours hours30 = hours17.plus(hours28);
        org.joda.time.Hours hours32 = hours30.minus(5);
        org.joda.time.Hours hours34 = hours30.multipliedBy((int) (byte) 10);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8 + "'", int13 == 8);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 8 + "'", int23 == 8);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours34);
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        int int9 = hours7.getValue((int) (short) 0);
        org.joda.time.Hours hours10 = hours6.minus(hours7);
        org.joda.time.Hours hours11 = hours5.minus(hours6);
        int int12 = hours5.size();
        org.joda.time.Duration duration13 = hours5.toStandardDuration();
        boolean boolean14 = hours1.isGreaterThan(hours5);
        org.joda.time.Hours hours16 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType17 = hours16.getFieldType();
        org.joda.time.Period period18 = hours16.toPeriod();
        org.joda.time.Period period19 = hours16.toPeriod();
        org.joda.time.Hours hours21 = hours16.plus(0);
        org.joda.time.Hours hours22 = hours21.negated();
        org.joda.time.DurationFieldType durationFieldType23 = hours21.getFieldType();
        org.joda.time.Hours hours24 = hours5.plus(hours21);
        org.joda.time.Hours hours26 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = hours27.get(durationFieldType31);
        org.joda.time.Hours hours34 = hours27.minus((int) (short) 0);
        org.joda.time.Hours hours35 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod36 = hours35.toMutablePeriod();
        org.joda.time.Hours hours37 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours38 = hours35.minus(hours37);
        org.joda.time.DurationFieldType durationFieldType39 = null;
        boolean boolean40 = hours37.isSupported(durationFieldType39);
        org.joda.time.Hours hours41 = hours34.minus(hours37);
        org.joda.time.Hours hours42 = hours26.plus(hours41);
        org.joda.time.Hours hours43 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours44 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod45 = hours44.toMutablePeriod();
        org.joda.time.Hours hours46 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours47 = hours44.minus(hours46);
        int int48 = hours43.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours46);
        org.joda.time.Hours hours49 = hours26.plus(hours46);
        org.joda.time.Hours hours50 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod51 = hours50.toMutablePeriod();
        org.joda.time.Hours hours52 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours53 = hours50.minus(hours52);
        org.joda.time.DurationFieldType durationFieldType54 = null;
        int int55 = hours50.get(durationFieldType54);
        org.joda.time.Hours hours57 = hours50.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval58 = null;
        org.joda.time.Hours hours59 = org.joda.time.Hours.hoursIn(readableInterval58);
        int int60 = hours57.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours59);
        boolean boolean61 = hours46.isGreaterThan(hours57);
        org.joda.time.Hours hours63 = hours46.multipliedBy(16);
        org.joda.time.Hours hours65 = hours46.multipliedBy((int) (short) 0);
        org.joda.time.Hours hours66 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod67 = hours66.toMutablePeriod();
        org.joda.time.Hours hours68 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours69 = hours66.minus(hours68);
        org.joda.time.Duration duration70 = hours66.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod71 = hours66.toMutablePeriod();
        org.joda.time.Hours hours72 = org.joda.time.Hours.EIGHT;
        int int74 = hours72.getValue((int) (short) 0);
        java.lang.String str75 = hours72.toString();
        boolean boolean76 = hours66.isGreaterThan(hours72);
        org.joda.time.Hours hours78 = hours72.minus(10);
        org.joda.time.Hours hours79 = hours72.negated();
        org.joda.time.Hours hours81 = hours79.plus((int) (byte) 0);
        org.joda.time.DurationFieldType durationFieldType83 = hours79.getFieldType(0);
        java.lang.Class<?> wildcardClass84 = hours79.getClass();
        boolean boolean85 = hours65.equals((java.lang.Object) wildcardClass84);
        boolean boolean86 = hours21.isGreaterThan(hours65);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(mutablePeriod45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(mutablePeriod67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertNotNull(mutablePeriod71);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 8 + "'", int74 == 8);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "PT8H" + "'", str75, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(hours78);
        org.junit.Assert.assertNotNull(hours79);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertNotNull(durationFieldType83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours9 = hours3.minus(hours5);
        org.joda.time.Hours hours11 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType12 = hours11.getFieldType();
        org.joda.time.Hours hours14 = hours11.plus(700);
        boolean boolean15 = hours9.isGreaterThan(hours14);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        int int21 = hours16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours19);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = hours16.isSupported(durationFieldType22);
        org.joda.time.Hours hours25 = hours16.minus((int) (short) -1);
        org.joda.time.PeriodType periodType26 = hours16.getPeriodType();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        int int29 = hours27.getValue((int) (short) 0);
        org.joda.time.Hours hours30 = hours16.minus(hours27);
        int int31 = hours16.size();
        org.joda.time.Hours hours33 = hours16.dividedBy(5);
        org.joda.time.Hours hours34 = hours9.plus(hours16);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 8 + "'", int29 == 8);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        org.joda.time.Hours hours0 = org.joda.time.Hours.EIGHT;
        int int1 = hours0.size();
        org.joda.time.Hours hours3 = hours0.dividedBy(100);
        org.joda.time.Hours hours4 = hours3.negated();
        org.joda.time.Hours hours6 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        int int12 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours10);
        org.joda.time.MutablePeriod mutablePeriod13 = hours7.toMutablePeriod();
        org.joda.time.Hours hours14 = hours6.minus(hours7);
        org.joda.time.Hours hours15 = hours3.plus(hours6);
        org.joda.time.Hours hours17 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = hours18.get(durationFieldType22);
        org.joda.time.Hours hours25 = hours18.minus((int) (short) 0);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod27 = hours26.toMutablePeriod();
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours29 = hours26.minus(hours28);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        boolean boolean31 = hours28.isSupported(durationFieldType30);
        org.joda.time.Hours hours32 = hours25.minus(hours28);
        org.joda.time.Hours hours33 = hours17.plus(hours32);
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours35 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod36 = hours35.toMutablePeriod();
        org.joda.time.Hours hours37 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours38 = hours35.minus(hours37);
        int int39 = hours34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours37);
        org.joda.time.Hours hours40 = hours17.plus(hours37);
        org.joda.time.Hours hours41 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod42 = hours41.toMutablePeriod();
        org.joda.time.Hours hours43 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours44 = hours41.minus(hours43);
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = hours41.get(durationFieldType45);
        org.joda.time.Hours hours48 = hours41.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval49 = null;
        org.joda.time.Hours hours50 = org.joda.time.Hours.hoursIn(readableInterval49);
        int int51 = hours48.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours50);
        boolean boolean52 = hours37.isGreaterThan(hours48);
        org.joda.time.Hours hours54 = hours37.multipliedBy(16);
        org.joda.time.Hours hours56 = hours37.multipliedBy((int) (short) 0);
        boolean boolean57 = hours6.isGreaterThan(hours56);
        org.joda.time.Hours hours59 = hours56.multipliedBy((-8));
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(hours59);
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        org.joda.time.Hours hours0 = org.joda.time.Hours.FIVE;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod2 = hours0.toMutablePeriod();
        // The following exception was thrown during execution in test generation
        try {
            int int4 = hours0.getValue((-2147483598));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -2147483598");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        int int27 = hours25.getValue((int) (short) 0);
        org.joda.time.Hours hours28 = hours24.minus(hours25);
        org.joda.time.Hours hours29 = hours23.minus(hours24);
        org.joda.time.Hours hours31 = hours24.dividedBy(1);
        org.joda.time.Duration duration32 = hours24.toStandardDuration();
        boolean boolean33 = hours20.isGreaterThan(hours24);
        org.joda.time.Hours hours34 = hours20.negated();
        org.joda.time.Hours hours35 = hours34.negated();
        org.joda.time.Hours hours37 = hours35.multipliedBy((int) 'a');
        int int38 = hours35.size();
        org.joda.time.Hours hours40 = hours35.plus((int) (byte) 1);
        org.joda.time.Period period41 = hours35.toPeriod();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 8 + "'", int27 == 8);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(period41);
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.multipliedBy((int) (short) 10);
        org.joda.time.MutablePeriod mutablePeriod10 = hours0.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = hours13.get(durationFieldType17);
        org.joda.time.Hours hours20 = hours13.minus((int) (short) 0);
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod22 = hours21.toMutablePeriod();
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours24 = hours21.minus(hours23);
        org.joda.time.DurationFieldType durationFieldType25 = null;
        boolean boolean26 = hours23.isSupported(durationFieldType25);
        org.joda.time.Hours hours27 = hours20.minus(hours23);
        org.joda.time.Hours hours28 = hours12.plus(hours27);
        boolean boolean29 = hours0.isLessThan(hours27);
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod31 = hours30.toMutablePeriod();
        org.joda.time.Hours hours32 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours33 = hours30.minus(hours32);
        org.joda.time.Duration duration34 = hours30.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod35 = hours30.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.EIGHT;
        int int38 = hours36.getValue((int) (short) 0);
        java.lang.String str39 = hours36.toString();
        boolean boolean40 = hours30.isGreaterThan(hours36);
        org.joda.time.Hours hours42 = hours36.minus(10);
        org.joda.time.Hours hours43 = hours36.negated();
        org.joda.time.Hours hours44 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod45 = hours44.toMutablePeriod();
        org.joda.time.Hours hours46 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours47 = hours44.minus(hours46);
        org.joda.time.DurationFieldType durationFieldType48 = null;
        int int49 = hours44.get(durationFieldType48);
        org.joda.time.Hours hours51 = hours44.multipliedBy(1);
        org.joda.time.Hours hours52 = org.joda.time.Hours.ONE;
        int int53 = hours51.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours52);
        int int54 = hours36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours51);
        boolean boolean55 = hours27.isGreaterThan(hours51);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType57 = hours27.getFieldType(15);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 15");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 8 + "'", int38 == 8);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "PT8H" + "'", str39, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(mutablePeriod45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.Hours hours10 = hours9.negated();
        org.joda.time.Period period11 = hours9.toPeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.ONE;
        int int13 = hours12.getHours();
        org.joda.time.Hours hours15 = hours12.plus(10);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours16.get(durationFieldType20);
        org.joda.time.Hours hours23 = hours16.multipliedBy(1);
        boolean boolean24 = hours12.isGreaterThan(hours16);
        int int25 = hours12.size();
        org.joda.time.Hours hours27 = hours12.plus((int) (short) 0);
        org.joda.time.Hours hours28 = hours9.plus(hours27);
        org.joda.time.Hours hours30 = hours27.multipliedBy((-8));
        int int31 = hours27.getHours();
        org.joda.time.Hours hours33 = hours27.plus((int) '#');
        org.joda.time.Duration duration34 = hours33.toStandardDuration();
        int int35 = hours33.size();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours3.multipliedBy(0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod10 = hours9.toMutablePeriod();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours12 = hours9.minus(hours11);
        int int13 = hours8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours11);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours8.isSupported(durationFieldType14);
        org.joda.time.Hours hours17 = hours8.minus((int) (short) -1);
        org.joda.time.PeriodType periodType18 = hours8.getPeriodType();
        int int19 = hours8.getHours();
        boolean boolean20 = hours3.equals((java.lang.Object) int19);
        org.joda.time.Period period21 = hours3.toPeriod();
        org.joda.time.Hours hours23 = hours3.dividedBy(56);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 7 + "'", int19 == 7);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(hours23);
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        int int18 = hours13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours16);
        org.joda.time.Hours hours19 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours13);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours13.get(durationFieldType20);
        boolean boolean22 = hours12.equals((java.lang.Object) hours13);
        org.joda.time.Hours hours24 = hours13.minus(100);
        int int25 = hours13.size();
        org.joda.time.Hours hours27 = hours13.minus((int) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType29 = hours27.getFieldType(700);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 700");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(hours27);
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        int int5 = hours4.size();
        java.lang.String str6 = hours4.toString();
        int int7 = hours4.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT-1H" + "'", str6, "PT-1H");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(100);
        org.joda.time.Period period2 = hours1.toPeriod();
        org.joda.time.Hours hours4 = hours1.minus(8);
        org.joda.time.Hours hours6 = hours4.minus((-1));
        org.joda.time.DurationFieldType durationFieldType7 = hours4.getFieldType();
        java.lang.String str8 = hours4.toString();
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        int int14 = hours9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours12);
        org.joda.time.Hours hours15 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours9);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = hours9.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = hours9.get(durationFieldType18);
        org.joda.time.Hours hours21 = hours9.minus(0);
        org.joda.time.DurationFieldType durationFieldType22 = hours21.getFieldType();
        boolean boolean23 = hours4.isSupported(durationFieldType22);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "PT92H" + "'", str8, "PT92H");
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        org.joda.time.Hours hours8 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours10 = hours8.multipliedBy((int) (byte) 100);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        int int16 = hours11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours14);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        boolean boolean18 = hours11.isSupported(durationFieldType17);
        org.joda.time.Hours hours20 = hours11.minus((int) (short) -1);
        org.joda.time.PeriodType periodType21 = hours11.getPeriodType();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        int int24 = hours22.getValue((int) (short) 0);
        org.joda.time.Hours hours25 = hours11.minus(hours22);
        org.joda.time.Hours hours26 = hours8.plus(hours25);
        org.joda.time.Hours hours28 = hours25.multipliedBy(100);
        int int29 = hours6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours28);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 8 + "'", int24 == 8);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        int int9 = hours8.getHours();
        org.joda.time.Hours hours11 = hours8.plus(10);
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = hours12.get(durationFieldType16);
        org.joda.time.Hours hours19 = hours12.multipliedBy(1);
        boolean boolean20 = hours8.isGreaterThan(hours12);
        org.joda.time.Hours hours21 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        int int25 = hours23.getValue((int) (short) 0);
        org.joda.time.Hours hours26 = hours22.minus(hours23);
        org.joda.time.Hours hours27 = hours21.minus(hours22);
        int int28 = hours21.size();
        org.joda.time.Hours hours29 = hours12.plus(hours21);
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod32 = hours31.toMutablePeriod();
        org.joda.time.Hours hours33 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours34 = hours31.minus(hours33);
        int int35 = hours30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours33);
        org.joda.time.Hours hours37 = hours33.multipliedBy(0);
        org.joda.time.Duration duration38 = hours33.toStandardDuration();
        org.joda.time.Hours hours40 = hours33.dividedBy((int) (short) -1);
        int int41 = hours40.size();
        boolean boolean42 = hours29.isLessThan(hours40);
        boolean boolean43 = hours0.isGreaterThan(hours40);
        org.joda.time.Hours hours45 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType46 = hours45.getFieldType();
        org.joda.time.PeriodType periodType47 = hours45.getPeriodType();
        org.joda.time.Hours hours48 = hours45.negated();
        org.joda.time.Hours hours49 = hours40.plus(hours45);
        org.joda.time.Hours hours51 = hours49.multipliedBy(5);
        org.joda.time.Hours hours52 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod53 = hours52.toMutablePeriod();
        org.joda.time.Hours hours54 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours55 = hours52.minus(hours54);
        org.joda.time.Hours hours56 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours57 = org.joda.time.Hours.EIGHT;
        int int59 = hours57.getValue((int) (short) 0);
        org.joda.time.Hours hours60 = hours56.minus(hours57);
        org.joda.time.Hours hours61 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType62 = null;
        int int63 = hours61.get(durationFieldType62);
        org.joda.time.DurationFieldType durationFieldType64 = hours61.getFieldType();
        int int65 = hours56.get(durationFieldType64);
        boolean boolean66 = hours55.isSupported(durationFieldType64);
        org.joda.time.Hours hours68 = hours55.dividedBy((-2147483648));
        org.joda.time.Hours hours69 = hours55.negated();
        int int70 = hours49.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours55);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours72 = hours49.multipliedBy((-2147483598));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 44 * -2147483598");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 8 + "'", int25 == 8);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(mutablePeriod53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 8 + "'", int59 == 8);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(durationFieldType64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 7 + "'", int65 == 7);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours1 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = hours1.get(durationFieldType2);
        boolean boolean4 = hours0.equals((java.lang.Object) durationFieldType2);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.Hours hours12 = hours8.multipliedBy(0);
        org.joda.time.Hours hours13 = hours0.plus(hours12);
        org.joda.time.Hours hours15 = hours13.minus((int) (byte) 100);
        org.joda.time.Period period16 = hours15.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(period16);
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.multipliedBy(1);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = hours8.get(durationFieldType12);
        org.joda.time.Hours hours15 = hours8.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Hours hours17 = org.joda.time.Hours.hoursIn(readableInterval16);
        int int18 = hours15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.Hours hours19 = hours0.minus(hours15);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod22 = hours21.toMutablePeriod();
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours24 = hours21.minus(hours23);
        int int25 = hours20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours23);
        org.joda.time.DurationFieldType durationFieldType26 = null;
        boolean boolean27 = hours20.isSupported(durationFieldType26);
        org.joda.time.Hours hours29 = hours20.minus((int) (short) -1);
        boolean boolean30 = hours19.isLessThan(hours20);
        org.joda.time.MutablePeriod mutablePeriod31 = hours19.toMutablePeriod();
        java.lang.String str32 = hours19.toString();
        org.joda.time.PeriodType periodType33 = hours19.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "PT0H" + "'", str32, "PT0H");
        org.junit.Assert.assertNotNull(periodType33);
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(0);
        org.joda.time.Duration duration2 = hours1.toStandardDuration();
        org.joda.time.Hours hours4 = hours1.multipliedBy((int) (short) 1);
        int int5 = hours4.getHours();
        org.joda.time.Hours hours7 = hours4.dividedBy((-7));
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        int int27 = hours25.getValue((int) (short) 0);
        org.joda.time.Hours hours28 = hours24.minus(hours25);
        org.joda.time.Hours hours29 = hours23.minus(hours24);
        org.joda.time.Hours hours31 = hours24.dividedBy(1);
        org.joda.time.Duration duration32 = hours24.toStandardDuration();
        boolean boolean33 = hours20.isGreaterThan(hours24);
        org.joda.time.Hours hours35 = hours20.plus(7);
        int int36 = hours35.size();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 8 + "'", int27 == 8);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.Hours hours4 = hours0.dividedBy(100);
        org.joda.time.Hours hours6 = hours4.plus((int) (byte) 10);
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        int int12 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours10);
        org.joda.time.DurationFieldType durationFieldType13 = null;
        boolean boolean14 = hours7.isSupported(durationFieldType13);
        org.joda.time.Hours hours16 = hours7.minus((int) (short) -1);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        org.joda.time.Hours hours22 = hours19.plus(8);
        org.joda.time.Hours hours23 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = hours23.get(durationFieldType24);
        org.joda.time.DurationFieldType durationFieldType26 = hours23.getFieldType();
        boolean boolean27 = hours22.isSupported(durationFieldType26);
        int int28 = hours16.get(durationFieldType26);
        org.joda.time.Hours hours29 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod31 = hours30.toMutablePeriod();
        org.joda.time.Hours hours32 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours33 = hours30.minus(hours32);
        int int34 = hours29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours32);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        boolean boolean36 = hours29.isSupported(durationFieldType35);
        org.joda.time.Hours hours38 = hours29.multipliedBy((int) (short) 10);
        org.joda.time.Hours hours39 = hours16.plus(hours29);
        org.joda.time.DurationFieldType durationFieldType40 = hours39.getFieldType();
        boolean boolean41 = hours6.isGreaterThan(hours39);
        org.joda.time.Hours hours43 = hours6.dividedBy(7);
        org.joda.time.Hours hours44 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours6);
        int int45 = hours6.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 8 + "'", int28 == 8);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 10 + "'", int45 == 10);
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        java.lang.String str5 = hours4.toString();
        int int6 = hours4.size();
        int int7 = hours4.getHours();
        org.joda.time.Hours hours9 = hours4.minus((int) (short) 0);
        java.lang.String str10 = hours9.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT-1H" + "'", str5, "PT-1H");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT-1H" + "'", str10, "PT-1H");
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = hours8.getFieldType();
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours13 = hours7.negated();
        org.joda.time.Hours hours14 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        int int18 = hours16.getValue((int) (short) 0);
        org.joda.time.Hours hours19 = hours15.minus(hours16);
        org.joda.time.Hours hours20 = hours14.minus(hours15);
        org.joda.time.Hours hours21 = hours13.plus(hours15);
        org.joda.time.DurationFieldType durationFieldType22 = hours21.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7 + "'", int12 == 7);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(durationFieldType22);
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = hours8.getFieldType();
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.PeriodType periodType13 = hours7.getPeriodType();
        org.joda.time.Hours hours15 = hours7.multipliedBy(8);
        org.joda.time.Period period16 = hours15.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7 + "'", int12 == 7);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(period16);
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) 'a');
        org.junit.Assert.assertNotNull(hours1);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.Hours hours3 = hours0.plus(10);
        int int4 = hours0.size();
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours6 = hours5.negated();
        org.joda.time.DurationFieldType durationFieldType7 = hours5.getFieldType();
        boolean boolean8 = hours0.isLessThan(hours5);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        int int14 = hours9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours12);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours9.isSupported(durationFieldType15);
        org.joda.time.PeriodType periodType17 = hours9.getPeriodType();
        org.joda.time.Hours hours18 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        int int22 = hours20.getValue((int) (short) 0);
        org.joda.time.Hours hours23 = hours19.minus(hours20);
        org.joda.time.Hours hours24 = hours18.minus(hours19);
        int int25 = hours18.size();
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        int int29 = hours27.getValue((int) (short) 0);
        org.joda.time.Hours hours30 = hours26.minus(hours27);
        boolean boolean32 = hours27.equals((java.lang.Object) (short) 10);
        int int33 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours27);
        org.joda.time.Hours hours34 = hours9.plus(hours18);
        org.joda.time.Hours hours35 = hours0.minus(hours9);
        org.joda.time.Duration duration36 = hours35.toStandardDuration();
        org.joda.time.Hours hours37 = hours35.negated();
        org.joda.time.Hours hours39 = hours37.minus((int) (byte) 100);
        org.joda.time.MutablePeriod mutablePeriod40 = hours39.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 8 + "'", int22 == 8);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 8 + "'", int29 == 8);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours5 = hours2.plus(8);
        org.joda.time.Hours hours6 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours6.get(durationFieldType7);
        org.joda.time.DurationFieldType durationFieldType9 = hours6.getFieldType();
        boolean boolean10 = hours5.isSupported(durationFieldType9);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        int int16 = hours11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours14);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        boolean boolean18 = hours11.isSupported(durationFieldType17);
        org.joda.time.Hours hours20 = hours11.minus((int) (short) -1);
        org.joda.time.PeriodType periodType21 = hours11.getPeriodType();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        int int24 = hours22.getValue((int) (short) 0);
        org.joda.time.Hours hours25 = hours11.minus(hours22);
        org.joda.time.Hours hours26 = hours5.minus(hours25);
        org.joda.time.Hours hours28 = org.joda.time.Hours.parseHours("PT8H");
        boolean boolean29 = hours26.isLessThan(hours28);
        java.lang.String str30 = hours28.toString();
        org.joda.time.Hours hours31 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours28);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 8 + "'", int24 == 8);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "PT8H" + "'", str30, "PT8H");
        org.junit.Assert.assertNotNull(hours31);
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.multipliedBy(1);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        int int9 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.MutablePeriod mutablePeriod10 = hours7.toMutablePeriod();
        int int11 = hours7.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 7 + "'", int11 == 7);
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT70H");
        org.junit.Assert.assertNotNull(hours1);
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = hours8.getFieldType();
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.PeriodType periodType13 = hours7.getPeriodType();
        org.joda.time.Hours hours15 = hours7.multipliedBy(8);
        org.joda.time.Hours hours17 = hours7.dividedBy((-25));
        org.joda.time.Hours hours18 = null;
        org.joda.time.Hours hours19 = hours7.minus(hours18);
        org.joda.time.Hours hours20 = org.joda.time.Hours.THREE;
        org.joda.time.Period period21 = hours20.toPeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours20);
        org.joda.time.Hours hours24 = hours22.multipliedBy(9);
        boolean boolean25 = hours19.isGreaterThan(hours24);
        org.joda.time.Hours hours26 = hours24.negated();
        org.joda.time.Hours hours28 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours29 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod30 = hours29.toMutablePeriod();
        org.joda.time.Hours hours31 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours32 = hours29.minus(hours31);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = hours29.get(durationFieldType33);
        org.joda.time.Hours hours36 = hours29.minus((int) (short) 0);
        org.joda.time.Hours hours37 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod38 = hours37.toMutablePeriod();
        org.joda.time.Hours hours39 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours40 = hours37.minus(hours39);
        org.joda.time.DurationFieldType durationFieldType41 = null;
        boolean boolean42 = hours39.isSupported(durationFieldType41);
        org.joda.time.Hours hours43 = hours36.minus(hours39);
        org.joda.time.Hours hours44 = hours28.plus(hours43);
        org.joda.time.Hours hours45 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod46 = hours45.toMutablePeriod();
        org.joda.time.Hours hours47 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours48 = hours45.minus(hours47);
        boolean boolean49 = hours43.isGreaterThan(hours47);
        java.lang.String str50 = hours43.toString();
        org.joda.time.Hours hours52 = hours43.minus((-25));
        boolean boolean53 = hours24.isGreaterThan(hours52);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7 + "'", int12 == 7);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "PT-1H" + "'", str50, "PT-1H");
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = hours6.negated();
        org.joda.time.Hours hours15 = hours13.plus((int) (byte) 0);
        org.joda.time.Hours hours17 = hours15.minus(0);
        org.joda.time.DurationFieldType durationFieldType19 = hours15.getFieldType(0);
        java.lang.Class<?> wildcardClass20 = hours15.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours24 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours18);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours28 = hours25.minus(hours27);
        org.joda.time.Hours hours30 = hours27.plus(8);
        org.joda.time.Hours hours31 = hours18.minus(hours30);
        org.joda.time.Hours hours32 = hours31.negated();
        boolean boolean33 = hours16.isLessThan(hours31);
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours35 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod36 = hours35.toMutablePeriod();
        org.joda.time.Hours hours37 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours38 = hours35.minus(hours37);
        int int39 = hours34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours37);
        org.joda.time.MutablePeriod mutablePeriod40 = hours34.toMutablePeriod();
        org.joda.time.Hours hours42 = hours34.multipliedBy((int) (byte) 100);
        boolean boolean43 = hours16.isLessThan(hours34);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.PeriodType periodType10 = hours0.getPeriodType();
        int int11 = hours0.getHours();
        org.joda.time.DurationFieldType durationFieldType13 = hours0.getFieldType((int) (short) 0);
        int int14 = hours0.size();
        int int15 = hours0.size();
        org.joda.time.Period period16 = hours0.toPeriod();
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        boolean boolean21 = hours0.isGreaterThan(hours19);
        org.joda.time.Hours hours22 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours24 = hours22.plus(1);
        org.joda.time.Hours hours26 = hours22.dividedBy((int) (byte) -1);
        int int27 = hours22.size();
        int int28 = hours19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours22);
        org.joda.time.Hours hours30 = hours19.dividedBy(100);
        java.lang.Class<?> wildcardClass31 = hours19.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 7 + "'", int11 == 7);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        org.joda.time.Hours hours10 = hours7.plus(8);
        org.joda.time.Hours hours11 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = hours11.get(durationFieldType12);
        org.joda.time.DurationFieldType durationFieldType14 = hours11.getFieldType();
        boolean boolean15 = hours10.isSupported(durationFieldType14);
        boolean boolean16 = hours0.isSupported(durationFieldType14);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = hours17.get(durationFieldType21);
        int int23 = hours17.getHours();
        boolean boolean24 = hours0.equals((java.lang.Object) int23);
        org.joda.time.Hours hours26 = org.joda.time.Hours.hours((int) (byte) 1);
        org.joda.time.Hours hours27 = hours0.minus(hours26);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours29 = hours0.dividedBy(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 7 + "'", int23 == 7);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.Hours hours3 = hours0.plus(10);
        int int4 = hours0.size();
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours6 = hours5.negated();
        org.joda.time.DurationFieldType durationFieldType7 = hours5.getFieldType();
        boolean boolean8 = hours0.isLessThan(hours5);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        int int14 = hours9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours12);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours9.isSupported(durationFieldType15);
        org.joda.time.PeriodType periodType17 = hours9.getPeriodType();
        org.joda.time.Hours hours18 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        int int22 = hours20.getValue((int) (short) 0);
        org.joda.time.Hours hours23 = hours19.minus(hours20);
        org.joda.time.Hours hours24 = hours18.minus(hours19);
        int int25 = hours18.size();
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        int int29 = hours27.getValue((int) (short) 0);
        org.joda.time.Hours hours30 = hours26.minus(hours27);
        boolean boolean32 = hours27.equals((java.lang.Object) (short) 10);
        int int33 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours27);
        org.joda.time.Hours hours34 = hours9.plus(hours18);
        org.joda.time.Hours hours35 = hours0.minus(hours9);
        org.joda.time.Duration duration36 = hours35.toStandardDuration();
        org.joda.time.Hours hours37 = hours35.negated();
        org.joda.time.Hours hours39 = hours37.minus((int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType41 = hours39.getFieldType(14);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 14");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 8 + "'", int22 == 8);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 8 + "'", int29 == 8);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours39);
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        int int9 = hours7.getValue((int) (short) 0);
        org.joda.time.Hours hours10 = hours6.minus(hours7);
        org.joda.time.Hours hours11 = hours5.minus(hours6);
        int int12 = hours5.size();
        org.joda.time.Duration duration13 = hours5.toStandardDuration();
        boolean boolean14 = hours1.isGreaterThan(hours5);
        org.joda.time.MutablePeriod mutablePeriod15 = hours5.toMutablePeriod();
        org.joda.time.Hours hours17 = hours5.multipliedBy(10);
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Hours hours19 = org.joda.time.Hours.hoursIn(readableInterval18);
        org.joda.time.DurationFieldType durationFieldType20 = hours19.getFieldType();
        org.joda.time.Hours hours22 = hours19.dividedBy((int) (byte) 10);
        int int23 = hours17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours22);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        org.joda.time.Duration duration28 = hours24.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod29 = hours24.toMutablePeriod();
        org.joda.time.PeriodType periodType30 = hours24.getPeriodType();
        org.joda.time.Hours hours32 = org.joda.time.Hours.parseHours("PT7H");
        boolean boolean33 = hours24.isLessThan(hours32);
        org.joda.time.Hours hours34 = org.joda.time.Hours.ZERO;
        boolean boolean35 = hours32.isGreaterThan(hours34);
        org.joda.time.Hours hours36 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours37 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = hours37.get(durationFieldType38);
        boolean boolean40 = hours36.equals((java.lang.Object) durationFieldType38);
        org.joda.time.Hours hours41 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod43 = hours42.toMutablePeriod();
        org.joda.time.Hours hours44 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours45 = hours42.minus(hours44);
        int int46 = hours41.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours44);
        org.joda.time.Hours hours48 = hours44.multipliedBy(0);
        org.joda.time.Hours hours49 = hours36.plus(hours48);
        org.joda.time.DurationFieldType durationFieldType50 = hours49.getFieldType();
        int int51 = hours32.get(durationFieldType50);
        int int52 = hours22.get(durationFieldType50);
        // The following exception was thrown during execution in test generation
        try {
            int int54 = hours22.getValue((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 7 + "'", int51 == 7);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        boolean boolean6 = hours1.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours7 = null;
        org.joda.time.Hours hours8 = hours1.minus(hours7);
        java.lang.String str9 = hours8.toString();
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        int int15 = hours10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours13);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        boolean boolean17 = hours10.isSupported(durationFieldType16);
        org.joda.time.Hours hours19 = hours10.minus((int) (short) -1);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours23 = hours20.minus(hours22);
        org.joda.time.Hours hours25 = hours22.plus(8);
        org.joda.time.Hours hours26 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = hours26.get(durationFieldType27);
        org.joda.time.DurationFieldType durationFieldType29 = hours26.getFieldType();
        boolean boolean30 = hours25.isSupported(durationFieldType29);
        int int31 = hours19.get(durationFieldType29);
        java.lang.String str32 = hours19.toString();
        org.joda.time.Hours hours34 = hours19.dividedBy((-8));
        boolean boolean35 = hours8.isLessThan(hours19);
        int int36 = hours8.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 8 + "'", int31 == 8);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "PT8H" + "'", str32, "PT8H");
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 8 + "'", int36 == 8);
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        int int7 = hours2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours5);
        org.joda.time.MutablePeriod mutablePeriod8 = hours2.toMutablePeriod();
        org.joda.time.Hours hours9 = hours1.minus(hours2);
        org.joda.time.Hours hours11 = hours2.multipliedBy((int) (short) 0);
        org.joda.time.PeriodType periodType12 = hours11.getPeriodType();
        org.joda.time.Hours hours13 = hours11.negated();
        org.joda.time.Hours hours14 = hours13.negated();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.PeriodType periodType6 = hours0.getPeriodType();
        org.joda.time.Hours hours8 = org.joda.time.Hours.parseHours("PT7H");
        boolean boolean9 = hours0.isLessThan(hours8);
        org.joda.time.Hours hours10 = org.joda.time.Hours.ZERO;
        boolean boolean11 = hours8.isGreaterThan(hours10);
        org.joda.time.Hours hours12 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours13 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = hours13.get(durationFieldType14);
        boolean boolean16 = hours12.equals((java.lang.Object) durationFieldType14);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        int int22 = hours17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours20);
        org.joda.time.Hours hours24 = hours20.multipliedBy(0);
        org.joda.time.Hours hours25 = hours12.plus(hours24);
        org.joda.time.DurationFieldType durationFieldType26 = hours25.getFieldType();
        int int27 = hours8.get(durationFieldType26);
        org.joda.time.Hours hours29 = hours8.dividedBy(14);
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod32 = hours31.toMutablePeriod();
        org.joda.time.Hours hours33 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours34 = hours31.minus(hours33);
        int int35 = hours30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours33);
        org.joda.time.Hours hours37 = hours33.multipliedBy(0);
        org.joda.time.Hours hours38 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours39 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod40 = hours39.toMutablePeriod();
        org.joda.time.Hours hours41 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours42 = hours39.minus(hours41);
        int int43 = hours38.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours41);
        org.joda.time.DurationFieldType durationFieldType44 = null;
        boolean boolean45 = hours38.isSupported(durationFieldType44);
        org.joda.time.Hours hours47 = hours38.minus((int) (short) -1);
        org.joda.time.PeriodType periodType48 = hours38.getPeriodType();
        int int49 = hours38.getHours();
        boolean boolean50 = hours33.equals((java.lang.Object) int49);
        java.lang.String str51 = hours33.toString();
        org.joda.time.Hours hours53 = hours33.minus((int) (short) 10);
        org.joda.time.Period period54 = hours33.toPeriod();
        boolean boolean55 = hours29.isGreaterThan(hours33);
        int int56 = hours29.size();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 7 + "'", int27 == 7);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 7 + "'", int49 == 7);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "PT8H" + "'", str51, "PT8H");
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.Hours hours4 = hours0.dividedBy(100);
        org.joda.time.Hours hours6 = hours4.multipliedBy(0);
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        int int12 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours10);
        org.joda.time.Hours hours14 = hours10.multipliedBy(0);
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period16 = hours15.toPeriod();
        org.joda.time.Hours hours18 = hours15.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.THREE;
        org.joda.time.Period period21 = hours20.toPeriod();
        org.joda.time.Hours hours23 = hours20.plus((int) (byte) -1);
        org.joda.time.Hours hours24 = hours18.minus(hours20);
        org.joda.time.DurationFieldType durationFieldType25 = hours24.getFieldType();
        org.joda.time.Hours hours26 = hours14.plus(hours24);
        org.joda.time.DurationFieldType durationFieldType27 = hours26.getFieldType();
        int int28 = hours6.get(durationFieldType27);
        org.joda.time.PeriodType periodType29 = hours6.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(periodType29);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        org.joda.time.Hours hours8 = hours1.multipliedBy((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType10 = hours8.getFieldType();
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        int int16 = hours11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours14);
        org.joda.time.MutablePeriod mutablePeriod17 = hours11.toMutablePeriod();
        org.joda.time.Hours hours19 = hours11.multipliedBy((int) (byte) 100);
        int int20 = hours8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours11);
        int int21 = hours11.size();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = hours8.getFieldType();
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours13 = org.joda.time.Hours.ONE;
        int int14 = hours13.getHours();
        org.joda.time.Hours hours16 = hours13.plus(10);
        org.joda.time.Hours hours17 = hours7.minus(hours16);
        org.joda.time.DurationFieldType durationFieldType18 = hours17.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7 + "'", int12 == 7);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(durationFieldType18);
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(0);
        org.joda.time.Hours hours3 = hours1.multipliedBy((int) (short) 0);
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        int int7 = hours5.getValue((int) (short) 0);
        org.joda.time.Hours hours8 = hours4.minus(hours5);
        boolean boolean10 = hours5.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours11 = null;
        org.joda.time.Hours hours12 = hours5.minus(hours11);
        org.joda.time.Hours hours13 = hours12.negated();
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        org.joda.time.Duration duration18 = hours14.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod19 = hours14.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        int int22 = hours20.getValue((int) (short) 0);
        java.lang.String str23 = hours20.toString();
        boolean boolean24 = hours14.isGreaterThan(hours20);
        org.joda.time.Hours hours26 = hours20.minus(10);
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours28 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod29 = hours28.toMutablePeriod();
        org.joda.time.Hours hours30 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours31 = hours28.minus(hours30);
        int int32 = hours27.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours30);
        org.joda.time.Hours hours33 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours27);
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = hours27.get(durationFieldType34);
        boolean boolean36 = hours26.equals((java.lang.Object) hours27);
        java.lang.String str37 = hours26.toString();
        org.joda.time.DurationFieldType durationFieldType39 = hours26.getFieldType(0);
        boolean boolean40 = hours12.isGreaterThan(hours26);
        int int41 = hours12.getHours();
        org.joda.time.DurationFieldType durationFieldType42 = hours12.getFieldType();
        boolean boolean43 = hours3.isSupported(durationFieldType42);
        org.joda.time.Hours hours44 = hours3.negated();
        org.joda.time.Hours hours46 = hours3.dividedBy((int) (short) 100);
        int int47 = hours3.size();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8 + "'", int7 == 8);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 8 + "'", int22 == 8);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT8H" + "'", str23, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "PT-2H" + "'", str37, "PT-2H");
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 8 + "'", int41 == 8);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.Hours hours12 = hours10.negated();
        org.joda.time.DurationFieldType durationFieldType13 = hours12.getFieldType();
        org.joda.time.Hours hours14 = hours7.minus(hours12);
        org.joda.time.Hours hours15 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours12);
        org.joda.time.Hours hours16 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours18 = hours16.plus(1);
        org.joda.time.Hours hours20 = hours16.dividedBy((int) (byte) -1);
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod22 = hours21.toMutablePeriod();
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours24 = hours21.minus(hours23);
        org.joda.time.Duration duration25 = hours21.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod26 = hours21.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        int int29 = hours27.getValue((int) (short) 0);
        java.lang.String str30 = hours27.toString();
        boolean boolean31 = hours21.isGreaterThan(hours27);
        org.joda.time.Hours hours33 = hours27.minus(10);
        org.joda.time.Hours hours34 = hours27.negated();
        org.joda.time.Hours hours35 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod36 = hours35.toMutablePeriod();
        org.joda.time.Hours hours37 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours38 = hours35.minus(hours37);
        org.joda.time.DurationFieldType durationFieldType39 = null;
        int int40 = hours35.get(durationFieldType39);
        org.joda.time.Hours hours42 = hours35.multipliedBy(1);
        org.joda.time.Hours hours43 = org.joda.time.Hours.ONE;
        int int44 = hours42.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours43);
        int int45 = hours27.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours42);
        java.lang.String str46 = hours42.toString();
        int int47 = hours16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours42);
        boolean boolean48 = hours15.isLessThan(hours42);
        org.joda.time.PeriodType periodType49 = hours15.getPeriodType();
        org.joda.time.Hours hours50 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours52 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours53 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod54 = hours53.toMutablePeriod();
        org.joda.time.Hours hours55 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours56 = hours53.minus(hours55);
        org.joda.time.DurationFieldType durationFieldType57 = null;
        int int58 = hours53.get(durationFieldType57);
        org.joda.time.Hours hours60 = hours53.minus((int) (short) 0);
        org.joda.time.Hours hours61 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod62 = hours61.toMutablePeriod();
        org.joda.time.Hours hours63 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours64 = hours61.minus(hours63);
        org.joda.time.DurationFieldType durationFieldType65 = null;
        boolean boolean66 = hours63.isSupported(durationFieldType65);
        org.joda.time.Hours hours67 = hours60.minus(hours63);
        org.joda.time.Hours hours68 = hours52.plus(hours67);
        int int69 = hours50.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours67);
        org.joda.time.MutablePeriod mutablePeriod70 = hours67.toMutablePeriod();
        org.joda.time.Duration duration71 = hours67.toStandardDuration();
        org.joda.time.Hours hours72 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period73 = hours72.toPeriod();
        org.joda.time.Hours hours75 = hours72.dividedBy(1);
        org.joda.time.Hours hours76 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType77 = null;
        int int78 = hours76.get(durationFieldType77);
        org.joda.time.DurationFieldType durationFieldType79 = hours76.getFieldType();
        org.joda.time.DurationFieldType durationFieldType80 = hours76.getFieldType();
        org.joda.time.DurationFieldType durationFieldType81 = hours76.getFieldType();
        int int82 = hours72.get(durationFieldType81);
        boolean boolean83 = hours67.isSupported(durationFieldType81);
        int int84 = hours15.get(durationFieldType81);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 8 + "'", int29 == 8);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "PT8H" + "'", str30, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "PT7H" + "'", str46, "PT7H");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(mutablePeriod62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod70);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(hours75);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(durationFieldType79);
        org.junit.Assert.assertNotNull(durationFieldType80);
        org.junit.Assert.assertNotNull(durationFieldType81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 7 + "'", int82 == 7);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-8) + "'", int84 == (-8));
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = hours1.multipliedBy((int) (byte) 100);
        org.joda.time.Hours hours4 = hours1.negated();
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.Hours hours11 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours5);
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        org.joda.time.Hours hours17 = hours14.plus(8);
        org.joda.time.Hours hours18 = hours5.minus(hours17);
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        int int22 = hours20.getValue((int) (short) 0);
        org.joda.time.Hours hours23 = hours19.minus(hours20);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        org.joda.time.Hours hours29 = hours26.plus(8);
        org.joda.time.Hours hours30 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = hours30.get(durationFieldType31);
        org.joda.time.DurationFieldType durationFieldType33 = hours30.getFieldType();
        boolean boolean34 = hours29.isSupported(durationFieldType33);
        boolean boolean35 = hours19.isSupported(durationFieldType33);
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period37 = hours36.toPeriod();
        org.joda.time.Hours hours39 = hours36.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod40 = hours39.toMutablePeriod();
        org.joda.time.Hours hours41 = org.joda.time.Hours.THREE;
        org.joda.time.Period period42 = hours41.toPeriod();
        org.joda.time.Hours hours44 = hours41.plus((int) (byte) -1);
        org.joda.time.Hours hours45 = hours39.minus(hours41);
        org.joda.time.Hours hours46 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod47 = hours46.toMutablePeriod();
        org.joda.time.Hours hours48 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours49 = hours46.minus(hours48);
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = hours46.get(durationFieldType50);
        org.joda.time.Hours hours53 = hours46.minus((int) (short) 0);
        org.joda.time.Hours hours54 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType55 = null;
        int int56 = hours54.get(durationFieldType55);
        org.joda.time.DurationFieldType durationFieldType57 = hours54.getFieldType();
        int int58 = hours53.get(durationFieldType57);
        int int59 = hours41.get(durationFieldType57);
        boolean boolean60 = hours19.equals((java.lang.Object) hours41);
        boolean boolean61 = hours17.equals((java.lang.Object) hours41);
        org.joda.time.Duration duration62 = hours17.toStandardDuration();
        org.joda.time.Hours hours63 = hours1.minus(hours17);
        org.joda.time.Hours hours65 = hours17.dividedBy(5);
        org.joda.time.Duration duration66 = hours17.toStandardDuration();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 8 + "'", int22 == 8);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(mutablePeriod47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 7 + "'", int58 == 7);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 3 + "'", int59 == 3);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(duration66);
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.PeriodType periodType10 = hours0.getPeriodType();
        int int11 = hours0.getHours();
        org.joda.time.DurationFieldType durationFieldType13 = hours0.getFieldType((int) (short) 0);
        int int14 = hours0.size();
        int int15 = hours0.size();
        org.joda.time.DurationFieldType durationFieldType16 = hours0.getFieldType();
        org.joda.time.Hours hours18 = hours0.multipliedBy(100);
        org.joda.time.Hours hours19 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours21 = hours19.plus(1);
        org.joda.time.Period period22 = hours19.toPeriod();
        org.joda.time.Hours hours24 = hours19.dividedBy((-1));
        boolean boolean25 = hours0.isLessThan(hours24);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 7 + "'", int11 == 7);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod8 = hours7.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours7.minus(hours9);
        org.joda.time.Hours hours12 = hours9.plus(8);
        org.joda.time.Hours hours13 = hours0.minus(hours12);
        org.joda.time.MutablePeriod mutablePeriod14 = hours12.toMutablePeriod();
        org.joda.time.Period period15 = hours12.toPeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) period15);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(hours16);
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        int int7 = hours2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours5);
        org.joda.time.MutablePeriod mutablePeriod8 = hours2.toMutablePeriod();
        org.joda.time.Hours hours9 = hours1.minus(hours2);
        org.joda.time.Hours hours10 = hours9.negated();
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        int int14 = hours12.getValue((int) (short) 0);
        org.joda.time.Hours hours15 = hours11.minus(hours12);
        int int16 = hours15.size();
        org.joda.time.Period period17 = hours15.toPeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours23 = hours20.minus(hours22);
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = hours20.get(durationFieldType24);
        org.joda.time.Hours hours27 = hours20.minus((int) (short) 0);
        org.joda.time.Hours hours28 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod29 = hours28.toMutablePeriod();
        org.joda.time.Hours hours30 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours31 = hours28.minus(hours30);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        boolean boolean33 = hours30.isSupported(durationFieldType32);
        org.joda.time.Hours hours34 = hours27.minus(hours30);
        org.joda.time.Hours hours35 = hours19.plus(hours34);
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours37 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod38 = hours37.toMutablePeriod();
        org.joda.time.Hours hours39 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours40 = hours37.minus(hours39);
        int int41 = hours36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours39);
        org.joda.time.Hours hours42 = hours19.plus(hours39);
        org.joda.time.Hours hours43 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod44 = hours43.toMutablePeriod();
        org.joda.time.Hours hours45 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours46 = hours43.minus(hours45);
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = hours43.get(durationFieldType47);
        org.joda.time.Hours hours50 = hours43.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval51 = null;
        org.joda.time.Hours hours52 = org.joda.time.Hours.hoursIn(readableInterval51);
        int int53 = hours50.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours52);
        boolean boolean54 = hours39.isGreaterThan(hours50);
        org.joda.time.Hours hours55 = hours15.minus(hours39);
        org.joda.time.Hours hours57 = org.joda.time.Hours.hours((-1));
        org.joda.time.Hours hours58 = hours57.negated();
        boolean boolean59 = hours39.isGreaterThan(hours57);
        org.joda.time.Hours hours60 = org.joda.time.Hours.THREE;
        org.joda.time.Period period61 = hours60.toPeriod();
        org.joda.time.Hours hours62 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours60);
        org.joda.time.Hours hours64 = hours62.multipliedBy(9);
        boolean boolean65 = hours57.isGreaterThan(hours64);
        boolean boolean66 = hours9.equals((java.lang.Object) hours64);
        org.joda.time.Hours hours67 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours68 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod69 = hours68.toMutablePeriod();
        org.joda.time.Hours hours70 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours71 = hours68.minus(hours70);
        int int72 = hours67.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours70);
        org.joda.time.Hours hours73 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours67);
        org.joda.time.Hours hours74 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod75 = hours74.toMutablePeriod();
        org.joda.time.Hours hours76 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours77 = hours74.minus(hours76);
        org.joda.time.Hours hours79 = hours76.plus(8);
        org.joda.time.Hours hours80 = hours67.minus(hours79);
        org.joda.time.Hours hours81 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours82 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod83 = hours82.toMutablePeriod();
        org.joda.time.Hours hours84 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours85 = hours82.minus(hours84);
        int int86 = hours81.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours84);
        org.joda.time.DurationFieldType durationFieldType87 = null;
        boolean boolean88 = hours81.isSupported(durationFieldType87);
        org.joda.time.Hours hours90 = hours81.minus((int) (short) -1);
        org.joda.time.PeriodType periodType91 = hours81.getPeriodType();
        int int92 = hours81.getHours();
        org.joda.time.DurationFieldType durationFieldType94 = hours81.getFieldType((int) (short) 0);
        int int95 = hours79.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours81);
        org.joda.time.Hours hours96 = hours64.minus(hours81);
        org.joda.time.Period period97 = hours81.toPeriod();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8 + "'", int14 == 8);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(mutablePeriod44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(mutablePeriod69);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertNotNull(mutablePeriod75);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertNotNull(hours79);
        org.junit.Assert.assertNotNull(hours80);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertNotNull(hours82);
        org.junit.Assert.assertNotNull(mutablePeriod83);
        org.junit.Assert.assertNotNull(hours84);
        org.junit.Assert.assertNotNull(hours85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(hours90);
        org.junit.Assert.assertNotNull(periodType91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 7 + "'", int92 == 7);
        org.junit.Assert.assertNotNull(durationFieldType94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 1 + "'", int95 == 1);
        org.junit.Assert.assertNotNull(hours96);
        org.junit.Assert.assertNotNull(period97);
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours0.minus((int) 'a');
        org.joda.time.Hours hours8 = org.joda.time.Hours.ZERO;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        boolean boolean10 = hours7.equals((java.lang.Object) hours8);
        org.joda.time.Hours hours12 = hours8.multipliedBy((int) (short) 100);
        org.joda.time.Duration duration13 = hours12.toStandardDuration();
        org.joda.time.Period period14 = hours12.toPeriod();
        int int15 = hours12.size();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours5 = hours2.plus(8);
        int int6 = hours5.getHours();
        java.lang.String str7 = hours5.toString();
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        int int9 = hours8.getHours();
        org.joda.time.Hours hours11 = hours8.plus(10);
        int int12 = hours8.size();
        org.joda.time.Hours hours13 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours14 = hours13.negated();
        org.joda.time.DurationFieldType durationFieldType15 = hours13.getFieldType();
        boolean boolean16 = hours8.isLessThan(hours13);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        int int22 = hours17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours20);
        org.joda.time.DurationFieldType durationFieldType23 = null;
        boolean boolean24 = hours17.isSupported(durationFieldType23);
        org.joda.time.PeriodType periodType25 = hours17.getPeriodType();
        org.joda.time.Hours hours26 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        int int30 = hours28.getValue((int) (short) 0);
        org.joda.time.Hours hours31 = hours27.minus(hours28);
        org.joda.time.Hours hours32 = hours26.minus(hours27);
        int int33 = hours26.size();
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        int int37 = hours35.getValue((int) (short) 0);
        org.joda.time.Hours hours38 = hours34.minus(hours35);
        boolean boolean40 = hours35.equals((java.lang.Object) (short) 10);
        int int41 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours35);
        org.joda.time.Hours hours42 = hours17.plus(hours26);
        org.joda.time.Hours hours43 = hours8.minus(hours17);
        org.joda.time.Duration duration44 = hours43.toStandardDuration();
        org.joda.time.Hours hours45 = hours43.negated();
        boolean boolean46 = hours5.equals((java.lang.Object) hours43);
        org.joda.time.Duration duration47 = hours43.toStandardDuration();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 16 + "'", int6 == 16);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT16H" + "'", str7, "PT16H");
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 8 + "'", int30 == 8);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 8 + "'", int37 == 8);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(duration47);
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.Hours hours10 = hours9.negated();
        org.joda.time.Hours hours12 = hours10.plus(16);
        java.lang.Class<?> wildcardClass13 = hours12.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.PeriodType periodType6 = hours0.getPeriodType();
        org.joda.time.Hours hours8 = org.joda.time.Hours.parseHours("PT7H");
        boolean boolean9 = hours0.isLessThan(hours8);
        org.joda.time.Hours hours10 = org.joda.time.Hours.ZERO;
        boolean boolean11 = hours8.isGreaterThan(hours10);
        org.joda.time.Hours hours13 = hours10.plus((int) (byte) 0);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(hours13);
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Hours hours1 = org.joda.time.Hours.hoursIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = hours1.getFieldType();
        org.joda.time.Hours hours4 = hours1.multipliedBy((int) (short) -1);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(hours4);
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.Hours hours3 = hours0.plus(10);
        org.joda.time.Hours hours4 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours5 = hours4.negated();
        org.joda.time.DurationFieldType durationFieldType6 = hours4.getFieldType();
        boolean boolean7 = hours0.equals((java.lang.Object) hours4);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        int int11 = hours9.getValue((int) (short) 0);
        org.joda.time.Hours hours12 = hours8.minus(hours9);
        boolean boolean14 = hours9.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours15 = hours9.negated();
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        int int21 = hours16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours19);
        org.joda.time.Hours hours23 = hours19.multipliedBy(0);
        org.joda.time.Hours hours24 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.Duration duration25 = hours24.toStandardDuration();
        org.joda.time.Hours hours26 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours24);
        boolean boolean27 = hours9.equals((java.lang.Object) hours26);
        org.joda.time.Hours hours28 = hours4.minus(hours9);
        org.joda.time.Hours hours29 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours4);
        java.lang.Class<?> wildcardClass30 = hours29.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8 + "'", int11 == 8);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = hours1.multipliedBy((int) (byte) 100);
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        int int9 = hours4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours7);
        org.joda.time.DurationFieldType durationFieldType10 = null;
        boolean boolean11 = hours4.isSupported(durationFieldType10);
        org.joda.time.Hours hours13 = hours4.minus((int) (short) -1);
        org.joda.time.PeriodType periodType14 = hours4.getPeriodType();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        int int17 = hours15.getValue((int) (short) 0);
        org.joda.time.Hours hours18 = hours4.minus(hours15);
        org.joda.time.Hours hours19 = hours1.plus(hours18);
        org.joda.time.Hours hours21 = hours18.multipliedBy(100);
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        int int27 = hours22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours25);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        boolean boolean29 = hours22.isSupported(durationFieldType28);
        org.joda.time.Hours hours31 = hours22.minus((int) (short) -1);
        org.joda.time.PeriodType periodType32 = hours22.getPeriodType();
        int int33 = hours22.getHours();
        org.joda.time.DurationFieldType durationFieldType35 = hours22.getFieldType((int) (short) 0);
        int int36 = hours22.size();
        int int37 = hours22.size();
        org.joda.time.DurationFieldType durationFieldType38 = hours22.getFieldType();
        boolean boolean39 = hours18.isSupported(durationFieldType38);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 7 + "'", int33 == 7);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours9 = hours3.minus(hours5);
        org.joda.time.Hours hours10 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours11 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = hours11.get(durationFieldType12);
        boolean boolean14 = hours10.equals((java.lang.Object) durationFieldType12);
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        int int20 = hours15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours18);
        org.joda.time.Hours hours22 = hours18.multipliedBy(0);
        org.joda.time.Hours hours23 = hours10.plus(hours22);
        org.joda.time.DurationFieldType durationFieldType24 = hours23.getFieldType();
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours28 = hours25.minus(hours27);
        org.joda.time.Duration duration29 = hours25.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod30 = hours25.toMutablePeriod();
        org.joda.time.Hours hours31 = org.joda.time.Hours.EIGHT;
        int int33 = hours31.getValue((int) (short) 0);
        java.lang.String str34 = hours31.toString();
        boolean boolean35 = hours25.isGreaterThan(hours31);
        org.joda.time.Hours hours37 = hours31.minus(10);
        org.joda.time.Hours hours38 = hours31.negated();
        org.joda.time.Hours hours40 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours41 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod42 = hours41.toMutablePeriod();
        org.joda.time.Hours hours43 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours44 = hours41.minus(hours43);
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = hours41.get(durationFieldType45);
        org.joda.time.Hours hours48 = hours41.minus((int) (short) 0);
        org.joda.time.Hours hours49 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod50 = hours49.toMutablePeriod();
        org.joda.time.Hours hours51 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours52 = hours49.minus(hours51);
        org.joda.time.DurationFieldType durationFieldType53 = null;
        boolean boolean54 = hours51.isSupported(durationFieldType53);
        org.joda.time.Hours hours55 = hours48.minus(hours51);
        org.joda.time.Hours hours56 = hours40.plus(hours55);
        org.joda.time.Hours hours57 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod58 = hours57.toMutablePeriod();
        org.joda.time.Hours hours59 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours60 = hours57.minus(hours59);
        boolean boolean61 = hours55.isGreaterThan(hours59);
        java.lang.String str62 = hours55.toString();
        org.joda.time.Hours hours63 = hours31.plus(hours55);
        boolean boolean64 = hours23.isGreaterThan(hours31);
        org.joda.time.Hours hours65 = hours5.plus(hours23);
        org.joda.time.Hours hours67 = hours65.multipliedBy((-8));
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 8 + "'", int33 == 8);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "PT8H" + "'", str34, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(mutablePeriod50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(mutablePeriod58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "PT-1H" + "'", str62, "PT-1H");
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours67);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.PeriodType periodType10 = hours0.getPeriodType();
        int int11 = hours0.getHours();
        int int12 = hours0.size();
        org.joda.time.Hours hours14 = hours0.plus(5);
        org.joda.time.Hours hours16 = hours0.minus(16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType19 = hours18.getFieldType();
        org.joda.time.Hours hours21 = hours18.plus(700);
        int int22 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 7 + "'", int11 == 7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT3H");
        org.junit.Assert.assertNotNull(hours1);
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        boolean boolean6 = hours1.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours7 = hours1.negated();
        org.joda.time.Hours hours9 = hours1.multipliedBy((int) (short) -1);
        org.joda.time.Hours hours10 = org.joda.time.Hours.THREE;
        org.joda.time.Period period11 = hours10.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod12 = hours10.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType13 = hours10.getFieldType();
        org.joda.time.Hours hours14 = hours9.minus(hours10);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(hours14);
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.DurationFieldType durationFieldType7 = hours0.getFieldType();
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.Hours hours12 = hours10.negated();
        org.joda.time.DurationFieldType durationFieldType13 = hours12.getFieldType();
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        org.joda.time.Hours hours18 = hours16.negated();
        int int19 = hours18.getHours();
        int int20 = hours12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours18);
        org.joda.time.Hours hours21 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours12);
        boolean boolean22 = hours0.isGreaterThan(hours12);
        int int23 = hours0.getHours();
        org.joda.time.DurationFieldType durationFieldType24 = hours0.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-8) + "'", int19 == (-8));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 7 + "'", int23 == 7);
        org.junit.Assert.assertNotNull(durationFieldType24);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        int int14 = hours9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours12);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours9.isSupported(durationFieldType15);
        org.joda.time.Hours hours18 = hours9.minus((int) (short) -1);
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        org.joda.time.Hours hours24 = hours21.plus(8);
        org.joda.time.Hours hours25 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = hours25.get(durationFieldType26);
        org.joda.time.DurationFieldType durationFieldType28 = hours25.getFieldType();
        boolean boolean29 = hours24.isSupported(durationFieldType28);
        int int30 = hours18.get(durationFieldType28);
        org.joda.time.Hours hours31 = hours0.plus(hours18);
        org.joda.time.Hours hours33 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod35 = hours34.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours37 = hours34.minus(hours36);
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = hours34.get(durationFieldType38);
        org.joda.time.Hours hours41 = hours34.minus((int) (short) 0);
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod43 = hours42.toMutablePeriod();
        org.joda.time.Hours hours44 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours45 = hours42.minus(hours44);
        org.joda.time.DurationFieldType durationFieldType46 = null;
        boolean boolean47 = hours44.isSupported(durationFieldType46);
        org.joda.time.Hours hours48 = hours41.minus(hours44);
        org.joda.time.Hours hours49 = hours33.plus(hours48);
        org.joda.time.Hours hours50 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod51 = hours50.toMutablePeriod();
        org.joda.time.Hours hours52 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours53 = hours50.minus(hours52);
        boolean boolean54 = hours48.isGreaterThan(hours52);
        org.joda.time.DurationFieldType durationFieldType56 = hours48.getFieldType((int) (short) 0);
        boolean boolean57 = hours18.isSupported(durationFieldType56);
        int int59 = hours18.getValue((int) (byte) 0);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 8 + "'", int30 == 8);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 8 + "'", int59 == 8);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        int int7 = hours2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours5);
        org.joda.time.MutablePeriod mutablePeriod8 = hours2.toMutablePeriod();
        org.joda.time.Hours hours9 = hours1.minus(hours2);
        org.joda.time.Hours hours10 = hours9.negated();
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        int int14 = hours12.getValue((int) (short) 0);
        org.joda.time.Hours hours15 = hours11.minus(hours12);
        int int16 = hours15.size();
        org.joda.time.Period period17 = hours15.toPeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours23 = hours20.minus(hours22);
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = hours20.get(durationFieldType24);
        org.joda.time.Hours hours27 = hours20.minus((int) (short) 0);
        org.joda.time.Hours hours28 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod29 = hours28.toMutablePeriod();
        org.joda.time.Hours hours30 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours31 = hours28.minus(hours30);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        boolean boolean33 = hours30.isSupported(durationFieldType32);
        org.joda.time.Hours hours34 = hours27.minus(hours30);
        org.joda.time.Hours hours35 = hours19.plus(hours34);
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours37 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod38 = hours37.toMutablePeriod();
        org.joda.time.Hours hours39 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours40 = hours37.minus(hours39);
        int int41 = hours36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours39);
        org.joda.time.Hours hours42 = hours19.plus(hours39);
        org.joda.time.Hours hours43 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod44 = hours43.toMutablePeriod();
        org.joda.time.Hours hours45 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours46 = hours43.minus(hours45);
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = hours43.get(durationFieldType47);
        org.joda.time.Hours hours50 = hours43.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval51 = null;
        org.joda.time.Hours hours52 = org.joda.time.Hours.hoursIn(readableInterval51);
        int int53 = hours50.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours52);
        boolean boolean54 = hours39.isGreaterThan(hours50);
        org.joda.time.Hours hours55 = hours15.minus(hours39);
        org.joda.time.Hours hours57 = org.joda.time.Hours.hours((-1));
        org.joda.time.Hours hours58 = hours57.negated();
        boolean boolean59 = hours39.isGreaterThan(hours57);
        org.joda.time.Hours hours60 = org.joda.time.Hours.THREE;
        org.joda.time.Period period61 = hours60.toPeriod();
        org.joda.time.Hours hours62 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours60);
        org.joda.time.Hours hours64 = hours62.multipliedBy(9);
        boolean boolean65 = hours57.isGreaterThan(hours64);
        boolean boolean66 = hours9.equals((java.lang.Object) hours64);
        org.joda.time.Hours hours67 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours68 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod69 = hours68.toMutablePeriod();
        org.joda.time.Hours hours70 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours71 = hours68.minus(hours70);
        int int72 = hours67.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours70);
        org.joda.time.Hours hours73 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours67);
        org.joda.time.Hours hours74 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod75 = hours74.toMutablePeriod();
        org.joda.time.Hours hours76 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours77 = hours74.minus(hours76);
        org.joda.time.Hours hours79 = hours76.plus(8);
        org.joda.time.Hours hours80 = hours67.minus(hours79);
        org.joda.time.Hours hours81 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours82 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod83 = hours82.toMutablePeriod();
        org.joda.time.Hours hours84 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours85 = hours82.minus(hours84);
        int int86 = hours81.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours84);
        org.joda.time.DurationFieldType durationFieldType87 = null;
        boolean boolean88 = hours81.isSupported(durationFieldType87);
        org.joda.time.Hours hours90 = hours81.minus((int) (short) -1);
        org.joda.time.PeriodType periodType91 = hours81.getPeriodType();
        int int92 = hours81.getHours();
        org.joda.time.DurationFieldType durationFieldType94 = hours81.getFieldType((int) (short) 0);
        int int95 = hours79.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours81);
        org.joda.time.Hours hours96 = hours64.minus(hours81);
        java.lang.String str97 = hours81.toString();
        java.lang.Class<?> wildcardClass98 = hours81.getClass();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8 + "'", int14 == 8);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(mutablePeriod44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(mutablePeriod69);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertNotNull(mutablePeriod75);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertNotNull(hours79);
        org.junit.Assert.assertNotNull(hours80);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertNotNull(hours82);
        org.junit.Assert.assertNotNull(mutablePeriod83);
        org.junit.Assert.assertNotNull(hours84);
        org.junit.Assert.assertNotNull(hours85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(hours90);
        org.junit.Assert.assertNotNull(periodType91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 7 + "'", int92 == 7);
        org.junit.Assert.assertNotNull(durationFieldType94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 1 + "'", int95 == 1);
        org.junit.Assert.assertNotNull(hours96);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "PT7H" + "'", str97, "PT7H");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.multipliedBy(1);
        org.joda.time.Duration duration8 = hours0.toStandardDuration();
        org.joda.time.Hours hours10 = hours0.plus(92);
        org.joda.time.Hours hours11 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours12 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = hours12.get(durationFieldType13);
        boolean boolean15 = hours11.equals((java.lang.Object) durationFieldType13);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        int int21 = hours16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours19);
        org.joda.time.Hours hours23 = hours19.multipliedBy(0);
        org.joda.time.Hours hours24 = hours11.plus(hours23);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod27 = hours26.toMutablePeriod();
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours29 = hours26.minus(hours28);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = hours26.get(durationFieldType30);
        org.joda.time.Hours hours33 = hours26.minus((int) (short) 0);
        org.joda.time.Hours hours34 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours26);
        org.joda.time.Hours hours35 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod37 = hours36.toMutablePeriod();
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours39 = hours36.minus(hours38);
        int int40 = hours35.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours38);
        org.joda.time.DurationFieldType durationFieldType41 = null;
        boolean boolean42 = hours35.isSupported(durationFieldType41);
        org.joda.time.Hours hours44 = hours35.minus((int) (short) -1);
        org.joda.time.Hours hours45 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod46 = hours45.toMutablePeriod();
        org.joda.time.Hours hours47 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours48 = hours45.minus(hours47);
        org.joda.time.Hours hours50 = hours47.plus(8);
        org.joda.time.Hours hours51 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType52 = null;
        int int53 = hours51.get(durationFieldType52);
        org.joda.time.DurationFieldType durationFieldType54 = hours51.getFieldType();
        boolean boolean55 = hours50.isSupported(durationFieldType54);
        int int56 = hours44.get(durationFieldType54);
        org.joda.time.Hours hours57 = hours26.plus(hours44);
        org.joda.time.Hours hours58 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours59 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod60 = hours59.toMutablePeriod();
        org.joda.time.Hours hours61 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours62 = hours59.minus(hours61);
        int int63 = hours58.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours61);
        org.joda.time.DurationFieldType durationFieldType64 = null;
        boolean boolean65 = hours58.isSupported(durationFieldType64);
        org.joda.time.Hours hours67 = hours58.multipliedBy((int) (short) 10);
        org.joda.time.Hours hours68 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours69 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType70 = null;
        int int71 = hours69.get(durationFieldType70);
        boolean boolean72 = hours68.equals((java.lang.Object) durationFieldType70);
        org.joda.time.Hours hours73 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours74 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod75 = hours74.toMutablePeriod();
        org.joda.time.Hours hours76 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours77 = hours74.minus(hours76);
        int int78 = hours73.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours76);
        org.joda.time.Hours hours80 = hours76.multipliedBy(0);
        org.joda.time.Hours hours81 = hours68.plus(hours80);
        org.joda.time.DurationFieldType durationFieldType82 = hours81.getFieldType();
        boolean boolean83 = hours58.equals((java.lang.Object) durationFieldType82);
        int int84 = hours44.get(durationFieldType82);
        boolean boolean85 = hours25.isSupported(durationFieldType82);
        int int86 = hours24.get(durationFieldType82);
        boolean boolean87 = hours0.isSupported(durationFieldType82);
        org.joda.time.Period period88 = hours0.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 8 + "'", int56 == 8);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertNotNull(mutablePeriod75);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(hours80);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertNotNull(durationFieldType82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 8 + "'", int84 == 8);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 3 + "'", int86 == 3);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(period88);
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT7H");
        org.joda.time.PeriodType periodType2 = hours1.getPeriodType();
        org.joda.time.Hours hours3 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours1);
        org.joda.time.Hours hours5 = hours1.plus(12);
        org.joda.time.MutablePeriod mutablePeriod6 = hours1.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType2 = hours1.getFieldType();
        org.joda.time.Period period3 = hours1.toPeriod();
        org.joda.time.Period period4 = hours1.toPeriod();
        org.joda.time.Hours hours6 = hours1.plus(0);
        org.joda.time.Hours hours8 = hours1.minus((int) (short) 0);
        java.lang.String str9 = hours1.toString();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT52H" + "'", str9, "PT52H");
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        java.lang.String str5 = hours4.toString();
        int int7 = hours4.getValue(0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ZERO;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        int int13 = hours11.getValue((int) (short) 0);
        org.joda.time.Hours hours14 = hours10.minus(hours11);
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod16 = hours15.toMutablePeriod();
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours18 = hours15.minus(hours17);
        org.joda.time.Hours hours20 = hours17.plus(8);
        org.joda.time.Hours hours21 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = hours21.get(durationFieldType22);
        org.joda.time.DurationFieldType durationFieldType24 = hours21.getFieldType();
        boolean boolean25 = hours20.isSupported(durationFieldType24);
        boolean boolean26 = hours10.isSupported(durationFieldType24);
        boolean boolean27 = hours8.isSupported(durationFieldType24);
        org.joda.time.Hours hours29 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours31 = hours29.multipliedBy((int) (byte) 100);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod34 = hours33.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours36 = hours33.minus(hours35);
        int int37 = hours32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours35);
        org.joda.time.DurationFieldType durationFieldType38 = null;
        boolean boolean39 = hours32.isSupported(durationFieldType38);
        org.joda.time.Hours hours41 = hours32.minus((int) (short) -1);
        org.joda.time.PeriodType periodType42 = hours32.getPeriodType();
        org.joda.time.Hours hours43 = org.joda.time.Hours.EIGHT;
        int int45 = hours43.getValue((int) (short) 0);
        org.joda.time.Hours hours46 = hours32.minus(hours43);
        org.joda.time.Hours hours47 = hours29.plus(hours46);
        boolean boolean48 = hours8.equals((java.lang.Object) hours46);
        boolean boolean49 = hours4.isLessThan(hours46);
        org.joda.time.Hours hours50 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod51 = hours50.toMutablePeriod();
        org.joda.time.Hours hours52 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours53 = hours50.minus(hours52);
        org.joda.time.DurationFieldType durationFieldType54 = null;
        int int55 = hours50.get(durationFieldType54);
        org.joda.time.Hours hours57 = hours50.minus((int) (short) 0);
        org.joda.time.Hours hours58 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod59 = hours58.toMutablePeriod();
        org.joda.time.Hours hours60 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours61 = hours58.minus(hours60);
        org.joda.time.Hours hours62 = hours60.negated();
        org.joda.time.DurationFieldType durationFieldType63 = hours62.getFieldType();
        org.joda.time.Hours hours64 = hours57.minus(hours62);
        org.joda.time.Hours hours65 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours62);
        org.joda.time.Hours hours66 = hours65.negated();
        int int67 = hours46.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours65);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT-1H" + "'", str5, "PT-1H");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8 + "'", int13 == 8);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 8 + "'", int45 == 8);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(mutablePeriod59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours2 = hours0.plus(0);
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours3.get(durationFieldType7);
        org.joda.time.Hours hours10 = hours3.multipliedBy(1);
        org.joda.time.Hours hours11 = org.joda.time.Hours.ONE;
        int int12 = hours10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours11);
        org.joda.time.Hours hours13 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = hours13.get(durationFieldType14);
        org.joda.time.Hours hours17 = hours13.dividedBy(100);
        org.joda.time.Hours hours19 = hours17.plus((int) (byte) 10);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod22 = hours21.toMutablePeriod();
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours24 = hours21.minus(hours23);
        int int25 = hours20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours23);
        org.joda.time.DurationFieldType durationFieldType26 = null;
        boolean boolean27 = hours20.isSupported(durationFieldType26);
        org.joda.time.Hours hours29 = hours20.minus((int) (short) -1);
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod31 = hours30.toMutablePeriod();
        org.joda.time.Hours hours32 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours33 = hours30.minus(hours32);
        org.joda.time.Hours hours35 = hours32.plus(8);
        org.joda.time.Hours hours36 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType37 = null;
        int int38 = hours36.get(durationFieldType37);
        org.joda.time.DurationFieldType durationFieldType39 = hours36.getFieldType();
        boolean boolean40 = hours35.isSupported(durationFieldType39);
        int int41 = hours29.get(durationFieldType39);
        boolean boolean42 = hours19.isSupported(durationFieldType39);
        org.joda.time.Hours hours43 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod44 = hours43.toMutablePeriod();
        org.joda.time.Hours hours45 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours46 = hours43.minus(hours45);
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = hours43.get(durationFieldType47);
        org.joda.time.Hours hours50 = hours43.minus((int) (short) 0);
        org.joda.time.Hours hours51 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours43);
        boolean boolean52 = hours19.equals((java.lang.Object) hours51);
        org.joda.time.Hours hours54 = hours19.plus((-1));
        org.joda.time.Hours hours55 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours56 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType57 = null;
        int int58 = hours56.get(durationFieldType57);
        boolean boolean59 = hours55.equals((java.lang.Object) durationFieldType57);
        org.joda.time.Hours hours60 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours61 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod62 = hours61.toMutablePeriod();
        org.joda.time.Hours hours63 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours64 = hours61.minus(hours63);
        int int65 = hours60.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours63);
        org.joda.time.Hours hours67 = hours63.multipliedBy(0);
        org.joda.time.Hours hours68 = hours55.plus(hours67);
        org.joda.time.DurationFieldType durationFieldType69 = hours68.getFieldType();
        boolean boolean70 = hours19.equals((java.lang.Object) durationFieldType69);
        int int71 = hours11.get(durationFieldType69);
        boolean boolean72 = hours2.isSupported(durationFieldType69);
        org.joda.time.Hours hours73 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours2);
        org.joda.time.Duration duration74 = hours73.toStandardDuration();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 8 + "'", int41 == 8);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(mutablePeriod44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(mutablePeriod62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(durationFieldType69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertNotNull(duration74);
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(100);
        org.joda.time.Period period2 = hours1.toPeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod5 = hours4.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours7 = hours4.minus(hours6);
        int int8 = hours3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours6);
        org.joda.time.Hours hours10 = hours6.multipliedBy(0);
        org.joda.time.Duration duration11 = hours6.toStandardDuration();
        org.joda.time.Hours hours13 = hours6.plus((-1));
        boolean boolean14 = hours1.isGreaterThan(hours6);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT7H");
        org.joda.time.PeriodType periodType2 = hours1.getPeriodType();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours3.get(durationFieldType4);
        org.joda.time.Hours hours6 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours7 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = hours7.get(durationFieldType8);
        boolean boolean10 = hours6.equals((java.lang.Object) durationFieldType8);
        org.joda.time.Duration duration11 = hours6.toStandardDuration();
        boolean boolean12 = hours3.equals((java.lang.Object) duration11);
        boolean boolean13 = hours1.isLessThan(hours3);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(100);
        org.joda.time.Period period2 = hours1.toPeriod();
        org.joda.time.Hours hours4 = hours1.minus(8);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        org.joda.time.Hours hours9 = hours5.minus(hours6);
        boolean boolean11 = hours6.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours12 = null;
        org.joda.time.Hours hours13 = hours6.minus(hours12);
        org.joda.time.Hours hours14 = hours13.negated();
        boolean boolean15 = hours1.equals((java.lang.Object) hours14);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType17 = hours14.getFieldType((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        int int7 = hours5.getValue((int) (short) 0);
        org.joda.time.Hours hours8 = hours4.minus(hours5);
        org.joda.time.Hours hours9 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = hours9.get(durationFieldType10);
        org.joda.time.DurationFieldType durationFieldType12 = hours9.getFieldType();
        int int13 = hours4.get(durationFieldType12);
        boolean boolean14 = hours3.isSupported(durationFieldType12);
        org.joda.time.Hours hours16 = hours3.dividedBy((-2147483648));
        org.joda.time.Hours hours17 = hours3.negated();
        org.joda.time.Hours hours19 = hours3.minus((int) (short) 10);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8 + "'", int7 == 8);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 7 + "'", int13 == 7);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours19);
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = hours0.getFieldType();
        org.joda.time.Hours hours5 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 1);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours7);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        org.joda.time.Hours hours0 = org.joda.time.Hours.EIGHT;
        int int1 = hours0.size();
        org.joda.time.MutablePeriod mutablePeriod2 = hours0.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours4 = org.joda.time.Hours.MAX_VALUE;
        int int5 = hours3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours4);
        org.joda.time.Hours hours6 = hours3.negated();
        org.joda.time.Hours hours8 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod10 = hours9.toMutablePeriod();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours12 = hours9.minus(hours11);
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = hours9.get(durationFieldType13);
        org.joda.time.Hours hours16 = hours9.minus((int) (short) 0);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        boolean boolean22 = hours19.isSupported(durationFieldType21);
        org.joda.time.Hours hours23 = hours16.minus(hours19);
        org.joda.time.Hours hours24 = hours8.plus(hours23);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod27 = hours26.toMutablePeriod();
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours29 = hours26.minus(hours28);
        int int30 = hours25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours28);
        org.joda.time.Hours hours31 = hours8.plus(hours28);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod33 = hours32.toMutablePeriod();
        org.joda.time.Hours hours34 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours35 = hours32.minus(hours34);
        org.joda.time.DurationFieldType durationFieldType36 = null;
        int int37 = hours32.get(durationFieldType36);
        org.joda.time.Hours hours39 = hours32.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Hours hours41 = org.joda.time.Hours.hoursIn(readableInterval40);
        int int42 = hours39.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours41);
        boolean boolean43 = hours28.isGreaterThan(hours39);
        org.joda.time.Hours hours45 = hours28.multipliedBy(16);
        org.joda.time.Hours hours47 = hours28.multipliedBy((int) (short) 0);
        org.joda.time.Period period48 = hours47.toPeriod();
        org.joda.time.Hours hours49 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours50 = org.joda.time.Hours.EIGHT;
        int int52 = hours50.getValue((int) (short) 0);
        org.joda.time.Hours hours53 = hours49.minus(hours50);
        org.joda.time.Hours hours54 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType55 = null;
        int int56 = hours54.get(durationFieldType55);
        org.joda.time.DurationFieldType durationFieldType57 = hours54.getFieldType();
        int int58 = hours49.get(durationFieldType57);
        boolean boolean59 = hours47.isSupported(durationFieldType57);
        boolean boolean60 = hours3.isSupported(durationFieldType57);
        int int61 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Period period62 = hours3.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 8 + "'", int52 == 8);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 7 + "'", int58 == 7);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(period62);
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT8H");
        org.joda.time.Hours hours3 = hours1.dividedBy(3);
        org.joda.time.Hours hours5 = hours3.dividedBy((-6));
        org.joda.time.Hours hours7 = hours5.plus(16);
        java.lang.String str8 = hours5.toString();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "PT0H" + "'", str8, "PT0H");
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours3.multipliedBy(0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod10 = hours9.toMutablePeriod();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours12 = hours9.minus(hours11);
        int int13 = hours8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours11);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours8.isSupported(durationFieldType14);
        org.joda.time.Hours hours17 = hours8.minus((int) (short) -1);
        org.joda.time.PeriodType periodType18 = hours8.getPeriodType();
        int int19 = hours8.getHours();
        boolean boolean20 = hours3.equals((java.lang.Object) int19);
        java.lang.String str21 = hours3.toString();
        org.joda.time.Hours hours23 = hours3.minus((int) (short) 10);
        org.joda.time.Hours hours25 = hours3.multipliedBy((int) '4');
        org.joda.time.Hours hours27 = org.joda.time.Hours.hours((int) ' ');
        org.joda.time.Hours hours28 = hours27.negated();
        org.joda.time.Duration duration29 = hours28.toStandardDuration();
        boolean boolean30 = hours25.isGreaterThan(hours28);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 7 + "'", int19 == 7);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT8H" + "'", str21, "PT8H");
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.Hours hours4 = hours0.dividedBy(100);
        org.joda.time.MutablePeriod mutablePeriod5 = hours4.toMutablePeriod();
        int int6 = hours4.getHours();
        org.joda.time.Hours hours8 = hours4.plus(92);
        org.joda.time.Hours hours10 = hours8.minus((-4));
        org.joda.time.Hours hours11 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours12 = hours11.negated();
        org.joda.time.DurationFieldType durationFieldType13 = hours11.getFieldType();
        java.lang.String str14 = hours11.toString();
        org.joda.time.Hours hours15 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        int int21 = hours16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours19);
        org.joda.time.MutablePeriod mutablePeriod22 = hours16.toMutablePeriod();
        org.joda.time.Hours hours24 = hours16.minus(7);
        org.joda.time.Hours hours25 = hours15.minus(hours16);
        org.joda.time.Hours hours26 = hours11.minus(hours16);
        org.joda.time.Hours hours27 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours11);
        org.joda.time.Hours hours28 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours29 = org.joda.time.Hours.MAX_VALUE;
        int int30 = hours28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.Hours hours31 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = hours31.get(durationFieldType32);
        org.joda.time.DurationFieldType durationFieldType34 = hours31.getFieldType();
        org.joda.time.DurationFieldType durationFieldType35 = hours31.getFieldType();
        boolean boolean36 = hours29.isSupported(durationFieldType35);
        org.joda.time.Period period37 = hours29.toPeriod();
        org.joda.time.DurationFieldType durationFieldType38 = hours29.getFieldType();
        boolean boolean39 = hours27.isSupported(durationFieldType38);
        boolean boolean40 = hours10.isSupported(durationFieldType38);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "PT3H" + "'", str14, "PT3H");
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.Hours hours4 = hours0.dividedBy(100);
        org.joda.time.MutablePeriod mutablePeriod5 = hours4.toMutablePeriod();
        int int6 = hours4.getHours();
        org.joda.time.Hours hours7 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours4);
        org.joda.time.Hours hours8 = null;
        boolean boolean9 = hours4.isLessThan(hours8);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        org.joda.time.Hours hours8 = hours1.dividedBy(1);
        org.joda.time.Hours hours9 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours10 = hours9.negated();
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        int int14 = hours12.getValue((int) (short) 0);
        org.joda.time.Hours hours15 = hours11.minus(hours12);
        org.joda.time.Hours hours16 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = hours16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = hours16.getFieldType();
        int int20 = hours11.get(durationFieldType19);
        boolean boolean21 = hours9.isSupported(durationFieldType19);
        int int22 = hours9.getHours();
        boolean boolean23 = hours1.isGreaterThan(hours9);
        org.joda.time.Hours hours25 = hours9.multipliedBy(6);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8 + "'", int14 == 8);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 7 + "'", int20 == 7);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 3 + "'", int22 == 3);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(hours25);
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        int int7 = hours2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours5);
        org.joda.time.MutablePeriod mutablePeriod8 = hours2.toMutablePeriod();
        org.joda.time.Hours hours9 = hours1.minus(hours2);
        org.joda.time.Hours hours10 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours2);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = hours11.get(durationFieldType15);
        org.joda.time.Hours hours18 = hours11.multipliedBy(1);
        org.joda.time.Hours hours19 = org.joda.time.Hours.ONE;
        int int20 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours19);
        org.joda.time.MutablePeriod mutablePeriod21 = hours18.toMutablePeriod();
        org.joda.time.PeriodType periodType22 = hours18.getPeriodType();
        boolean boolean23 = hours10.isLessThan(hours18);
        org.joda.time.Hours hours25 = hours18.dividedBy((-2147483648));
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(hours25);
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        org.joda.time.Hours hours0 = org.joda.time.Hours.EIGHT;
        int int1 = hours0.size();
        org.joda.time.Hours hours3 = hours0.dividedBy(100);
        org.joda.time.Hours hours4 = hours3.negated();
        org.joda.time.Hours hours6 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        int int12 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours10);
        org.joda.time.MutablePeriod mutablePeriod13 = hours7.toMutablePeriod();
        org.joda.time.Hours hours14 = hours6.minus(hours7);
        org.joda.time.Hours hours15 = hours3.plus(hours6);
        org.joda.time.Hours hours17 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = hours18.get(durationFieldType22);
        org.joda.time.Hours hours25 = hours18.minus((int) (short) 0);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod27 = hours26.toMutablePeriod();
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours29 = hours26.minus(hours28);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        boolean boolean31 = hours28.isSupported(durationFieldType30);
        org.joda.time.Hours hours32 = hours25.minus(hours28);
        org.joda.time.Hours hours33 = hours17.plus(hours32);
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod35 = hours34.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours37 = hours34.minus(hours36);
        boolean boolean38 = hours32.isGreaterThan(hours36);
        org.joda.time.Hours hours40 = hours32.plus((-2));
        boolean boolean41 = hours6.equals((java.lang.Object) hours40);
        org.joda.time.Hours hours42 = org.joda.time.Hours.ONE;
        int int43 = hours42.getHours();
        org.joda.time.Hours hours45 = hours42.plus(10);
        org.joda.time.Hours hours46 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod47 = hours46.toMutablePeriod();
        org.joda.time.Hours hours48 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours49 = hours46.minus(hours48);
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = hours46.get(durationFieldType50);
        org.joda.time.Hours hours53 = hours46.multipliedBy(1);
        boolean boolean54 = hours42.isGreaterThan(hours46);
        org.joda.time.Hours hours55 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours56 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours57 = org.joda.time.Hours.EIGHT;
        int int59 = hours57.getValue((int) (short) 0);
        org.joda.time.Hours hours60 = hours56.minus(hours57);
        org.joda.time.Hours hours61 = hours55.minus(hours56);
        int int62 = hours55.size();
        org.joda.time.Hours hours63 = hours46.plus(hours55);
        org.joda.time.Hours hours65 = org.joda.time.Hours.hours(0);
        int int66 = hours65.size();
        org.joda.time.Hours hours68 = org.joda.time.Hours.hours((-1));
        int int69 = hours65.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours68);
        org.joda.time.Hours hours70 = hours46.minus(hours65);
        boolean boolean71 = hours6.isGreaterThan(hours46);
        org.joda.time.Hours hours73 = hours6.minus(92);
        org.joda.time.DurationFieldType durationFieldType74 = hours6.getFieldType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType76 = hours6.getFieldType((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(mutablePeriod47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 8 + "'", int59 == 8);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertNotNull(durationFieldType74);
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours0.get(durationFieldType7);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours0.get(durationFieldType9);
        org.joda.time.Hours hours12 = hours0.minus(0);
        org.joda.time.DurationFieldType durationFieldType13 = hours12.getFieldType();
        java.lang.Class<?> wildcardClass14 = hours12.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours0.minus((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod8 = hours0.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod10 = hours9.toMutablePeriod();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours12 = hours9.minus(hours11);
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = hours9.get(durationFieldType13);
        org.joda.time.Hours hours16 = hours9.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval17 = null;
        org.joda.time.Hours hours18 = org.joda.time.Hours.hoursIn(readableInterval17);
        int int19 = hours16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours18);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        int int23 = hours21.getValue((int) (short) 0);
        org.joda.time.Hours hours24 = hours20.minus(hours21);
        org.joda.time.Hours hours25 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = hours25.get(durationFieldType26);
        org.joda.time.DurationFieldType durationFieldType28 = hours25.getFieldType();
        int int29 = hours20.get(durationFieldType28);
        boolean boolean30 = hours18.isSupported(durationFieldType28);
        int int31 = hours0.get(durationFieldType28);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 8 + "'", int23 == 8);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 7 + "'", int29 == 7);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 7 + "'", int31 == 7);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(0);
        int int2 = hours1.size();
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod5 = hours4.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours7 = hours4.minus(hours6);
        int int8 = hours3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours6);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        boolean boolean10 = hours3.isSupported(durationFieldType9);
        org.joda.time.Hours hours12 = hours3.minus((int) (short) -1);
        org.joda.time.PeriodType periodType13 = hours3.getPeriodType();
        int int14 = hours3.getHours();
        org.joda.time.DurationFieldType durationFieldType16 = hours3.getFieldType((int) (short) 0);
        int int17 = hours1.get(durationFieldType16);
        org.joda.time.PeriodType periodType18 = hours1.getPeriodType();
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = hours19.get(durationFieldType23);
        org.joda.time.Hours hours26 = hours19.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Hours hours28 = org.joda.time.Hours.hoursIn(readableInterval27);
        int int29 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours28);
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours31 = org.joda.time.Hours.EIGHT;
        int int33 = hours31.getValue((int) (short) 0);
        org.joda.time.Hours hours34 = hours30.minus(hours31);
        org.joda.time.Hours hours35 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType36 = null;
        int int37 = hours35.get(durationFieldType36);
        org.joda.time.DurationFieldType durationFieldType38 = hours35.getFieldType();
        int int39 = hours30.get(durationFieldType38);
        boolean boolean40 = hours28.isSupported(durationFieldType38);
        org.joda.time.PeriodType periodType41 = hours28.getPeriodType();
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod43 = hours42.toMutablePeriod();
        org.joda.time.Hours hours44 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours45 = hours42.minus(hours44);
        org.joda.time.Duration duration46 = hours42.toStandardDuration();
        java.lang.String str47 = hours42.toString();
        org.joda.time.Hours hours49 = hours42.minus((-6));
        org.joda.time.Hours hours51 = hours42.multipliedBy(7);
        boolean boolean52 = hours28.isGreaterThan(hours51);
        org.joda.time.Hours hours53 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours54 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod55 = hours54.toMutablePeriod();
        org.joda.time.Hours hours56 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours57 = hours54.minus(hours56);
        int int58 = hours53.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours56);
        org.joda.time.DurationFieldType durationFieldType59 = null;
        boolean boolean60 = hours53.isSupported(durationFieldType59);
        org.joda.time.Hours hours62 = hours53.minus((int) (short) -1);
        org.joda.time.PeriodType periodType63 = hours53.getPeriodType();
        int int64 = hours53.getHours();
        org.joda.time.DurationFieldType durationFieldType66 = hours53.getFieldType((int) (short) 0);
        int int67 = hours53.size();
        int int68 = hours53.size();
        org.joda.time.Period period69 = hours53.toPeriod();
        org.joda.time.Hours hours70 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod71 = hours70.toMutablePeriod();
        org.joda.time.Hours hours72 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours73 = hours70.minus(hours72);
        boolean boolean74 = hours53.isGreaterThan(hours72);
        org.joda.time.Hours hours75 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours77 = hours75.plus(1);
        org.joda.time.Hours hours79 = hours75.dividedBy((int) (byte) -1);
        int int80 = hours75.size();
        int int81 = hours72.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours75);
        org.joda.time.Hours hours83 = hours72.dividedBy(100);
        boolean boolean84 = hours28.equals((java.lang.Object) hours72);
        org.joda.time.Duration duration85 = hours72.toStandardDuration();
        boolean boolean86 = hours1.equals((java.lang.Object) duration85);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 7 + "'", int14 == 7);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 8 + "'", int33 == 8);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 7 + "'", int39 == 7);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "PT7H" + "'", str47, "PT7H");
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(mutablePeriod55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 7 + "'", int64 == 7);
        org.junit.Assert.assertNotNull(durationFieldType66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(mutablePeriod71);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(hours75);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertNotNull(hours79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertNotNull(hours83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(duration85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.Hours hours4 = hours0.dividedBy(100);
        org.joda.time.Hours hours6 = hours4.plus((int) (byte) 10);
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        int int12 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours10);
        org.joda.time.DurationFieldType durationFieldType13 = null;
        boolean boolean14 = hours7.isSupported(durationFieldType13);
        org.joda.time.Hours hours16 = hours7.minus((int) (short) -1);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        org.joda.time.Hours hours22 = hours19.plus(8);
        org.joda.time.Hours hours23 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = hours23.get(durationFieldType24);
        org.joda.time.DurationFieldType durationFieldType26 = hours23.getFieldType();
        boolean boolean27 = hours22.isSupported(durationFieldType26);
        int int28 = hours16.get(durationFieldType26);
        boolean boolean29 = hours6.isSupported(durationFieldType26);
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod31 = hours30.toMutablePeriod();
        org.joda.time.Hours hours32 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours33 = hours30.minus(hours32);
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = hours30.get(durationFieldType34);
        org.joda.time.Hours hours37 = hours30.minus((int) (short) 0);
        org.joda.time.Hours hours38 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours30);
        boolean boolean39 = hours6.equals((java.lang.Object) hours38);
        org.joda.time.Hours hours41 = hours6.plus((-1));
        org.joda.time.MutablePeriod mutablePeriod42 = hours41.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 8 + "'", int28 == 8);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        int int9 = hours7.getValue((int) (short) 0);
        org.joda.time.Hours hours10 = hours6.minus(hours7);
        org.joda.time.Hours hours11 = hours5.minus(hours6);
        int int12 = hours5.size();
        org.joda.time.Duration duration13 = hours5.toStandardDuration();
        boolean boolean14 = hours1.isGreaterThan(hours5);
        org.joda.time.Hours hours16 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        int int22 = hours17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours20);
        org.joda.time.DurationFieldType durationFieldType23 = null;
        boolean boolean24 = hours17.isSupported(durationFieldType23);
        org.joda.time.Hours hours26 = hours17.minus((int) (short) -1);
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        org.joda.time.Hours hours32 = hours29.plus(8);
        org.joda.time.Hours hours33 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = hours33.get(durationFieldType34);
        org.joda.time.DurationFieldType durationFieldType36 = hours33.getFieldType();
        boolean boolean37 = hours32.isSupported(durationFieldType36);
        int int38 = hours26.get(durationFieldType36);
        org.joda.time.Hours hours39 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours40 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod41 = hours40.toMutablePeriod();
        org.joda.time.Hours hours42 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours43 = hours40.minus(hours42);
        int int44 = hours39.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours42);
        org.joda.time.DurationFieldType durationFieldType45 = null;
        boolean boolean46 = hours39.isSupported(durationFieldType45);
        org.joda.time.Hours hours48 = hours39.multipliedBy((int) (short) 10);
        org.joda.time.Hours hours49 = hours26.plus(hours39);
        org.joda.time.Hours hours51 = hours26.plus(0);
        org.joda.time.Hours hours52 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours53 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod54 = hours53.toMutablePeriod();
        org.joda.time.Hours hours55 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours56 = hours53.minus(hours55);
        int int57 = hours52.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours55);
        org.joda.time.DurationFieldType durationFieldType58 = null;
        boolean boolean59 = hours52.isSupported(durationFieldType58);
        org.joda.time.Hours hours61 = hours52.minus((int) (short) -1);
        org.joda.time.PeriodType periodType62 = hours52.getPeriodType();
        int int63 = hours52.getHours();
        org.joda.time.DurationFieldType durationFieldType65 = hours52.getFieldType((int) (short) 0);
        int int66 = hours52.size();
        int int67 = hours52.size();
        org.joda.time.Period period68 = hours52.toPeriod();
        org.joda.time.Hours hours69 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod70 = hours69.toMutablePeriod();
        org.joda.time.Hours hours71 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours72 = hours69.minus(hours71);
        boolean boolean73 = hours52.isGreaterThan(hours71);
        boolean boolean74 = hours26.isGreaterThan(hours52);
        org.joda.time.Hours hours76 = hours52.multipliedBy(0);
        boolean boolean77 = hours16.isLessThan(hours52);
        org.joda.time.Duration duration78 = hours52.toStandardDuration();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 8 + "'", int38 == 8);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 7 + "'", int63 == 7);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertNotNull(mutablePeriod70);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(duration78);
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.multipliedBy(1);
        int int8 = hours7.getHours();
        org.joda.time.Hours hours10 = hours7.minus((int) ' ');
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        int int13 = hours12.size();
        org.joda.time.Hours hours15 = hours12.dividedBy(100);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        int int19 = hours17.getValue((int) (short) 0);
        org.joda.time.Hours hours20 = hours16.minus(hours17);
        org.joda.time.Hours hours21 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        int int25 = hours23.getValue((int) (short) 0);
        org.joda.time.Hours hours26 = hours22.minus(hours23);
        org.joda.time.Hours hours27 = hours21.minus(hours22);
        int int28 = hours21.size();
        org.joda.time.Duration duration29 = hours21.toStandardDuration();
        boolean boolean30 = hours17.isGreaterThan(hours21);
        org.joda.time.MutablePeriod mutablePeriod31 = hours21.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType32 = hours21.getFieldType();
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period34 = hours33.toPeriod();
        org.joda.time.Hours hours36 = hours33.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod37 = hours36.toMutablePeriod();
        org.joda.time.Hours hours38 = org.joda.time.Hours.THREE;
        org.joda.time.Period period39 = hours38.toPeriod();
        org.joda.time.Hours hours41 = hours38.plus((int) (byte) -1);
        org.joda.time.Hours hours42 = hours36.minus(hours38);
        org.joda.time.Hours hours43 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod44 = hours43.toMutablePeriod();
        org.joda.time.Hours hours45 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours46 = hours43.minus(hours45);
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = hours43.get(durationFieldType47);
        org.joda.time.Hours hours50 = hours43.minus((int) (short) 0);
        org.joda.time.Hours hours51 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType52 = null;
        int int53 = hours51.get(durationFieldType52);
        org.joda.time.DurationFieldType durationFieldType54 = hours51.getFieldType();
        int int55 = hours50.get(durationFieldType54);
        int int56 = hours38.get(durationFieldType54);
        int int57 = hours21.get(durationFieldType54);
        boolean boolean58 = hours12.isLessThan(hours21);
        org.joda.time.PeriodType periodType59 = hours21.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType60 = hours21.getFieldType();
        org.joda.time.DurationFieldType durationFieldType62 = hours21.getFieldType(0);
        boolean boolean63 = hours10.isSupported(durationFieldType62);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 7 + "'", int8 == 7);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8 + "'", int19 == 8);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 8 + "'", int25 == 8);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(mutablePeriod44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 7 + "'", int55 == 7);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 3 + "'", int56 == 3);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 6 + "'", int57 == 6);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.PeriodType periodType10 = hours0.getPeriodType();
        int int11 = hours0.getHours();
        org.joda.time.DurationFieldType durationFieldType13 = hours0.getFieldType((int) (short) 0);
        int int14 = hours0.size();
        int int15 = hours0.size();
        org.joda.time.DurationFieldType durationFieldType16 = hours0.getFieldType();
        org.joda.time.Hours hours18 = hours0.multipliedBy(100);
        java.lang.Class<?> wildcardClass19 = hours18.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 7 + "'", int11 == 7);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.Hours hours4 = hours0.dividedBy(100);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.DurationFieldType durationFieldType11 = null;
        boolean boolean12 = hours5.isSupported(durationFieldType11);
        org.joda.time.Hours hours14 = hours5.minus((int) (short) -1);
        org.joda.time.PeriodType periodType15 = hours5.getPeriodType();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        int int18 = hours16.getValue((int) (short) 0);
        org.joda.time.Hours hours19 = hours5.minus(hours16);
        org.joda.time.Hours hours21 = hours5.plus(7);
        org.joda.time.Hours hours22 = hours5.negated();
        org.joda.time.MutablePeriod mutablePeriod23 = hours5.toMutablePeriod();
        org.joda.time.Hours hours24 = hours4.plus(hours5);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        int int28 = hours26.getValue((int) (short) 0);
        org.joda.time.Hours hours29 = hours25.minus(hours26);
        int int30 = hours29.size();
        org.joda.time.Period period31 = hours29.toPeriod();
        org.joda.time.Hours hours33 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod35 = hours34.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours37 = hours34.minus(hours36);
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = hours34.get(durationFieldType38);
        org.joda.time.Hours hours41 = hours34.minus((int) (short) 0);
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod43 = hours42.toMutablePeriod();
        org.joda.time.Hours hours44 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours45 = hours42.minus(hours44);
        org.joda.time.DurationFieldType durationFieldType46 = null;
        boolean boolean47 = hours44.isSupported(durationFieldType46);
        org.joda.time.Hours hours48 = hours41.minus(hours44);
        org.joda.time.Hours hours49 = hours33.plus(hours48);
        org.joda.time.Hours hours50 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours51 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod52 = hours51.toMutablePeriod();
        org.joda.time.Hours hours53 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours54 = hours51.minus(hours53);
        int int55 = hours50.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours53);
        org.joda.time.Hours hours56 = hours33.plus(hours53);
        org.joda.time.Hours hours57 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod58 = hours57.toMutablePeriod();
        org.joda.time.Hours hours59 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours60 = hours57.minus(hours59);
        org.joda.time.DurationFieldType durationFieldType61 = null;
        int int62 = hours57.get(durationFieldType61);
        org.joda.time.Hours hours64 = hours57.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval65 = null;
        org.joda.time.Hours hours66 = org.joda.time.Hours.hoursIn(readableInterval65);
        int int67 = hours64.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours66);
        boolean boolean68 = hours53.isGreaterThan(hours64);
        org.joda.time.Hours hours69 = hours29.minus(hours53);
        org.joda.time.Hours hours70 = hours53.negated();
        boolean boolean71 = hours24.isGreaterThan(hours53);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 8 + "'", int28 == 8);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(mutablePeriod52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(mutablePeriod58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Hours hours9 = org.joda.time.Hours.hoursIn(readableInterval8);
        int int10 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours9);
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours13 = hours7.negated();
        org.joda.time.Hours hours14 = hours13.negated();
        org.joda.time.PeriodType periodType15 = hours13.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(periodType15);
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.DurationFieldType durationFieldType24 = hours16.getFieldType((int) (short) 0);
        java.lang.String str25 = hours16.toString();
        org.joda.time.Hours hours26 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours27 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = hours27.get(durationFieldType28);
        boolean boolean30 = hours26.equals((java.lang.Object) durationFieldType28);
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod33 = hours32.toMutablePeriod();
        org.joda.time.Hours hours34 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours35 = hours32.minus(hours34);
        int int36 = hours31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours34);
        org.joda.time.Hours hours38 = hours34.multipliedBy(0);
        org.joda.time.Hours hours39 = hours26.plus(hours38);
        org.joda.time.Hours hours41 = hours39.minus((int) (byte) 100);
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours43 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod44 = hours43.toMutablePeriod();
        org.joda.time.Hours hours45 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours46 = hours43.minus(hours45);
        int int47 = hours42.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours45);
        org.joda.time.DurationFieldType durationFieldType48 = null;
        boolean boolean49 = hours42.isSupported(durationFieldType48);
        org.joda.time.Hours hours51 = hours42.minus((int) (short) -1);
        org.joda.time.Hours hours52 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod53 = hours52.toMutablePeriod();
        org.joda.time.Hours hours54 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours55 = hours52.minus(hours54);
        org.joda.time.Hours hours57 = hours54.plus(8);
        org.joda.time.Hours hours58 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType59 = null;
        int int60 = hours58.get(durationFieldType59);
        org.joda.time.DurationFieldType durationFieldType61 = hours58.getFieldType();
        boolean boolean62 = hours57.isSupported(durationFieldType61);
        int int63 = hours51.get(durationFieldType61);
        java.lang.String str64 = hours51.toString();
        org.joda.time.Hours hours66 = hours51.dividedBy((-8));
        boolean boolean67 = hours41.isGreaterThan(hours66);
        org.joda.time.Hours hours68 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod69 = hours68.toMutablePeriod();
        org.joda.time.Hours hours70 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours71 = hours68.minus(hours70);
        org.joda.time.DurationFieldType durationFieldType72 = null;
        int int73 = hours68.get(durationFieldType72);
        org.joda.time.Hours hours75 = hours68.minus((int) (short) 0);
        org.joda.time.Hours hours76 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType77 = null;
        int int78 = hours76.get(durationFieldType77);
        org.joda.time.DurationFieldType durationFieldType79 = hours76.getFieldType();
        int int80 = hours75.get(durationFieldType79);
        org.joda.time.Hours hours81 = org.joda.time.Hours.ONE;
        int int82 = hours81.getHours();
        org.joda.time.Hours hours84 = hours81.plus(10);
        org.joda.time.Hours hours85 = hours75.minus(hours84);
        boolean boolean86 = hours66.isLessThan(hours85);
        org.joda.time.Hours hours87 = hours16.plus(hours85);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "PT-1H" + "'", str25, "PT-1H");
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(mutablePeriod44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(mutablePeriod53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 8 + "'", int63 == 8);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "PT8H" + "'", str64, "PT8H");
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(mutablePeriod69);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(hours75);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(durationFieldType79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 7 + "'", int80 == 7);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertNotNull(hours84);
        org.junit.Assert.assertNotNull(hours85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(hours87);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.Hours hours3 = hours0.plus(10);
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod5 = hours4.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours7 = hours4.minus(hours6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = hours4.get(durationFieldType8);
        org.joda.time.Hours hours11 = hours4.multipliedBy(1);
        boolean boolean12 = hours0.isGreaterThan(hours4);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        int int17 = hours15.getValue((int) (short) 0);
        org.joda.time.Hours hours18 = hours14.minus(hours15);
        org.joda.time.Hours hours19 = hours13.minus(hours14);
        int int20 = hours13.size();
        org.joda.time.Hours hours21 = hours4.plus(hours13);
        org.joda.time.Hours hours23 = org.joda.time.Hours.hours(0);
        int int24 = hours23.size();
        org.joda.time.Hours hours26 = org.joda.time.Hours.hours((-1));
        int int27 = hours23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours26);
        org.joda.time.Hours hours28 = hours4.minus(hours23);
        org.joda.time.Hours hours29 = hours4.negated();
        org.joda.time.Hours hours31 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Period period32 = hours31.toPeriod();
        org.joda.time.Hours hours34 = hours31.minus((int) (byte) -1);
        org.joda.time.Hours hours35 = hours31.negated();
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours37 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod38 = hours37.toMutablePeriod();
        org.joda.time.Hours hours39 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours40 = hours37.minus(hours39);
        int int41 = hours36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours39);
        org.joda.time.DurationFieldType durationFieldType42 = null;
        boolean boolean43 = hours36.isSupported(durationFieldType42);
        org.joda.time.Hours hours45 = hours36.minus((int) (short) -1);
        org.joda.time.PeriodType periodType46 = hours36.getPeriodType();
        org.joda.time.Hours hours47 = org.joda.time.Hours.EIGHT;
        int int49 = hours47.getValue((int) (short) 0);
        org.joda.time.Hours hours50 = hours36.minus(hours47);
        org.joda.time.Hours hours52 = hours36.plus(7);
        org.joda.time.Hours hours53 = hours36.negated();
        boolean boolean54 = hours35.isLessThan(hours53);
        boolean boolean55 = hours29.isGreaterThan(hours35);
        org.joda.time.Hours hours57 = hours35.dividedBy((int) (byte) 1);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 8 + "'", int49 == 8);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(hours57);
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = hours23.get(durationFieldType27);
        org.joda.time.Hours hours30 = hours23.minus((int) (short) 0);
        org.joda.time.Hours hours31 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod34 = hours33.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours36 = hours33.minus(hours35);
        int int37 = hours32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours35);
        org.joda.time.DurationFieldType durationFieldType38 = null;
        boolean boolean39 = hours32.isSupported(durationFieldType38);
        org.joda.time.Hours hours41 = hours32.minus((int) (short) -1);
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod43 = hours42.toMutablePeriod();
        org.joda.time.Hours hours44 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours45 = hours42.minus(hours44);
        org.joda.time.Hours hours47 = hours44.plus(8);
        org.joda.time.Hours hours48 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = hours48.get(durationFieldType49);
        org.joda.time.DurationFieldType durationFieldType51 = hours48.getFieldType();
        boolean boolean52 = hours47.isSupported(durationFieldType51);
        int int53 = hours41.get(durationFieldType51);
        org.joda.time.Hours hours54 = hours23.plus(hours41);
        org.joda.time.Hours hours55 = hours20.plus(hours23);
        org.joda.time.Hours hours56 = hours20.negated();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 8 + "'", int53 == 8);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        int int14 = hours9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours12);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours9.isSupported(durationFieldType15);
        org.joda.time.Hours hours18 = hours9.minus((int) (short) -1);
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        org.joda.time.Hours hours24 = hours21.plus(8);
        org.joda.time.Hours hours25 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = hours25.get(durationFieldType26);
        org.joda.time.DurationFieldType durationFieldType28 = hours25.getFieldType();
        boolean boolean29 = hours24.isSupported(durationFieldType28);
        int int30 = hours18.get(durationFieldType28);
        org.joda.time.Hours hours31 = hours0.plus(hours18);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod33 = hours32.toMutablePeriod();
        org.joda.time.Hours hours34 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours35 = hours32.minus(hours34);
        org.joda.time.DurationFieldType durationFieldType36 = null;
        int int37 = hours32.get(durationFieldType36);
        org.joda.time.Hours hours39 = hours32.minus((int) (short) 0);
        org.joda.time.Hours hours40 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType41 = null;
        int int42 = hours40.get(durationFieldType41);
        org.joda.time.DurationFieldType durationFieldType43 = hours40.getFieldType();
        int int44 = hours39.get(durationFieldType43);
        org.joda.time.Hours hours45 = hours39.negated();
        org.joda.time.Hours hours46 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours47 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours48 = org.joda.time.Hours.EIGHT;
        int int50 = hours48.getValue((int) (short) 0);
        org.joda.time.Hours hours51 = hours47.minus(hours48);
        org.joda.time.Hours hours52 = hours46.minus(hours47);
        org.joda.time.Hours hours53 = hours45.plus(hours47);
        org.joda.time.DurationFieldType durationFieldType54 = hours45.getFieldType();
        org.joda.time.DurationFieldType durationFieldType56 = hours45.getFieldType(0);
        boolean boolean57 = hours18.isSupported(durationFieldType56);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 8 + "'", int30 == 8);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 7 + "'", int44 == 7);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 8 + "'", int50 == 8);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours1 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = hours1.get(durationFieldType2);
        boolean boolean4 = hours0.equals((java.lang.Object) durationFieldType2);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.Hours hours12 = hours8.multipliedBy(0);
        org.joda.time.Hours hours13 = hours0.plus(hours12);
        org.joda.time.Hours hours15 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours16.get(durationFieldType20);
        org.joda.time.Hours hours23 = hours16.minus((int) (short) 0);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        boolean boolean29 = hours26.isSupported(durationFieldType28);
        org.joda.time.Hours hours30 = hours23.minus(hours26);
        org.joda.time.Hours hours31 = hours15.plus(hours30);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod33 = hours32.toMutablePeriod();
        org.joda.time.Hours hours34 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours35 = hours32.minus(hours34);
        boolean boolean36 = hours30.isGreaterThan(hours34);
        org.joda.time.Hours hours37 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours30);
        int int38 = hours12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours30);
        org.joda.time.Hours hours40 = hours12.multipliedBy((-8));
        org.joda.time.DurationFieldType durationFieldType41 = hours40.getFieldType();
        org.joda.time.Hours hours43 = hours40.plus(7);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertNotNull(hours43);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.Hours hours11 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = hours12.get(durationFieldType16);
        org.joda.time.Hours hours19 = hours12.minus((int) (short) 0);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours23 = hours20.minus(hours22);
        org.joda.time.DurationFieldType durationFieldType24 = null;
        boolean boolean25 = hours22.isSupported(durationFieldType24);
        org.joda.time.Hours hours26 = hours19.minus(hours22);
        org.joda.time.Hours hours27 = hours11.plus(hours26);
        org.joda.time.Hours hours28 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod29 = hours28.toMutablePeriod();
        org.joda.time.Hours hours30 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours31 = hours28.minus(hours30);
        boolean boolean32 = hours26.isGreaterThan(hours30);
        org.joda.time.Hours hours33 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        int int37 = hours35.getValue((int) (short) 0);
        org.joda.time.Hours hours38 = hours34.minus(hours35);
        org.joda.time.Hours hours39 = hours33.minus(hours34);
        org.joda.time.Hours hours41 = hours34.dividedBy(1);
        org.joda.time.Duration duration42 = hours34.toStandardDuration();
        boolean boolean43 = hours30.isGreaterThan(hours34);
        org.joda.time.Hours hours44 = hours30.negated();
        org.joda.time.Hours hours45 = hours44.negated();
        org.joda.time.Hours hours47 = hours45.multipliedBy((int) 'a');
        org.joda.time.Hours hours48 = hours47.negated();
        boolean boolean49 = hours9.isGreaterThan(hours48);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 8 + "'", int37 == 8);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours9 = hours3.minus(hours5);
        org.joda.time.PeriodType periodType10 = hours5.getPeriodType();
        org.joda.time.Hours hours11 = org.joda.time.Hours.ZERO;
        org.joda.time.Duration duration12 = hours11.toStandardDuration();
        boolean boolean13 = hours5.isLessThan(hours11);
        org.joda.time.Hours hours15 = hours11.minus((int) (byte) 100);
        java.lang.String str16 = hours11.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT0H" + "'", str16, "PT0H");
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours5 = hours2.plus(8);
        org.joda.time.Hours hours6 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours6.get(durationFieldType7);
        org.joda.time.DurationFieldType durationFieldType9 = hours6.getFieldType();
        boolean boolean10 = hours5.isSupported(durationFieldType9);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        int int16 = hours11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours14);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        boolean boolean18 = hours11.isSupported(durationFieldType17);
        org.joda.time.Hours hours20 = hours11.minus((int) (short) -1);
        org.joda.time.PeriodType periodType21 = hours11.getPeriodType();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        int int24 = hours22.getValue((int) (short) 0);
        org.joda.time.Hours hours25 = hours11.minus(hours22);
        org.joda.time.Hours hours26 = hours5.minus(hours25);
        org.joda.time.Hours hours28 = org.joda.time.Hours.parseHours("PT8H");
        boolean boolean29 = hours26.isLessThan(hours28);
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod32 = hours31.toMutablePeriod();
        org.joda.time.Hours hours33 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours34 = hours31.minus(hours33);
        int int35 = hours30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours33);
        org.joda.time.Hours hours37 = hours30.minus((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod38 = hours30.toMutablePeriod();
        org.joda.time.Hours hours39 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours40 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod41 = hours40.toMutablePeriod();
        org.joda.time.Hours hours42 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours43 = hours40.minus(hours42);
        int int44 = hours39.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours42);
        org.joda.time.DurationFieldType durationFieldType45 = null;
        boolean boolean46 = hours39.isSupported(durationFieldType45);
        org.joda.time.Hours hours48 = hours39.minus((int) (short) -1);
        org.joda.time.Hours hours49 = hours48.negated();
        org.joda.time.Period period50 = hours48.toPeriod();
        boolean boolean51 = hours30.equals((java.lang.Object) hours48);
        boolean boolean52 = hours26.equals((java.lang.Object) boolean51);
        org.joda.time.Hours hours53 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours54 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours55 = org.joda.time.Hours.EIGHT;
        int int57 = hours55.getValue((int) (short) 0);
        org.joda.time.Hours hours58 = hours54.minus(hours55);
        org.joda.time.Hours hours59 = hours53.minus(hours54);
        org.joda.time.Hours hours61 = hours54.dividedBy(1);
        org.joda.time.Duration duration62 = hours54.toStandardDuration();
        boolean boolean63 = hours26.equals((java.lang.Object) hours54);
        org.joda.time.Hours hours64 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours26);
        org.joda.time.Hours hours65 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours66 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod67 = hours66.toMutablePeriod();
        org.joda.time.Hours hours68 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours69 = hours66.minus(hours68);
        int int70 = hours65.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours68);
        org.joda.time.DurationFieldType durationFieldType71 = null;
        boolean boolean72 = hours65.isSupported(durationFieldType71);
        org.joda.time.Hours hours74 = hours65.minus((int) (short) -1);
        org.joda.time.PeriodType periodType75 = hours65.getPeriodType();
        org.joda.time.Hours hours76 = org.joda.time.Hours.EIGHT;
        int int78 = hours76.getValue((int) (short) 0);
        org.joda.time.Hours hours79 = hours65.minus(hours76);
        int int80 = hours65.size();
        int int81 = hours65.getHours();
        org.joda.time.Hours hours82 = hours64.plus(hours65);
        // The following exception was thrown during execution in test generation
        try {
            int int84 = hours65.getValue(16);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 16");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 8 + "'", int24 == 8);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 8 + "'", int57 == 8);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(mutablePeriod67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 8 + "'", int78 == 8);
        org.junit.Assert.assertNotNull(hours79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 7 + "'", int81 == 7);
        org.junit.Assert.assertNotNull(hours82);
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.multipliedBy((int) (short) 10);
        org.joda.time.MutablePeriod mutablePeriod10 = hours0.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = hours13.get(durationFieldType17);
        org.joda.time.Hours hours20 = hours13.minus((int) (short) 0);
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod22 = hours21.toMutablePeriod();
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours24 = hours21.minus(hours23);
        org.joda.time.DurationFieldType durationFieldType25 = null;
        boolean boolean26 = hours23.isSupported(durationFieldType25);
        org.joda.time.Hours hours27 = hours20.minus(hours23);
        org.joda.time.Hours hours28 = hours12.plus(hours27);
        boolean boolean29 = hours0.isLessThan(hours27);
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod31 = hours30.toMutablePeriod();
        org.joda.time.Hours hours32 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours33 = hours30.minus(hours32);
        org.joda.time.DurationFieldType durationFieldType34 = null;
        boolean boolean35 = hours32.isSupported(durationFieldType34);
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours37 = org.joda.time.Hours.EIGHT;
        int int39 = hours37.getValue((int) (short) 0);
        org.joda.time.Hours hours40 = hours36.minus(hours37);
        boolean boolean41 = hours32.isLessThan(hours37);
        org.joda.time.Hours hours42 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = hours42.get(durationFieldType43);
        org.joda.time.DurationFieldType durationFieldType45 = hours42.getFieldType();
        boolean boolean46 = hours32.isSupported(durationFieldType45);
        boolean boolean47 = hours27.isSupported(durationFieldType45);
        org.joda.time.ReadableInterval readableInterval48 = null;
        org.joda.time.Hours hours49 = org.joda.time.Hours.hoursIn(readableInterval48);
        org.joda.time.DurationFieldType durationFieldType50 = hours49.getFieldType();
        org.joda.time.Hours hours52 = hours49.dividedBy((int) (byte) 10);
        org.joda.time.Hours hours54 = hours49.plus((int) (byte) 1);
        org.joda.time.Hours hours56 = hours49.dividedBy(100);
        org.joda.time.Hours hours57 = hours56.negated();
        org.joda.time.Hours hours59 = hours56.minus((-2));
        org.joda.time.DurationFieldType durationFieldType60 = hours56.getFieldType();
        org.joda.time.Hours hours61 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours56);
        boolean boolean62 = hours27.equals((java.lang.Object) hours61);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 8 + "'", int39 == 8);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        int int6 = hours1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours4);
        org.joda.time.MutablePeriod mutablePeriod7 = hours1.toMutablePeriod();
        org.joda.time.Hours hours9 = hours1.minus(7);
        org.joda.time.Hours hours10 = hours0.minus(hours1);
        org.joda.time.Hours hours12 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = hours13.get(durationFieldType17);
        org.joda.time.Hours hours20 = hours13.minus((int) (short) 0);
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod22 = hours21.toMutablePeriod();
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours24 = hours21.minus(hours23);
        org.joda.time.DurationFieldType durationFieldType25 = null;
        boolean boolean26 = hours23.isSupported(durationFieldType25);
        org.joda.time.Hours hours27 = hours20.minus(hours23);
        org.joda.time.Hours hours28 = hours12.plus(hours27);
        org.joda.time.Hours hours29 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod31 = hours30.toMutablePeriod();
        org.joda.time.Hours hours32 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours33 = hours30.minus(hours32);
        int int34 = hours29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours32);
        org.joda.time.Hours hours35 = hours12.plus(hours32);
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod37 = hours36.toMutablePeriod();
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours39 = hours36.minus(hours38);
        org.joda.time.DurationFieldType durationFieldType40 = null;
        int int41 = hours36.get(durationFieldType40);
        org.joda.time.Hours hours43 = hours36.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Hours hours45 = org.joda.time.Hours.hoursIn(readableInterval44);
        int int46 = hours43.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours45);
        boolean boolean47 = hours32.isGreaterThan(hours43);
        org.joda.time.Hours hours49 = hours32.multipliedBy(16);
        org.joda.time.Hours hours51 = hours32.multipliedBy((int) (short) 0);
        org.joda.time.Period period52 = hours51.toPeriod();
        org.joda.time.Hours hours53 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours54 = org.joda.time.Hours.EIGHT;
        int int56 = hours54.getValue((int) (short) 0);
        org.joda.time.Hours hours57 = hours53.minus(hours54);
        org.joda.time.Hours hours58 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType59 = null;
        int int60 = hours58.get(durationFieldType59);
        org.joda.time.DurationFieldType durationFieldType61 = hours58.getFieldType();
        int int62 = hours53.get(durationFieldType61);
        boolean boolean63 = hours51.isSupported(durationFieldType61);
        org.joda.time.Hours hours64 = hours1.minus(hours51);
        org.joda.time.Hours hours66 = hours51.plus(92);
        java.lang.Class<?> wildcardClass67 = hours66.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 8 + "'", int56 == 8);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 7 + "'", int62 == 7);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        boolean boolean13 = hours10.isSupported(durationFieldType12);
        org.joda.time.Hours hours14 = hours7.minus(hours10);
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        int int20 = hours15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours18);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        boolean boolean22 = hours15.isSupported(durationFieldType21);
        org.joda.time.Hours hours24 = hours15.minus((int) (short) -1);
        org.joda.time.PeriodType periodType25 = hours15.getPeriodType();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        int int28 = hours26.getValue((int) (short) 0);
        org.joda.time.Hours hours29 = hours15.minus(hours26);
        org.joda.time.Hours hours31 = hours15.plus(7);
        org.joda.time.Hours hours32 = hours14.minus(hours31);
        org.joda.time.Hours hours34 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType35 = hours34.getFieldType();
        org.joda.time.Period period36 = hours34.toPeriod();
        org.joda.time.Period period37 = hours34.toPeriod();
        org.joda.time.Hours hours38 = hours32.plus(hours34);
        java.lang.String str39 = hours32.toString();
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Hours hours41 = org.joda.time.Hours.hoursIn(readableInterval40);
        org.joda.time.DurationFieldType durationFieldType42 = hours41.getFieldType();
        org.joda.time.Hours hours44 = hours41.dividedBy((int) (byte) 10);
        org.joda.time.Hours hours45 = hours32.minus(hours44);
        java.lang.String str46 = hours45.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 8 + "'", int28 == 8);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "PT-15H" + "'", str39, "PT-15H");
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "PT-15H" + "'", str46, "PT-15H");
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours0.multipliedBy((int) '4');
        org.joda.time.Hours hours13 = hours0.negated();
        org.joda.time.Hours hours14 = org.joda.time.Hours.ONE;
        int int15 = hours14.getHours();
        org.joda.time.Hours hours17 = hours14.plus(10);
        int int18 = hours14.size();
        org.joda.time.Hours hours19 = hours14.negated();
        org.joda.time.Hours hours21 = hours19.plus(7);
        org.joda.time.Hours hours23 = hours19.multipliedBy(100);
        org.joda.time.Hours hours24 = hours13.minus(hours23);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.Hours hours4 = hours0.dividedBy(100);
        org.joda.time.Hours hours6 = hours4.plus((int) (byte) 10);
        java.lang.String str7 = hours6.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT10H" + "'", str7, "PT10H");
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = hours8.getFieldType();
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours13 = hours7.negated();
        org.joda.time.Hours hours14 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        int int18 = hours16.getValue((int) (short) 0);
        org.joda.time.Hours hours19 = hours15.minus(hours16);
        org.joda.time.Hours hours20 = hours14.minus(hours15);
        org.joda.time.Hours hours21 = hours13.plus(hours15);
        org.joda.time.DurationFieldType durationFieldType22 = hours13.getFieldType();
        org.joda.time.DurationFieldType durationFieldType24 = hours13.getFieldType(0);
        org.joda.time.MutablePeriod mutablePeriod25 = hours13.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7 + "'", int12 == 7);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours5 = hours2.plus(8);
        int int6 = hours5.getHours();
        int int7 = hours5.size();
        org.joda.time.Hours hours9 = hours5.dividedBy((int) (byte) 100);
        org.joda.time.Duration duration10 = hours9.toStandardDuration();
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = hours11.get(durationFieldType15);
        org.joda.time.Hours hours18 = hours11.minus((int) (short) 0);
        org.joda.time.Hours hours19 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours11);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod22 = hours21.toMutablePeriod();
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours24 = hours21.minus(hours23);
        int int25 = hours20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours23);
        org.joda.time.DurationFieldType durationFieldType26 = null;
        boolean boolean27 = hours20.isSupported(durationFieldType26);
        org.joda.time.Hours hours29 = hours20.minus((int) (short) -1);
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod31 = hours30.toMutablePeriod();
        org.joda.time.Hours hours32 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours33 = hours30.minus(hours32);
        org.joda.time.Hours hours35 = hours32.plus(8);
        org.joda.time.Hours hours36 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType37 = null;
        int int38 = hours36.get(durationFieldType37);
        org.joda.time.DurationFieldType durationFieldType39 = hours36.getFieldType();
        boolean boolean40 = hours35.isSupported(durationFieldType39);
        int int41 = hours29.get(durationFieldType39);
        org.joda.time.Hours hours42 = hours11.plus(hours29);
        org.joda.time.Hours hours44 = hours11.dividedBy(8);
        org.joda.time.Hours hours45 = hours9.minus(hours11);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 16 + "'", int6 == 16);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 8 + "'", int41 == 8);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        int int16 = hours11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours14);
        org.joda.time.Hours hours18 = hours14.multipliedBy(0);
        int int19 = hours6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours18);
        org.joda.time.DurationFieldType durationFieldType20 = hours18.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(durationFieldType20);
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.PeriodType periodType6 = hours0.getPeriodType();
        org.joda.time.Hours hours8 = org.joda.time.Hours.parseHours("PT7H");
        boolean boolean9 = hours0.isLessThan(hours8);
        org.joda.time.Hours hours10 = org.joda.time.Hours.ZERO;
        boolean boolean11 = hours8.isGreaterThan(hours10);
        org.joda.time.Hours hours12 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours13 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = hours13.get(durationFieldType14);
        boolean boolean16 = hours12.equals((java.lang.Object) durationFieldType14);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        int int22 = hours17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours20);
        org.joda.time.Hours hours24 = hours20.multipliedBy(0);
        org.joda.time.Hours hours25 = hours12.plus(hours24);
        org.joda.time.DurationFieldType durationFieldType26 = hours25.getFieldType();
        int int27 = hours8.get(durationFieldType26);
        int int28 = hours8.getHours();
        org.joda.time.Hours hours30 = hours8.plus(5);
        org.joda.time.Duration duration31 = hours8.toStandardDuration();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 7 + "'", int27 == 7);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 7 + "'", int28 == 7);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(duration31);
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.plus((int) (byte) -1);
        java.lang.String str4 = hours3.toString();
        org.joda.time.Hours hours6 = hours3.dividedBy((int) '#');
        int int7 = hours3.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT2H" + "'", str4, "PT2H");
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        java.lang.String str7 = hours1.toString();
        org.joda.time.DurationFieldType durationFieldType8 = hours1.getFieldType();
        org.joda.time.MutablePeriod mutablePeriod9 = hours1.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        int int13 = hours11.getValue((int) (short) 0);
        org.joda.time.Hours hours14 = hours10.minus(hours11);
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod16 = hours15.toMutablePeriod();
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours18 = hours15.minus(hours17);
        org.joda.time.Hours hours20 = hours17.plus(8);
        org.joda.time.Hours hours21 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = hours21.get(durationFieldType22);
        org.joda.time.DurationFieldType durationFieldType24 = hours21.getFieldType();
        boolean boolean25 = hours20.isSupported(durationFieldType24);
        boolean boolean26 = hours10.isSupported(durationFieldType24);
        int int27 = hours10.size();
        org.joda.time.Hours hours28 = hours1.plus(hours10);
        org.joda.time.Hours hours30 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType31 = hours30.getFieldType();
        org.joda.time.Period period32 = hours30.toPeriod();
        org.joda.time.Period period33 = hours30.toPeriod();
        org.joda.time.Hours hours35 = hours30.plus(0);
        org.joda.time.Hours hours36 = hours35.negated();
        int int37 = hours1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours35);
        java.lang.Class<?> wildcardClass38 = hours1.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT7H" + "'", str7, "PT7H");
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8 + "'", int13 == 8);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT-1H");
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.Duration duration6 = hours2.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod7 = hours2.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod8 = hours2.toMutablePeriod();
        int int9 = hours1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours2);
        org.joda.time.Hours hours11 = hours2.multipliedBy((int) (byte) 0);
        org.joda.time.PeriodType periodType12 = hours11.getPeriodType();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(periodType12);
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.Hours hours10 = hours9.negated();
        org.joda.time.Period period11 = hours9.toPeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.ONE;
        int int13 = hours12.getHours();
        org.joda.time.Hours hours15 = hours12.plus(10);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours16.get(durationFieldType20);
        org.joda.time.Hours hours23 = hours16.multipliedBy(1);
        boolean boolean24 = hours12.isGreaterThan(hours16);
        int int25 = hours12.size();
        org.joda.time.Hours hours27 = hours12.plus((int) (short) 0);
        org.joda.time.Hours hours28 = hours9.plus(hours27);
        org.joda.time.PeriodType periodType29 = hours9.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(periodType29);
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.multipliedBy(1);
        org.joda.time.Duration duration8 = hours0.toStandardDuration();
        org.joda.time.Hours hours10 = hours0.plus(92);
        org.joda.time.Hours hours11 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours12 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = hours12.get(durationFieldType13);
        boolean boolean15 = hours11.equals((java.lang.Object) durationFieldType13);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        int int21 = hours16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours19);
        org.joda.time.Hours hours23 = hours19.multipliedBy(0);
        org.joda.time.Hours hours24 = hours11.plus(hours23);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod27 = hours26.toMutablePeriod();
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours29 = hours26.minus(hours28);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = hours26.get(durationFieldType30);
        org.joda.time.Hours hours33 = hours26.minus((int) (short) 0);
        org.joda.time.Hours hours34 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours26);
        org.joda.time.Hours hours35 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod37 = hours36.toMutablePeriod();
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours39 = hours36.minus(hours38);
        int int40 = hours35.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours38);
        org.joda.time.DurationFieldType durationFieldType41 = null;
        boolean boolean42 = hours35.isSupported(durationFieldType41);
        org.joda.time.Hours hours44 = hours35.minus((int) (short) -1);
        org.joda.time.Hours hours45 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod46 = hours45.toMutablePeriod();
        org.joda.time.Hours hours47 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours48 = hours45.minus(hours47);
        org.joda.time.Hours hours50 = hours47.plus(8);
        org.joda.time.Hours hours51 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType52 = null;
        int int53 = hours51.get(durationFieldType52);
        org.joda.time.DurationFieldType durationFieldType54 = hours51.getFieldType();
        boolean boolean55 = hours50.isSupported(durationFieldType54);
        int int56 = hours44.get(durationFieldType54);
        org.joda.time.Hours hours57 = hours26.plus(hours44);
        org.joda.time.Hours hours58 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours59 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod60 = hours59.toMutablePeriod();
        org.joda.time.Hours hours61 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours62 = hours59.minus(hours61);
        int int63 = hours58.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours61);
        org.joda.time.DurationFieldType durationFieldType64 = null;
        boolean boolean65 = hours58.isSupported(durationFieldType64);
        org.joda.time.Hours hours67 = hours58.multipliedBy((int) (short) 10);
        org.joda.time.Hours hours68 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours69 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType70 = null;
        int int71 = hours69.get(durationFieldType70);
        boolean boolean72 = hours68.equals((java.lang.Object) durationFieldType70);
        org.joda.time.Hours hours73 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours74 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod75 = hours74.toMutablePeriod();
        org.joda.time.Hours hours76 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours77 = hours74.minus(hours76);
        int int78 = hours73.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours76);
        org.joda.time.Hours hours80 = hours76.multipliedBy(0);
        org.joda.time.Hours hours81 = hours68.plus(hours80);
        org.joda.time.DurationFieldType durationFieldType82 = hours81.getFieldType();
        boolean boolean83 = hours58.equals((java.lang.Object) durationFieldType82);
        int int84 = hours44.get(durationFieldType82);
        boolean boolean85 = hours25.isSupported(durationFieldType82);
        int int86 = hours24.get(durationFieldType82);
        boolean boolean87 = hours0.isSupported(durationFieldType82);
        org.joda.time.Hours hours88 = hours0.negated();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 8 + "'", int56 == 8);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertNotNull(mutablePeriod75);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(hours80);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertNotNull(durationFieldType82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 8 + "'", int84 == 8);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 3 + "'", int86 == 3);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(hours88);
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours24 = hours1.plus(hours21);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours28 = hours25.minus(hours27);
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = hours25.get(durationFieldType29);
        org.joda.time.Hours hours32 = hours25.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval33 = null;
        org.joda.time.Hours hours34 = org.joda.time.Hours.hoursIn(readableInterval33);
        int int35 = hours32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours34);
        boolean boolean36 = hours21.isGreaterThan(hours32);
        org.joda.time.Hours hours38 = hours21.multipliedBy(16);
        org.joda.time.MutablePeriod mutablePeriod39 = hours38.toMutablePeriod();
        int int40 = hours38.size();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.multipliedBy((int) (short) 10);
        org.joda.time.MutablePeriod mutablePeriod10 = hours0.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = hours13.get(durationFieldType17);
        org.joda.time.Hours hours20 = hours13.minus((int) (short) 0);
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod22 = hours21.toMutablePeriod();
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours24 = hours21.minus(hours23);
        org.joda.time.DurationFieldType durationFieldType25 = null;
        boolean boolean26 = hours23.isSupported(durationFieldType25);
        org.joda.time.Hours hours27 = hours20.minus(hours23);
        org.joda.time.Hours hours28 = hours12.plus(hours27);
        boolean boolean29 = hours0.isLessThan(hours27);
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod31 = hours30.toMutablePeriod();
        org.joda.time.Hours hours32 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours33 = hours30.minus(hours32);
        org.joda.time.Duration duration34 = hours30.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod35 = hours30.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.EIGHT;
        int int38 = hours36.getValue((int) (short) 0);
        java.lang.String str39 = hours36.toString();
        boolean boolean40 = hours30.isGreaterThan(hours36);
        org.joda.time.Hours hours42 = hours36.minus(10);
        org.joda.time.Hours hours43 = hours36.negated();
        org.joda.time.Hours hours44 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod45 = hours44.toMutablePeriod();
        org.joda.time.Hours hours46 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours47 = hours44.minus(hours46);
        org.joda.time.DurationFieldType durationFieldType48 = null;
        int int49 = hours44.get(durationFieldType48);
        org.joda.time.Hours hours51 = hours44.multipliedBy(1);
        org.joda.time.Hours hours52 = org.joda.time.Hours.ONE;
        int int53 = hours51.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours52);
        int int54 = hours36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours51);
        boolean boolean55 = hours27.isGreaterThan(hours51);
        org.joda.time.DurationFieldType durationFieldType56 = hours51.getFieldType();
        int int57 = hours51.getHours();
        org.joda.time.Hours hours58 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod59 = hours58.toMutablePeriod();
        org.joda.time.Hours hours60 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours61 = hours58.minus(hours60);
        org.joda.time.DurationFieldType durationFieldType62 = null;
        int int63 = hours58.get(durationFieldType62);
        org.joda.time.Hours hours65 = hours58.minus((int) (short) 0);
        org.joda.time.Hours hours66 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType67 = null;
        int int68 = hours66.get(durationFieldType67);
        org.joda.time.DurationFieldType durationFieldType69 = hours66.getFieldType();
        int int70 = hours65.get(durationFieldType69);
        org.joda.time.Hours hours71 = org.joda.time.Hours.ONE;
        int int72 = hours71.getHours();
        org.joda.time.Hours hours74 = hours71.plus(10);
        org.joda.time.Hours hours75 = hours65.minus(hours74);
        org.joda.time.Hours hours77 = hours65.dividedBy(6);
        org.joda.time.ReadableInterval readableInterval78 = null;
        org.joda.time.Hours hours79 = org.joda.time.Hours.hoursIn(readableInterval78);
        org.joda.time.DurationFieldType durationFieldType80 = hours79.getFieldType();
        org.joda.time.Hours hours82 = hours79.dividedBy((int) (byte) 10);
        org.joda.time.Hours hours84 = hours79.plus((int) (byte) 1);
        org.joda.time.Hours hours85 = hours84.negated();
        int int86 = hours77.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours84);
        int int87 = hours51.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours84);
        org.joda.time.PeriodType periodType88 = hours84.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 8 + "'", int38 == 8);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "PT8H" + "'", str39, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(mutablePeriod45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 7 + "'", int57 == 7);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(mutablePeriod59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(durationFieldType69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 7 + "'", int70 == 7);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertNotNull(hours75);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertNotNull(hours79);
        org.junit.Assert.assertNotNull(durationFieldType80);
        org.junit.Assert.assertNotNull(hours82);
        org.junit.Assert.assertNotNull(hours84);
        org.junit.Assert.assertNotNull(hours85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertNotNull(periodType88);
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.Hours hours4 = hours0.dividedBy(100);
        int int5 = hours0.size();
        org.joda.time.Period period6 = hours0.toPeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        // The following exception was thrown during execution in test generation
        try {
            int int9 = hours7.getValue(700);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 700");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours7);
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        org.joda.time.Hours hours0 = org.joda.time.Hours.EIGHT;
        int int1 = hours0.size();
        org.joda.time.Hours hours3 = hours0.dividedBy(100);
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        int int7 = hours5.getValue((int) (short) 0);
        org.joda.time.Hours hours8 = hours4.minus(hours5);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        int int13 = hours11.getValue((int) (short) 0);
        org.joda.time.Hours hours14 = hours10.minus(hours11);
        org.joda.time.Hours hours15 = hours9.minus(hours10);
        int int16 = hours9.size();
        org.joda.time.Duration duration17 = hours9.toStandardDuration();
        boolean boolean18 = hours5.isGreaterThan(hours9);
        org.joda.time.MutablePeriod mutablePeriod19 = hours9.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType20 = hours9.getFieldType();
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period22 = hours21.toPeriod();
        org.joda.time.Hours hours24 = hours21.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.THREE;
        org.joda.time.Period period27 = hours26.toPeriod();
        org.joda.time.Hours hours29 = hours26.plus((int) (byte) -1);
        org.joda.time.Hours hours30 = hours24.minus(hours26);
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod32 = hours31.toMutablePeriod();
        org.joda.time.Hours hours33 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours34 = hours31.minus(hours33);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = hours31.get(durationFieldType35);
        org.joda.time.Hours hours38 = hours31.minus((int) (short) 0);
        org.joda.time.Hours hours39 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType40 = null;
        int int41 = hours39.get(durationFieldType40);
        org.joda.time.DurationFieldType durationFieldType42 = hours39.getFieldType();
        int int43 = hours38.get(durationFieldType42);
        int int44 = hours26.get(durationFieldType42);
        int int45 = hours9.get(durationFieldType42);
        boolean boolean46 = hours0.isLessThan(hours9);
        org.joda.time.Hours hours47 = null;
        boolean boolean48 = hours9.isLessThan(hours47);
        org.joda.time.DurationFieldType durationFieldType49 = hours9.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8 + "'", int7 == 8);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8 + "'", int13 == 8);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 7 + "'", int43 == 7);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 3 + "'", int44 == 3);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 6 + "'", int45 == 6);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(durationFieldType49);
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours20);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours28 = hours25.minus(hours27);
        int int29 = hours24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours27);
        org.joda.time.MutablePeriod mutablePeriod30 = hours24.toMutablePeriod();
        org.joda.time.Hours hours32 = hours24.minus(7);
        boolean boolean33 = hours20.isLessThan(hours32);
        org.joda.time.MutablePeriod mutablePeriod34 = hours32.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod35 = hours32.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = hours1.multipliedBy((int) (byte) 100);
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        int int9 = hours4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours7);
        org.joda.time.DurationFieldType durationFieldType10 = null;
        boolean boolean11 = hours4.isSupported(durationFieldType10);
        org.joda.time.Hours hours13 = hours4.minus((int) (short) -1);
        org.joda.time.PeriodType periodType14 = hours4.getPeriodType();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        int int17 = hours15.getValue((int) (short) 0);
        org.joda.time.Hours hours18 = hours4.minus(hours15);
        org.joda.time.Hours hours19 = hours1.plus(hours18);
        int int20 = hours1.size();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.plus((int) (byte) -1);
        org.joda.time.MutablePeriod mutablePeriod4 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = hours0.dividedBy(92);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours6);
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        org.joda.time.Hours hours10 = hours7.plus(8);
        org.joda.time.Hours hours11 = hours1.minus(hours7);
        int int12 = hours11.size();
        org.joda.time.Hours hours13 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours14 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = hours14.get(durationFieldType15);
        boolean boolean17 = hours13.equals((java.lang.Object) durationFieldType15);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours25 = hours21.multipliedBy(0);
        org.joda.time.Hours hours26 = hours13.plus(hours25);
        org.joda.time.Hours hours28 = hours26.minus((int) (byte) 100);
        int int29 = hours11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours26);
        int int30 = hours26.getHours();
        org.joda.time.Hours hours32 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Period period33 = hours32.toPeriod();
        org.joda.time.Hours hours35 = hours32.minus((int) (byte) -1);
        org.joda.time.Hours hours36 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours38 = hours36.dividedBy((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType40 = hours36.getFieldType(0);
        boolean boolean41 = hours32.isSupported(durationFieldType40);
        org.joda.time.DurationFieldType durationFieldType42 = hours32.getFieldType();
        org.joda.time.DurationFieldType durationFieldType43 = hours32.getFieldType();
        int int44 = hours26.get(durationFieldType43);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 3 + "'", int30 == 3);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 3 + "'", int44 == 3);
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = hours23.get(durationFieldType27);
        org.joda.time.Hours hours30 = hours23.minus((int) (short) 0);
        org.joda.time.Hours hours31 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod34 = hours33.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours36 = hours33.minus(hours35);
        int int37 = hours32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours35);
        org.joda.time.DurationFieldType durationFieldType38 = null;
        boolean boolean39 = hours32.isSupported(durationFieldType38);
        org.joda.time.Hours hours41 = hours32.minus((int) (short) -1);
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod43 = hours42.toMutablePeriod();
        org.joda.time.Hours hours44 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours45 = hours42.minus(hours44);
        org.joda.time.Hours hours47 = hours44.plus(8);
        org.joda.time.Hours hours48 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = hours48.get(durationFieldType49);
        org.joda.time.DurationFieldType durationFieldType51 = hours48.getFieldType();
        boolean boolean52 = hours47.isSupported(durationFieldType51);
        int int53 = hours41.get(durationFieldType51);
        org.joda.time.Hours hours54 = hours23.plus(hours41);
        org.joda.time.Hours hours55 = hours20.plus(hours23);
        org.joda.time.Hours hours56 = hours55.negated();
        org.joda.time.Hours hours57 = hours56.negated();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 8 + "'", int53 == 8);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours57);
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.Hours hours10 = hours9.negated();
        org.joda.time.Period period11 = hours9.toPeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.ONE;
        int int13 = hours12.getHours();
        org.joda.time.Hours hours15 = hours12.plus(10);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours16.get(durationFieldType20);
        org.joda.time.Hours hours23 = hours16.multipliedBy(1);
        boolean boolean24 = hours12.isGreaterThan(hours16);
        int int25 = hours12.size();
        org.joda.time.Hours hours27 = hours12.plus((int) (short) 0);
        org.joda.time.Hours hours28 = hours9.plus(hours27);
        org.joda.time.Hours hours30 = hours27.multipliedBy((-8));
        org.joda.time.Hours hours32 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType33 = hours32.getFieldType();
        org.joda.time.Period period34 = hours32.toPeriod();
        org.joda.time.Period period35 = hours32.toPeriod();
        org.joda.time.Hours hours37 = hours32.plus(0);
        org.joda.time.Hours hours38 = hours37.negated();
        org.joda.time.Hours hours39 = hours30.minus(hours38);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours2 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours3.get(durationFieldType7);
        org.joda.time.Hours hours10 = hours3.minus((int) (short) 0);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours13.isSupported(durationFieldType15);
        org.joda.time.Hours hours17 = hours10.minus(hours13);
        org.joda.time.Hours hours18 = hours2.plus(hours17);
        int int19 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.MutablePeriod mutablePeriod20 = hours17.toMutablePeriod();
        org.joda.time.Duration duration21 = hours17.toStandardDuration();
        org.joda.time.Hours hours23 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = hours24.get(durationFieldType28);
        org.joda.time.Hours hours31 = hours24.minus((int) (short) 0);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod33 = hours32.toMutablePeriod();
        org.joda.time.Hours hours34 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours35 = hours32.minus(hours34);
        org.joda.time.DurationFieldType durationFieldType36 = null;
        boolean boolean37 = hours34.isSupported(durationFieldType36);
        org.joda.time.Hours hours38 = hours31.minus(hours34);
        org.joda.time.Hours hours39 = hours23.plus(hours38);
        org.joda.time.Hours hours40 = hours17.plus(hours23);
        org.joda.time.Hours hours41 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod42 = hours41.toMutablePeriod();
        org.joda.time.Hours hours43 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours44 = hours41.minus(hours43);
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = hours41.get(durationFieldType45);
        org.joda.time.Hours hours48 = hours41.minus((int) (short) 0);
        org.joda.time.Hours hours49 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = hours49.get(durationFieldType50);
        org.joda.time.DurationFieldType durationFieldType52 = hours49.getFieldType();
        int int53 = hours48.get(durationFieldType52);
        org.joda.time.PeriodType periodType54 = hours48.getPeriodType();
        org.joda.time.Hours hours56 = hours48.multipliedBy(8);
        org.joda.time.Hours hours58 = hours48.dividedBy((-25));
        int int59 = hours17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours48);
        org.joda.time.Hours hours60 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours61 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod62 = hours61.toMutablePeriod();
        org.joda.time.Hours hours63 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours64 = hours61.minus(hours63);
        int int65 = hours60.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours63);
        org.joda.time.Hours hours67 = hours63.multipliedBy(0);
        org.joda.time.Hours hours68 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours70 = hours68.dividedBy((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType71 = hours70.getFieldType();
        org.joda.time.Period period72 = hours70.toPeriod();
        boolean boolean73 = hours63.isGreaterThan(hours70);
        org.joda.time.Hours hours74 = hours48.minus(hours63);
        org.joda.time.Hours hours76 = hours48.dividedBy((int) (byte) 100);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 7 + "'", int53 == 7);
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(mutablePeriod62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(durationFieldType71);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertNotNull(hours76);
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        int int7 = hours2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours5);
        org.joda.time.MutablePeriod mutablePeriod8 = hours2.toMutablePeriod();
        org.joda.time.Hours hours9 = hours1.minus(hours2);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        int int15 = hours10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours13);
        org.joda.time.Hours hours16 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours10);
        org.joda.time.Hours hours17 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours18 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = hours18.get(durationFieldType19);
        boolean boolean21 = hours17.equals((java.lang.Object) durationFieldType19);
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        int int27 = hours22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours25);
        org.joda.time.Hours hours29 = hours25.multipliedBy(0);
        org.joda.time.Hours hours30 = hours17.plus(hours29);
        boolean boolean31 = hours16.isGreaterThan(hours29);
        boolean boolean32 = hours9.isLessThan(hours29);
        org.joda.time.Hours hours34 = hours9.minus((int) (byte) -1);
        org.joda.time.Hours hours36 = hours9.dividedBy((int) '4');
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours36);
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        boolean boolean6 = hours1.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours7 = hours1.negated();
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod10 = hours9.toMutablePeriod();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours12 = hours9.minus(hours11);
        int int13 = hours8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours11);
        org.joda.time.Hours hours15 = hours11.multipliedBy(0);
        org.joda.time.Hours hours16 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours15);
        org.joda.time.Duration duration17 = hours16.toStandardDuration();
        org.joda.time.Hours hours18 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours16);
        boolean boolean19 = hours1.equals((java.lang.Object) hours18);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod22 = hours21.toMutablePeriod();
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours24 = hours21.minus(hours23);
        int int25 = hours20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours23);
        org.joda.time.Hours hours26 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours20);
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = hours20.get(durationFieldType27);
        org.joda.time.Hours hours29 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod30 = hours29.toMutablePeriod();
        org.joda.time.Hours hours31 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours32 = hours29.minus(hours31);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = hours29.get(durationFieldType33);
        org.joda.time.Hours hours36 = hours29.minus((int) (short) 0);
        org.joda.time.Hours hours37 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod38 = hours37.toMutablePeriod();
        org.joda.time.Hours hours39 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours40 = hours37.minus(hours39);
        org.joda.time.DurationFieldType durationFieldType41 = null;
        boolean boolean42 = hours39.isSupported(durationFieldType41);
        org.joda.time.Hours hours43 = hours36.minus(hours39);
        org.joda.time.Period period44 = hours36.toPeriod();
        org.joda.time.Hours hours45 = hours20.plus(hours36);
        org.joda.time.DurationFieldType durationFieldType46 = hours45.getFieldType();
        int int47 = hours1.get(durationFieldType46);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 8 + "'", int47 == 8);
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours9 = hours3.minus(hours5);
        org.joda.time.Hours hours11 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType12 = hours11.getFieldType();
        org.joda.time.Hours hours14 = hours11.plus(700);
        boolean boolean15 = hours9.isGreaterThan(hours14);
        java.lang.Class<?> wildcardClass16 = hours9.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(100);
        org.joda.time.Period period2 = hours1.toPeriod();
        org.joda.time.Hours hours4 = hours1.minus(8);
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours10 = hours8.minus((int) (byte) 100);
        boolean boolean11 = hours1.equals((java.lang.Object) hours10);
        org.joda.time.MutablePeriod mutablePeriod12 = hours1.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Hours hours15 = hours1.minus(hours14);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        int int21 = hours16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours19);
        org.joda.time.MutablePeriod mutablePeriod22 = hours16.toMutablePeriod();
        org.joda.time.Hours hours24 = hours16.minus(7);
        org.joda.time.Hours hours26 = hours16.minus(700);
        org.joda.time.Hours hours27 = hours15.plus(hours26);
        org.joda.time.Hours hours28 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod29 = hours28.toMutablePeriod();
        org.joda.time.Hours hours30 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours31 = hours28.minus(hours30);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = hours28.get(durationFieldType32);
        org.joda.time.Hours hours35 = hours28.minus((int) (short) 0);
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod37 = hours36.toMutablePeriod();
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours39 = hours36.minus(hours38);
        org.joda.time.DurationFieldType durationFieldType40 = null;
        boolean boolean41 = hours38.isSupported(durationFieldType40);
        org.joda.time.Hours hours42 = hours35.minus(hours38);
        org.joda.time.Hours hours43 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod44 = hours43.toMutablePeriod();
        org.joda.time.Hours hours45 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours46 = hours43.minus(hours45);
        org.joda.time.Hours hours48 = hours45.plus(8);
        org.joda.time.Hours hours49 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = hours49.get(durationFieldType50);
        org.joda.time.DurationFieldType durationFieldType52 = hours49.getFieldType();
        boolean boolean53 = hours48.isSupported(durationFieldType52);
        org.joda.time.Hours hours54 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours55 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod56 = hours55.toMutablePeriod();
        org.joda.time.Hours hours57 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours58 = hours55.minus(hours57);
        int int59 = hours54.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours57);
        org.joda.time.DurationFieldType durationFieldType60 = null;
        boolean boolean61 = hours54.isSupported(durationFieldType60);
        org.joda.time.Hours hours63 = hours54.minus((int) (short) -1);
        org.joda.time.PeriodType periodType64 = hours54.getPeriodType();
        org.joda.time.Hours hours65 = org.joda.time.Hours.EIGHT;
        int int67 = hours65.getValue((int) (short) 0);
        org.joda.time.Hours hours68 = hours54.minus(hours65);
        org.joda.time.Hours hours69 = hours48.minus(hours68);
        org.joda.time.Hours hours71 = org.joda.time.Hours.parseHours("PT8H");
        boolean boolean72 = hours69.isLessThan(hours71);
        boolean boolean73 = hours42.isLessThan(hours71);
        org.joda.time.Hours hours75 = hours71.dividedBy(100);
        boolean boolean76 = hours26.isGreaterThan(hours75);
        int int77 = hours26.size();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(mutablePeriod44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 8 + "'", int67 == 8);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(hours75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours0.get(durationFieldType7);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours0.get(durationFieldType9);
        org.joda.time.Hours hours12 = hours0.minus(0);
        org.joda.time.Hours hours13 = hours0.negated();
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        int int18 = hours16.size();
        org.joda.time.Hours hours19 = org.joda.time.Hours.ONE;
        int int20 = hours19.getHours();
        org.joda.time.Hours hours22 = hours19.plus(10);
        org.joda.time.Period period23 = hours22.toPeriod();
        boolean boolean24 = hours16.isLessThan(hours22);
        int int25 = hours13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours16);
        org.joda.time.Hours hours27 = hours16.multipliedBy(100);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(hours27);
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours0.minus((int) 'a');
        org.joda.time.Hours hours8 = org.joda.time.Hours.ZERO;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        boolean boolean10 = hours7.equals((java.lang.Object) hours8);
        org.joda.time.Hours hours12 = hours8.multipliedBy((int) (short) 100);
        org.joda.time.Period period13 = hours12.toPeriod();
        org.joda.time.Hours hours15 = hours12.plus((-6));
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(hours15);
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.Hours hours4 = hours0.dividedBy(100);
        org.joda.time.Hours hours6 = hours4.plus((int) (byte) 10);
        org.joda.time.Hours hours8 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours10 = hours8.minus(8);
        org.joda.time.DurationFieldType durationFieldType11 = hours10.getFieldType();
        boolean boolean12 = hours6.isGreaterThan(hours10);
        org.joda.time.Hours hours14 = hours6.multipliedBy((int) (byte) 1);
        org.joda.time.MutablePeriod mutablePeriod15 = hours6.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        org.joda.time.Hours hours0 = org.joda.time.Hours.EIGHT;
        int int1 = hours0.size();
        org.joda.time.Hours hours3 = hours0.dividedBy(100);
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        int int7 = hours5.getValue((int) (short) 0);
        org.joda.time.Hours hours8 = hours4.minus(hours5);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        int int13 = hours11.getValue((int) (short) 0);
        org.joda.time.Hours hours14 = hours10.minus(hours11);
        org.joda.time.Hours hours15 = hours9.minus(hours10);
        int int16 = hours9.size();
        org.joda.time.Duration duration17 = hours9.toStandardDuration();
        boolean boolean18 = hours5.isGreaterThan(hours9);
        org.joda.time.MutablePeriod mutablePeriod19 = hours9.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType20 = hours9.getFieldType();
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period22 = hours21.toPeriod();
        org.joda.time.Hours hours24 = hours21.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.THREE;
        org.joda.time.Period period27 = hours26.toPeriod();
        org.joda.time.Hours hours29 = hours26.plus((int) (byte) -1);
        org.joda.time.Hours hours30 = hours24.minus(hours26);
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod32 = hours31.toMutablePeriod();
        org.joda.time.Hours hours33 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours34 = hours31.minus(hours33);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = hours31.get(durationFieldType35);
        org.joda.time.Hours hours38 = hours31.minus((int) (short) 0);
        org.joda.time.Hours hours39 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType40 = null;
        int int41 = hours39.get(durationFieldType40);
        org.joda.time.DurationFieldType durationFieldType42 = hours39.getFieldType();
        int int43 = hours38.get(durationFieldType42);
        int int44 = hours26.get(durationFieldType42);
        int int45 = hours9.get(durationFieldType42);
        boolean boolean46 = hours0.isLessThan(hours9);
        org.joda.time.Hours hours48 = hours9.dividedBy((int) (short) 1);
        org.joda.time.Duration duration49 = hours9.toStandardDuration();
        org.joda.time.Period period50 = hours9.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8 + "'", int7 == 8);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8 + "'", int13 == 8);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 7 + "'", int43 == 7);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 3 + "'", int44 == 3);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 6 + "'", int45 == 6);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertNotNull(period50);
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        int int6 = hours1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours4);
        org.joda.time.Hours hours8 = hours4.multipliedBy(0);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        int int14 = hours9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours12);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours9.isSupported(durationFieldType15);
        org.joda.time.Hours hours18 = hours9.minus((int) (short) -1);
        org.joda.time.PeriodType periodType19 = hours9.getPeriodType();
        int int20 = hours9.getHours();
        boolean boolean21 = hours4.equals((java.lang.Object) int20);
        org.joda.time.Hours hours22 = hours0.plus(hours4);
        org.joda.time.Hours hours24 = hours0.multipliedBy((int) '4');
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 7 + "'", int20 == 7);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours24);
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ZERO;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        int int5 = hours3.getValue((int) (short) 0);
        org.joda.time.Hours hours6 = hours2.minus(hours3);
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod8 = hours7.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours7.minus(hours9);
        org.joda.time.Hours hours12 = hours9.plus(8);
        org.joda.time.Hours hours13 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = hours13.get(durationFieldType14);
        org.joda.time.DurationFieldType durationFieldType16 = hours13.getFieldType();
        boolean boolean17 = hours12.isSupported(durationFieldType16);
        boolean boolean18 = hours2.isSupported(durationFieldType16);
        boolean boolean19 = hours0.isSupported(durationFieldType16);
        org.joda.time.Hours hours21 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours23 = hours21.multipliedBy((int) (byte) 100);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours28 = hours25.minus(hours27);
        int int29 = hours24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours27);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        boolean boolean31 = hours24.isSupported(durationFieldType30);
        org.joda.time.Hours hours33 = hours24.minus((int) (short) -1);
        org.joda.time.PeriodType periodType34 = hours24.getPeriodType();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        int int37 = hours35.getValue((int) (short) 0);
        org.joda.time.Hours hours38 = hours24.minus(hours35);
        org.joda.time.Hours hours39 = hours21.plus(hours38);
        boolean boolean40 = hours0.equals((java.lang.Object) hours38);
        org.joda.time.Hours hours42 = hours0.dividedBy(8);
        org.joda.time.DurationFieldType durationFieldType44 = hours0.getFieldType(0);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 8 + "'", int37 == 8);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(durationFieldType44);
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours0.get(durationFieldType7);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours0.get(durationFieldType9);
        org.joda.time.Hours hours12 = hours0.minus(0);
        org.joda.time.Hours hours13 = hours0.negated();
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        int int18 = hours16.size();
        org.joda.time.Hours hours19 = org.joda.time.Hours.ONE;
        int int20 = hours19.getHours();
        org.joda.time.Hours hours22 = hours19.plus(10);
        org.joda.time.Period period23 = hours22.toPeriod();
        boolean boolean24 = hours16.isLessThan(hours22);
        int int25 = hours13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours16);
        int int26 = hours13.size();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours2 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours3.get(durationFieldType7);
        org.joda.time.Hours hours10 = hours3.minus((int) (short) 0);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours13.isSupported(durationFieldType15);
        org.joda.time.Hours hours17 = hours10.minus(hours13);
        org.joda.time.Hours hours18 = hours2.plus(hours17);
        int int19 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.MutablePeriod mutablePeriod20 = hours17.toMutablePeriod();
        org.joda.time.Duration duration21 = hours17.toStandardDuration();
        org.joda.time.Hours hours23 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = hours24.get(durationFieldType28);
        org.joda.time.Hours hours31 = hours24.minus((int) (short) 0);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod33 = hours32.toMutablePeriod();
        org.joda.time.Hours hours34 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours35 = hours32.minus(hours34);
        org.joda.time.DurationFieldType durationFieldType36 = null;
        boolean boolean37 = hours34.isSupported(durationFieldType36);
        org.joda.time.Hours hours38 = hours31.minus(hours34);
        org.joda.time.Hours hours39 = hours23.plus(hours38);
        org.joda.time.Hours hours40 = hours17.plus(hours23);
        org.joda.time.Hours hours41 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod42 = hours41.toMutablePeriod();
        org.joda.time.Hours hours43 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours44 = hours41.minus(hours43);
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = hours41.get(durationFieldType45);
        org.joda.time.Hours hours48 = hours41.minus((int) (short) 0);
        org.joda.time.Hours hours49 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = hours49.get(durationFieldType50);
        org.joda.time.DurationFieldType durationFieldType52 = hours49.getFieldType();
        int int53 = hours48.get(durationFieldType52);
        org.joda.time.PeriodType periodType54 = hours48.getPeriodType();
        org.joda.time.Hours hours56 = hours48.multipliedBy(8);
        org.joda.time.Hours hours58 = hours48.dividedBy((-25));
        int int59 = hours17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours48);
        org.joda.time.Hours hours60 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours61 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod62 = hours61.toMutablePeriod();
        org.joda.time.Hours hours63 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours64 = hours61.minus(hours63);
        int int65 = hours60.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours63);
        org.joda.time.Hours hours67 = hours63.multipliedBy(0);
        org.joda.time.Hours hours68 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours70 = hours68.dividedBy((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType71 = hours70.getFieldType();
        org.joda.time.Period period72 = hours70.toPeriod();
        boolean boolean73 = hours63.isGreaterThan(hours70);
        org.joda.time.Hours hours74 = hours48.minus(hours63);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType76 = hours74.getFieldType(16);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 16");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 7 + "'", int53 == 7);
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(mutablePeriod62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(durationFieldType71);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(hours74);
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType2 = hours1.getFieldType();
        org.joda.time.Period period3 = hours1.toPeriod();
        org.joda.time.Period period4 = hours1.toPeriod();
        org.joda.time.Hours hours6 = hours1.plus(0);
        org.joda.time.DurationFieldType durationFieldType7 = hours1.getFieldType();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(durationFieldType7);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.plus((int) (byte) -1);
        org.joda.time.Hours hours5 = hours3.minus((int) (byte) 100);
        org.joda.time.DurationFieldType durationFieldType6 = hours3.getFieldType();
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod8 = hours7.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours7.minus(hours9);
        org.joda.time.Duration duration11 = hours7.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod12 = hours7.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        int int15 = hours13.getValue((int) (short) 0);
        java.lang.String str16 = hours13.toString();
        boolean boolean17 = hours7.isGreaterThan(hours13);
        org.joda.time.Hours hours18 = hours3.minus(hours13);
        org.joda.time.Hours hours19 = hours3.negated();
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod22 = hours21.toMutablePeriod();
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours24 = hours21.minus(hours23);
        int int25 = hours20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours23);
        org.joda.time.DurationFieldType durationFieldType26 = null;
        boolean boolean27 = hours20.isSupported(durationFieldType26);
        org.joda.time.PeriodType periodType28 = hours20.getPeriodType();
        org.joda.time.Hours hours29 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours31 = org.joda.time.Hours.EIGHT;
        int int33 = hours31.getValue((int) (short) 0);
        org.joda.time.Hours hours34 = hours30.minus(hours31);
        org.joda.time.Hours hours35 = hours29.minus(hours30);
        int int36 = hours29.size();
        org.joda.time.Hours hours37 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        int int40 = hours38.getValue((int) (short) 0);
        org.joda.time.Hours hours41 = hours37.minus(hours38);
        boolean boolean43 = hours38.equals((java.lang.Object) (short) 10);
        int int44 = hours29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours38);
        org.joda.time.Hours hours45 = hours20.plus(hours29);
        org.joda.time.Hours hours46 = hours19.minus(hours20);
        org.joda.time.Duration duration47 = hours20.toStandardDuration();
        java.lang.Class<?> wildcardClass48 = duration47.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 8 + "'", int15 == 8);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT8H" + "'", str16, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 8 + "'", int33 == 8);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 8 + "'", int40 == 8);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT8H");
        org.joda.time.Duration duration2 = hours1.toStandardDuration();
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod5 = hours4.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours7 = hours4.minus(hours6);
        int int8 = hours3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours6);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        boolean boolean10 = hours3.isSupported(durationFieldType9);
        org.joda.time.Hours hours11 = hours1.minus(hours3);
        org.joda.time.Hours hours13 = hours3.plus(10);
        org.joda.time.Duration duration14 = hours3.toStandardDuration();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(duration14);
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.multipliedBy(1);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        int int9 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.Hours hours10 = null;
        boolean boolean11 = hours7.isLessThan(hours10);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(4);
        org.junit.Assert.assertNotNull(hours1);
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        int int7 = hours0.size();
        org.joda.time.PeriodType periodType8 = hours0.getPeriodType();
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        int int14 = hours9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours12);
        org.joda.time.MutablePeriod mutablePeriod15 = hours9.toMutablePeriod();
        org.joda.time.Hours hours17 = hours9.multipliedBy((int) (byte) 100);
        boolean boolean18 = hours0.isGreaterThan(hours9);
        org.joda.time.MutablePeriod mutablePeriod19 = hours9.toMutablePeriod();
        org.joda.time.Period period20 = hours9.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(period20);
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours5.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = hours5.getFieldType();
        int int9 = hours0.get(durationFieldType8);
        org.joda.time.Hours hours11 = hours0.multipliedBy(7);
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        int int17 = hours12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours15);
        org.joda.time.DurationFieldType durationFieldType18 = null;
        boolean boolean19 = hours12.isSupported(durationFieldType18);
        org.joda.time.Hours hours21 = hours12.minus((int) (short) -1);
        org.joda.time.PeriodType periodType22 = hours12.getPeriodType();
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        int int25 = hours23.getValue((int) (short) 0);
        org.joda.time.Hours hours26 = hours12.minus(hours23);
        org.joda.time.Hours hours28 = hours26.minus((-1));
        boolean boolean29 = hours11.equals((java.lang.Object) hours28);
        org.joda.time.Duration duration30 = hours11.toStandardDuration();
        org.joda.time.Hours hours31 = hours11.negated();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7 + "'", int9 == 7);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 8 + "'", int25 == 8);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(hours31);
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((-6));
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        int int5 = hours3.getValue((int) (short) 0);
        org.joda.time.Hours hours6 = hours2.minus(hours3);
        int int7 = hours6.getHours();
        org.joda.time.Hours hours8 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours9 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = hours9.get(durationFieldType10);
        boolean boolean12 = hours8.equals((java.lang.Object) durationFieldType10);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        int int18 = hours13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours16);
        org.joda.time.Hours hours20 = hours16.multipliedBy(0);
        org.joda.time.Hours hours21 = hours8.plus(hours20);
        org.joda.time.DurationFieldType durationFieldType22 = hours21.getFieldType();
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        int int28 = hours23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours26);
        org.joda.time.Hours hours29 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.DurationFieldType durationFieldType30 = hours23.getFieldType();
        int int31 = hours21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours23);
        org.joda.time.Hours hours32 = hours6.minus(hours21);
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod34 = hours33.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours36 = hours33.minus(hours35);
        org.joda.time.DurationFieldType durationFieldType37 = null;
        int int38 = hours33.get(durationFieldType37);
        org.joda.time.Hours hours40 = hours33.multipliedBy(1);
        org.joda.time.Hours hours41 = org.joda.time.Hours.ONE;
        int int42 = hours40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours41);
        org.joda.time.Duration duration43 = hours40.toStandardDuration();
        org.joda.time.Hours hours44 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod45 = hours44.toMutablePeriod();
        org.joda.time.Hours hours46 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours47 = hours44.minus(hours46);
        org.joda.time.DurationFieldType durationFieldType48 = null;
        int int49 = hours44.get(durationFieldType48);
        org.joda.time.Hours hours51 = hours44.multipliedBy(1);
        int int52 = hours51.getHours();
        org.joda.time.DurationFieldType durationFieldType53 = hours51.getFieldType();
        int int54 = hours40.get(durationFieldType53);
        boolean boolean55 = hours32.isSupported(durationFieldType53);
        boolean boolean56 = hours1.isSupported(durationFieldType53);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(mutablePeriod45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 7 + "'", int52 == 7);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 7 + "'", int54 == 7);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours1 = hours0.negated();
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        int int5 = hours3.getValue((int) (short) 0);
        org.joda.time.Hours hours6 = hours2.minus(hours3);
        org.joda.time.Hours hours7 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = hours7.get(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType10 = hours7.getFieldType();
        int int11 = hours2.get(durationFieldType10);
        boolean boolean12 = hours0.isSupported(durationFieldType10);
        int int13 = hours0.getHours();
        org.joda.time.Hours hours15 = hours0.dividedBy((int) ' ');
        int int16 = hours15.size();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 7 + "'", int11 == 7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3 + "'", int13 == 3);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Hours hours9 = org.joda.time.Hours.hoursIn(readableInterval8);
        int int10 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours9);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        int int14 = hours12.getValue((int) (short) 0);
        org.joda.time.Hours hours15 = hours11.minus(hours12);
        org.joda.time.Hours hours16 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = hours16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = hours16.getFieldType();
        int int20 = hours11.get(durationFieldType19);
        boolean boolean21 = hours9.isSupported(durationFieldType19);
        org.joda.time.PeriodType periodType22 = hours9.getPeriodType();
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        int int28 = hours23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours26);
        org.joda.time.Hours hours29 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = hours23.get(durationFieldType30);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = hours23.get(durationFieldType32);
        int int34 = hours23.getHours();
        boolean boolean35 = hours9.isLessThan(hours23);
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod37 = hours36.toMutablePeriod();
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours39 = hours36.minus(hours38);
        org.joda.time.Duration duration40 = hours36.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod41 = hours36.toMutablePeriod();
        org.joda.time.Period period42 = hours36.toPeriod();
        boolean boolean43 = hours9.equals((java.lang.Object) period42);
        org.joda.time.Hours hours45 = hours9.minus((int) (short) 0);
        org.joda.time.Hours hours47 = hours45.plus((int) (short) -1);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8 + "'", int14 == 8);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 7 + "'", int20 == 7);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 7 + "'", int34 == 7);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours47);
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours5.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = hours5.getFieldType();
        int int9 = hours0.get(durationFieldType8);
        org.joda.time.Hours hours11 = hours0.multipliedBy(7);
        org.joda.time.Hours hours13 = hours11.minus((-2));
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        org.joda.time.Hours hours18 = hours16.negated();
        org.joda.time.DurationFieldType durationFieldType19 = hours18.getFieldType();
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours23 = hours20.minus(hours22);
        org.joda.time.Hours hours24 = hours22.negated();
        int int25 = hours24.getHours();
        int int26 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours24);
        org.joda.time.Hours hours27 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours18);
        org.joda.time.Hours hours28 = hours11.minus(hours18);
        org.joda.time.Hours hours30 = hours18.minus(0);
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours32 = org.joda.time.Hours.EIGHT;
        int int34 = hours32.getValue((int) (short) 0);
        org.joda.time.Hours hours35 = hours31.minus(hours32);
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod37 = hours36.toMutablePeriod();
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours39 = hours36.minus(hours38);
        org.joda.time.Hours hours41 = hours38.plus(8);
        org.joda.time.Hours hours42 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = hours42.get(durationFieldType43);
        org.joda.time.DurationFieldType durationFieldType45 = hours42.getFieldType();
        boolean boolean46 = hours41.isSupported(durationFieldType45);
        boolean boolean47 = hours31.isSupported(durationFieldType45);
        org.joda.time.Hours hours48 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = hours48.get(durationFieldType49);
        org.joda.time.DurationFieldType durationFieldType51 = hours48.getFieldType();
        org.joda.time.DurationFieldType durationFieldType52 = hours48.getFieldType();
        boolean boolean53 = hours31.isSupported(durationFieldType52);
        org.joda.time.Hours hours55 = hours31.multipliedBy((-7));
        org.joda.time.Hours hours56 = hours30.minus(hours55);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7 + "'", int9 == 7);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-8) + "'", int25 == (-8));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 8 + "'", int34 == 8);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours2 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours3.get(durationFieldType7);
        org.joda.time.Hours hours10 = hours3.minus((int) (short) 0);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours13.isSupported(durationFieldType15);
        org.joda.time.Hours hours17 = hours10.minus(hours13);
        org.joda.time.Hours hours18 = hours2.plus(hours17);
        int int19 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.Hours hours21 = hours17.plus((int) ' ');
        org.joda.time.PeriodType periodType22 = hours17.getPeriodType();
        org.joda.time.Hours hours24 = org.joda.time.Hours.hours((int) ' ');
        int int25 = hours17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours24);
        java.lang.String str26 = hours17.toString();
        org.joda.time.Hours hours28 = hours17.plus((-2));
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "PT-1H" + "'", str26, "PT-1H");
        org.junit.Assert.assertNotNull(hours28);
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        org.joda.time.Hours hours10 = hours7.plus(8);
        org.joda.time.Hours hours11 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = hours11.get(durationFieldType12);
        org.joda.time.DurationFieldType durationFieldType14 = hours11.getFieldType();
        boolean boolean15 = hours10.isSupported(durationFieldType14);
        boolean boolean16 = hours0.isSupported(durationFieldType14);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = hours17.get(durationFieldType21);
        int int23 = hours17.getHours();
        boolean boolean24 = hours0.equals((java.lang.Object) int23);
        org.joda.time.Hours hours26 = org.joda.time.Hours.hours((int) (byte) 1);
        org.joda.time.Hours hours27 = hours0.minus(hours26);
        org.joda.time.Hours hours28 = org.joda.time.Hours.ONE;
        int int29 = hours28.getHours();
        org.joda.time.Hours hours31 = hours28.plus(10);
        int int32 = hours28.size();
        org.joda.time.Hours hours33 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours34 = hours33.negated();
        org.joda.time.DurationFieldType durationFieldType35 = hours33.getFieldType();
        boolean boolean36 = hours28.isLessThan(hours33);
        org.joda.time.Hours hours38 = hours33.multipliedBy(9);
        boolean boolean39 = hours27.isGreaterThan(hours33);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 7 + "'", int23 == 7);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours0.minus((int) 'a');
        org.joda.time.Hours hours8 = org.joda.time.Hours.ZERO;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        boolean boolean10 = hours7.equals((java.lang.Object) hours8);
        org.joda.time.Hours hours12 = hours7.dividedBy(6);
        int int13 = hours12.size();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours3.multipliedBy(0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours7);
        org.joda.time.Hours hours10 = org.joda.time.Hours.parseHours("PT1H");
        org.joda.time.Hours hours12 = hours10.plus((-6));
        boolean boolean13 = hours7.equals((java.lang.Object) hours12);
        org.joda.time.Hours hours14 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours16 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = hours17.get(durationFieldType21);
        org.joda.time.Hours hours24 = hours17.minus((int) (short) 0);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours28 = hours25.minus(hours27);
        org.joda.time.DurationFieldType durationFieldType29 = null;
        boolean boolean30 = hours27.isSupported(durationFieldType29);
        org.joda.time.Hours hours31 = hours24.minus(hours27);
        org.joda.time.Hours hours32 = hours16.plus(hours31);
        int int33 = hours14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours31);
        org.joda.time.Hours hours35 = hours31.plus((int) ' ');
        org.joda.time.PeriodType periodType36 = hours31.getPeriodType();
        boolean boolean37 = hours12.equals((java.lang.Object) hours31);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours5 = hours2.plus(8);
        org.joda.time.Hours hours6 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours6.get(durationFieldType7);
        org.joda.time.DurationFieldType durationFieldType9 = hours6.getFieldType();
        boolean boolean10 = hours5.isSupported(durationFieldType9);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        int int16 = hours11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours14);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        boolean boolean18 = hours11.isSupported(durationFieldType17);
        org.joda.time.Hours hours20 = hours11.minus((int) (short) -1);
        org.joda.time.PeriodType periodType21 = hours11.getPeriodType();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        int int24 = hours22.getValue((int) (short) 0);
        org.joda.time.Hours hours25 = hours11.minus(hours22);
        org.joda.time.Hours hours26 = hours5.minus(hours25);
        org.joda.time.Hours hours28 = org.joda.time.Hours.parseHours("PT8H");
        boolean boolean29 = hours26.isLessThan(hours28);
        java.lang.String str30 = hours28.toString();
        org.joda.time.Hours hours31 = hours28.negated();
        org.joda.time.Hours hours33 = hours28.multipliedBy((int) ' ');
        org.joda.time.Hours hours34 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = hours34.get(durationFieldType35);
        org.joda.time.Hours hours38 = hours34.dividedBy(100);
        org.joda.time.Hours hours40 = hours38.plus((int) (byte) 10);
        org.joda.time.Hours hours41 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours40);
        org.joda.time.Hours hours42 = hours28.minus(hours40);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 8 + "'", int24 == 8);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "PT8H" + "'", str30, "PT8H");
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((-1));
        org.joda.time.Hours hours2 = hours1.negated();
        org.joda.time.Hours hours4 = hours2.multipliedBy(8);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.DurationFieldType durationFieldType11 = null;
        boolean boolean12 = hours5.isSupported(durationFieldType11);
        org.joda.time.Hours hours14 = hours5.multipliedBy((int) (short) 10);
        org.joda.time.Period period15 = hours5.toPeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        int int21 = hours16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours19);
        org.joda.time.Hours hours22 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours16);
        org.joda.time.Hours hours24 = hours22.multipliedBy((int) (byte) 10);
        boolean boolean25 = hours5.isLessThan(hours24);
        org.joda.time.Hours hours26 = org.joda.time.Hours.ONE;
        int int27 = hours26.getHours();
        org.joda.time.Hours hours29 = hours26.plus(10);
        org.joda.time.Hours hours30 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours31 = hours30.negated();
        org.joda.time.DurationFieldType durationFieldType32 = hours30.getFieldType();
        boolean boolean33 = hours26.equals((java.lang.Object) hours30);
        org.joda.time.Hours hours35 = hours26.minus((int) '4');
        org.joda.time.Hours hours36 = hours5.minus(hours35);
        org.joda.time.Hours hours38 = hours5.multipliedBy((int) (byte) 0);
        boolean boolean39 = hours4.equals((java.lang.Object) (byte) 0);
        java.lang.Class<?> wildcardClass40 = hours4.getClass();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType5 = hours2.getFieldType(36);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 36");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = hours8.getFieldType();
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours13 = hours7.negated();
        org.joda.time.Hours hours15 = org.joda.time.Hours.hours((int) (short) 0);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours16.get(durationFieldType20);
        org.joda.time.Hours hours23 = hours16.multipliedBy(1);
        org.joda.time.Hours hours24 = org.joda.time.Hours.ONE;
        int int25 = hours23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours24);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        boolean boolean27 = hours23.equals((java.lang.Object) hours26);
        org.joda.time.Hours hours28 = hours15.minus(hours23);
        java.lang.String str29 = hours28.toString();
        org.joda.time.Period period30 = hours28.toPeriod();
        int int31 = hours13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours28);
        int int32 = hours13.getHours();
        org.joda.time.MutablePeriod mutablePeriod33 = hours13.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7 + "'", int12 == 7);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT-7H" + "'", str29, "PT-7H");
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-7) + "'", int32 == (-7));
        org.junit.Assert.assertNotNull(mutablePeriod33);
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = hours6.negated();
        org.joda.time.Hours hours15 = hours13.plus((int) (byte) 0);
        java.lang.String str16 = hours13.toString();
        org.joda.time.Hours hours17 = hours13.negated();
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = hours18.get(durationFieldType22);
        org.joda.time.Hours hours25 = hours18.minus((int) (short) 0);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod27 = hours26.toMutablePeriod();
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours29 = hours26.minus(hours28);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        boolean boolean31 = hours28.isSupported(durationFieldType30);
        org.joda.time.Hours hours32 = hours25.minus(hours28);
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod35 = hours34.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours37 = hours34.minus(hours36);
        int int38 = hours33.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours36);
        org.joda.time.DurationFieldType durationFieldType39 = null;
        boolean boolean40 = hours33.isSupported(durationFieldType39);
        org.joda.time.Hours hours42 = hours33.minus((int) (short) -1);
        org.joda.time.PeriodType periodType43 = hours33.getPeriodType();
        org.joda.time.Hours hours44 = org.joda.time.Hours.EIGHT;
        int int46 = hours44.getValue((int) (short) 0);
        org.joda.time.Hours hours47 = hours33.minus(hours44);
        org.joda.time.Hours hours49 = hours33.plus(7);
        org.joda.time.Hours hours50 = hours32.minus(hours49);
        org.joda.time.Hours hours52 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType53 = hours52.getFieldType();
        org.joda.time.Period period54 = hours52.toPeriod();
        org.joda.time.Period period55 = hours52.toPeriod();
        org.joda.time.Hours hours56 = hours50.plus(hours52);
        boolean boolean57 = hours13.isGreaterThan(hours50);
        // The following exception was thrown during execution in test generation
        try {
            int int59 = hours50.getValue(16);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 16");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT-8H" + "'", str16, "PT-8H");
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 8 + "'", int46 == 8);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.Hours hours10 = hours9.negated();
        org.joda.time.Hours hours12 = hours10.plus(16);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        org.joda.time.Duration duration17 = hours13.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod18 = hours13.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        int int21 = hours19.getValue((int) (short) 0);
        java.lang.String str22 = hours19.toString();
        boolean boolean23 = hours13.isGreaterThan(hours19);
        org.joda.time.Hours hours25 = hours19.minus(10);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.Hours hours32 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours26);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = hours26.get(durationFieldType33);
        boolean boolean35 = hours25.equals((java.lang.Object) hours26);
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period37 = hours36.toPeriod();
        org.joda.time.Hours hours39 = hours36.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod40 = hours39.toMutablePeriod();
        org.joda.time.Hours hours41 = org.joda.time.Hours.THREE;
        org.joda.time.Period period42 = hours41.toPeriod();
        org.joda.time.Hours hours44 = hours41.plus((int) (byte) -1);
        org.joda.time.Hours hours45 = hours39.minus(hours41);
        org.joda.time.DurationFieldType durationFieldType46 = hours45.getFieldType();
        boolean boolean47 = hours26.isGreaterThan(hours45);
        org.joda.time.Hours hours48 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod49 = hours48.toMutablePeriod();
        org.joda.time.Hours hours50 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours51 = hours48.minus(hours50);
        org.joda.time.DurationFieldType durationFieldType52 = null;
        int int53 = hours48.get(durationFieldType52);
        org.joda.time.Hours hours55 = hours48.multipliedBy(1);
        int int56 = hours55.getHours();
        org.joda.time.DurationFieldType durationFieldType57 = hours55.getFieldType();
        boolean boolean58 = hours26.isGreaterThan(hours55);
        org.joda.time.Hours hours59 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours61 = hours59.plus(1);
        org.joda.time.Hours hours63 = hours59.dividedBy((int) (byte) -1);
        int int64 = hours59.size();
        org.joda.time.Hours hours65 = org.joda.time.Hours.MIN_VALUE;
        org.joda.time.Hours hours67 = hours65.plus(0);
        org.joda.time.Hours hours68 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours69 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod70 = hours69.toMutablePeriod();
        org.joda.time.Hours hours71 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours72 = hours69.minus(hours71);
        int int73 = hours68.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours71);
        org.joda.time.DurationFieldType durationFieldType74 = null;
        boolean boolean75 = hours68.isSupported(durationFieldType74);
        org.joda.time.Hours hours77 = hours68.minus((int) (short) -1);
        org.joda.time.PeriodType periodType78 = hours68.getPeriodType();
        int int79 = hours68.getHours();
        org.joda.time.DurationFieldType durationFieldType81 = hours68.getFieldType((int) (short) 0);
        boolean boolean82 = hours67.isSupported(durationFieldType81);
        int int83 = hours59.get(durationFieldType81);
        int int84 = hours26.get(durationFieldType81);
        boolean boolean85 = hours10.isGreaterThan(hours26);
        org.joda.time.Hours hours86 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period87 = hours86.toPeriod();
        org.joda.time.Hours hours89 = hours86.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod90 = hours89.toMutablePeriod();
        org.joda.time.Hours hours91 = org.joda.time.Hours.THREE;
        org.joda.time.Period period92 = hours91.toPeriod();
        org.joda.time.Hours hours94 = hours91.plus((int) (byte) -1);
        org.joda.time.Hours hours95 = hours89.minus(hours91);
        boolean boolean96 = hours26.isGreaterThan(hours91);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 8 + "'", int21 == 8);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT8H" + "'", str22, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(mutablePeriod49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 7 + "'", int56 == 7);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertNotNull(mutablePeriod70);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 7 + "'", int79 == 7);
        org.junit.Assert.assertNotNull(durationFieldType81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 7 + "'", int84 == 7);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(hours86);
        org.junit.Assert.assertNotNull(period87);
        org.junit.Assert.assertNotNull(hours89);
        org.junit.Assert.assertNotNull(mutablePeriod90);
        org.junit.Assert.assertNotNull(hours91);
        org.junit.Assert.assertNotNull(period92);
        org.junit.Assert.assertNotNull(hours94);
        org.junit.Assert.assertNotNull(hours95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        org.joda.time.Hours hours10 = hours7.plus(8);
        org.joda.time.Hours hours11 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = hours11.get(durationFieldType12);
        org.joda.time.DurationFieldType durationFieldType14 = hours11.getFieldType();
        boolean boolean15 = hours10.isSupported(durationFieldType14);
        boolean boolean16 = hours0.isSupported(durationFieldType14);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period18 = hours17.toPeriod();
        org.joda.time.Hours hours20 = hours17.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.THREE;
        org.joda.time.Period period23 = hours22.toPeriod();
        org.joda.time.Hours hours25 = hours22.plus((int) (byte) -1);
        org.joda.time.Hours hours26 = hours20.minus(hours22);
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = hours27.get(durationFieldType31);
        org.joda.time.Hours hours34 = hours27.minus((int) (short) 0);
        org.joda.time.Hours hours35 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType36 = null;
        int int37 = hours35.get(durationFieldType36);
        org.joda.time.DurationFieldType durationFieldType38 = hours35.getFieldType();
        int int39 = hours34.get(durationFieldType38);
        int int40 = hours22.get(durationFieldType38);
        boolean boolean41 = hours0.equals((java.lang.Object) hours22);
        org.joda.time.Hours hours43 = hours22.dividedBy((int) (short) 10);
        org.joda.time.Hours hours44 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod45 = hours44.toMutablePeriod();
        org.joda.time.Hours hours46 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours47 = hours44.minus(hours46);
        org.joda.time.DurationFieldType durationFieldType48 = null;
        int int49 = hours44.get(durationFieldType48);
        org.joda.time.Hours hours51 = hours44.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval52 = null;
        org.joda.time.Hours hours53 = org.joda.time.Hours.hoursIn(readableInterval52);
        int int54 = hours51.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours53);
        org.joda.time.Hours hours55 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours56 = org.joda.time.Hours.EIGHT;
        int int58 = hours56.getValue((int) (short) 0);
        org.joda.time.Hours hours59 = hours55.minus(hours56);
        org.joda.time.Hours hours60 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType61 = null;
        int int62 = hours60.get(durationFieldType61);
        org.joda.time.DurationFieldType durationFieldType63 = hours60.getFieldType();
        int int64 = hours55.get(durationFieldType63);
        boolean boolean65 = hours53.isSupported(durationFieldType63);
        int int66 = hours43.get(durationFieldType63);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 7 + "'", int39 == 7);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 3 + "'", int40 == 3);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(mutablePeriod45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 8 + "'", int58 == 8);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 7 + "'", int64 == 7);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        boolean boolean5 = hours2.isSupported(durationFieldType4);
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        int int9 = hours7.getValue((int) (short) 0);
        org.joda.time.Hours hours10 = hours6.minus(hours7);
        boolean boolean11 = hours2.isLessThan(hours7);
        org.joda.time.Hours hours12 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = hours12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = hours12.getFieldType();
        boolean boolean16 = hours2.isSupported(durationFieldType15);
        org.joda.time.Hours hours18 = org.joda.time.Hours.hours(100);
        org.joda.time.Period period19 = hours18.toPeriod();
        org.joda.time.Hours hours21 = hours18.minus(8);
        org.joda.time.Hours hours22 = org.joda.time.Hours.THREE;
        org.joda.time.Period period23 = hours22.toPeriod();
        org.joda.time.Hours hours25 = hours22.plus((int) (byte) -1);
        org.joda.time.Hours hours27 = hours25.minus((int) (byte) 100);
        boolean boolean28 = hours18.equals((java.lang.Object) hours27);
        boolean boolean29 = hours2.isGreaterThan(hours18);
        org.joda.time.Hours hours30 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours32 = hours30.plus(1);
        org.joda.time.Hours hours34 = hours30.dividedBy((int) (byte) -1);
        int int35 = hours30.size();
        org.joda.time.Hours hours36 = org.joda.time.Hours.MIN_VALUE;
        org.joda.time.Hours hours38 = hours36.plus(0);
        org.joda.time.Hours hours39 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours40 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod41 = hours40.toMutablePeriod();
        org.joda.time.Hours hours42 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours43 = hours40.minus(hours42);
        int int44 = hours39.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours42);
        org.joda.time.DurationFieldType durationFieldType45 = null;
        boolean boolean46 = hours39.isSupported(durationFieldType45);
        org.joda.time.Hours hours48 = hours39.minus((int) (short) -1);
        org.joda.time.PeriodType periodType49 = hours39.getPeriodType();
        int int50 = hours39.getHours();
        org.joda.time.DurationFieldType durationFieldType52 = hours39.getFieldType((int) (short) 0);
        boolean boolean53 = hours38.isSupported(durationFieldType52);
        int int54 = hours30.get(durationFieldType52);
        boolean boolean55 = hours2.isSupported(durationFieldType52);
        int int56 = hours2.size();
        java.lang.Class<?> wildcardClass57 = hours2.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 7 + "'", int50 == 7);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.PeriodType periodType6 = hours0.getPeriodType();
        org.joda.time.Hours hours8 = org.joda.time.Hours.parseHours("PT7H");
        boolean boolean9 = hours0.isLessThan(hours8);
        org.joda.time.Hours hours10 = org.joda.time.Hours.ZERO;
        boolean boolean11 = hours8.isGreaterThan(hours10);
        org.joda.time.Hours hours12 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours13 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = hours13.get(durationFieldType14);
        boolean boolean16 = hours12.equals((java.lang.Object) durationFieldType14);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        int int22 = hours17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours20);
        org.joda.time.Hours hours24 = hours20.multipliedBy(0);
        org.joda.time.Hours hours25 = hours12.plus(hours24);
        org.joda.time.DurationFieldType durationFieldType26 = hours25.getFieldType();
        int int27 = hours8.get(durationFieldType26);
        int int28 = hours8.getHours();
        org.joda.time.Hours hours30 = hours8.plus(5);
        org.joda.time.Period period31 = hours30.toPeriod();
        org.joda.time.Hours hours32 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours30);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 7 + "'", int27 == 7);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 7 + "'", int28 == 7);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(hours32);
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.multipliedBy((int) (short) 10);
        org.joda.time.MutablePeriod mutablePeriod10 = hours0.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = hours13.get(durationFieldType17);
        org.joda.time.Hours hours20 = hours13.minus((int) (short) 0);
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod22 = hours21.toMutablePeriod();
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours24 = hours21.minus(hours23);
        org.joda.time.DurationFieldType durationFieldType25 = null;
        boolean boolean26 = hours23.isSupported(durationFieldType25);
        org.joda.time.Hours hours27 = hours20.minus(hours23);
        org.joda.time.Hours hours28 = hours12.plus(hours27);
        boolean boolean29 = hours0.isLessThan(hours27);
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod31 = hours30.toMutablePeriod();
        org.joda.time.Hours hours32 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours33 = hours30.minus(hours32);
        org.joda.time.Duration duration34 = hours30.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod35 = hours30.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.EIGHT;
        int int38 = hours36.getValue((int) (short) 0);
        java.lang.String str39 = hours36.toString();
        boolean boolean40 = hours30.isGreaterThan(hours36);
        org.joda.time.Hours hours42 = hours36.minus(10);
        org.joda.time.Hours hours43 = hours36.negated();
        org.joda.time.Hours hours44 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod45 = hours44.toMutablePeriod();
        org.joda.time.Hours hours46 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours47 = hours44.minus(hours46);
        org.joda.time.DurationFieldType durationFieldType48 = null;
        int int49 = hours44.get(durationFieldType48);
        org.joda.time.Hours hours51 = hours44.multipliedBy(1);
        org.joda.time.Hours hours52 = org.joda.time.Hours.ONE;
        int int53 = hours51.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours52);
        int int54 = hours36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours51);
        boolean boolean55 = hours27.isGreaterThan(hours51);
        org.joda.time.DurationFieldType durationFieldType56 = hours51.getFieldType();
        int int57 = hours51.getHours();
        org.joda.time.MutablePeriod mutablePeriod58 = hours51.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 8 + "'", int38 == 8);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "PT8H" + "'", str39, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(mutablePeriod45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 7 + "'", int57 == 7);
        org.junit.Assert.assertNotNull(mutablePeriod58);
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.PeriodType periodType10 = hours0.getPeriodType();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        int int13 = hours11.getValue((int) (short) 0);
        org.joda.time.Hours hours14 = hours0.minus(hours11);
        org.joda.time.Hours hours16 = hours0.plus(7);
        org.joda.time.Hours hours17 = hours0.negated();
        org.joda.time.Hours hours19 = hours17.multipliedBy(20);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8 + "'", int13 == 8);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours19);
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours1 = org.joda.time.Hours.MAX_VALUE;
        int int2 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours1);
        org.joda.time.Hours hours3 = hours0.negated();
        org.joda.time.Hours hours5 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = hours6.get(durationFieldType10);
        org.joda.time.Hours hours13 = hours6.minus((int) (short) 0);
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        org.joda.time.DurationFieldType durationFieldType18 = null;
        boolean boolean19 = hours16.isSupported(durationFieldType18);
        org.joda.time.Hours hours20 = hours13.minus(hours16);
        org.joda.time.Hours hours21 = hours5.plus(hours20);
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        int int27 = hours22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours25);
        org.joda.time.Hours hours28 = hours5.plus(hours25);
        org.joda.time.Hours hours29 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod30 = hours29.toMutablePeriod();
        org.joda.time.Hours hours31 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours32 = hours29.minus(hours31);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = hours29.get(durationFieldType33);
        org.joda.time.Hours hours36 = hours29.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval37 = null;
        org.joda.time.Hours hours38 = org.joda.time.Hours.hoursIn(readableInterval37);
        int int39 = hours36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours38);
        boolean boolean40 = hours25.isGreaterThan(hours36);
        org.joda.time.Hours hours42 = hours25.multipliedBy(16);
        org.joda.time.Hours hours44 = hours25.multipliedBy((int) (short) 0);
        org.joda.time.Period period45 = hours44.toPeriod();
        org.joda.time.Hours hours46 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours47 = org.joda.time.Hours.EIGHT;
        int int49 = hours47.getValue((int) (short) 0);
        org.joda.time.Hours hours50 = hours46.minus(hours47);
        org.joda.time.Hours hours51 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType52 = null;
        int int53 = hours51.get(durationFieldType52);
        org.joda.time.DurationFieldType durationFieldType54 = hours51.getFieldType();
        int int55 = hours46.get(durationFieldType54);
        boolean boolean56 = hours44.isSupported(durationFieldType54);
        boolean boolean57 = hours0.isSupported(durationFieldType54);
        org.joda.time.MutablePeriod mutablePeriod58 = hours0.toMutablePeriod();
        org.joda.time.Hours hours59 = hours0.negated();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 8 + "'", int49 == 8);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 7 + "'", int55 == 7);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(mutablePeriod58);
        org.junit.Assert.assertNotNull(hours59);
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(100);
        org.joda.time.Period period2 = hours1.toPeriod();
        org.joda.time.Hours hours4 = hours1.minus(8);
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours10 = hours8.minus((int) (byte) 100);
        boolean boolean11 = hours1.equals((java.lang.Object) hours10);
        org.joda.time.MutablePeriod mutablePeriod12 = hours1.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Hours hours15 = hours1.minus(hours14);
        org.joda.time.Hours hours17 = hours15.plus(32);
        org.joda.time.Hours hours19 = hours15.multipliedBy((int) (byte) 0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours19);
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT8H");
        org.joda.time.Hours hours3 = hours1.dividedBy(3);
        org.joda.time.Hours hours5 = hours3.dividedBy((-6));
        org.joda.time.Hours hours7 = hours3.multipliedBy(12);
        // The following exception was thrown during execution in test generation
        try {
            int int9 = hours3.getValue((-6));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -6");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours7);
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours24 = hours1.plus(hours21);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours28 = hours25.minus(hours27);
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = hours25.get(durationFieldType29);
        org.joda.time.Hours hours32 = hours25.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval33 = null;
        org.joda.time.Hours hours34 = org.joda.time.Hours.hoursIn(readableInterval33);
        int int35 = hours32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours34);
        boolean boolean36 = hours21.isGreaterThan(hours32);
        org.joda.time.Hours hours38 = hours21.multipliedBy(16);
        org.joda.time.MutablePeriod mutablePeriod39 = hours38.toMutablePeriod();
        org.joda.time.Period period40 = hours38.toPeriod();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(period40);
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        boolean boolean13 = hours10.isSupported(durationFieldType12);
        org.joda.time.Hours hours14 = hours7.minus(hours10);
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        int int20 = hours15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours18);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        boolean boolean22 = hours15.isSupported(durationFieldType21);
        org.joda.time.Hours hours24 = hours15.minus((int) (short) -1);
        org.joda.time.PeriodType periodType25 = hours15.getPeriodType();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        int int28 = hours26.getValue((int) (short) 0);
        org.joda.time.Hours hours29 = hours15.minus(hours26);
        org.joda.time.Hours hours31 = hours15.plus(7);
        org.joda.time.Hours hours32 = hours14.minus(hours31);
        org.joda.time.Hours hours34 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType35 = hours34.getFieldType();
        org.joda.time.Period period36 = hours34.toPeriod();
        org.joda.time.Period period37 = hours34.toPeriod();
        org.joda.time.Hours hours38 = hours32.plus(hours34);
        java.lang.String str39 = hours32.toString();
        org.joda.time.Hours hours41 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours43 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod44 = hours43.toMutablePeriod();
        org.joda.time.Hours hours45 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours46 = hours43.minus(hours45);
        int int47 = hours42.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours45);
        org.joda.time.MutablePeriod mutablePeriod48 = hours42.toMutablePeriod();
        org.joda.time.Hours hours49 = hours41.minus(hours42);
        org.joda.time.Hours hours50 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours42);
        org.joda.time.Duration duration51 = hours50.toStandardDuration();
        org.joda.time.Hours hours52 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod53 = hours52.toMutablePeriod();
        org.joda.time.Hours hours54 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours55 = hours52.minus(hours54);
        org.joda.time.Duration duration56 = hours52.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod57 = hours52.toMutablePeriod();
        org.joda.time.Hours hours58 = org.joda.time.Hours.EIGHT;
        int int60 = hours58.getValue((int) (short) 0);
        java.lang.String str61 = hours58.toString();
        boolean boolean62 = hours52.isGreaterThan(hours58);
        org.joda.time.Hours hours63 = hours50.plus(hours58);
        org.joda.time.Hours hours64 = hours32.plus(hours50);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 8 + "'", int28 == 8);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "PT-15H" + "'", str39, "PT-15H");
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(mutablePeriod44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(mutablePeriod53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertNotNull(mutablePeriod57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 8 + "'", int60 == 8);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "PT8H" + "'", str61, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(hours64);
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.PeriodType periodType10 = hours0.getPeriodType();
        int int11 = hours0.getHours();
        org.joda.time.DurationFieldType durationFieldType13 = hours0.getFieldType((int) (short) 0);
        int int14 = hours0.size();
        int int15 = hours0.size();
        org.joda.time.Period period16 = hours0.toPeriod();
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        boolean boolean21 = hours0.isGreaterThan(hours19);
        org.joda.time.Hours hours22 = org.joda.time.Hours.THREE;
        org.joda.time.Period period23 = hours22.toPeriod();
        org.joda.time.Hours hours25 = hours22.plus((int) (byte) -1);
        org.joda.time.Hours hours27 = hours25.minus((int) (byte) 100);
        org.joda.time.DurationFieldType durationFieldType28 = hours25.getFieldType();
        org.joda.time.Hours hours29 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod30 = hours29.toMutablePeriod();
        org.joda.time.Hours hours31 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours32 = hours29.minus(hours31);
        org.joda.time.Duration duration33 = hours29.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod34 = hours29.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        int int37 = hours35.getValue((int) (short) 0);
        java.lang.String str38 = hours35.toString();
        boolean boolean39 = hours29.isGreaterThan(hours35);
        org.joda.time.Hours hours40 = hours25.minus(hours35);
        org.joda.time.Hours hours41 = hours25.negated();
        boolean boolean42 = hours0.isLessThan(hours25);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 7 + "'", int11 == 7);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 8 + "'", int37 == 8);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "PT8H" + "'", str38, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Period period2 = hours1.toPeriod();
        org.joda.time.Hours hours4 = hours1.minus((int) (byte) -1);
        org.joda.time.Hours hours5 = hours1.negated();
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod8 = hours7.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours7.minus(hours9);
        int int11 = hours6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours9);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        boolean boolean13 = hours6.isSupported(durationFieldType12);
        org.joda.time.Hours hours15 = hours6.minus((int) (short) -1);
        org.joda.time.PeriodType periodType16 = hours6.getPeriodType();
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        int int19 = hours17.getValue((int) (short) 0);
        org.joda.time.Hours hours20 = hours6.minus(hours17);
        org.joda.time.Hours hours22 = hours6.plus(7);
        org.joda.time.Hours hours23 = hours6.negated();
        boolean boolean24 = hours5.isLessThan(hours23);
        org.joda.time.Hours hours26 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType27 = hours26.getFieldType();
        org.joda.time.Period period28 = hours26.toPeriod();
        org.joda.time.Period period29 = hours26.toPeriod();
        org.joda.time.Hours hours31 = hours26.plus(0);
        org.joda.time.Hours hours32 = hours31.negated();
        org.joda.time.DurationFieldType durationFieldType33 = hours31.getFieldType();
        int int34 = hours23.get(durationFieldType33);
        org.joda.time.PeriodType periodType35 = hours23.getPeriodType();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8 + "'", int19 == 8);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-7) + "'", int34 == (-7));
        org.junit.Assert.assertNotNull(periodType35);
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours2 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours3.get(durationFieldType7);
        org.joda.time.Hours hours10 = hours3.minus((int) (short) 0);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours13.isSupported(durationFieldType15);
        org.joda.time.Hours hours17 = hours10.minus(hours13);
        org.joda.time.Hours hours18 = hours2.plus(hours17);
        int int19 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.MutablePeriod mutablePeriod20 = hours17.toMutablePeriod();
        org.joda.time.Duration duration21 = hours17.toStandardDuration();
        org.joda.time.Hours hours23 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = hours24.get(durationFieldType28);
        org.joda.time.Hours hours31 = hours24.minus((int) (short) 0);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod33 = hours32.toMutablePeriod();
        org.joda.time.Hours hours34 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours35 = hours32.minus(hours34);
        org.joda.time.DurationFieldType durationFieldType36 = null;
        boolean boolean37 = hours34.isSupported(durationFieldType36);
        org.joda.time.Hours hours38 = hours31.minus(hours34);
        org.joda.time.Hours hours39 = hours23.plus(hours38);
        org.joda.time.Hours hours40 = hours17.plus(hours23);
        org.joda.time.Hours hours41 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod42 = hours41.toMutablePeriod();
        org.joda.time.Hours hours43 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours44 = hours41.minus(hours43);
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = hours41.get(durationFieldType45);
        org.joda.time.Hours hours48 = hours41.minus((int) (short) 0);
        org.joda.time.Hours hours49 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = hours49.get(durationFieldType50);
        org.joda.time.DurationFieldType durationFieldType52 = hours49.getFieldType();
        int int53 = hours48.get(durationFieldType52);
        org.joda.time.Hours hours54 = org.joda.time.Hours.ONE;
        int int55 = hours54.getHours();
        org.joda.time.Hours hours57 = hours54.plus(10);
        org.joda.time.Hours hours58 = hours48.minus(hours57);
        int int59 = hours17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours48);
        org.joda.time.Hours hours60 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours17);
        org.joda.time.Hours hours61 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod62 = hours61.toMutablePeriod();
        org.joda.time.Hours hours63 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours64 = hours61.minus(hours63);
        org.joda.time.Duration duration65 = hours61.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod66 = hours61.toMutablePeriod();
        org.joda.time.Hours hours67 = org.joda.time.Hours.EIGHT;
        int int69 = hours67.getValue((int) (short) 0);
        java.lang.String str70 = hours67.toString();
        boolean boolean71 = hours61.isGreaterThan(hours67);
        org.joda.time.Hours hours73 = hours61.multipliedBy((int) '4');
        org.joda.time.Period period74 = hours61.toPeriod();
        org.joda.time.Hours hours76 = hours61.minus(0);
        boolean boolean77 = hours17.equals((java.lang.Object) hours61);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 7 + "'", int53 == 7);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(mutablePeriod62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(mutablePeriod66);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 8 + "'", int69 == 8);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "PT8H" + "'", str70, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.Hours hours4 = hours0.dividedBy(100);
        org.joda.time.Hours hours6 = hours0.multipliedBy(41297762);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.PeriodType periodType10 = hours0.getPeriodType();
        int int11 = hours0.getHours();
        org.joda.time.DurationFieldType durationFieldType13 = hours0.getFieldType((int) (short) 0);
        int int14 = hours0.size();
        org.joda.time.MutablePeriod mutablePeriod15 = hours0.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 7 + "'", int11 == 7);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod15);
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours0.minus((int) 'a');
        org.joda.time.Hours hours8 = org.joda.time.Hours.ZERO;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        boolean boolean10 = hours7.equals((java.lang.Object) hours8);
        org.joda.time.Hours hours12 = hours8.multipliedBy((int) (short) 100);
        org.joda.time.PeriodType periodType13 = hours12.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours17 = org.joda.time.Hours.MAX_VALUE;
        int int18 = hours16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.Hours hours19 = hours17.negated();
        boolean boolean20 = hours12.isLessThan(hours17);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType22 = hours17.getFieldType((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.PeriodType periodType6 = hours0.getPeriodType();
        org.joda.time.Hours hours8 = org.joda.time.Hours.parseHours("PT7H");
        boolean boolean9 = hours0.isLessThan(hours8);
        java.lang.String str10 = hours0.toString();
        org.joda.time.Hours hours11 = hours0.negated();
        java.lang.String str12 = hours11.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT7H" + "'", str10, "PT7H");
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PT-7H" + "'", str12, "PT-7H");
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(0);
        int int2 = hours1.size();
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod5 = hours4.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours7 = hours4.minus(hours6);
        int int8 = hours3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours6);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        boolean boolean10 = hours3.isSupported(durationFieldType9);
        org.joda.time.Hours hours12 = hours3.minus((int) (short) -1);
        org.joda.time.PeriodType periodType13 = hours3.getPeriodType();
        int int14 = hours3.getHours();
        org.joda.time.DurationFieldType durationFieldType16 = hours3.getFieldType((int) (short) 0);
        int int17 = hours1.get(durationFieldType16);
        java.lang.String str18 = hours1.toString();
        org.joda.time.Duration duration19 = hours1.toStandardDuration();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 7 + "'", int14 == 7);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PT0H" + "'", str18, "PT0H");
        org.junit.Assert.assertNotNull(duration19);
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.PeriodType periodType10 = hours0.getPeriodType();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        int int13 = hours11.getValue((int) (short) 0);
        org.joda.time.Hours hours14 = hours0.minus(hours11);
        org.joda.time.Hours hours15 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        int int19 = hours17.getValue((int) (short) 0);
        org.joda.time.Hours hours20 = hours16.minus(hours17);
        org.joda.time.Hours hours21 = hours15.minus(hours16);
        int int22 = hours15.size();
        org.joda.time.Duration duration23 = hours15.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType24 = hours15.getFieldType();
        org.joda.time.Hours hours25 = hours14.plus(hours15);
        int int26 = hours14.getHours();
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        org.joda.time.DurationFieldType durationFieldType31 = null;
        boolean boolean32 = hours29.isSupported(durationFieldType31);
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours34 = org.joda.time.Hours.EIGHT;
        int int36 = hours34.getValue((int) (short) 0);
        org.joda.time.Hours hours37 = hours33.minus(hours34);
        boolean boolean38 = hours29.isLessThan(hours34);
        boolean boolean39 = hours14.isGreaterThan(hours29);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8 + "'", int13 == 8);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8 + "'", int19 == 8);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 8 + "'", int36 == 8);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        int int10 = hours0.size();
        org.joda.time.Hours hours11 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours13 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = hours14.get(durationFieldType18);
        org.joda.time.Hours hours21 = hours14.minus((int) (short) 0);
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod23 = hours22.toMutablePeriod();
        org.joda.time.Hours hours24 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours25 = hours22.minus(hours24);
        org.joda.time.DurationFieldType durationFieldType26 = null;
        boolean boolean27 = hours24.isSupported(durationFieldType26);
        org.joda.time.Hours hours28 = hours21.minus(hours24);
        org.joda.time.Hours hours29 = hours13.plus(hours28);
        int int30 = hours11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours28);
        org.joda.time.Hours hours32 = hours28.plus((int) ' ');
        org.joda.time.PeriodType periodType33 = hours28.getPeriodType();
        org.joda.time.Hours hours35 = org.joda.time.Hours.hours((int) ' ');
        int int36 = hours28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours35);
        org.joda.time.Hours hours37 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours38 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod39 = hours38.toMutablePeriod();
        org.joda.time.Hours hours40 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours41 = hours38.minus(hours40);
        int int42 = hours37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours40);
        org.joda.time.Hours hours44 = hours40.multipliedBy(0);
        org.joda.time.Hours hours46 = org.joda.time.Hours.hours(0);
        org.joda.time.Duration duration47 = hours46.toStandardDuration();
        org.joda.time.Hours hours49 = hours46.multipliedBy((int) (short) 1);
        java.lang.String str50 = hours46.toString();
        int int51 = hours40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours46);
        boolean boolean52 = hours28.equals((java.lang.Object) hours46);
        org.joda.time.Hours hours53 = hours0.minus(hours46);
        org.joda.time.Hours hours54 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours55 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod56 = hours55.toMutablePeriod();
        org.joda.time.Hours hours57 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours58 = hours55.minus(hours57);
        int int59 = hours54.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours57);
        org.joda.time.DurationFieldType durationFieldType60 = null;
        boolean boolean61 = hours54.isSupported(durationFieldType60);
        org.joda.time.Hours hours63 = hours54.minus((int) (short) -1);
        org.joda.time.PeriodType periodType64 = hours54.getPeriodType();
        int int65 = hours54.getHours();
        org.joda.time.DurationFieldType durationFieldType67 = hours54.getFieldType((int) (short) 0);
        int int68 = hours54.size();
        int int69 = hours54.size();
        org.joda.time.Period period70 = hours54.toPeriod();
        org.joda.time.Hours hours71 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod72 = hours71.toMutablePeriod();
        org.joda.time.Hours hours73 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours74 = hours71.minus(hours73);
        boolean boolean75 = hours54.isGreaterThan(hours73);
        java.lang.String str76 = hours73.toString();
        boolean boolean77 = hours46.equals((java.lang.Object) hours73);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "PT0H" + "'", str50, "PT0H");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 7 + "'", int65 == 7);
        org.junit.Assert.assertNotNull(durationFieldType67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertNotNull(mutablePeriod72);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "PT8H" + "'", str76, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        org.joda.time.Duration duration9 = hours5.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod10 = hours5.toMutablePeriod();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        int int13 = hours11.getValue((int) (short) 0);
        java.lang.String str14 = hours11.toString();
        boolean boolean15 = hours5.isGreaterThan(hours11);
        org.joda.time.Hours hours17 = hours11.minus(10);
        org.joda.time.Hours hours18 = hours11.negated();
        org.joda.time.Duration duration19 = hours11.toStandardDuration();
        boolean boolean20 = hours3.isLessThan(hours11);
        org.joda.time.Hours hours21 = null;
        org.joda.time.Hours hours22 = hours11.minus(hours21);
        org.joda.time.Duration duration23 = hours22.toStandardDuration();
        java.lang.String str24 = hours22.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8 + "'", int13 == 8);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "PT8H" + "'", str14, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "PT8H" + "'", str24, "PT8H");
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours3.multipliedBy(0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod10 = hours9.toMutablePeriod();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours12 = hours9.minus(hours11);
        int int13 = hours8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours11);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours8.isSupported(durationFieldType14);
        org.joda.time.Hours hours17 = hours8.minus((int) (short) -1);
        org.joda.time.PeriodType periodType18 = hours8.getPeriodType();
        int int19 = hours8.getHours();
        boolean boolean20 = hours3.equals((java.lang.Object) int19);
        java.lang.String str21 = hours3.toString();
        org.joda.time.Hours hours22 = hours3.negated();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 7 + "'", int19 == 7);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT8H" + "'", str21, "PT8H");
        org.junit.Assert.assertNotNull(hours22);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours8 = hours6.multipliedBy((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType9 = hours6.getFieldType();
        java.lang.String str10 = hours6.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT7H" + "'", str10, "PT7H");
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = hours0.getFieldType();
        org.joda.time.Hours hours6 = hours0.plus(7);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(hours6);
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours8 = hours0.plus(0);
        org.joda.time.DurationFieldType durationFieldType9 = hours8.getFieldType();
        org.joda.time.Hours hours11 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = hours12.get(durationFieldType16);
        org.joda.time.Hours hours19 = hours12.minus((int) (short) 0);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours23 = hours20.minus(hours22);
        org.joda.time.DurationFieldType durationFieldType24 = null;
        boolean boolean25 = hours22.isSupported(durationFieldType24);
        org.joda.time.Hours hours26 = hours19.minus(hours22);
        org.joda.time.Hours hours27 = hours11.plus(hours26);
        org.joda.time.Hours hours29 = hours11.plus((int) (byte) 100);
        int int30 = hours8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours11);
        org.joda.time.Hours hours32 = hours11.plus((int) (short) 0);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(hours32);
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        org.joda.time.Hours hours0 = org.joda.time.Hours.EIGHT;
        int int1 = hours0.size();
        org.joda.time.Hours hours3 = hours0.dividedBy(100);
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        int int7 = hours5.getValue((int) (short) 0);
        org.joda.time.Hours hours8 = hours4.minus(hours5);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        int int13 = hours11.getValue((int) (short) 0);
        org.joda.time.Hours hours14 = hours10.minus(hours11);
        org.joda.time.Hours hours15 = hours9.minus(hours10);
        int int16 = hours9.size();
        org.joda.time.Duration duration17 = hours9.toStandardDuration();
        boolean boolean18 = hours5.isGreaterThan(hours9);
        org.joda.time.MutablePeriod mutablePeriod19 = hours9.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType20 = hours9.getFieldType();
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period22 = hours21.toPeriod();
        org.joda.time.Hours hours24 = hours21.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.THREE;
        org.joda.time.Period period27 = hours26.toPeriod();
        org.joda.time.Hours hours29 = hours26.plus((int) (byte) -1);
        org.joda.time.Hours hours30 = hours24.minus(hours26);
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod32 = hours31.toMutablePeriod();
        org.joda.time.Hours hours33 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours34 = hours31.minus(hours33);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = hours31.get(durationFieldType35);
        org.joda.time.Hours hours38 = hours31.minus((int) (short) 0);
        org.joda.time.Hours hours39 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType40 = null;
        int int41 = hours39.get(durationFieldType40);
        org.joda.time.DurationFieldType durationFieldType42 = hours39.getFieldType();
        int int43 = hours38.get(durationFieldType42);
        int int44 = hours26.get(durationFieldType42);
        int int45 = hours9.get(durationFieldType42);
        boolean boolean46 = hours0.isLessThan(hours9);
        org.joda.time.Hours hours48 = hours9.dividedBy((int) (short) 1);
        org.joda.time.Hours hours50 = hours48.plus((int) (byte) -1);
        org.joda.time.Period period51 = hours48.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8 + "'", int7 == 8);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8 + "'", int13 == 8);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 7 + "'", int43 == 7);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 3 + "'", int44 == 3);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 6 + "'", int45 == 6);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(period51);
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((-1));
        org.joda.time.Hours hours2 = hours1.negated();
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours3.get(durationFieldType7);
        org.joda.time.Hours hours10 = hours3.minus((int) (short) 0);
        org.joda.time.Hours hours11 = org.joda.time.Hours.ONE;
        int int12 = hours11.getHours();
        org.joda.time.Hours hours14 = hours11.plus(10);
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod16 = hours15.toMutablePeriod();
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours18 = hours15.minus(hours17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = hours15.get(durationFieldType19);
        org.joda.time.Hours hours22 = hours15.multipliedBy(1);
        boolean boolean23 = hours11.isGreaterThan(hours15);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        int int28 = hours26.getValue((int) (short) 0);
        org.joda.time.Hours hours29 = hours25.minus(hours26);
        org.joda.time.Hours hours30 = hours24.minus(hours25);
        int int31 = hours24.size();
        org.joda.time.Hours hours32 = hours15.plus(hours24);
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod35 = hours34.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours37 = hours34.minus(hours36);
        int int38 = hours33.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours36);
        org.joda.time.Hours hours40 = hours36.multipliedBy(0);
        org.joda.time.Duration duration41 = hours36.toStandardDuration();
        org.joda.time.Hours hours43 = hours36.dividedBy((int) (short) -1);
        int int44 = hours43.size();
        boolean boolean45 = hours32.isLessThan(hours43);
        boolean boolean46 = hours3.isGreaterThan(hours43);
        org.joda.time.Hours hours48 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType49 = hours48.getFieldType();
        org.joda.time.PeriodType periodType50 = hours48.getPeriodType();
        org.joda.time.Hours hours51 = hours48.negated();
        org.joda.time.Hours hours52 = hours43.plus(hours48);
        org.joda.time.Hours hours54 = hours52.multipliedBy(5);
        boolean boolean55 = hours1.isGreaterThan(hours52);
        java.lang.String str56 = hours52.toString();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 8 + "'", int28 == 8);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "PT44H" + "'", str56, "PT44H");
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        int int18 = hours13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours16);
        org.joda.time.Hours hours19 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours13);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours13.get(durationFieldType20);
        boolean boolean22 = hours12.equals((java.lang.Object) hours13);
        java.lang.String str23 = hours12.toString();
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Hours hours25 = org.joda.time.Hours.hoursIn(readableInterval24);
        org.joda.time.DurationFieldType durationFieldType26 = hours25.getFieldType();
        org.joda.time.Hours hours28 = hours25.dividedBy((int) (byte) 10);
        org.joda.time.Hours hours30 = hours25.plus((int) (byte) 1);
        org.joda.time.Hours hours32 = hours25.dividedBy(100);
        int int33 = hours12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours32);
        org.joda.time.Hours hours34 = hours12.negated();
        org.joda.time.Hours hours35 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod36 = hours35.toMutablePeriod();
        org.joda.time.Hours hours37 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours38 = hours35.minus(hours37);
        org.joda.time.DurationFieldType durationFieldType39 = null;
        int int40 = hours35.get(durationFieldType39);
        org.joda.time.Hours hours42 = hours35.minus((int) (short) 0);
        org.joda.time.Hours hours43 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours35);
        org.joda.time.Hours hours44 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours45 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod46 = hours45.toMutablePeriod();
        org.joda.time.Hours hours47 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours48 = hours45.minus(hours47);
        int int49 = hours44.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours47);
        org.joda.time.DurationFieldType durationFieldType50 = null;
        boolean boolean51 = hours44.isSupported(durationFieldType50);
        org.joda.time.Hours hours53 = hours44.minus((int) (short) -1);
        org.joda.time.Hours hours54 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod55 = hours54.toMutablePeriod();
        org.joda.time.Hours hours56 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours57 = hours54.minus(hours56);
        org.joda.time.Hours hours59 = hours56.plus(8);
        org.joda.time.Hours hours60 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType61 = null;
        int int62 = hours60.get(durationFieldType61);
        org.joda.time.DurationFieldType durationFieldType63 = hours60.getFieldType();
        boolean boolean64 = hours59.isSupported(durationFieldType63);
        int int65 = hours53.get(durationFieldType63);
        org.joda.time.Hours hours66 = hours35.plus(hours53);
        boolean boolean67 = hours34.equals((java.lang.Object) hours53);
        org.joda.time.Hours hours68 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType69 = null;
        int int70 = hours68.get(durationFieldType69);
        org.joda.time.Hours hours72 = hours68.dividedBy(100);
        org.joda.time.Hours hours73 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours74 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod75 = hours74.toMutablePeriod();
        org.joda.time.Hours hours76 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours77 = hours74.minus(hours76);
        int int78 = hours73.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours76);
        org.joda.time.DurationFieldType durationFieldType79 = null;
        boolean boolean80 = hours73.isSupported(durationFieldType79);
        org.joda.time.Hours hours82 = hours73.multipliedBy((int) (short) 10);
        org.joda.time.Period period83 = hours73.toPeriod();
        org.joda.time.Hours hours84 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours85 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod86 = hours85.toMutablePeriod();
        org.joda.time.Hours hours87 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours88 = hours85.minus(hours87);
        int int89 = hours84.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours87);
        org.joda.time.Hours hours90 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours84);
        org.joda.time.Hours hours92 = hours90.multipliedBy((int) (byte) 10);
        boolean boolean93 = hours73.isLessThan(hours92);
        int int94 = hours72.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours73);
        org.joda.time.Hours hours95 = hours53.minus(hours72);
        org.joda.time.Hours hours96 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours97 = hours72.minus(hours96);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT-2H" + "'", str23, "PT-2H");
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(mutablePeriod55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 8 + "'", int65 == 8);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertNotNull(mutablePeriod75);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(hours82);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertNotNull(hours84);
        org.junit.Assert.assertNotNull(hours85);
        org.junit.Assert.assertNotNull(mutablePeriod86);
        org.junit.Assert.assertNotNull(hours87);
        org.junit.Assert.assertNotNull(hours88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNotNull(hours90);
        org.junit.Assert.assertNotNull(hours92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertNotNull(hours95);
        org.junit.Assert.assertNotNull(hours96);
        org.junit.Assert.assertNotNull(hours97);
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.Hours hours10 = hours9.negated();
        org.joda.time.Duration duration11 = hours10.toStandardDuration();
        org.joda.time.Period period12 = hours10.toPeriod();
        org.joda.time.Hours hours13 = hours10.negated();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(hours13);
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType2 = hours1.getFieldType();
        org.joda.time.Hours hours4 = hours1.plus(700);
        int int5 = hours1.size();
        org.joda.time.Hours hours7 = hours1.multipliedBy((int) (short) 100);
        org.joda.time.DurationFieldType durationFieldType8 = hours1.getFieldType();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(durationFieldType8);
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours2 = hours0.plus(1);
        org.joda.time.Period period3 = hours0.toPeriod();
        org.joda.time.PeriodType periodType4 = hours0.getPeriodType();
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        org.joda.time.Hours hours9 = hours5.minus(hours6);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        int int14 = hours12.getValue((int) (short) 0);
        org.joda.time.Hours hours15 = hours11.minus(hours12);
        org.joda.time.Hours hours16 = hours10.minus(hours11);
        int int17 = hours10.size();
        org.joda.time.Duration duration18 = hours10.toStandardDuration();
        boolean boolean19 = hours6.isGreaterThan(hours10);
        org.joda.time.MutablePeriod mutablePeriod20 = hours10.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType21 = hours10.getFieldType();
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period23 = hours22.toPeriod();
        org.joda.time.Hours hours25 = hours22.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.THREE;
        org.joda.time.Period period28 = hours27.toPeriod();
        org.joda.time.Hours hours30 = hours27.plus((int) (byte) -1);
        org.joda.time.Hours hours31 = hours25.minus(hours27);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod33 = hours32.toMutablePeriod();
        org.joda.time.Hours hours34 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours35 = hours32.minus(hours34);
        org.joda.time.DurationFieldType durationFieldType36 = null;
        int int37 = hours32.get(durationFieldType36);
        org.joda.time.Hours hours39 = hours32.minus((int) (short) 0);
        org.joda.time.Hours hours40 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType41 = null;
        int int42 = hours40.get(durationFieldType41);
        org.joda.time.DurationFieldType durationFieldType43 = hours40.getFieldType();
        int int44 = hours39.get(durationFieldType43);
        int int45 = hours27.get(durationFieldType43);
        int int46 = hours10.get(durationFieldType43);
        boolean boolean47 = hours0.isSupported(durationFieldType43);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8 + "'", int14 == 8);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 7 + "'", int44 == 7);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 3 + "'", int45 == 3);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 6 + "'", int46 == 6);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.plus((int) (byte) -1);
        org.joda.time.Hours hours5 = hours3.minus((int) (byte) 100);
        org.joda.time.DurationFieldType durationFieldType6 = hours3.getFieldType();
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod8 = hours7.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours7.minus(hours9);
        org.joda.time.Duration duration11 = hours7.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod12 = hours7.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        int int15 = hours13.getValue((int) (short) 0);
        java.lang.String str16 = hours13.toString();
        boolean boolean17 = hours7.isGreaterThan(hours13);
        org.joda.time.Hours hours18 = hours3.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType19 = hours3.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 8 + "'", int15 == 8);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT8H" + "'", str16, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(durationFieldType19);
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.Hours hours10 = hours9.negated();
        org.joda.time.Duration duration11 = hours10.toStandardDuration();
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        int int17 = hours12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours15);
        org.joda.time.Hours hours18 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours12);
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        org.joda.time.Hours hours24 = hours21.plus(8);
        org.joda.time.Hours hours25 = hours12.minus(hours24);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        boolean boolean33 = hours26.isSupported(durationFieldType32);
        org.joda.time.Hours hours35 = hours26.minus((int) (short) -1);
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod37 = hours36.toMutablePeriod();
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours39 = hours36.minus(hours38);
        org.joda.time.Hours hours41 = hours38.plus(8);
        org.joda.time.Hours hours42 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = hours42.get(durationFieldType43);
        org.joda.time.DurationFieldType durationFieldType45 = hours42.getFieldType();
        boolean boolean46 = hours41.isSupported(durationFieldType45);
        int int47 = hours35.get(durationFieldType45);
        int int48 = hours24.get(durationFieldType45);
        int int49 = hours10.get(durationFieldType45);
        org.joda.time.Period period50 = hours10.toPeriod();
        org.joda.time.Hours hours51 = org.joda.time.Hours.EIGHT;
        int int52 = hours51.size();
        int int53 = hours10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours51);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 8 + "'", int47 == 8);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-8) + "'", int49 == (-8));
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        org.joda.time.Hours hours0 = org.joda.time.Hours.EIGHT;
        int int1 = hours0.size();
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours2);
        boolean boolean11 = hours0.equals((java.lang.Object) hours2);
        org.joda.time.Hours hours13 = org.joda.time.Hours.hours(0);
        org.joda.time.Duration duration14 = hours13.toStandardDuration();
        org.joda.time.Hours hours16 = hours13.multipliedBy((int) (short) 1);
        boolean boolean17 = hours0.equals((java.lang.Object) hours13);
        int int18 = hours13.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = hours0.getFieldType();
        org.joda.time.Hours hours5 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours5.get(durationFieldType6);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        org.joda.time.Duration duration9 = hours5.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod10 = hours5.toMutablePeriod();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        int int13 = hours11.getValue((int) (short) 0);
        java.lang.String str14 = hours11.toString();
        boolean boolean15 = hours5.isGreaterThan(hours11);
        org.joda.time.Hours hours17 = hours11.minus(10);
        org.joda.time.Hours hours18 = hours11.negated();
        org.joda.time.Duration duration19 = hours11.toStandardDuration();
        boolean boolean20 = hours3.isLessThan(hours11);
        org.joda.time.Hours hours21 = null;
        org.joda.time.Hours hours22 = hours11.minus(hours21);
        org.joda.time.Duration duration23 = hours22.toStandardDuration();
        int int24 = hours22.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8 + "'", int13 == 8);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "PT8H" + "'", str14, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 8 + "'", int24 == 8);
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.multipliedBy((int) (short) 10);
        org.joda.time.Period period10 = hours0.toPeriod();
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        int int16 = hours11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours14);
        org.joda.time.Hours hours17 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours11);
        org.joda.time.Hours hours19 = hours17.multipliedBy((int) (byte) 10);
        boolean boolean20 = hours0.isLessThan(hours19);
        org.joda.time.Hours hours21 = org.joda.time.Hours.ONE;
        int int22 = hours21.getHours();
        org.joda.time.Hours hours24 = hours21.plus(10);
        org.joda.time.Hours hours25 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours26 = hours25.negated();
        org.joda.time.DurationFieldType durationFieldType27 = hours25.getFieldType();
        boolean boolean28 = hours21.equals((java.lang.Object) hours25);
        org.joda.time.Hours hours30 = hours21.minus((int) '4');
        org.joda.time.Hours hours31 = hours0.minus(hours30);
        org.joda.time.Hours hours33 = hours0.plus(5);
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours35 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod36 = hours35.toMutablePeriod();
        org.joda.time.Hours hours37 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours38 = hours35.minus(hours37);
        int int39 = hours34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours37);
        org.joda.time.MutablePeriod mutablePeriod40 = hours34.toMutablePeriod();
        org.joda.time.Hours hours42 = hours34.minus(7);
        boolean boolean43 = hours0.isLessThan(hours42);
        int int44 = hours42.getHours();
        org.joda.time.Hours hours45 = null;
        org.joda.time.Hours hours46 = hours42.plus(hours45);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(hours46);
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.DurationFieldType durationFieldType3 = hours0.getFieldType();
        org.joda.time.DurationFieldType durationFieldType4 = hours0.getFieldType();
        org.joda.time.Period period5 = hours0.toPeriod();
        org.joda.time.Duration duration6 = hours0.toStandardDuration();
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        int int12 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours10);
        org.joda.time.Hours hours13 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours7);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = hours7.get(durationFieldType14);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = hours7.get(durationFieldType16);
        int int18 = hours7.getHours();
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        org.joda.time.DurationFieldType durationFieldType23 = null;
        boolean boolean24 = hours21.isSupported(durationFieldType23);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        int int28 = hours26.getValue((int) (short) 0);
        org.joda.time.Hours hours29 = hours25.minus(hours26);
        boolean boolean30 = hours21.isLessThan(hours26);
        org.joda.time.Hours hours31 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = hours31.get(durationFieldType32);
        org.joda.time.DurationFieldType durationFieldType34 = hours31.getFieldType();
        boolean boolean35 = hours21.isSupported(durationFieldType34);
        boolean boolean36 = hours7.isSupported(durationFieldType34);
        org.joda.time.Hours hours37 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod38 = hours37.toMutablePeriod();
        org.joda.time.Hours hours39 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours40 = hours37.minus(hours39);
        org.joda.time.DurationFieldType durationFieldType41 = null;
        int int42 = hours37.get(durationFieldType41);
        org.joda.time.Hours hours44 = hours37.multipliedBy(1);
        int int45 = hours44.getHours();
        org.joda.time.Hours hours47 = hours44.minus((int) ' ');
        boolean boolean48 = hours7.isLessThan(hours44);
        org.joda.time.Hours hours49 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours50 = org.joda.time.Hours.EIGHT;
        int int52 = hours50.getValue((int) (short) 0);
        org.joda.time.Hours hours53 = hours49.minus(hours50);
        int int54 = hours53.size();
        org.joda.time.Period period55 = hours53.toPeriod();
        org.joda.time.Hours hours57 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours58 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod59 = hours58.toMutablePeriod();
        org.joda.time.Hours hours60 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours61 = hours58.minus(hours60);
        org.joda.time.DurationFieldType durationFieldType62 = null;
        int int63 = hours58.get(durationFieldType62);
        org.joda.time.Hours hours65 = hours58.minus((int) (short) 0);
        org.joda.time.Hours hours66 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod67 = hours66.toMutablePeriod();
        org.joda.time.Hours hours68 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours69 = hours66.minus(hours68);
        org.joda.time.DurationFieldType durationFieldType70 = null;
        boolean boolean71 = hours68.isSupported(durationFieldType70);
        org.joda.time.Hours hours72 = hours65.minus(hours68);
        org.joda.time.Hours hours73 = hours57.plus(hours72);
        org.joda.time.Hours hours74 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours75 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod76 = hours75.toMutablePeriod();
        org.joda.time.Hours hours77 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours78 = hours75.minus(hours77);
        int int79 = hours74.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours77);
        org.joda.time.Hours hours80 = hours57.plus(hours77);
        org.joda.time.Hours hours81 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod82 = hours81.toMutablePeriod();
        org.joda.time.Hours hours83 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours84 = hours81.minus(hours83);
        org.joda.time.DurationFieldType durationFieldType85 = null;
        int int86 = hours81.get(durationFieldType85);
        org.joda.time.Hours hours88 = hours81.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval89 = null;
        org.joda.time.Hours hours90 = org.joda.time.Hours.hoursIn(readableInterval89);
        int int91 = hours88.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours90);
        boolean boolean92 = hours77.isGreaterThan(hours88);
        org.joda.time.Hours hours93 = hours53.minus(hours77);
        boolean boolean94 = hours7.isLessThan(hours93);
        boolean boolean95 = hours0.equals((java.lang.Object) boolean94);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 7 + "'", int18 == 7);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 8 + "'", int28 == 8);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 7 + "'", int45 == 7);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 8 + "'", int52 == 8);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(mutablePeriod59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(mutablePeriod67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertNotNull(hours75);
        org.junit.Assert.assertNotNull(mutablePeriod76);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertNotNull(hours78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(hours80);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertNotNull(mutablePeriod82);
        org.junit.Assert.assertNotNull(hours83);
        org.junit.Assert.assertNotNull(hours84);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(hours88);
        org.junit.Assert.assertNotNull(hours90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(hours93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours5 = hours2.plus(8);
        org.joda.time.Hours hours6 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours6.get(durationFieldType7);
        org.joda.time.DurationFieldType durationFieldType9 = hours6.getFieldType();
        boolean boolean10 = hours5.isSupported(durationFieldType9);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        int int16 = hours11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours14);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        boolean boolean18 = hours11.isSupported(durationFieldType17);
        org.joda.time.Hours hours20 = hours11.minus((int) (short) -1);
        org.joda.time.PeriodType periodType21 = hours11.getPeriodType();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        int int24 = hours22.getValue((int) (short) 0);
        org.joda.time.Hours hours25 = hours11.minus(hours22);
        org.joda.time.Hours hours26 = hours5.minus(hours25);
        org.joda.time.Hours hours28 = org.joda.time.Hours.parseHours("PT8H");
        boolean boolean29 = hours26.isLessThan(hours28);
        java.lang.String str30 = hours28.toString();
        org.joda.time.Hours hours31 = hours28.negated();
        org.joda.time.DurationFieldType durationFieldType32 = null;
        boolean boolean33 = hours31.isSupported(durationFieldType32);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 8 + "'", int24 == 8);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "PT8H" + "'", str30, "PT8H");
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.Hours hours10 = hours9.negated();
        org.joda.time.Hours hours12 = hours10.plus(16);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        org.joda.time.Duration duration17 = hours13.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod18 = hours13.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        int int21 = hours19.getValue((int) (short) 0);
        java.lang.String str22 = hours19.toString();
        boolean boolean23 = hours13.isGreaterThan(hours19);
        org.joda.time.Hours hours25 = hours19.minus(10);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.Hours hours32 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours26);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = hours26.get(durationFieldType33);
        boolean boolean35 = hours25.equals((java.lang.Object) hours26);
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period37 = hours36.toPeriod();
        org.joda.time.Hours hours39 = hours36.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod40 = hours39.toMutablePeriod();
        org.joda.time.Hours hours41 = org.joda.time.Hours.THREE;
        org.joda.time.Period period42 = hours41.toPeriod();
        org.joda.time.Hours hours44 = hours41.plus((int) (byte) -1);
        org.joda.time.Hours hours45 = hours39.minus(hours41);
        org.joda.time.DurationFieldType durationFieldType46 = hours45.getFieldType();
        boolean boolean47 = hours26.isGreaterThan(hours45);
        org.joda.time.Hours hours48 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod49 = hours48.toMutablePeriod();
        org.joda.time.Hours hours50 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours51 = hours48.minus(hours50);
        org.joda.time.DurationFieldType durationFieldType52 = null;
        int int53 = hours48.get(durationFieldType52);
        org.joda.time.Hours hours55 = hours48.multipliedBy(1);
        int int56 = hours55.getHours();
        org.joda.time.DurationFieldType durationFieldType57 = hours55.getFieldType();
        boolean boolean58 = hours26.isGreaterThan(hours55);
        org.joda.time.Hours hours59 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours61 = hours59.plus(1);
        org.joda.time.Hours hours63 = hours59.dividedBy((int) (byte) -1);
        int int64 = hours59.size();
        org.joda.time.Hours hours65 = org.joda.time.Hours.MIN_VALUE;
        org.joda.time.Hours hours67 = hours65.plus(0);
        org.joda.time.Hours hours68 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours69 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod70 = hours69.toMutablePeriod();
        org.joda.time.Hours hours71 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours72 = hours69.minus(hours71);
        int int73 = hours68.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours71);
        org.joda.time.DurationFieldType durationFieldType74 = null;
        boolean boolean75 = hours68.isSupported(durationFieldType74);
        org.joda.time.Hours hours77 = hours68.minus((int) (short) -1);
        org.joda.time.PeriodType periodType78 = hours68.getPeriodType();
        int int79 = hours68.getHours();
        org.joda.time.DurationFieldType durationFieldType81 = hours68.getFieldType((int) (short) 0);
        boolean boolean82 = hours67.isSupported(durationFieldType81);
        int int83 = hours59.get(durationFieldType81);
        int int84 = hours26.get(durationFieldType81);
        boolean boolean85 = hours10.isGreaterThan(hours26);
        org.joda.time.Hours hours87 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours89 = hours87.minus(8);
        org.joda.time.DurationFieldType durationFieldType90 = hours89.getFieldType();
        int int91 = hours26.get(durationFieldType90);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 8 + "'", int21 == 8);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT8H" + "'", str22, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(mutablePeriod49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 7 + "'", int56 == 7);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertNotNull(mutablePeriod70);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 7 + "'", int79 == 7);
        org.junit.Assert.assertNotNull(durationFieldType81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 7 + "'", int84 == 7);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(hours87);
        org.junit.Assert.assertNotNull(hours89);
        org.junit.Assert.assertNotNull(durationFieldType90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 7 + "'", int91 == 7);
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours8 = hours0.plus(0);
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Duration duration10 = hours8.toStandardDuration();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(duration10);
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) (short) 10);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.Duration duration6 = hours2.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod7 = hours2.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        int int10 = hours8.getValue((int) (short) 0);
        java.lang.String str11 = hours8.toString();
        boolean boolean12 = hours2.isGreaterThan(hours8);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = hours13.get(durationFieldType17);
        int int19 = hours13.getHours();
        org.joda.time.MutablePeriod mutablePeriod20 = hours13.toMutablePeriod();
        boolean boolean21 = hours2.isGreaterThan(hours13);
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod23 = hours22.toMutablePeriod();
        org.joda.time.Hours hours24 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours25 = hours22.minus(hours24);
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = hours22.get(durationFieldType26);
        org.joda.time.Hours hours29 = hours22.minus((int) (short) 0);
        org.joda.time.Hours hours30 = org.joda.time.Hours.ONE;
        int int31 = hours30.getHours();
        org.joda.time.Hours hours33 = hours30.plus(10);
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod35 = hours34.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours37 = hours34.minus(hours36);
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = hours34.get(durationFieldType38);
        org.joda.time.Hours hours41 = hours34.multipliedBy(1);
        boolean boolean42 = hours30.isGreaterThan(hours34);
        org.joda.time.Hours hours43 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours44 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours45 = org.joda.time.Hours.EIGHT;
        int int47 = hours45.getValue((int) (short) 0);
        org.joda.time.Hours hours48 = hours44.minus(hours45);
        org.joda.time.Hours hours49 = hours43.minus(hours44);
        int int50 = hours43.size();
        org.joda.time.Hours hours51 = hours34.plus(hours43);
        org.joda.time.Hours hours52 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours53 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod54 = hours53.toMutablePeriod();
        org.joda.time.Hours hours55 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours56 = hours53.minus(hours55);
        int int57 = hours52.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours55);
        org.joda.time.Hours hours59 = hours55.multipliedBy(0);
        org.joda.time.Duration duration60 = hours55.toStandardDuration();
        org.joda.time.Hours hours62 = hours55.dividedBy((int) (short) -1);
        int int63 = hours62.size();
        boolean boolean64 = hours51.isLessThan(hours62);
        boolean boolean65 = hours22.isGreaterThan(hours62);
        org.joda.time.Hours hours67 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType68 = hours67.getFieldType();
        org.joda.time.PeriodType periodType69 = hours67.getPeriodType();
        org.joda.time.Hours hours70 = hours67.negated();
        org.joda.time.Hours hours71 = hours62.plus(hours67);
        org.joda.time.Hours hours72 = hours2.plus(hours67);
        org.joda.time.Hours hours73 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours74 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod75 = hours74.toMutablePeriod();
        org.joda.time.Hours hours76 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours77 = hours74.minus(hours76);
        int int78 = hours73.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours76);
        org.joda.time.DurationFieldType durationFieldType79 = null;
        boolean boolean80 = hours73.isSupported(durationFieldType79);
        org.joda.time.Hours hours82 = hours73.minus((int) (short) -1);
        org.joda.time.PeriodType periodType83 = hours73.getPeriodType();
        int int84 = hours73.getHours();
        org.joda.time.DurationFieldType durationFieldType86 = hours73.getFieldType((int) (short) 0);
        org.joda.time.Hours hours88 = hours73.plus((int) (short) 1);
        org.joda.time.Hours hours89 = hours67.plus(hours73);
        org.joda.time.Hours hours90 = hours1.plus(hours73);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 8 + "'", int10 == 8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "PT8H" + "'", str11, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 7 + "'", int19 == 7);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 8 + "'", int47 == 8);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(durationFieldType68);
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertNotNull(mutablePeriod75);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(hours82);
        org.junit.Assert.assertNotNull(periodType83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 7 + "'", int84 == 7);
        org.junit.Assert.assertNotNull(durationFieldType86);
        org.junit.Assert.assertNotNull(hours88);
        org.junit.Assert.assertNotNull(hours89);
        org.junit.Assert.assertNotNull(hours90);
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.Hours hours3 = hours0.plus(10);
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod5 = hours4.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours7 = hours4.minus(hours6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = hours4.get(durationFieldType8);
        org.joda.time.Hours hours11 = hours4.multipliedBy(1);
        boolean boolean12 = hours0.isGreaterThan(hours4);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        int int17 = hours15.getValue((int) (short) 0);
        org.joda.time.Hours hours18 = hours14.minus(hours15);
        org.joda.time.Hours hours19 = hours13.minus(hours14);
        int int20 = hours13.size();
        org.joda.time.Hours hours21 = hours4.plus(hours13);
        org.joda.time.Hours hours23 = org.joda.time.Hours.hours(0);
        int int24 = hours23.size();
        org.joda.time.Hours hours26 = org.joda.time.Hours.hours((-1));
        int int27 = hours23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours26);
        org.joda.time.Hours hours28 = hours4.minus(hours23);
        org.joda.time.Hours hours30 = hours28.dividedBy((-2147483648));
        org.joda.time.Hours hours32 = org.joda.time.Hours.hours(0);
        int int33 = hours32.size();
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours35 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod36 = hours35.toMutablePeriod();
        org.joda.time.Hours hours37 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours38 = hours35.minus(hours37);
        int int39 = hours34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours37);
        org.joda.time.DurationFieldType durationFieldType40 = null;
        boolean boolean41 = hours34.isSupported(durationFieldType40);
        org.joda.time.Hours hours43 = hours34.minus((int) (short) -1);
        org.joda.time.PeriodType periodType44 = hours34.getPeriodType();
        int int45 = hours34.getHours();
        org.joda.time.DurationFieldType durationFieldType47 = hours34.getFieldType((int) (short) 0);
        int int48 = hours32.get(durationFieldType47);
        org.joda.time.PeriodType periodType49 = hours32.getPeriodType();
        org.joda.time.Hours hours50 = org.joda.time.Hours.THREE;
        org.joda.time.Period period51 = hours50.toPeriod();
        org.joda.time.Hours hours53 = hours50.plus((int) (byte) -1);
        org.joda.time.Hours hours55 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours56 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod57 = hours56.toMutablePeriod();
        org.joda.time.Hours hours58 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours59 = hours56.minus(hours58);
        org.joda.time.DurationFieldType durationFieldType60 = null;
        int int61 = hours56.get(durationFieldType60);
        org.joda.time.Hours hours63 = hours56.minus((int) (short) 0);
        org.joda.time.Hours hours64 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod65 = hours64.toMutablePeriod();
        org.joda.time.Hours hours66 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours67 = hours64.minus(hours66);
        org.joda.time.DurationFieldType durationFieldType68 = null;
        boolean boolean69 = hours66.isSupported(durationFieldType68);
        org.joda.time.Hours hours70 = hours63.minus(hours66);
        org.joda.time.Hours hours71 = hours55.plus(hours70);
        org.joda.time.Hours hours72 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod73 = hours72.toMutablePeriod();
        org.joda.time.Hours hours74 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours75 = hours72.minus(hours74);
        boolean boolean76 = hours70.isGreaterThan(hours74);
        org.joda.time.DurationFieldType durationFieldType78 = hours70.getFieldType((int) (short) 0);
        int int79 = hours70.size();
        org.joda.time.Hours hours80 = hours50.plus(hours70);
        boolean boolean81 = hours32.isGreaterThan(hours80);
        int int82 = hours30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours32);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 7 + "'", int45 == 7);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(mutablePeriod57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(mutablePeriod65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertNotNull(mutablePeriod73);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertNotNull(hours75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(durationFieldType78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertNotNull(hours80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        boolean boolean13 = hours10.isSupported(durationFieldType12);
        org.joda.time.Hours hours14 = hours7.minus(hours10);
        org.joda.time.PeriodType periodType15 = hours7.getPeriodType();
        org.joda.time.Hours hours17 = hours7.multipliedBy((int) (byte) 1);
        org.joda.time.Hours hours18 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours19 = org.joda.time.Hours.MAX_VALUE;
        int int20 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours19);
        org.joda.time.Hours hours21 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = hours21.get(durationFieldType22);
        org.joda.time.DurationFieldType durationFieldType24 = hours21.getFieldType();
        org.joda.time.DurationFieldType durationFieldType25 = hours21.getFieldType();
        boolean boolean26 = hours19.isSupported(durationFieldType25);
        org.joda.time.Period period27 = hours19.toPeriod();
        org.joda.time.Hours hours28 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) period27);
        org.joda.time.Hours hours29 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod30 = hours29.toMutablePeriod();
        org.joda.time.Hours hours31 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours32 = hours29.minus(hours31);
        org.joda.time.Hours hours34 = hours31.plus(8);
        org.joda.time.Hours hours35 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType36 = null;
        int int37 = hours35.get(durationFieldType36);
        org.joda.time.DurationFieldType durationFieldType38 = hours35.getFieldType();
        boolean boolean39 = hours34.isSupported(durationFieldType38);
        boolean boolean40 = hours28.isSupported(durationFieldType38);
        int int41 = hours7.get(durationFieldType38);
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod43 = hours42.toMutablePeriod();
        org.joda.time.Hours hours44 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours45 = hours42.minus(hours44);
        org.joda.time.DurationFieldType durationFieldType46 = null;
        int int47 = hours42.get(durationFieldType46);
        org.joda.time.Hours hours49 = hours42.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval50 = null;
        org.joda.time.Hours hours51 = org.joda.time.Hours.hoursIn(readableInterval50);
        int int52 = hours49.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours51);
        org.joda.time.Hours hours53 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours54 = org.joda.time.Hours.EIGHT;
        int int56 = hours54.getValue((int) (short) 0);
        org.joda.time.Hours hours57 = hours53.minus(hours54);
        org.joda.time.Hours hours58 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType59 = null;
        int int60 = hours58.get(durationFieldType59);
        org.joda.time.DurationFieldType durationFieldType61 = hours58.getFieldType();
        int int62 = hours53.get(durationFieldType61);
        boolean boolean63 = hours51.isSupported(durationFieldType61);
        boolean boolean64 = hours7.isSupported(durationFieldType61);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 7 + "'", int41 == 7);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 8 + "'", int56 == 8);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 7 + "'", int62 == 7);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = hours6.negated();
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = hours14.get(durationFieldType18);
        org.joda.time.Hours hours21 = hours14.multipliedBy(1);
        org.joda.time.Hours hours22 = org.joda.time.Hours.ONE;
        int int23 = hours21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours22);
        int int24 = hours6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        java.lang.String str25 = hours21.toString();
        org.joda.time.Period period26 = hours21.toPeriod();
        org.joda.time.Period period27 = hours21.toPeriod();
        org.joda.time.Hours hours28 = hours21.negated();
        org.joda.time.PeriodType periodType29 = hours21.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "PT7H" + "'", str25, "PT7H");
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(periodType29);
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(0);
        org.joda.time.Hours hours3 = hours1.multipliedBy((int) (short) 0);
        org.joda.time.Period period4 = hours3.toPeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours5.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours5.dividedBy(100);
        org.joda.time.Hours hours11 = hours9.plus((int) (byte) 10);
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        int int17 = hours12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours15);
        org.joda.time.DurationFieldType durationFieldType18 = null;
        boolean boolean19 = hours12.isSupported(durationFieldType18);
        org.joda.time.Hours hours21 = hours12.minus((int) (short) -1);
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod23 = hours22.toMutablePeriod();
        org.joda.time.Hours hours24 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours25 = hours22.minus(hours24);
        org.joda.time.Hours hours27 = hours24.plus(8);
        org.joda.time.Hours hours28 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = hours28.get(durationFieldType29);
        org.joda.time.DurationFieldType durationFieldType31 = hours28.getFieldType();
        boolean boolean32 = hours27.isSupported(durationFieldType31);
        int int33 = hours21.get(durationFieldType31);
        boolean boolean34 = hours11.isSupported(durationFieldType31);
        org.joda.time.Hours hours35 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod36 = hours35.toMutablePeriod();
        org.joda.time.Hours hours37 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours38 = hours35.minus(hours37);
        org.joda.time.DurationFieldType durationFieldType39 = null;
        int int40 = hours35.get(durationFieldType39);
        org.joda.time.Hours hours42 = hours35.minus((int) (short) 0);
        org.joda.time.Hours hours43 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours35);
        boolean boolean44 = hours11.equals((java.lang.Object) hours43);
        org.joda.time.Hours hours46 = hours11.plus((-1));
        org.joda.time.Hours hours47 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod48 = hours47.toMutablePeriod();
        org.joda.time.Hours hours49 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours50 = hours47.minus(hours49);
        org.joda.time.DurationFieldType durationFieldType51 = null;
        int int52 = hours47.get(durationFieldType51);
        org.joda.time.Hours hours54 = hours47.multipliedBy(1);
        org.joda.time.Hours hours55 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod56 = hours55.toMutablePeriod();
        org.joda.time.Hours hours57 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours58 = hours55.minus(hours57);
        org.joda.time.DurationFieldType durationFieldType59 = null;
        int int60 = hours55.get(durationFieldType59);
        org.joda.time.Hours hours62 = hours55.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval63 = null;
        org.joda.time.Hours hours64 = org.joda.time.Hours.hoursIn(readableInterval63);
        int int65 = hours62.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours64);
        org.joda.time.Hours hours66 = hours47.minus(hours62);
        org.joda.time.Hours hours67 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod68 = hours67.toMutablePeriod();
        org.joda.time.Hours hours69 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours70 = hours67.minus(hours69);
        org.joda.time.Hours hours71 = hours69.negated();
        int int72 = hours71.getHours();
        org.joda.time.Hours hours74 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours76 = hours74.minus(8);
        org.joda.time.Hours hours77 = hours71.minus(hours74);
        boolean boolean78 = hours62.isLessThan(hours77);
        boolean boolean79 = hours11.equals((java.lang.Object) boolean78);
        org.joda.time.Hours hours81 = hours11.minus(5);
        boolean boolean82 = hours3.isGreaterThan(hours81);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 8 + "'", int33 == 8);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(mutablePeriod68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-8) + "'", int72 == (-8));
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours1 = org.joda.time.Hours.MAX_VALUE;
        int int2 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours1);
        org.joda.time.Hours hours3 = hours0.negated();
        org.joda.time.Period period4 = hours0.toPeriod();
        org.joda.time.Hours hours5 = hours0.negated();
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod8 = hours7.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours7.minus(hours9);
        int int11 = hours6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours9);
        org.joda.time.Hours hours12 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours6);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        org.joda.time.Hours hours18 = hours15.plus(8);
        org.joda.time.Hours hours19 = hours6.minus(hours18);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        int int23 = hours21.getValue((int) (short) 0);
        org.joda.time.Hours hours24 = hours20.minus(hours21);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours28 = hours25.minus(hours27);
        org.joda.time.Hours hours30 = hours27.plus(8);
        org.joda.time.Hours hours31 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = hours31.get(durationFieldType32);
        org.joda.time.DurationFieldType durationFieldType34 = hours31.getFieldType();
        boolean boolean35 = hours30.isSupported(durationFieldType34);
        boolean boolean36 = hours20.isSupported(durationFieldType34);
        org.joda.time.Hours hours37 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period38 = hours37.toPeriod();
        org.joda.time.Hours hours40 = hours37.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod41 = hours40.toMutablePeriod();
        org.joda.time.Hours hours42 = org.joda.time.Hours.THREE;
        org.joda.time.Period period43 = hours42.toPeriod();
        org.joda.time.Hours hours45 = hours42.plus((int) (byte) -1);
        org.joda.time.Hours hours46 = hours40.minus(hours42);
        org.joda.time.Hours hours47 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod48 = hours47.toMutablePeriod();
        org.joda.time.Hours hours49 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours50 = hours47.minus(hours49);
        org.joda.time.DurationFieldType durationFieldType51 = null;
        int int52 = hours47.get(durationFieldType51);
        org.joda.time.Hours hours54 = hours47.minus((int) (short) 0);
        org.joda.time.Hours hours55 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType56 = null;
        int int57 = hours55.get(durationFieldType56);
        org.joda.time.DurationFieldType durationFieldType58 = hours55.getFieldType();
        int int59 = hours54.get(durationFieldType58);
        int int60 = hours42.get(durationFieldType58);
        boolean boolean61 = hours20.equals((java.lang.Object) hours42);
        boolean boolean62 = hours18.equals((java.lang.Object) hours42);
        org.joda.time.Hours hours64 = hours42.plus(16);
        org.joda.time.Hours hours65 = hours5.plus(hours42);
        org.joda.time.Hours hours67 = hours42.multipliedBy((-15));
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 8 + "'", int23 == 8);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 7 + "'", int59 == 7);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 3 + "'", int60 == 3);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours67);
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(17);
        org.joda.time.Hours hours2 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours1);
        org.joda.time.Hours hours3 = hours1.negated();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        org.joda.time.Hours hours10 = hours7.plus(8);
        org.joda.time.Hours hours11 = hours1.minus(hours7);
        int int12 = hours11.size();
        org.joda.time.Period period13 = hours11.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(period13);
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours24 = hours1.plus(hours21);
        org.joda.time.Hours hours26 = hours1.dividedBy(3);
        int int27 = hours26.getHours();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.DurationFieldType durationFieldType3 = hours0.getFieldType();
        org.joda.time.DurationFieldType durationFieldType4 = hours0.getFieldType();
        org.joda.time.Hours hours6 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType7 = hours6.getFieldType();
        org.joda.time.Period period8 = hours6.toPeriod();
        org.joda.time.Period period9 = hours6.toPeriod();
        org.joda.time.Hours hours11 = hours6.plus(0);
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        int int17 = hours12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours15);
        org.joda.time.Hours hours18 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours12);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = hours12.get(durationFieldType19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = hours12.get(durationFieldType21);
        int int23 = hours12.getHours();
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        boolean boolean29 = hours26.isSupported(durationFieldType28);
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours31 = org.joda.time.Hours.EIGHT;
        int int33 = hours31.getValue((int) (short) 0);
        org.joda.time.Hours hours34 = hours30.minus(hours31);
        boolean boolean35 = hours26.isLessThan(hours31);
        org.joda.time.Hours hours36 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType37 = null;
        int int38 = hours36.get(durationFieldType37);
        org.joda.time.DurationFieldType durationFieldType39 = hours36.getFieldType();
        boolean boolean40 = hours26.isSupported(durationFieldType39);
        boolean boolean41 = hours12.isSupported(durationFieldType39);
        boolean boolean42 = hours11.isSupported(durationFieldType39);
        int int43 = hours0.get(durationFieldType39);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 7 + "'", int23 == 7);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 8 + "'", int33 == 8);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.multipliedBy(1);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = hours8.get(durationFieldType12);
        org.joda.time.Hours hours15 = hours8.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Hours hours17 = org.joda.time.Hours.hoursIn(readableInterval16);
        int int18 = hours15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.Hours hours19 = hours0.minus(hours15);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod22 = hours21.toMutablePeriod();
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours24 = hours21.minus(hours23);
        int int25 = hours20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours23);
        org.joda.time.DurationFieldType durationFieldType26 = null;
        boolean boolean27 = hours20.isSupported(durationFieldType26);
        org.joda.time.Hours hours29 = hours20.minus((int) (short) -1);
        boolean boolean30 = hours19.isLessThan(hours20);
        org.joda.time.MutablePeriod mutablePeriod31 = hours19.toMutablePeriod();
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours33 = org.joda.time.Hours.EIGHT;
        int int35 = hours33.getValue((int) (short) 0);
        org.joda.time.Hours hours36 = hours32.minus(hours33);
        org.joda.time.Hours hours37 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod38 = hours37.toMutablePeriod();
        org.joda.time.Hours hours39 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours40 = hours37.minus(hours39);
        org.joda.time.Hours hours42 = hours39.plus(8);
        org.joda.time.Hours hours43 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType44 = null;
        int int45 = hours43.get(durationFieldType44);
        org.joda.time.DurationFieldType durationFieldType46 = hours43.getFieldType();
        boolean boolean47 = hours42.isSupported(durationFieldType46);
        boolean boolean48 = hours32.isSupported(durationFieldType46);
        org.joda.time.Hours hours49 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period50 = hours49.toPeriod();
        org.joda.time.Hours hours52 = hours49.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod53 = hours52.toMutablePeriod();
        org.joda.time.Hours hours54 = org.joda.time.Hours.THREE;
        org.joda.time.Period period55 = hours54.toPeriod();
        org.joda.time.Hours hours57 = hours54.plus((int) (byte) -1);
        org.joda.time.Hours hours58 = hours52.minus(hours54);
        org.joda.time.Hours hours59 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod60 = hours59.toMutablePeriod();
        org.joda.time.Hours hours61 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours62 = hours59.minus(hours61);
        org.joda.time.DurationFieldType durationFieldType63 = null;
        int int64 = hours59.get(durationFieldType63);
        org.joda.time.Hours hours66 = hours59.minus((int) (short) 0);
        org.joda.time.Hours hours67 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType68 = null;
        int int69 = hours67.get(durationFieldType68);
        org.joda.time.DurationFieldType durationFieldType70 = hours67.getFieldType();
        int int71 = hours66.get(durationFieldType70);
        int int72 = hours54.get(durationFieldType70);
        boolean boolean73 = hours32.equals((java.lang.Object) hours54);
        boolean boolean74 = hours19.isLessThan(hours54);
        org.joda.time.Hours hours75 = hours54.negated();
        org.joda.time.Hours hours77 = hours54.minus(32);
        org.joda.time.Hours hours78 = hours54.negated();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 8 + "'", int35 == 8);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(mutablePeriod53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(durationFieldType70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 7 + "'", int71 == 7);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 3 + "'", int72 == 3);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(hours75);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertNotNull(hours78);
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours9 = hours3.minus(hours5);
        org.joda.time.PeriodType periodType10 = hours5.getPeriodType();
        org.joda.time.Hours hours11 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours12 = hours11.negated();
        org.joda.time.DurationFieldType durationFieldType13 = hours11.getFieldType();
        boolean boolean14 = hours5.isSupported(durationFieldType13);
        int int15 = hours5.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours24 = hours1.plus(hours21);
        org.joda.time.PeriodType periodType25 = hours24.getPeriodType();
        java.lang.String str26 = hours24.toString();
        org.joda.time.Hours hours28 = hours24.multipliedBy(0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "PT16H" + "'", str26, "PT16H");
        org.junit.Assert.assertNotNull(hours28);
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Period period2 = hours1.toPeriod();
        org.joda.time.Hours hours4 = hours1.minus((int) (byte) -1);
        org.joda.time.Period period5 = hours1.toPeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours6.get(durationFieldType7);
        org.joda.time.DurationFieldType durationFieldType9 = hours6.getFieldType();
        org.joda.time.DurationFieldType durationFieldType10 = hours6.getFieldType();
        boolean boolean11 = hours1.isLessThan(hours6);
        org.joda.time.Hours hours13 = hours6.dividedBy((int) (byte) 10);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(hours13);
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours24 = hours1.plus(hours21);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours28 = hours25.minus(hours27);
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = hours25.get(durationFieldType29);
        org.joda.time.Hours hours32 = hours25.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval33 = null;
        org.joda.time.Hours hours34 = org.joda.time.Hours.hoursIn(readableInterval33);
        int int35 = hours32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours34);
        boolean boolean36 = hours21.isGreaterThan(hours32);
        org.joda.time.Hours hours38 = hours21.multipliedBy(16);
        org.joda.time.MutablePeriod mutablePeriod39 = hours38.toMutablePeriod();
        org.joda.time.Hours hours40 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours42 = hours40.plus(1);
        org.joda.time.Hours hours44 = hours40.dividedBy((-2));
        org.joda.time.Hours hours46 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours47 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod48 = hours47.toMutablePeriod();
        org.joda.time.Hours hours49 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours50 = hours47.minus(hours49);
        org.joda.time.DurationFieldType durationFieldType51 = null;
        int int52 = hours47.get(durationFieldType51);
        org.joda.time.Hours hours54 = hours47.minus((int) (short) 0);
        org.joda.time.Hours hours55 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod56 = hours55.toMutablePeriod();
        org.joda.time.Hours hours57 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours58 = hours55.minus(hours57);
        org.joda.time.DurationFieldType durationFieldType59 = null;
        boolean boolean60 = hours57.isSupported(durationFieldType59);
        org.joda.time.Hours hours61 = hours54.minus(hours57);
        org.joda.time.Hours hours62 = hours46.plus(hours61);
        org.joda.time.Hours hours63 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod64 = hours63.toMutablePeriod();
        org.joda.time.Hours hours65 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours66 = hours63.minus(hours65);
        boolean boolean67 = hours61.isGreaterThan(hours65);
        org.joda.time.Hours hours68 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours69 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours70 = org.joda.time.Hours.EIGHT;
        int int72 = hours70.getValue((int) (short) 0);
        org.joda.time.Hours hours73 = hours69.minus(hours70);
        org.joda.time.Hours hours74 = hours68.minus(hours69);
        org.joda.time.Hours hours76 = hours69.dividedBy(1);
        org.joda.time.Duration duration77 = hours69.toStandardDuration();
        boolean boolean78 = hours65.isGreaterThan(hours69);
        org.joda.time.Hours hours79 = hours65.negated();
        org.joda.time.Hours hours80 = hours79.negated();
        boolean boolean81 = hours40.isLessThan(hours79);
        org.joda.time.Hours hours82 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod83 = hours82.toMutablePeriod();
        org.joda.time.Hours hours84 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours85 = hours82.minus(hours84);
        org.joda.time.Hours hours87 = hours84.plus(8);
        org.joda.time.PeriodType periodType88 = hours87.getPeriodType();
        org.joda.time.Hours hours89 = hours40.minus(hours87);
        boolean boolean90 = hours38.isLessThan(hours89);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(mutablePeriod64);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 8 + "'", int72 == 8);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(hours79);
        org.junit.Assert.assertNotNull(hours80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(hours82);
        org.junit.Assert.assertNotNull(mutablePeriod83);
        org.junit.Assert.assertNotNull(hours84);
        org.junit.Assert.assertNotNull(hours85);
        org.junit.Assert.assertNotNull(hours87);
        org.junit.Assert.assertNotNull(periodType88);
        org.junit.Assert.assertNotNull(hours89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.Hours hours10 = hours9.negated();
        org.joda.time.Duration duration11 = hours10.toStandardDuration();
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        int int17 = hours12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours15);
        org.joda.time.Hours hours18 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours12);
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        org.joda.time.Hours hours24 = hours21.plus(8);
        org.joda.time.Hours hours25 = hours12.minus(hours24);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        boolean boolean33 = hours26.isSupported(durationFieldType32);
        org.joda.time.Hours hours35 = hours26.minus((int) (short) -1);
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod37 = hours36.toMutablePeriod();
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours39 = hours36.minus(hours38);
        org.joda.time.Hours hours41 = hours38.plus(8);
        org.joda.time.Hours hours42 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = hours42.get(durationFieldType43);
        org.joda.time.DurationFieldType durationFieldType45 = hours42.getFieldType();
        boolean boolean46 = hours41.isSupported(durationFieldType45);
        int int47 = hours35.get(durationFieldType45);
        int int48 = hours24.get(durationFieldType45);
        int int49 = hours10.get(durationFieldType45);
        org.joda.time.Period period50 = hours10.toPeriod();
        org.joda.time.PeriodType periodType51 = hours10.getPeriodType();
        org.joda.time.PeriodType periodType52 = hours10.getPeriodType();
        java.lang.String str53 = hours10.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 8 + "'", int47 == 8);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-8) + "'", int49 == (-8));
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "PT-8H" + "'", str53, "PT-8H");
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours20);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours28 = hours25.minus(hours27);
        int int29 = hours24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours27);
        org.joda.time.MutablePeriod mutablePeriod30 = hours24.toMutablePeriod();
        org.joda.time.Hours hours32 = hours24.minus(7);
        boolean boolean33 = hours20.isLessThan(hours32);
        org.joda.time.PeriodType periodType34 = hours32.getPeriodType();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(periodType34);
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        boolean boolean6 = hours1.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours7 = null;
        org.joda.time.Hours hours8 = hours1.minus(hours7);
        org.joda.time.Hours hours9 = hours8.negated();
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.Duration duration14 = hours10.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod15 = hours10.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        int int18 = hours16.getValue((int) (short) 0);
        java.lang.String str19 = hours16.toString();
        boolean boolean20 = hours10.isGreaterThan(hours16);
        org.joda.time.Hours hours22 = hours16.minus(10);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        int int28 = hours23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours26);
        org.joda.time.Hours hours29 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = hours23.get(durationFieldType30);
        boolean boolean32 = hours22.equals((java.lang.Object) hours23);
        java.lang.String str33 = hours22.toString();
        org.joda.time.DurationFieldType durationFieldType35 = hours22.getFieldType(0);
        boolean boolean36 = hours8.isGreaterThan(hours22);
        int int37 = hours8.getHours();
        org.joda.time.DurationFieldType durationFieldType38 = hours8.getFieldType();
        org.joda.time.Hours hours39 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod40 = hours39.toMutablePeriod();
        org.joda.time.Hours hours41 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours42 = hours39.minus(hours41);
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = hours39.get(durationFieldType43);
        org.joda.time.Hours hours46 = hours39.minus((int) (short) 0);
        org.joda.time.Hours hours47 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod48 = hours47.toMutablePeriod();
        org.joda.time.Hours hours49 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours50 = hours47.minus(hours49);
        org.joda.time.DurationFieldType durationFieldType51 = null;
        boolean boolean52 = hours49.isSupported(durationFieldType51);
        org.joda.time.Hours hours53 = hours46.minus(hours49);
        org.joda.time.Hours hours55 = hours49.dividedBy(12);
        int int56 = hours8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours55);
        org.joda.time.Hours hours58 = hours55.minus((int) 'a');
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT8H" + "'", str19, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "PT-2H" + "'", str33, "PT-2H");
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 8 + "'", int37 == 8);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(hours58);
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.multipliedBy(1);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        int int9 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.MutablePeriod mutablePeriod10 = hours7.toMutablePeriod();
        org.joda.time.PeriodType periodType11 = hours7.getPeriodType();
        org.joda.time.Hours hours13 = hours7.dividedBy((int) '4');
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod16 = hours15.toMutablePeriod();
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours18 = hours15.minus(hours17);
        int int19 = hours14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.Hours hours21 = hours17.multipliedBy(0);
        org.joda.time.Hours hours22 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours24 = hours22.dividedBy((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType25 = hours24.getFieldType();
        org.joda.time.Period period26 = hours24.toPeriod();
        boolean boolean27 = hours17.isGreaterThan(hours24);
        boolean boolean28 = hours7.isLessThan(hours24);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = hours8.getFieldType();
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours13 = hours7.negated();
        org.joda.time.Hours hours15 = hours13.plus(0);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7 + "'", int12 == 7);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours2 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours3.get(durationFieldType7);
        org.joda.time.Hours hours10 = hours3.minus((int) (short) 0);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours13.isSupported(durationFieldType15);
        org.joda.time.Hours hours17 = hours10.minus(hours13);
        org.joda.time.Hours hours18 = hours2.plus(hours17);
        int int19 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.MutablePeriod mutablePeriod20 = hours17.toMutablePeriod();
        org.joda.time.Duration duration21 = hours17.toStandardDuration();
        org.joda.time.Hours hours23 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = hours24.get(durationFieldType28);
        org.joda.time.Hours hours31 = hours24.minus((int) (short) 0);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod33 = hours32.toMutablePeriod();
        org.joda.time.Hours hours34 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours35 = hours32.minus(hours34);
        org.joda.time.DurationFieldType durationFieldType36 = null;
        boolean boolean37 = hours34.isSupported(durationFieldType36);
        org.joda.time.Hours hours38 = hours31.minus(hours34);
        org.joda.time.Hours hours39 = hours23.plus(hours38);
        org.joda.time.Hours hours40 = hours17.plus(hours23);
        org.joda.time.Hours hours41 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod42 = hours41.toMutablePeriod();
        org.joda.time.Hours hours43 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours44 = hours41.minus(hours43);
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = hours41.get(durationFieldType45);
        org.joda.time.Hours hours48 = hours41.minus((int) (short) 0);
        org.joda.time.Hours hours49 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = hours49.get(durationFieldType50);
        org.joda.time.DurationFieldType durationFieldType52 = hours49.getFieldType();
        int int53 = hours48.get(durationFieldType52);
        org.joda.time.PeriodType periodType54 = hours48.getPeriodType();
        org.joda.time.Hours hours56 = hours48.multipliedBy(8);
        org.joda.time.Hours hours58 = hours48.dividedBy((-25));
        int int59 = hours17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours48);
        org.joda.time.Hours hours60 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours48);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 7 + "'", int53 == 7);
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(hours60);
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours1 = hours0.negated();
        org.joda.time.DurationFieldType durationFieldType2 = hours0.getFieldType();
        java.lang.String str3 = hours0.toString();
        org.joda.time.Hours hours4 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.MutablePeriod mutablePeriod11 = hours5.toMutablePeriod();
        org.joda.time.Hours hours13 = hours5.minus(7);
        org.joda.time.Hours hours14 = hours4.minus(hours5);
        org.joda.time.Hours hours15 = hours0.minus(hours5);
        org.joda.time.Hours hours17 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Period period18 = hours17.toPeriod();
        org.joda.time.Hours hours20 = hours17.minus((int) (byte) -1);
        int int22 = hours17.getValue(0);
        org.joda.time.Hours hours23 = hours5.minus(hours17);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        org.joda.time.Duration duration28 = hours24.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod29 = hours24.toMutablePeriod();
        org.joda.time.PeriodType periodType30 = hours24.getPeriodType();
        org.joda.time.Hours hours32 = org.joda.time.Hours.parseHours("PT7H");
        boolean boolean33 = hours24.isLessThan(hours32);
        org.joda.time.Hours hours34 = org.joda.time.Hours.ZERO;
        boolean boolean35 = hours32.isGreaterThan(hours34);
        org.joda.time.Hours hours36 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours37 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = hours37.get(durationFieldType38);
        boolean boolean40 = hours36.equals((java.lang.Object) durationFieldType38);
        org.joda.time.Hours hours41 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod43 = hours42.toMutablePeriod();
        org.joda.time.Hours hours44 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours45 = hours42.minus(hours44);
        int int46 = hours41.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours44);
        org.joda.time.Hours hours48 = hours44.multipliedBy(0);
        org.joda.time.Hours hours49 = hours36.plus(hours48);
        org.joda.time.DurationFieldType durationFieldType50 = hours49.getFieldType();
        int int51 = hours32.get(durationFieldType50);
        int int52 = hours32.getHours();
        org.joda.time.Hours hours54 = hours32.plus(5);
        org.joda.time.Hours hours55 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours56 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod57 = hours56.toMutablePeriod();
        org.joda.time.Hours hours58 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours59 = hours56.minus(hours58);
        int int60 = hours55.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours58);
        org.joda.time.DurationFieldType durationFieldType61 = null;
        boolean boolean62 = hours55.isSupported(durationFieldType61);
        org.joda.time.Hours hours64 = hours55.minus((int) (short) -1);
        org.joda.time.Hours hours65 = hours64.negated();
        org.joda.time.Period period66 = hours64.toPeriod();
        org.joda.time.Hours hours67 = org.joda.time.Hours.ONE;
        int int68 = hours67.getHours();
        org.joda.time.Hours hours70 = hours67.plus(10);
        org.joda.time.Hours hours71 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod72 = hours71.toMutablePeriod();
        org.joda.time.Hours hours73 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours74 = hours71.minus(hours73);
        org.joda.time.DurationFieldType durationFieldType75 = null;
        int int76 = hours71.get(durationFieldType75);
        org.joda.time.Hours hours78 = hours71.multipliedBy(1);
        boolean boolean79 = hours67.isGreaterThan(hours71);
        int int80 = hours67.size();
        org.joda.time.Hours hours82 = hours67.plus((int) (short) 0);
        org.joda.time.Hours hours83 = hours64.plus(hours82);
        org.joda.time.Hours hours85 = hours82.multipliedBy((-8));
        int int86 = hours82.getHours();
        org.joda.time.Hours hours88 = hours82.plus((int) '#');
        org.joda.time.Hours hours89 = hours54.minus(hours82);
        org.joda.time.Hours hours90 = hours23.plus(hours89);
        int int91 = hours23.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT3H" + "'", str3, "PT3H");
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 16 + "'", int22 == 16);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 7 + "'", int51 == 7);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 7 + "'", int52 == 7);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(mutablePeriod57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertNotNull(mutablePeriod72);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(hours78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertNotNull(hours82);
        org.junit.Assert.assertNotNull(hours83);
        org.junit.Assert.assertNotNull(hours85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertNotNull(hours88);
        org.junit.Assert.assertNotNull(hours89);
        org.junit.Assert.assertNotNull(hours90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-9) + "'", int91 == (-9));
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(0);
        org.joda.time.Hours hours3 = hours1.minus((int) ' ');
        org.joda.time.Hours hours5 = hours3.dividedBy((int) (short) -1);
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod8 = hours7.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours7.minus(hours9);
        int int11 = hours6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours9);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        boolean boolean13 = hours6.isSupported(durationFieldType12);
        org.joda.time.Hours hours15 = hours6.minus((int) (short) -1);
        org.joda.time.Hours hours16 = hours15.negated();
        org.joda.time.Period period17 = hours15.toPeriod();
        int int18 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours15);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        org.joda.time.Hours hours7 = hours0.negated();
        org.joda.time.Hours hours8 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        int int12 = hours10.getValue((int) (short) 0);
        org.joda.time.Hours hours13 = hours9.minus(hours10);
        org.joda.time.Hours hours14 = hours8.minus(hours9);
        org.joda.time.Hours hours15 = hours8.negated();
        boolean boolean16 = hours7.isLessThan(hours15);
        int int17 = hours15.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 8 + "'", int12 == 8);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-6) + "'", int17 == (-6));
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = hours8.getFieldType();
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.PeriodType periodType13 = hours7.getPeriodType();
        org.joda.time.Hours hours15 = hours7.multipliedBy(8);
        int int16 = hours7.size();
        org.joda.time.MutablePeriod mutablePeriod17 = hours7.toMutablePeriod();
        org.joda.time.Hours hours19 = hours7.dividedBy(16);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7 + "'", int12 == 7);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours19);
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours2 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours3.get(durationFieldType7);
        org.joda.time.Hours hours10 = hours3.minus((int) (short) 0);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours13.isSupported(durationFieldType15);
        org.joda.time.Hours hours17 = hours10.minus(hours13);
        org.joda.time.Hours hours18 = hours2.plus(hours17);
        int int19 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.Hours hours21 = hours17.plus((int) ' ');
        org.joda.time.Hours hours23 = hours21.minus((int) 'a');
        org.joda.time.Hours hours25 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Period period26 = hours25.toPeriod();
        org.joda.time.Hours hours28 = hours25.minus((int) (byte) -1);
        org.joda.time.Hours hours29 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours31 = hours29.dividedBy((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType33 = hours29.getFieldType(0);
        boolean boolean34 = hours25.isSupported(durationFieldType33);
        org.joda.time.DurationFieldType durationFieldType35 = hours25.getFieldType();
        org.joda.time.DurationFieldType durationFieldType36 = hours25.getFieldType();
        int int37 = hours23.get(durationFieldType36);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-66) + "'", int37 == (-66));
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours0.minus((int) 'a');
        org.joda.time.Hours hours8 = org.joda.time.Hours.ZERO;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        boolean boolean10 = hours7.equals((java.lang.Object) hours8);
        org.joda.time.Hours hours11 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours12 = hours11.negated();
        org.joda.time.Hours hours13 = hours11.negated();
        org.joda.time.Hours hours14 = hours8.minus(hours11);
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod16 = hours15.toMutablePeriod();
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours18 = hours15.minus(hours17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = hours15.get(durationFieldType19);
        org.joda.time.Hours hours22 = hours15.minus((int) (short) 0);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        org.joda.time.Hours hours27 = hours25.negated();
        org.joda.time.DurationFieldType durationFieldType28 = hours27.getFieldType();
        org.joda.time.Hours hours29 = hours22.minus(hours27);
        org.joda.time.Hours hours30 = hours8.minus(hours27);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) (short) 0);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.multipliedBy(1);
        org.joda.time.Hours hours10 = org.joda.time.Hours.ONE;
        int int11 = hours9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours10);
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        boolean boolean13 = hours9.equals((java.lang.Object) hours12);
        org.joda.time.Hours hours14 = hours1.minus(hours9);
        int int15 = hours14.size();
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        int int21 = hours16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours19);
        org.joda.time.Hours hours23 = hours16.minus((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod24 = hours16.toMutablePeriod();
        int int25 = hours16.getHours();
        org.joda.time.Hours hours26 = hours14.plus(hours16);
        org.joda.time.Hours hours27 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = hours27.get(durationFieldType28);
        org.joda.time.DurationFieldType durationFieldType30 = hours27.getFieldType();
        org.joda.time.DurationFieldType durationFieldType31 = hours27.getFieldType();
        org.joda.time.Period period32 = hours27.toPeriod();
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod34 = hours33.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours36 = hours33.minus(hours35);
        org.joda.time.DurationFieldType durationFieldType37 = null;
        int int38 = hours33.get(durationFieldType37);
        org.joda.time.Hours hours40 = hours33.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval41 = null;
        org.joda.time.Hours hours42 = org.joda.time.Hours.hoursIn(readableInterval41);
        int int43 = hours40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours42);
        org.joda.time.Hours hours44 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours45 = org.joda.time.Hours.EIGHT;
        int int47 = hours45.getValue((int) (short) 0);
        org.joda.time.Hours hours48 = hours44.minus(hours45);
        org.joda.time.Hours hours49 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = hours49.get(durationFieldType50);
        org.joda.time.DurationFieldType durationFieldType52 = hours49.getFieldType();
        int int53 = hours44.get(durationFieldType52);
        boolean boolean54 = hours42.isSupported(durationFieldType52);
        int int55 = hours27.get(durationFieldType52);
        boolean boolean56 = hours26.isGreaterThan(hours27);
        org.joda.time.Hours hours57 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod58 = hours57.toMutablePeriod();
        org.joda.time.Hours hours59 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours60 = hours57.minus(hours59);
        org.joda.time.Duration duration61 = hours57.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod62 = hours57.toMutablePeriod();
        org.joda.time.Hours hours63 = org.joda.time.Hours.EIGHT;
        int int65 = hours63.getValue((int) (short) 0);
        java.lang.String str66 = hours63.toString();
        boolean boolean67 = hours57.isGreaterThan(hours63);
        org.joda.time.Hours hours69 = hours63.minus(10);
        org.joda.time.Hours hours70 = hours63.negated();
        org.joda.time.Hours hours71 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod72 = hours71.toMutablePeriod();
        org.joda.time.Hours hours73 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours74 = hours71.minus(hours73);
        org.joda.time.DurationFieldType durationFieldType75 = null;
        int int76 = hours71.get(durationFieldType75);
        org.joda.time.Hours hours78 = hours71.multipliedBy(1);
        org.joda.time.Hours hours79 = org.joda.time.Hours.ONE;
        int int80 = hours78.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours79);
        int int81 = hours63.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours78);
        java.lang.String str82 = hours78.toString();
        org.joda.time.Period period83 = hours78.toPeriod();
        org.joda.time.Hours hours85 = hours78.dividedBy(5);
        org.joda.time.Hours hours86 = hours26.plus(hours78);
        int int87 = hours26.getHours();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 7 + "'", int25 == 7);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 8 + "'", int47 == 8);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 7 + "'", int53 == 7);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(mutablePeriod58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertNotNull(mutablePeriod62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 8 + "'", int65 == 8);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "PT8H" + "'", str66, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertNotNull(mutablePeriod72);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(hours78);
        org.junit.Assert.assertNotNull(hours79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "PT7H" + "'", str82, "PT7H");
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertNotNull(hours85);
        org.junit.Assert.assertNotNull(hours86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(364);
        org.junit.Assert.assertNotNull(hours1);
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.Hours hours3 = hours0.plus(10);
        org.joda.time.Hours hours4 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours5 = hours4.negated();
        org.joda.time.DurationFieldType durationFieldType6 = hours4.getFieldType();
        boolean boolean7 = hours0.equals((java.lang.Object) hours4);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        int int11 = hours9.getValue((int) (short) 0);
        org.joda.time.Hours hours12 = hours8.minus(hours9);
        boolean boolean14 = hours9.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours15 = hours9.negated();
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        int int21 = hours16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours19);
        org.joda.time.Hours hours23 = hours19.multipliedBy(0);
        org.joda.time.Hours hours24 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.Duration duration25 = hours24.toStandardDuration();
        org.joda.time.Hours hours26 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours24);
        boolean boolean27 = hours9.equals((java.lang.Object) hours26);
        org.joda.time.Hours hours28 = hours4.minus(hours9);
        org.joda.time.Hours hours29 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours4);
        org.joda.time.Duration duration30 = hours4.toStandardDuration();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8 + "'", int11 == 8);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(duration30);
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        int int6 = hours1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours4);
        org.joda.time.Hours hours8 = hours4.multipliedBy(0);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        int int14 = hours9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours12);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours9.isSupported(durationFieldType15);
        org.joda.time.Hours hours18 = hours9.minus((int) (short) -1);
        org.joda.time.PeriodType periodType19 = hours9.getPeriodType();
        int int20 = hours9.getHours();
        boolean boolean21 = hours4.equals((java.lang.Object) int20);
        org.joda.time.Hours hours22 = hours0.plus(hours4);
        int int23 = hours4.size();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 7 + "'", int20 == 7);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.PeriodType periodType10 = hours0.getPeriodType();
        int int11 = hours0.getHours();
        org.joda.time.DurationFieldType durationFieldType13 = hours0.getFieldType((int) (short) 0);
        int int14 = hours0.size();
        int int15 = hours0.size();
        org.joda.time.Period period16 = hours0.toPeriod();
        org.joda.time.Hours hours18 = hours0.dividedBy((-2147483648));
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        org.joda.time.DurationFieldType durationFieldType23 = null;
        boolean boolean24 = hours21.isSupported(durationFieldType23);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        int int28 = hours26.getValue((int) (short) 0);
        org.joda.time.Hours hours29 = hours25.minus(hours26);
        boolean boolean30 = hours21.isLessThan(hours26);
        org.joda.time.Hours hours31 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = hours31.get(durationFieldType32);
        org.joda.time.DurationFieldType durationFieldType34 = hours31.getFieldType();
        boolean boolean35 = hours21.isSupported(durationFieldType34);
        org.joda.time.Hours hours37 = org.joda.time.Hours.hours(100);
        org.joda.time.Period period38 = hours37.toPeriod();
        org.joda.time.Hours hours40 = hours37.minus(8);
        org.joda.time.Hours hours41 = org.joda.time.Hours.THREE;
        org.joda.time.Period period42 = hours41.toPeriod();
        org.joda.time.Hours hours44 = hours41.plus((int) (byte) -1);
        org.joda.time.Hours hours46 = hours44.minus((int) (byte) 100);
        boolean boolean47 = hours37.equals((java.lang.Object) hours46);
        boolean boolean48 = hours21.isGreaterThan(hours37);
        org.joda.time.Hours hours49 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours51 = hours49.plus(1);
        org.joda.time.Hours hours53 = hours49.dividedBy((int) (byte) -1);
        int int54 = hours49.size();
        org.joda.time.Hours hours55 = org.joda.time.Hours.MIN_VALUE;
        org.joda.time.Hours hours57 = hours55.plus(0);
        org.joda.time.Hours hours58 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours59 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod60 = hours59.toMutablePeriod();
        org.joda.time.Hours hours61 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours62 = hours59.minus(hours61);
        int int63 = hours58.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours61);
        org.joda.time.DurationFieldType durationFieldType64 = null;
        boolean boolean65 = hours58.isSupported(durationFieldType64);
        org.joda.time.Hours hours67 = hours58.minus((int) (short) -1);
        org.joda.time.PeriodType periodType68 = hours58.getPeriodType();
        int int69 = hours58.getHours();
        org.joda.time.DurationFieldType durationFieldType71 = hours58.getFieldType((int) (short) 0);
        boolean boolean72 = hours57.isSupported(durationFieldType71);
        int int73 = hours49.get(durationFieldType71);
        boolean boolean74 = hours21.isSupported(durationFieldType71);
        boolean boolean75 = hours0.isSupported(durationFieldType71);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 7 + "'", int11 == 7);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 8 + "'", int28 == 8);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(periodType68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 7 + "'", int69 == 7);
        org.junit.Assert.assertNotNull(durationFieldType71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours3.multipliedBy(0);
        org.joda.time.Hours hours9 = org.joda.time.Hours.hours(0);
        org.joda.time.Duration duration10 = hours9.toStandardDuration();
        org.joda.time.Hours hours12 = hours9.multipliedBy((int) (short) 1);
        java.lang.String str13 = hours9.toString();
        int int14 = hours3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours9);
        org.joda.time.Hours hours16 = hours9.minus((int) (short) 0);
        org.joda.time.Hours hours17 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours9);
        org.joda.time.Hours hours19 = hours17.dividedBy((int) (byte) 10);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PT0H" + "'", str13, "PT0H");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours19);
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.multipliedBy(1);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = hours8.get(durationFieldType12);
        org.joda.time.Hours hours15 = hours8.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Hours hours17 = org.joda.time.Hours.hoursIn(readableInterval16);
        int int18 = hours15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.Hours hours19 = hours0.minus(hours15);
        org.joda.time.PeriodType periodType20 = hours19.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType21 = hours19.getFieldType();
        org.joda.time.MutablePeriod mutablePeriod22 = hours19.toMutablePeriod();
        java.lang.Class<?> wildcardClass23 = hours19.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours9 = hours3.minus(hours5);
        org.joda.time.PeriodType periodType10 = hours5.getPeriodType();
        org.joda.time.Hours hours11 = org.joda.time.Hours.ZERO;
        org.joda.time.Duration duration12 = hours11.toStandardDuration();
        boolean boolean13 = hours5.isLessThan(hours11);
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod16 = hours15.toMutablePeriod();
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours18 = hours15.minus(hours17);
        int int19 = hours14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.Hours hours20 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours14);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = hours14.get(durationFieldType21);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = hours23.get(durationFieldType27);
        org.joda.time.Hours hours30 = hours23.minus((int) (short) 0);
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod32 = hours31.toMutablePeriod();
        org.joda.time.Hours hours33 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours34 = hours31.minus(hours33);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        boolean boolean36 = hours33.isSupported(durationFieldType35);
        org.joda.time.Hours hours37 = hours30.minus(hours33);
        org.joda.time.Period period38 = hours30.toPeriod();
        org.joda.time.Hours hours39 = hours14.plus(hours30);
        org.joda.time.Hours hours40 = hours5.minus(hours30);
        org.joda.time.Hours hours42 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours43 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod44 = hours43.toMutablePeriod();
        org.joda.time.Hours hours45 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours46 = hours43.minus(hours45);
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = hours43.get(durationFieldType47);
        org.joda.time.Hours hours50 = hours43.minus((int) (short) 0);
        org.joda.time.Hours hours51 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod52 = hours51.toMutablePeriod();
        org.joda.time.Hours hours53 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours54 = hours51.minus(hours53);
        org.joda.time.DurationFieldType durationFieldType55 = null;
        boolean boolean56 = hours53.isSupported(durationFieldType55);
        org.joda.time.Hours hours57 = hours50.minus(hours53);
        org.joda.time.Hours hours58 = hours42.plus(hours57);
        org.joda.time.Hours hours59 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours60 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod61 = hours60.toMutablePeriod();
        org.joda.time.Hours hours62 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours63 = hours60.minus(hours62);
        int int64 = hours59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours62);
        org.joda.time.Hours hours65 = hours42.plus(hours62);
        org.joda.time.Hours hours66 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod67 = hours66.toMutablePeriod();
        org.joda.time.Hours hours68 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours69 = hours66.minus(hours68);
        org.joda.time.DurationFieldType durationFieldType70 = null;
        int int71 = hours66.get(durationFieldType70);
        org.joda.time.Hours hours73 = hours66.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval74 = null;
        org.joda.time.Hours hours75 = org.joda.time.Hours.hoursIn(readableInterval74);
        int int76 = hours73.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours75);
        boolean boolean77 = hours62.isGreaterThan(hours73);
        org.joda.time.Hours hours79 = hours62.multipliedBy(16);
        org.joda.time.Hours hours81 = hours62.multipliedBy((int) (short) 0);
        int int82 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours81);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(mutablePeriod44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(mutablePeriod52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(mutablePeriod61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(mutablePeriod67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertNotNull(hours75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(hours79);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.PeriodType periodType10 = hours0.getPeriodType();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        int int13 = hours11.getValue((int) (short) 0);
        org.joda.time.Hours hours14 = hours0.minus(hours11);
        org.joda.time.Hours hours16 = hours0.plus(7);
        org.joda.time.Hours hours17 = hours0.negated();
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = hours18.get(durationFieldType22);
        org.joda.time.Hours hours25 = hours18.minus((int) (short) 0);
        org.joda.time.Hours hours26 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = hours26.get(durationFieldType27);
        org.joda.time.DurationFieldType durationFieldType29 = hours26.getFieldType();
        int int30 = hours25.get(durationFieldType29);
        int int31 = hours0.get(durationFieldType29);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType33 = hours0.getFieldType((-15));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -15");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8 + "'", int13 == 8);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 7 + "'", int30 == 7);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 7 + "'", int31 == 7);
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.Hours hours3 = hours0.plus(10);
        int int4 = hours0.size();
        org.joda.time.Period period5 = hours0.toPeriod();
        org.joda.time.DurationFieldType durationFieldType6 = hours0.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(durationFieldType6);
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT8H");
        org.joda.time.Duration duration2 = hours1.toStandardDuration();
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod5 = hours4.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours7 = hours4.minus(hours6);
        int int8 = hours3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours6);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        boolean boolean10 = hours3.isSupported(durationFieldType9);
        org.joda.time.Hours hours11 = hours1.minus(hours3);
        org.joda.time.Hours hours12 = org.joda.time.Hours.THREE;
        org.joda.time.Period period13 = hours12.toPeriod();
        org.joda.time.Hours hours15 = hours12.plus((int) (byte) -1);
        java.lang.String str16 = hours15.toString();
        org.joda.time.Hours hours17 = hours11.plus(hours15);
        org.joda.time.DurationFieldType durationFieldType18 = null;
        boolean boolean19 = hours15.isSupported(durationFieldType18);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2H" + "'", str16, "PT2H");
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = hours23.get(durationFieldType27);
        org.joda.time.Hours hours30 = hours23.minus((int) (short) 0);
        org.joda.time.Hours hours31 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod34 = hours33.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours36 = hours33.minus(hours35);
        int int37 = hours32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours35);
        org.joda.time.DurationFieldType durationFieldType38 = null;
        boolean boolean39 = hours32.isSupported(durationFieldType38);
        org.joda.time.Hours hours41 = hours32.minus((int) (short) -1);
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod43 = hours42.toMutablePeriod();
        org.joda.time.Hours hours44 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours45 = hours42.minus(hours44);
        org.joda.time.Hours hours47 = hours44.plus(8);
        org.joda.time.Hours hours48 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = hours48.get(durationFieldType49);
        org.joda.time.DurationFieldType durationFieldType51 = hours48.getFieldType();
        boolean boolean52 = hours47.isSupported(durationFieldType51);
        int int53 = hours41.get(durationFieldType51);
        org.joda.time.Hours hours54 = hours23.plus(hours41);
        org.joda.time.Hours hours55 = hours20.plus(hours23);
        int int56 = hours23.size();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 8 + "'", int53 == 8);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        int int9 = hours7.getValue((int) (short) 0);
        org.joda.time.Hours hours10 = hours6.minus(hours7);
        org.joda.time.Hours hours11 = hours5.minus(hours6);
        int int12 = hours5.size();
        org.joda.time.Duration duration13 = hours5.toStandardDuration();
        boolean boolean14 = hours1.isGreaterThan(hours5);
        org.joda.time.MutablePeriod mutablePeriod15 = hours5.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType16 = hours5.getFieldType();
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period18 = hours17.toPeriod();
        org.joda.time.Hours hours20 = hours17.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.THREE;
        org.joda.time.Period period23 = hours22.toPeriod();
        org.joda.time.Hours hours25 = hours22.plus((int) (byte) -1);
        org.joda.time.Hours hours26 = hours20.minus(hours22);
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = hours27.get(durationFieldType31);
        org.joda.time.Hours hours34 = hours27.minus((int) (short) 0);
        org.joda.time.Hours hours35 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType36 = null;
        int int37 = hours35.get(durationFieldType36);
        org.joda.time.DurationFieldType durationFieldType38 = hours35.getFieldType();
        int int39 = hours34.get(durationFieldType38);
        int int40 = hours22.get(durationFieldType38);
        int int41 = hours5.get(durationFieldType38);
        org.joda.time.Hours hours42 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours43 = hours42.negated();
        org.joda.time.DurationFieldType durationFieldType44 = hours42.getFieldType();
        java.lang.String str45 = hours42.toString();
        org.joda.time.Hours hours46 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours47 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours48 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod49 = hours48.toMutablePeriod();
        org.joda.time.Hours hours50 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours51 = hours48.minus(hours50);
        int int52 = hours47.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours50);
        org.joda.time.MutablePeriod mutablePeriod53 = hours47.toMutablePeriod();
        org.joda.time.Hours hours55 = hours47.minus(7);
        org.joda.time.Hours hours56 = hours46.minus(hours47);
        org.joda.time.Hours hours57 = hours42.minus(hours47);
        org.joda.time.Hours hours58 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours42);
        boolean boolean59 = hours5.isGreaterThan(hours42);
        org.joda.time.Hours hours60 = hours5.negated();
        org.joda.time.Hours hours61 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours62 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod63 = hours62.toMutablePeriod();
        org.joda.time.Hours hours64 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours65 = hours62.minus(hours64);
        int int66 = hours61.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours64);
        org.joda.time.Hours hours67 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours61);
        org.joda.time.DurationFieldType durationFieldType68 = null;
        int int69 = hours61.get(durationFieldType68);
        org.joda.time.Hours hours70 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod71 = hours70.toMutablePeriod();
        org.joda.time.Hours hours72 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours73 = hours70.minus(hours72);
        org.joda.time.DurationFieldType durationFieldType74 = null;
        int int75 = hours70.get(durationFieldType74);
        org.joda.time.Hours hours77 = hours70.minus((int) (short) 0);
        org.joda.time.Hours hours78 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod79 = hours78.toMutablePeriod();
        org.joda.time.Hours hours80 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours81 = hours78.minus(hours80);
        org.joda.time.DurationFieldType durationFieldType82 = null;
        boolean boolean83 = hours80.isSupported(durationFieldType82);
        org.joda.time.Hours hours84 = hours77.minus(hours80);
        org.joda.time.Period period85 = hours77.toPeriod();
        org.joda.time.Hours hours86 = hours61.plus(hours77);
        org.joda.time.Hours hours87 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod88 = hours87.toMutablePeriod();
        org.joda.time.Hours hours89 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours90 = hours87.minus(hours89);
        org.joda.time.DurationFieldType durationFieldType91 = null;
        int int92 = hours87.get(durationFieldType91);
        org.joda.time.Hours hours94 = hours87.minus((int) (short) 0);
        org.joda.time.Duration duration95 = hours94.toStandardDuration();
        org.joda.time.Hours hours96 = hours86.plus(hours94);
        org.joda.time.Hours hours98 = hours86.dividedBy((int) (short) 1);
        org.joda.time.Hours hours99 = hours5.plus(hours86);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 7 + "'", int39 == 7);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 3 + "'", int40 == 3);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 6 + "'", int41 == 6);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "PT3H" + "'", str45, "PT3H");
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(mutablePeriod49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod53);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(mutablePeriod63);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(mutablePeriod71);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertNotNull(hours78);
        org.junit.Assert.assertNotNull(mutablePeriod79);
        org.junit.Assert.assertNotNull(hours80);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(hours84);
        org.junit.Assert.assertNotNull(period85);
        org.junit.Assert.assertNotNull(hours86);
        org.junit.Assert.assertNotNull(hours87);
        org.junit.Assert.assertNotNull(mutablePeriod88);
        org.junit.Assert.assertNotNull(hours89);
        org.junit.Assert.assertNotNull(hours90);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertNotNull(hours94);
        org.junit.Assert.assertNotNull(duration95);
        org.junit.Assert.assertNotNull(hours96);
        org.junit.Assert.assertNotNull(hours98);
        org.junit.Assert.assertNotNull(hours99);
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = hours1.multipliedBy((int) (byte) 100);
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        int int9 = hours4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours7);
        org.joda.time.DurationFieldType durationFieldType10 = null;
        boolean boolean11 = hours4.isSupported(durationFieldType10);
        org.joda.time.Hours hours13 = hours4.minus((int) (short) -1);
        org.joda.time.PeriodType periodType14 = hours4.getPeriodType();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        int int17 = hours15.getValue((int) (short) 0);
        org.joda.time.Hours hours18 = hours4.minus(hours15);
        org.joda.time.Hours hours19 = hours1.plus(hours18);
        org.joda.time.Hours hours21 = hours18.multipliedBy(100);
        org.joda.time.Hours hours23 = hours18.plus((-2));
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours23);
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        org.joda.time.Hours hours0 = org.joda.time.Hours.EIGHT;
        int int2 = hours0.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus((int) '4');
        org.joda.time.Hours hours6 = hours4.dividedBy((int) '4');
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 8 + "'", int2 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        int int14 = hours9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours12);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours9.isSupported(durationFieldType15);
        org.joda.time.Hours hours18 = hours9.minus((int) (short) -1);
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        org.joda.time.Hours hours24 = hours21.plus(8);
        org.joda.time.Hours hours25 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = hours25.get(durationFieldType26);
        org.joda.time.DurationFieldType durationFieldType28 = hours25.getFieldType();
        boolean boolean29 = hours24.isSupported(durationFieldType28);
        int int30 = hours18.get(durationFieldType28);
        org.joda.time.Hours hours31 = hours0.plus(hours18);
        org.joda.time.Hours hours33 = hours0.dividedBy(8);
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod35 = hours34.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours37 = hours34.minus(hours36);
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = hours34.get(durationFieldType38);
        org.joda.time.Hours hours41 = hours34.minus((int) (short) 0);
        org.joda.time.Hours hours42 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours34);
        org.joda.time.Hours hours43 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours44 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod45 = hours44.toMutablePeriod();
        org.joda.time.Hours hours46 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours47 = hours44.minus(hours46);
        int int48 = hours43.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours46);
        org.joda.time.DurationFieldType durationFieldType49 = null;
        boolean boolean50 = hours43.isSupported(durationFieldType49);
        org.joda.time.Hours hours52 = hours43.minus((int) (short) -1);
        org.joda.time.Hours hours53 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod54 = hours53.toMutablePeriod();
        org.joda.time.Hours hours55 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours56 = hours53.minus(hours55);
        org.joda.time.Hours hours58 = hours55.plus(8);
        org.joda.time.Hours hours59 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType60 = null;
        int int61 = hours59.get(durationFieldType60);
        org.joda.time.DurationFieldType durationFieldType62 = hours59.getFieldType();
        boolean boolean63 = hours58.isSupported(durationFieldType62);
        int int64 = hours52.get(durationFieldType62);
        org.joda.time.Hours hours65 = hours34.plus(hours52);
        org.joda.time.Hours hours66 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours67 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod68 = hours67.toMutablePeriod();
        org.joda.time.Hours hours69 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours70 = hours67.minus(hours69);
        int int71 = hours66.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours69);
        org.joda.time.DurationFieldType durationFieldType72 = null;
        boolean boolean73 = hours66.isSupported(durationFieldType72);
        org.joda.time.Hours hours75 = hours66.multipliedBy((int) (short) 10);
        org.joda.time.Hours hours76 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours77 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType78 = null;
        int int79 = hours77.get(durationFieldType78);
        boolean boolean80 = hours76.equals((java.lang.Object) durationFieldType78);
        org.joda.time.Hours hours81 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours82 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod83 = hours82.toMutablePeriod();
        org.joda.time.Hours hours84 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours85 = hours82.minus(hours84);
        int int86 = hours81.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours84);
        org.joda.time.Hours hours88 = hours84.multipliedBy(0);
        org.joda.time.Hours hours89 = hours76.plus(hours88);
        org.joda.time.DurationFieldType durationFieldType90 = hours89.getFieldType();
        boolean boolean91 = hours66.equals((java.lang.Object) durationFieldType90);
        int int92 = hours52.get(durationFieldType90);
        int int93 = hours33.get(durationFieldType90);
        org.joda.time.Hours hours95 = hours33.dividedBy((int) ' ');
        org.joda.time.PeriodType periodType96 = hours95.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 8 + "'", int30 == 8);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(mutablePeriod45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 8 + "'", int64 == 8);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(mutablePeriod68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(hours75);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertNotNull(hours82);
        org.junit.Assert.assertNotNull(mutablePeriod83);
        org.junit.Assert.assertNotNull(hours84);
        org.junit.Assert.assertNotNull(hours85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNotNull(hours88);
        org.junit.Assert.assertNotNull(hours89);
        org.junit.Assert.assertNotNull(durationFieldType90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 8 + "'", int92 == 8);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertNotNull(hours95);
        org.junit.Assert.assertNotNull(periodType96);
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        int int7 = hours2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours5);
        org.joda.time.MutablePeriod mutablePeriod8 = hours2.toMutablePeriod();
        org.joda.time.Hours hours9 = hours1.minus(hours2);
        org.joda.time.Hours hours10 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours2);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = hours11.get(durationFieldType15);
        org.joda.time.Hours hours18 = hours11.multipliedBy(1);
        org.joda.time.Hours hours19 = org.joda.time.Hours.ONE;
        int int20 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours19);
        org.joda.time.MutablePeriod mutablePeriod21 = hours18.toMutablePeriod();
        org.joda.time.PeriodType periodType22 = hours18.getPeriodType();
        boolean boolean23 = hours10.isLessThan(hours18);
        org.joda.time.Hours hours25 = hours18.dividedBy(2147483647);
        org.joda.time.Hours hours26 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours27 = org.joda.time.Hours.MAX_VALUE;
        int int28 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours27);
        int int29 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours27);
        org.joda.time.Hours hours31 = hours27.dividedBy((-2147483648));
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(hours31);
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours2 = hours0.plus(1);
        org.joda.time.Hours hours4 = hours2.minus((int) (byte) 10);
        org.joda.time.Hours hours5 = hours2.negated();
        org.joda.time.PeriodType periodType6 = hours5.getPeriodType();
        int int7 = hours5.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        boolean boolean13 = hours10.isSupported(durationFieldType12);
        org.joda.time.Hours hours14 = hours7.minus(hours10);
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod16 = hours15.toMutablePeriod();
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours18 = hours15.minus(hours17);
        org.joda.time.Hours hours20 = hours17.plus(8);
        org.joda.time.Hours hours21 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = hours21.get(durationFieldType22);
        org.joda.time.DurationFieldType durationFieldType24 = hours21.getFieldType();
        boolean boolean25 = hours20.isSupported(durationFieldType24);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        boolean boolean33 = hours26.isSupported(durationFieldType32);
        org.joda.time.Hours hours35 = hours26.minus((int) (short) -1);
        org.joda.time.PeriodType periodType36 = hours26.getPeriodType();
        org.joda.time.Hours hours37 = org.joda.time.Hours.EIGHT;
        int int39 = hours37.getValue((int) (short) 0);
        org.joda.time.Hours hours40 = hours26.minus(hours37);
        org.joda.time.Hours hours41 = hours20.minus(hours40);
        org.joda.time.Hours hours43 = org.joda.time.Hours.parseHours("PT8H");
        boolean boolean44 = hours41.isLessThan(hours43);
        boolean boolean45 = hours14.isLessThan(hours43);
        org.joda.time.Hours hours47 = hours43.dividedBy(100);
        org.joda.time.Hours hours49 = hours47.multipliedBy((int) '#');
        org.joda.time.Duration duration50 = hours47.toStandardDuration();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 8 + "'", int39 == 8);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(duration50);
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Period period2 = hours1.toPeriod();
        org.joda.time.Hours hours4 = hours1.minus((int) (byte) -1);
        org.joda.time.Hours hours5 = hours1.negated();
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod8 = hours7.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours7.minus(hours9);
        int int11 = hours6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours9);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        boolean boolean13 = hours6.isSupported(durationFieldType12);
        org.joda.time.Hours hours15 = hours6.minus((int) (short) -1);
        org.joda.time.PeriodType periodType16 = hours6.getPeriodType();
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        int int19 = hours17.getValue((int) (short) 0);
        org.joda.time.Hours hours20 = hours6.minus(hours17);
        org.joda.time.Hours hours22 = hours6.plus(7);
        org.joda.time.Hours hours23 = hours6.negated();
        boolean boolean24 = hours5.isLessThan(hours23);
        org.joda.time.Hours hours26 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType27 = hours26.getFieldType();
        org.joda.time.Period period28 = hours26.toPeriod();
        org.joda.time.Period period29 = hours26.toPeriod();
        org.joda.time.Hours hours31 = hours26.plus(0);
        org.joda.time.Hours hours32 = hours31.negated();
        org.joda.time.DurationFieldType durationFieldType33 = hours31.getFieldType();
        int int34 = hours23.get(durationFieldType33);
        java.lang.String str35 = hours23.toString();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8 + "'", int19 == 8);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-7) + "'", int34 == (-7));
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "PT-7H" + "'", str35, "PT-7H");
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(32);
        org.junit.Assert.assertNotNull(hours1);
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(0);
        org.joda.time.Hours hours3 = hours1.multipliedBy((int) (short) 0);
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        int int7 = hours5.getValue((int) (short) 0);
        org.joda.time.Hours hours8 = hours4.minus(hours5);
        boolean boolean10 = hours5.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours11 = null;
        org.joda.time.Hours hours12 = hours5.minus(hours11);
        org.joda.time.Hours hours13 = hours12.negated();
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        org.joda.time.Duration duration18 = hours14.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod19 = hours14.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        int int22 = hours20.getValue((int) (short) 0);
        java.lang.String str23 = hours20.toString();
        boolean boolean24 = hours14.isGreaterThan(hours20);
        org.joda.time.Hours hours26 = hours20.minus(10);
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours28 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod29 = hours28.toMutablePeriod();
        org.joda.time.Hours hours30 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours31 = hours28.minus(hours30);
        int int32 = hours27.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours30);
        org.joda.time.Hours hours33 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours27);
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = hours27.get(durationFieldType34);
        boolean boolean36 = hours26.equals((java.lang.Object) hours27);
        java.lang.String str37 = hours26.toString();
        org.joda.time.DurationFieldType durationFieldType39 = hours26.getFieldType(0);
        boolean boolean40 = hours12.isGreaterThan(hours26);
        int int41 = hours12.getHours();
        org.joda.time.DurationFieldType durationFieldType42 = hours12.getFieldType();
        boolean boolean43 = hours3.isSupported(durationFieldType42);
        org.joda.time.Hours hours44 = hours3.negated();
        org.joda.time.Hours hours46 = hours3.dividedBy((int) (short) 100);
        org.joda.time.DurationFieldType durationFieldType47 = hours3.getFieldType();
        org.joda.time.Hours hours48 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours49 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod50 = hours49.toMutablePeriod();
        org.joda.time.Hours hours51 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours52 = hours49.minus(hours51);
        int int53 = hours48.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours51);
        org.joda.time.Hours hours54 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours51);
        boolean boolean55 = hours3.isLessThan(hours54);
        org.joda.time.Hours hours57 = hours54.plus((-1));
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8 + "'", int7 == 8);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 8 + "'", int22 == 8);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT8H" + "'", str23, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "PT-2H" + "'", str37, "PT-2H");
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 8 + "'", int41 == 8);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(mutablePeriod50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(hours57);
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours3.multipliedBy(0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod10 = hours9.toMutablePeriod();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours12 = hours9.minus(hours11);
        int int13 = hours8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours11);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours8.isSupported(durationFieldType14);
        org.joda.time.Hours hours17 = hours8.minus((int) (short) -1);
        org.joda.time.PeriodType periodType18 = hours8.getPeriodType();
        int int19 = hours8.getHours();
        boolean boolean20 = hours3.equals((java.lang.Object) int19);
        java.lang.String str21 = hours3.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType23 = hours3.getFieldType(1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 7 + "'", int19 == 7);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT8H" + "'", str21, "PT8H");
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        boolean boolean5 = hours2.isSupported(durationFieldType4);
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        int int9 = hours7.getValue((int) (short) 0);
        org.joda.time.Hours hours10 = hours6.minus(hours7);
        boolean boolean11 = hours2.isLessThan(hours7);
        org.joda.time.Hours hours12 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours7);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(hours12);
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        int int18 = hours13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours16);
        org.joda.time.Hours hours19 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours13);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours13.get(durationFieldType20);
        boolean boolean22 = hours12.equals((java.lang.Object) hours13);
        java.lang.String str23 = hours12.toString();
        org.joda.time.Hours hours24 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours12);
        int int25 = hours24.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT-2H" + "'", str23, "PT-2H");
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-2) + "'", int25 == (-2));
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        int int9 = hours8.getHours();
        org.joda.time.Hours hours11 = hours8.plus(10);
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = hours12.get(durationFieldType16);
        org.joda.time.Hours hours19 = hours12.multipliedBy(1);
        boolean boolean20 = hours8.isGreaterThan(hours12);
        org.joda.time.Hours hours21 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        int int25 = hours23.getValue((int) (short) 0);
        org.joda.time.Hours hours26 = hours22.minus(hours23);
        org.joda.time.Hours hours27 = hours21.minus(hours22);
        int int28 = hours21.size();
        org.joda.time.Hours hours29 = hours12.plus(hours21);
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod32 = hours31.toMutablePeriod();
        org.joda.time.Hours hours33 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours34 = hours31.minus(hours33);
        int int35 = hours30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours33);
        org.joda.time.Hours hours37 = hours33.multipliedBy(0);
        org.joda.time.Duration duration38 = hours33.toStandardDuration();
        org.joda.time.Hours hours40 = hours33.dividedBy((int) (short) -1);
        int int41 = hours40.size();
        boolean boolean42 = hours29.isLessThan(hours40);
        boolean boolean43 = hours0.isGreaterThan(hours40);
        org.joda.time.Hours hours45 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType46 = hours45.getFieldType();
        org.joda.time.PeriodType periodType47 = hours45.getPeriodType();
        org.joda.time.Hours hours48 = hours45.negated();
        org.joda.time.Hours hours49 = hours40.plus(hours45);
        org.joda.time.Hours hours51 = hours49.multipliedBy(5);
        org.joda.time.Hours hours52 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod53 = hours52.toMutablePeriod();
        org.joda.time.Hours hours54 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours55 = hours52.minus(hours54);
        org.joda.time.Hours hours56 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours57 = org.joda.time.Hours.EIGHT;
        int int59 = hours57.getValue((int) (short) 0);
        org.joda.time.Hours hours60 = hours56.minus(hours57);
        org.joda.time.Hours hours61 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType62 = null;
        int int63 = hours61.get(durationFieldType62);
        org.joda.time.DurationFieldType durationFieldType64 = hours61.getFieldType();
        int int65 = hours56.get(durationFieldType64);
        boolean boolean66 = hours55.isSupported(durationFieldType64);
        org.joda.time.Hours hours68 = hours55.dividedBy((-2147483648));
        org.joda.time.Hours hours69 = hours55.negated();
        int int70 = hours49.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours55);
        org.joda.time.Duration duration71 = hours55.toStandardDuration();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 8 + "'", int25 == 8);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(mutablePeriod53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 8 + "'", int59 == 8);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(durationFieldType64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 7 + "'", int65 == 7);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNotNull(duration71);
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours3);
        org.joda.time.Hours hours7 = org.joda.time.Hours.ONE;
        int int8 = hours7.getHours();
        org.joda.time.Hours hours10 = hours7.plus(10);
        boolean boolean11 = hours3.equals((java.lang.Object) hours10);
        org.joda.time.DurationFieldType durationFieldType12 = hours10.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(durationFieldType12);
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = hours8.getFieldType();
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours13 = hours7.negated();
        org.joda.time.Hours hours14 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        int int18 = hours16.getValue((int) (short) 0);
        org.joda.time.Hours hours19 = hours15.minus(hours16);
        org.joda.time.Hours hours20 = hours14.minus(hours15);
        org.joda.time.Hours hours21 = hours13.plus(hours15);
        org.joda.time.DurationFieldType durationFieldType22 = hours13.getFieldType();
        // The following exception was thrown during execution in test generation
        try {
            int int24 = hours13.getValue(32);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7 + "'", int12 == 7);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(durationFieldType22);
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours0.get(durationFieldType7);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours0.get(durationFieldType9);
        org.joda.time.Hours hours12 = hours0.minus(0);
        org.joda.time.DurationFieldType durationFieldType13 = hours12.getFieldType();
        org.joda.time.Hours hours14 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours12);
        int int15 = hours14.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 7 + "'", int15 == 7);
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.multipliedBy((int) (short) 10);
        org.joda.time.Period period10 = hours0.toPeriod();
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        int int16 = hours11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours14);
        org.joda.time.Hours hours17 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours11);
        org.joda.time.Hours hours19 = hours17.multipliedBy((int) (byte) 10);
        boolean boolean20 = hours0.isLessThan(hours19);
        org.joda.time.Hours hours21 = org.joda.time.Hours.ONE;
        int int22 = hours21.getHours();
        org.joda.time.Hours hours24 = hours21.plus(10);
        org.joda.time.Hours hours25 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours26 = hours25.negated();
        org.joda.time.DurationFieldType durationFieldType27 = hours25.getFieldType();
        boolean boolean28 = hours21.equals((java.lang.Object) hours25);
        org.joda.time.Hours hours30 = hours21.minus((int) '4');
        org.joda.time.Hours hours31 = hours0.minus(hours30);
        org.joda.time.Hours hours33 = hours0.multipliedBy((int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            int int35 = hours33.getValue((-25));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -25");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours33);
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours0.minus((int) 'a');
        org.joda.time.Hours hours8 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        int int9 = hours0.getHours();
        org.joda.time.PeriodType periodType10 = hours0.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            int int12 = hours0.getValue(17);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 17");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7 + "'", int9 == 7);
        org.junit.Assert.assertNotNull(periodType10);
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours5 = hours2.plus(8);
        org.joda.time.Hours hours6 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours6.get(durationFieldType7);
        org.joda.time.DurationFieldType durationFieldType9 = hours6.getFieldType();
        boolean boolean10 = hours5.isSupported(durationFieldType9);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        int int16 = hours11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours14);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        boolean boolean18 = hours11.isSupported(durationFieldType17);
        org.joda.time.Hours hours20 = hours11.minus((int) (short) -1);
        org.joda.time.PeriodType periodType21 = hours11.getPeriodType();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        int int24 = hours22.getValue((int) (short) 0);
        org.joda.time.Hours hours25 = hours11.minus(hours22);
        org.joda.time.Hours hours26 = hours5.minus(hours25);
        org.joda.time.Hours hours28 = org.joda.time.Hours.parseHours("PT8H");
        boolean boolean29 = hours26.isLessThan(hours28);
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod32 = hours31.toMutablePeriod();
        org.joda.time.Hours hours33 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours34 = hours31.minus(hours33);
        int int35 = hours30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours33);
        org.joda.time.Hours hours37 = hours30.minus((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod38 = hours30.toMutablePeriod();
        org.joda.time.Hours hours39 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours40 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod41 = hours40.toMutablePeriod();
        org.joda.time.Hours hours42 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours43 = hours40.minus(hours42);
        int int44 = hours39.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours42);
        org.joda.time.DurationFieldType durationFieldType45 = null;
        boolean boolean46 = hours39.isSupported(durationFieldType45);
        org.joda.time.Hours hours48 = hours39.minus((int) (short) -1);
        org.joda.time.Hours hours49 = hours48.negated();
        org.joda.time.Period period50 = hours48.toPeriod();
        boolean boolean51 = hours30.equals((java.lang.Object) hours48);
        boolean boolean52 = hours26.equals((java.lang.Object) boolean51);
        org.joda.time.Hours hours53 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours54 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours55 = org.joda.time.Hours.EIGHT;
        int int57 = hours55.getValue((int) (short) 0);
        org.joda.time.Hours hours58 = hours54.minus(hours55);
        org.joda.time.Hours hours59 = hours53.minus(hours54);
        org.joda.time.Hours hours61 = hours54.dividedBy(1);
        org.joda.time.Duration duration62 = hours54.toStandardDuration();
        boolean boolean63 = hours26.equals((java.lang.Object) hours54);
        org.joda.time.Hours hours64 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours26);
        java.lang.Object obj65 = null;
        boolean boolean66 = hours26.equals(obj65);
        org.joda.time.Hours hours67 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType68 = null;
        int int69 = hours67.get(durationFieldType68);
        org.joda.time.Hours hours71 = hours67.dividedBy(100);
        org.joda.time.Hours hours73 = hours71.plus((int) (byte) 10);
        org.joda.time.Hours hours74 = hours26.plus(hours73);
        org.joda.time.Duration duration75 = hours26.toStandardDuration();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 8 + "'", int24 == 8);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 8 + "'", int57 == 8);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertNotNull(duration75);
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.PeriodType periodType8 = hours0.getPeriodType();
        org.joda.time.Hours hours9 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        int int13 = hours11.getValue((int) (short) 0);
        org.joda.time.Hours hours14 = hours10.minus(hours11);
        org.joda.time.Hours hours15 = hours9.minus(hours10);
        int int16 = hours9.size();
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        int int20 = hours18.getValue((int) (short) 0);
        org.joda.time.Hours hours21 = hours17.minus(hours18);
        boolean boolean23 = hours18.equals((java.lang.Object) (short) 10);
        int int24 = hours9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours18);
        org.joda.time.Hours hours25 = hours0.plus(hours9);
        org.joda.time.Period period26 = hours9.toPeriod();
        org.joda.time.Duration duration27 = hours9.toStandardDuration();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8 + "'", int13 == 8);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 8 + "'", int20 == 8);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration27);
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        boolean boolean6 = hours1.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours7 = null;
        org.joda.time.Hours hours8 = hours1.minus(hours7);
        org.joda.time.Hours hours9 = hours8.negated();
        org.joda.time.Hours hours10 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours8);
        org.joda.time.MutablePeriod mutablePeriod11 = hours8.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = hours12.get(durationFieldType16);
        org.joda.time.Hours hours19 = hours12.multipliedBy(1);
        int int20 = hours19.getHours();
        org.joda.time.Hours hours22 = hours19.minus((int) ' ');
        org.joda.time.Duration duration23 = hours22.toStandardDuration();
        org.joda.time.PeriodType periodType24 = hours22.getPeriodType();
        org.joda.time.Hours hours25 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours22);
        org.joda.time.Hours hours27 = hours25.minus((int) (byte) 10);
        org.joda.time.Hours hours28 = hours8.minus(hours25);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 7 + "'", int20 == 7);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours24 = hours1.plus(hours21);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours28 = hours25.minus(hours27);
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = hours25.get(durationFieldType29);
        org.joda.time.Hours hours32 = hours25.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval33 = null;
        org.joda.time.Hours hours34 = org.joda.time.Hours.hoursIn(readableInterval33);
        int int35 = hours32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours34);
        boolean boolean36 = hours21.isGreaterThan(hours32);
        org.joda.time.MutablePeriod mutablePeriod37 = hours21.toMutablePeriod();
        org.joda.time.Hours hours38 = hours21.negated();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType2 = hours1.getFieldType();
        org.joda.time.Hours hours4 = hours1.plus(700);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours5.get(durationFieldType9);
        org.joda.time.Hours hours12 = hours5.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Hours hours14 = org.joda.time.Hours.hoursIn(readableInterval13);
        int int15 = hours12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours14);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        int int19 = hours17.getValue((int) (short) 0);
        org.joda.time.Hours hours20 = hours16.minus(hours17);
        org.joda.time.Hours hours21 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = hours21.get(durationFieldType22);
        org.joda.time.DurationFieldType durationFieldType24 = hours21.getFieldType();
        int int25 = hours16.get(durationFieldType24);
        boolean boolean26 = hours14.isSupported(durationFieldType24);
        org.joda.time.PeriodType periodType27 = hours14.getPeriodType();
        boolean boolean28 = hours1.equals((java.lang.Object) hours14);
        org.joda.time.Duration duration29 = hours14.toStandardDuration();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8 + "'", int19 == 8);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 7 + "'", int25 == 7);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(duration29);
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.multipliedBy(1);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = hours8.get(durationFieldType12);
        org.joda.time.Hours hours15 = hours8.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Hours hours17 = org.joda.time.Hours.hoursIn(readableInterval16);
        int int18 = hours15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.Hours hours19 = hours0.minus(hours15);
        org.joda.time.Duration duration20 = hours19.toStandardDuration();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(duration20);
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours0.get(durationFieldType7);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod10 = hours9.toMutablePeriod();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours12 = hours9.minus(hours11);
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = hours9.get(durationFieldType13);
        org.joda.time.Hours hours16 = hours9.minus((int) (short) 0);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        boolean boolean22 = hours19.isSupported(durationFieldType21);
        org.joda.time.Hours hours23 = hours16.minus(hours19);
        org.joda.time.Period period24 = hours16.toPeriod();
        org.joda.time.Hours hours25 = hours0.plus(hours16);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod27 = hours26.toMutablePeriod();
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours29 = hours26.minus(hours28);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = hours26.get(durationFieldType30);
        org.joda.time.Hours hours33 = hours26.minus((int) (short) 0);
        org.joda.time.Duration duration34 = hours33.toStandardDuration();
        org.joda.time.Hours hours35 = hours25.plus(hours33);
        // The following exception was thrown during execution in test generation
        try {
            int int37 = hours25.getValue((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 97");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(hours35);
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = hours11.get(durationFieldType15);
        int int17 = hours11.getHours();
        org.joda.time.MutablePeriod mutablePeriod18 = hours11.toMutablePeriod();
        boolean boolean19 = hours0.isGreaterThan(hours11);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours23 = hours20.minus(hours22);
        org.joda.time.Duration duration24 = hours20.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod25 = hours20.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        int int28 = hours26.getValue((int) (short) 0);
        java.lang.String str29 = hours26.toString();
        boolean boolean30 = hours20.isGreaterThan(hours26);
        org.joda.time.Hours hours32 = hours26.minus(10);
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod35 = hours34.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours37 = hours34.minus(hours36);
        int int38 = hours33.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours36);
        org.joda.time.Hours hours39 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours33);
        org.joda.time.DurationFieldType durationFieldType40 = null;
        int int41 = hours33.get(durationFieldType40);
        boolean boolean42 = hours32.equals((java.lang.Object) hours33);
        java.lang.String str43 = hours32.toString();
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Hours hours45 = org.joda.time.Hours.hoursIn(readableInterval44);
        org.joda.time.DurationFieldType durationFieldType46 = hours45.getFieldType();
        org.joda.time.Hours hours48 = hours45.dividedBy((int) (byte) 10);
        org.joda.time.Hours hours50 = hours45.plus((int) (byte) 1);
        org.joda.time.Hours hours52 = hours45.dividedBy(100);
        int int53 = hours32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours52);
        boolean boolean54 = hours11.equals((java.lang.Object) int53);
        org.joda.time.Hours hours55 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod56 = hours55.toMutablePeriod();
        org.joda.time.Hours hours57 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours58 = hours55.minus(hours57);
        org.joda.time.Hours hours59 = hours57.negated();
        org.joda.time.DurationFieldType durationFieldType60 = hours59.getFieldType();
        org.joda.time.Hours hours61 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod62 = hours61.toMutablePeriod();
        org.joda.time.Hours hours63 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours64 = hours61.minus(hours63);
        org.joda.time.Hours hours65 = hours63.negated();
        int int66 = hours65.getHours();
        int int67 = hours59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours65);
        org.joda.time.Hours hours68 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod69 = hours68.toMutablePeriod();
        org.joda.time.Hours hours70 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours71 = hours68.minus(hours70);
        org.joda.time.DurationFieldType durationFieldType72 = null;
        int int73 = hours68.get(durationFieldType72);
        org.joda.time.Hours hours75 = hours68.minus((int) (short) 0);
        org.joda.time.Hours hours76 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType77 = null;
        int int78 = hours76.get(durationFieldType77);
        org.joda.time.DurationFieldType durationFieldType79 = hours76.getFieldType();
        int int80 = hours75.get(durationFieldType79);
        org.joda.time.PeriodType periodType81 = hours75.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType82 = hours75.getFieldType();
        boolean boolean83 = hours59.isSupported(durationFieldType82);
        int int84 = hours11.get(durationFieldType82);
        org.joda.time.PeriodType periodType85 = hours11.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 7 + "'", int17 == 7);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 8 + "'", int28 == 8);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT8H" + "'", str29, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "PT-2H" + "'", str43, "PT-2H");
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(mutablePeriod62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-8) + "'", int66 == (-8));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(mutablePeriod69);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(hours75);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(durationFieldType79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 7 + "'", int80 == 7);
        org.junit.Assert.assertNotNull(periodType81);
        org.junit.Assert.assertNotNull(durationFieldType82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 7 + "'", int84 == 7);
        org.junit.Assert.assertNotNull(periodType85);
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours1 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = hours1.get(durationFieldType2);
        boolean boolean4 = hours0.equals((java.lang.Object) durationFieldType2);
        org.joda.time.Duration duration5 = hours0.toStandardDuration();
        org.joda.time.Hours hours6 = org.joda.time.Hours.THREE;
        org.joda.time.Period period7 = hours6.toPeriod();
        org.joda.time.Hours hours9 = hours6.plus((int) (byte) -1);
        org.joda.time.Hours hours11 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = hours12.get(durationFieldType16);
        org.joda.time.Hours hours19 = hours12.minus((int) (short) 0);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours23 = hours20.minus(hours22);
        org.joda.time.DurationFieldType durationFieldType24 = null;
        boolean boolean25 = hours22.isSupported(durationFieldType24);
        org.joda.time.Hours hours26 = hours19.minus(hours22);
        org.joda.time.Hours hours27 = hours11.plus(hours26);
        org.joda.time.Hours hours28 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod29 = hours28.toMutablePeriod();
        org.joda.time.Hours hours30 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours31 = hours28.minus(hours30);
        boolean boolean32 = hours26.isGreaterThan(hours30);
        org.joda.time.DurationFieldType durationFieldType34 = hours26.getFieldType((int) (short) 0);
        int int35 = hours26.size();
        org.joda.time.Hours hours36 = hours6.plus(hours26);
        org.joda.time.Hours hours38 = hours6.dividedBy((int) (short) 10);
        org.joda.time.Hours hours40 = org.joda.time.Hours.parseHours("PT8H");
        org.joda.time.Duration duration41 = hours40.toStandardDuration();
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours43 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod44 = hours43.toMutablePeriod();
        org.joda.time.Hours hours45 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours46 = hours43.minus(hours45);
        int int47 = hours42.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours45);
        org.joda.time.DurationFieldType durationFieldType48 = null;
        boolean boolean49 = hours42.isSupported(durationFieldType48);
        org.joda.time.Hours hours50 = hours40.minus(hours42);
        org.joda.time.Hours hours51 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours52 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod53 = hours52.toMutablePeriod();
        org.joda.time.Hours hours54 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours55 = hours52.minus(hours54);
        int int56 = hours51.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours54);
        org.joda.time.DurationFieldType durationFieldType57 = null;
        boolean boolean58 = hours51.isSupported(durationFieldType57);
        org.joda.time.Hours hours60 = hours51.minus((int) (short) -1);
        org.joda.time.Hours hours61 = hours60.negated();
        org.joda.time.DurationFieldType durationFieldType62 = hours60.getFieldType();
        int int63 = hours40.get(durationFieldType62);
        org.joda.time.Hours hours64 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours65 = org.joda.time.Hours.MAX_VALUE;
        int int66 = hours64.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours65);
        org.joda.time.Hours hours67 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType68 = null;
        int int69 = hours67.get(durationFieldType68);
        org.joda.time.DurationFieldType durationFieldType70 = hours67.getFieldType();
        org.joda.time.DurationFieldType durationFieldType71 = hours67.getFieldType();
        boolean boolean72 = hours65.isSupported(durationFieldType71);
        org.joda.time.Period period73 = hours65.toPeriod();
        org.joda.time.Hours hours74 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) period73);
        org.joda.time.Hours hours75 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod76 = hours75.toMutablePeriod();
        org.joda.time.Hours hours77 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours78 = hours75.minus(hours77);
        org.joda.time.Hours hours80 = hours77.plus(8);
        org.joda.time.Hours hours81 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType82 = null;
        int int83 = hours81.get(durationFieldType82);
        org.joda.time.DurationFieldType durationFieldType84 = hours81.getFieldType();
        boolean boolean85 = hours80.isSupported(durationFieldType84);
        boolean boolean86 = hours74.isSupported(durationFieldType84);
        boolean boolean87 = hours40.isSupported(durationFieldType84);
        boolean boolean88 = hours6.isSupported(durationFieldType84);
        boolean boolean89 = hours0.isSupported(durationFieldType84);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(mutablePeriod44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(mutablePeriod53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 8 + "'", int63 == 8);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(durationFieldType70);
        org.junit.Assert.assertNotNull(durationFieldType71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertNotNull(hours75);
        org.junit.Assert.assertNotNull(mutablePeriod76);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertNotNull(hours78);
        org.junit.Assert.assertNotNull(hours80);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(durationFieldType84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }
}

